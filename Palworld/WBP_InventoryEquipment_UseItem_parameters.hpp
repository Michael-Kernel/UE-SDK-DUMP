#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_UseItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.CanUsePlayer
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_CanUsePlayer final
{
public:
	class UPalIndividualCharacterHandle*          PlayerHandle;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPalItem;                                         // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseTargetPalExpItem_ReturnValue;       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_CanUsePlayer");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer) == 0x000020, "Wrong size on WBP_InventoryEquipment_UseItem_C_CanUsePlayer");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, PlayerHandle) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::PlayerHandle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, IsPalItem) == 0x000009, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::IsPalItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, CallFunc_CanUseTargetPalExpItem_ReturnValue) == 0x00001A, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::CallFunc_CanUseTargetPalExpItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_CanUsePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001C, "Member 'WBP_InventoryEquipment_UseItem_C_CanUsePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.ExecuteUbergraph_WBP_InventoryEquipment_UseItem
// 0x0660 (0x0660 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x0014(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemSlot*                           K2Node_CustomEvent_SelectedItemSlot;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetCharacterParameterComponent_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUsePlayer_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalOtomoHolderComponentBase*           CallFunc_GetOtomoHolderComponent_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPalIndividualCharacterHandle*>  CallFunc_GetAllIndividualHandle_OutArray;          // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Menu_PalList_C*>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPalIndividualCharacterHandle*          K2Node_CustomEvent_Individual_1;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalInstanceID                         CallFunc_GetIndividualID_ReturnValue;              // 0x00B0(0x0030)(HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterHandle* Handle)> K2Node_CreateDelegate_OutputDelegate;              // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalIndividualCharacterHandle* Handle)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemSlot*                           K2Node_CustomEvent_targetSlot;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalItemSlot* TargetSlot)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalItemSlotId                         CallFunc_GetSlotId_ReturnValue;                    // 0x013C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FPalMealLogDisplayData                 K2Node_MakeStruct_PalMealLogDisplayData;           // 0x0150(0x0038)()
	struct FPalItemSlotIdAndNum                   K2Node_MakeStruct_PalItemSlotIdAndNum;             // 0x0188(0x0018)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    CallFunc_Array_Get_Item;                           // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDDispatchParameterBase*           CallFunc_GetParam_ReturnValue;                     // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InGameMainMenuUseItemParameter_C*   K2Node_DynamicCast_AsBP_in_Game_Main_Menu_Use_Item_Parameter; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       K2Node_CustomEvent_IndividualParameter;            // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalWazaID                                    K2Node_CustomEvent_WazaId;                         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWazaName_outName;                      // 0x01F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0210(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetNickName_outName;                      // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsConfirm;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0278(0x0018)()
	TDelegate<void(bool bResult)>                 K2Node_CreateDelegate_OutputDelegate_4;            // 0x0290(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02A0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0300(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0318(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0328(0x0018)()
	struct FGuid                                  CallFunc_Dialog_ReturnValue;                       // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x0350(0x0004)(NoDestructor)
	TDelegate<void(bool bResult)>                 K2Node_CreateDelegate_OutputDelegate_6;            // 0x0354(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    CallFunc_Array_Get_Item_2;                         // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0370(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0388(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalBaseCampWorkerSickType                    CallFunc_GetWorkerSick_ReturnValue;                // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName_1;                    // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x03B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03D0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0420(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0430(0x0018)()
	TDelegate<void(class UPalIndividualCharacterHandle* Handle)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0448(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Dialog_ReturnValue_1;                     // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          K2Node_CustomEvent_Individual;                     // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0470(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0480(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue_1;           // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue_1;          // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B3[0x1];                                      // 0x04B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_addExp;                         // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_nowExp;                         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int64 AddExp, int64 NowExp)>   K2Node_CreateDelegate_OutputDelegate_11;           // 0x04D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_Array_Get_Item_3;                         // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NowRank, int32 OldRank)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x04F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_nowRank;                        // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_oldRank;                        // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bResult)>                 K2Node_CreateDelegate_OutputDelegate_13;           // 0x0510(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName_2;                    // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0538(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0550(0x0050)(HasGetValueTypeHash)
	TDelegate<void(int32 NowRank, int32 OldRank)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x05A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x05B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_2;        // 0x05C0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x05D8(0x0018)()
	struct FGuid                                  CallFunc_Dialog_ReturnValue_2;                     // 0x05F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0607(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0608(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A[0x2];                                      // 0x061A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x061C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterParameter* IndividualParameter, EPalWazaID WazaID)> K2Node_CreateDelegate_OutputDelegate_17;           // 0x062C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterParameter* IndividualParameter, EPalWazaID WazaID)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x063C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0653(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655[0x3];                                      // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem) == 0x000660, "Wrong size on WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, EntryPoint) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetItemId_ReturnValue) == 0x000014, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_SelectedItemSlot) == 0x000040, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_SelectedItemSlot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetPalmi_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetCharacterParameterComponent_ReturnValue) == 0x000058, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetCharacterParameterComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_CanUsePlayer_ReturnValue) == 0x000061, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_CanUsePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_2) == 0x000062, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetOtomoHolderComponent_ReturnValue) == 0x000068, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetOtomoHolderComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_3) == 0x000070, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetAllIndividualHandle_OutArray) == 0x000078, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetAllIndividualHandle_OutArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Length_ReturnValue_2) == 0x00008C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_Individual_1) == 0x0000A0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_Individual_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_4) == 0x0000A8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetIndividualID_ReturnValue) == 0x0000B0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetIndividualID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x0000E0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate) == 0x0000E8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_5) == 0x0000F8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000FC, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_2) == 0x00010C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_targetSlot) == 0x000120, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_targetSlot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_3) == 0x000128, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000138, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetSlotId_ReturnValue) == 0x00013C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetSlotId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeStruct_PalMealLogDisplayData) == 0x000150, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeStruct_PalMealLogDisplayData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeStruct_PalItemSlotIdAndNum) == 0x000188, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeStruct_PalItemSlotIdAndNum' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Array_Index_Variable_1) == 0x0001A0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetItemIDManager_ReturnValue) == 0x0001A8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetStaticItemData_ReturnValue) == 0x0001B8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_6) == 0x0001C9, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetParam_ReturnValue) == 0x0001D0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_DynamicCast_AsBP_in_Game_Main_Menu_Use_Item_Parameter) == 0x0001D8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_DynamicCast_AsBP_in_Game_Main_Menu_Use_Item_Parameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_IndividualParameter) == 0x0001E8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_IndividualParameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_WazaId) == 0x0001F0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_WazaId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetWazaName_outName) == 0x0001F8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetWazaName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeStruct_FormatArgumentData) == 0x000210, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetNickName_outName) == 0x000260, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetNickName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_IsConfirm) == 0x000270, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_IsConfirm' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Conv_StringToText_ReturnValue) == 0x000278, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_4) == 0x000290, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002A0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeArray_Array_1) == 0x0002F0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000300, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_5) == 0x000318, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Format_ReturnValue) == 0x000328, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Dialog_ReturnValue) == 0x000340, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Dialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_RegisterActionBinding_ReturnValue) == 0x000350, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_6) == 0x000354, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Array_Index_Variable_2) == 0x000364, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Get_Item_2) == 0x000368, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000370, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_7) == 0x000388, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_7) == 0x000398, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetWorkerSick_ReturnValue) == 0x000399, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetWorkerSick_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetNickName_outName_1) == 0x0003A0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetNickName_outName_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003B0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0003B8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003D0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeArray_Array_2) == 0x000420, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Format_ReturnValue_1) == 0x000430, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_8) == 0x000448, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Dialog_ReturnValue_1) == 0x000458, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Dialog_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_Individual) == 0x000468, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_Individual' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_9) == 0x000470, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_10) == 0x000480, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Loop_Counter_Variable_1) == 0x000490, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetItemIDManager_ReturnValue_1) == 0x000498, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetItemIDManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_8) == 0x0004A0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetStaticItemData_ReturnValue_1) == 0x0004A8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetStaticItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_9) == 0x0004B0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0004B1, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004B2, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004B4, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Loop_Counter_Variable_2) == 0x0004B8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, Temp_int_Variable) == 0x0004BC, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004C0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Add_IntInt_ReturnValue_3) == 0x0004C4, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_addExp) == 0x0004C8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_addExp' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_nowExp) == 0x0004D0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_nowExp' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_11) == 0x0004D8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Get_Item_3) == 0x0004E8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Array_Length_ReturnValue_3) == 0x0004F0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004F4, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_12) == 0x0004F8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_nowRank) == 0x000508, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_nowRank' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CustomEvent_oldRank) == 0x00050C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CustomEvent_oldRank' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_13) == 0x000510, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_10) == 0x000520, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetNickName_outName_2) == 0x000528, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetNickName_outName_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000538, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeStruct_FormatArgumentData_3) == 0x000550, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_14) == 0x0005A0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_MakeArray_Array_3) == 0x0005B0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_GetLocalizedTextFromHandle_Text_2) == 0x0005C0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_GetLocalizedTextFromHandle_Text_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Format_ReturnValue_2) == 0x0005D8, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Dialog_ReturnValue_2) == 0x0005F0, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Dialog_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000600, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000601, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000602, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_BooleanAND_ReturnValue) == 0x000603, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000604, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000605, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000606, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000607, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_15) == 0x000608, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_IsValid_ReturnValue_11) == 0x000618, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000619, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_16) == 0x00061C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_17) == 0x00062C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, K2Node_CreateDelegate_OutputDelegate_18) == 0x00063C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00064C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00064D, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00064E, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x00064F, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_BooleanOR_ReturnValue) == 0x000650, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x000651, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_BooleanOR_ReturnValue_1) == 0x000652, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_BooleanOR_ReturnValue_2) == 0x000653, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_BooleanOR_ReturnValue_3) == 0x000654, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_SelectInt_ReturnValue) == 0x000658, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem, CallFunc_Less_IntInt_ReturnValue_4) == 0x00065C, "Member 'WBP_InventoryEquipment_UseItem_C_ExecuteUbergraph_WBP_InventoryEquipment_UseItem::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.OnPalExpChange
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_OnPalExpChange final
{
public:
	int64                                         AddExp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         NowExp;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_OnPalExpChange) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_OnPalExpChange");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_OnPalExpChange) == 0x000010, "Wrong size on WBP_InventoryEquipment_UseItem_C_OnPalExpChange");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_OnPalExpChange, AddExp) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_OnPalExpChange::AddExp' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_OnPalExpChange, NowExp) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_OnPalExpChange::NowExp' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.OnPalRankChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_OnPalRankChanged final
{
public:
	int32                                         NowRank;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldRank;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_OnPalRankChanged) == 0x000004, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_OnPalRankChanged");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_OnPalRankChanged) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_OnPalRankChanged");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_OnPalRankChanged, NowRank) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_OnPalRankChanged::NowRank' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_OnPalRankChanged, OldRank) == 0x000004, "Member 'WBP_InventoryEquipment_UseItem_C_OnPalRankChanged::OldRank' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.OnWazaMachineUsed
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed final
{
public:
	class UPalIndividualCharacterParameter*       IndividualParameter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalWazaID                                    WazaID;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed) == 0x000010, "Wrong size on WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed, IndividualParameter) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed::IndividualParameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed, WazaID) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_OnWazaMachineUsed::WazaID' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.Refresh
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_Refresh final
{
public:
	bool                                          IsConfirm;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_Refresh) == 0x000001, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_Refresh");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_Refresh) == 0x000001, "Wrong size on WBP_InventoryEquipment_UseItem_C_Refresh");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Refresh, IsConfirm) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_Refresh::IsConfirm' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.ResetCacheUseAmount
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount final
{
public:
	class UPalItemSlot*                           TargetSlot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount, TargetSlot) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_ResetCacheUseAmount::TargetSlot' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_Setup final
{
public:
	class UPalItemSlot*                           SelectedItemSlot;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_Setup) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_Setup");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_Setup) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_Setup");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Setup, SelectedItemSlot) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_Setup::SelectedItemSlot' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.SetupCllickSE
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_SetupCllickSE final
{
public:
	class UPalIndividualCharacterHandle*          IndividualHandle;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    MenuPalList;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       TargetIndividualParameter;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPalItemTypeB>                         CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm)
	EPalItemTypeB                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_SetupCllickSE");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE) == 0x000050, "Wrong size on WBP_InventoryEquipment_UseItem_C_SetupCllickSE");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, IndividualHandle) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::IndividualHandle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, MenuPalList) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::MenuPalList' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, TargetIndividualParameter) == 0x000010, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::TargetIndividualParameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000049, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupCllickSE, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00004A, "Member 'WBP_InventoryEquipment_UseItem_C_SetupCllickSE::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.SetupPalInteractable
// 0x0058 (0x0058 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_SetupPalInteractable final
{
public:
	class UPalIndividualCharacterHandle*          IndividualHandle;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    MenuPalList;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       TargetIndividualParameter;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddTalentByItem_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseTargetRankUp_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanItemLevelUp_ReturnValue;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseTargetMedicine_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseTargetPalExpItem_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int64 AddExp, int64 NowExp)>   K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStatusPointResetItem_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticConsumeItemData*              K2Node_DynamicCast_AsPal_Static_Consume_Item_Data; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_SetupPalInteractable");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable) == 0x000058, "Wrong size on WBP_InventoryEquipment_UseItem_C_SetupPalInteractable");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, IndividualHandle) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::IndividualHandle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, MenuPalList) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::MenuPalList' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, TargetIndividualParameter) == 0x000010, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::TargetIndividualParameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_CanAddTalentByItem_ReturnValue) == 0x000021, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_CanAddTalentByItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_CanUseTargetRankUp_ReturnValue) == 0x000022, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_CanUseTargetRankUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_CanItemLevelUp_ReturnValue) == 0x000023, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_CanItemLevelUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_CanUseTargetMedicine_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_CanUseTargetMedicine_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_CanUseTargetPalExpItem_ReturnValue) == 0x000029, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_CanUseTargetPalExpItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_Array_Contains_ReturnValue) == 0x00003C, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_IsStatusPointResetItem_ReturnValue) == 0x000044, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_IsStatusPointResetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, K2Node_DynamicCast_AsPal_Static_Consume_Item_Data) == 0x000048, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::K2Node_DynamicCast_AsPal_Static_Consume_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_SetupPalInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'WBP_InventoryEquipment_UseItem_C_SetupPalInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.ShowPalDetail
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_ShowPalDetail final
{
public:
	class UPalIndividualCharacterHandle*          Individual;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_ShowPalDetail) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_ShowPalDetail");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_ShowPalDetail) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_ShowPalDetail");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_ShowPalDetail, Individual) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_ShowPalDetail::Individual' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.Try Use Item Sound
// 0x0308 (0x0308 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound final
{
public:
	class FName                                   StaticItemId;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       TargetCharacterParameter;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemIDManager*                      IDmanager;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalIndividualCharacterSaveParameter   CallFunc_GetSaveParameter_ReturnValue;             // 0x0018(0x02A8)(ConstParm)
	bool                                          CallFunc_GetSaveParameterValue_IsPlayer_ReturnValue; // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue_1;          // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Map_Find_Value;                           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue_2;          // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound) == 0x000308, "Wrong size on WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, StaticItemId) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::StaticItemId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, TargetCharacterParameter) == 0x000008, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::TargetCharacterParameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, IDmanager) == 0x000010, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::IDmanager' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_GetSaveParameter_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_GetSaveParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_GetSaveParameterValue_IsPlayer_ReturnValue) == 0x0002C0, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_GetSaveParameterValue_IsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_GetStaticItemData_ReturnValue) == 0x0002C8, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_GetStaticItemData_ReturnValue_1) == 0x0002D0, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_GetStaticItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D8, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_Array_Contains_ReturnValue) == 0x0002D9, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_Map_Find_Value) == 0x0002E0, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_Map_Find_ReturnValue) == 0x0002E8, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_GetItemIDManager_ReturnValue) == 0x0002F0, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_GetStaticItemData_ReturnValue_2) == 0x0002F8, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_GetStaticItemData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_IsValid_ReturnValue) == 0x000300, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_IsValid_ReturnValue_1) == 0x000301, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000302, "Member 'WBP_InventoryEquipment_UseItem_C_Try_Use_Item_Sound::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.UseItemTo
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_UseItemTo final
{
public:
	class UPalIndividualCharacterHandle*          Individual;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_UseItemTo) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_UseItemTo");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_UseItemTo) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_UseItemTo");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_UseItemTo, Individual) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_UseItemTo::Individual' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.WBP_InventoryEquipment_UseItem_AutoGenFunc
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc final
{
public:
	int32                                         AddLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NowLevel;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc) == 0x000004, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc, AddLevel) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc::AddLevel' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc, NowLevel) == 0x000004, "Member 'WBP_InventoryEquipment_UseItem_C_WBP_InventoryEquipment_UseItem_AutoGenFunc::NowLevel' has a wrong offset!");

// Function WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_UseItem_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

