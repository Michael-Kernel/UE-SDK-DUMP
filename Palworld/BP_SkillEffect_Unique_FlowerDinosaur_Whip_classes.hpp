#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillEffect_Unique_FlowerDinosaur_Whip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SkillEffectBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkillEffect_Unique_FlowerDinosaur_Whip.BP_SkillEffect_Unique_FlowerDinosaur_Whip_C
// 0x0028 (0x03E8 - 0x03C0)
class ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C final : public ABP_SkillEffectBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SkillEffect_Unique_FlowerDinosaur_Whip_C; // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPalHitFilter*                          HitFilter;                                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CollisionOffset;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip(int32 EntryPoint);
	void GetAndInitHitFilter(class UPalHitFilter** HitFilter_0);
	void IsValidHit(class AActor* HitTarget, bool* IsHit);
	void OnHit(class UPrimitiveComponent* MyHitComponent, class AActor* OtherHitActor, class UPrimitiveComponent* OtherHitComponent, const TArray<int32>& FoliageIndex, const struct FVector& HitLocation, int32 HitCount);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillEffect_Unique_FlowerDinosaur_Whip_C">();
	}
	static class ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C>();
	}
};
static_assert(alignof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C) == 0x000008, "Wrong alignment on ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C");
static_assert(sizeof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C) == 0x0003E8, "Wrong size on ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C");
static_assert(offsetof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C, UberGraphFrame_BP_SkillEffect_Unique_FlowerDinosaur_Whip_C) == 0x0003C0, "Member 'ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C::UberGraphFrame_BP_SkillEffect_Unique_FlowerDinosaur_Whip_C' has a wrong offset!");
static_assert(offsetof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C, HitFilter) == 0x0003C8, "Member 'ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C::HitFilter' has a wrong offset!");
static_assert(offsetof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C, Radius) == 0x0003D0, "Member 'ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C, Angle) == 0x0003D8, "Member 'ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C::Angle' has a wrong offset!");
static_assert(offsetof(ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C, CollisionOffset) == 0x0003E0, "Member 'ABP_SkillEffect_Unique_FlowerDinosaur_Whip_C::CollisionOffset' has a wrong offset!");

}

