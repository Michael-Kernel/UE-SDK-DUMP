#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FireKirin

#include "Basic.hpp"

#include "BP_MonsterBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FireKirin.BP_FireKirin_C
// 0x0040 (0x0AF0 - 0x0AB0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_FireKirin_C : public ABP_MonsterBase_C
{
public:
	class UBP_PalTimerPointLightComponent_C*      BP_PalTimerPointLightComponent;                    // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalSpeedCollisionComponent*            PalSpeedCollision1;                                // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule3;                              // 0x0AC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule2;                              // 0x0AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule1;                              // 0x0AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalSpeedCollisionComponent*            PalSpeedCollision;                                 // 0x0AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule;                               // 0x0AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void GetVisual_ExceptMainMesh_SyncAnyway(TArray<class USceneComponent*>* OutComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FireKirin_C">();
	}
	static class ABP_FireKirin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FireKirin_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_FireKirin_C) == 0x000010, "Wrong alignment on ABP_FireKirin_C");
static_assert(sizeof(ABP_FireKirin_C) == 0x000AF0, "Wrong size on ABP_FireKirin_C");
static_assert(offsetof(ABP_FireKirin_C, BP_PalTimerPointLightComponent) == 0x000AB0, "Member 'ABP_FireKirin_C::BP_PalTimerPointLightComponent' has a wrong offset!");
static_assert(offsetof(ABP_FireKirin_C, PalSpeedCollision1) == 0x000AB8, "Member 'ABP_FireKirin_C::PalSpeedCollision1' has a wrong offset!");
static_assert(offsetof(ABP_FireKirin_C, PalBodyPartsCapsule3) == 0x000AC0, "Member 'ABP_FireKirin_C::PalBodyPartsCapsule3' has a wrong offset!");
static_assert(offsetof(ABP_FireKirin_C, PalBodyPartsCapsule2) == 0x000AC8, "Member 'ABP_FireKirin_C::PalBodyPartsCapsule2' has a wrong offset!");
static_assert(offsetof(ABP_FireKirin_C, PalBodyPartsCapsule1) == 0x000AD0, "Member 'ABP_FireKirin_C::PalBodyPartsCapsule1' has a wrong offset!");
static_assert(offsetof(ABP_FireKirin_C, PalSpeedCollision) == 0x000AD8, "Member 'ABP_FireKirin_C::PalSpeedCollision' has a wrong offset!");
static_assert(offsetof(ABP_FireKirin_C, PalBodyPartsCapsule) == 0x000AE0, "Member 'ABP_FireKirin_C::PalBodyPartsCapsule' has a wrong offset!");

}

