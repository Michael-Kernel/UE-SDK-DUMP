#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillEffect_Unique_FlowerDinosaur_Whip

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SkillEffect_Unique_FlowerDinosaur_Whip.BP_SkillEffect_Unique_FlowerDinosaur_Whip_C.ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip
// 0x0160 (0x0160 - 0x0000)
struct BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_MyHitComponent;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherHitActor;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherHitComponent;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_CustomEvent_FoliageIndex;                   // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HitCount;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidHit_IsHit;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPalDamageInfo                         CallFunc_MakeDamageInfoByWazaType_ReturnValue;     // 0x0068(0x00D0)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* MyHitComponent, class AActor* OtherHitActor, class UPrimitiveComponent* OtherHitComponent, TArray<int32>& FoliageIndex, const struct FVector& HitLocation, int32 HitCount)> K2Node_CreateDelegate_OutputDelegate;              // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip) == 0x000008, "Wrong alignment on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip");
static_assert(sizeof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip) == 0x000160, "Wrong size on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, EntryPoint) == 0x000000, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CustomEvent_MyHitComponent) == 0x000010, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CustomEvent_MyHitComponent' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CustomEvent_OtherHitActor) == 0x000018, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CustomEvent_OtherHitActor' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CustomEvent_OtherHitComponent) == 0x000020, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CustomEvent_OtherHitComponent' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CustomEvent_FoliageIndex) == 0x000028, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CustomEvent_FoliageIndex' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CustomEvent_HitLocation) == 0x000038, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CustomEvent_HitCount) == 0x000050, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CustomEvent_HitCount' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, CallFunc_IsValidHit_IsHit) == 0x000054, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::CallFunc_IsValidHit_IsHit' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, CallFunc_MakeDamageInfoByWazaType_ReturnValue) == 0x000068, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::CallFunc_MakeDamageInfoByWazaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, CallFunc_Concat_StrStr_ReturnValue) == 0x000138, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, K2Node_CreateDelegate_OutputDelegate) == 0x000148, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_ExecuteUbergraph_BP_SkillEffect_Unique_FlowerDinosaur_Whip::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SkillEffect_Unique_FlowerDinosaur_Whip.BP_SkillEffect_Unique_FlowerDinosaur_Whip_C.GetAndInitHitFilter
// 0x0218 (0x0218 - 0x0000)
struct BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter final
{
public:
	class UPalHitFilter*                          HitFilter_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue_1;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimNotifyState*>               CallFunc_GetMontageNotifyStates_outStates;         // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAnimNotifyState*                 CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPalAnimNotifyState_AttackCollision* K2Node_DynamicCast_AsAttackCollision;              // 0x0100(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter) == 0x000008, "Wrong alignment on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter");
static_assert(sizeof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter) == 0x000218, "Wrong size on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, HitFilter_0) == 0x000000, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::HitFilter_0' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000018, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_BreakVector_Y) == 0x000078, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_BreakVector_Z) == 0x000080, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_GetOwnerCharacter_ReturnValue_1) == 0x0000A8, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_GetOwnerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_GetCurrentMontage_ReturnValue) == 0x0000B8, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_MakeVector_ReturnValue_1) == 0x0000C0, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_GetMontageNotifyStates_outStates) == 0x0000D8, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_GetMontageNotifyStates_outStates' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, K2Node_DynamicCast_AsAttackCollision) == 0x000100, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::K2Node_DynamicCast_AsAttackCollision' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, K2Node_DynamicCast_AsBox_Collision) == 0x000120, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000129, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000130, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_GetAndInitHitFilter::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_SkillEffect_Unique_FlowerDinosaur_Whip.BP_SkillEffect_Unique_FlowerDinosaur_Whip_C.IsValidHit
// 0x0028 (0x0028 - 0x0000)
struct BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit final
{
public:
	class AActor*                                 HitTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHit;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsApplicableDamage_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InFanShapAndDitance_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InFanShapAndDitance_Degree_ImplicitCast;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InFanShapAndDitance_Distance_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit) == 0x000008, "Wrong alignment on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit");
static_assert(sizeof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit) == 0x000028, "Wrong size on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, HitTarget) == 0x000000, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::HitTarget' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, IsHit) == 0x000008, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::IsHit' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_IsApplicableDamage_ReturnValue) == 0x000018, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_IsApplicableDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_InFanShapAndDitance_ReturnValue) == 0x00001A, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_InFanShapAndDitance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_InFanShapAndDitance_Degree_ImplicitCast) == 0x00001C, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_InFanShapAndDitance_Degree_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit, CallFunc_InFanShapAndDitance_Distance_ImplicitCast) == 0x000020, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_IsValidHit::CallFunc_InFanShapAndDitance_Distance_ImplicitCast' has a wrong offset!");

// Function BP_SkillEffect_Unique_FlowerDinosaur_Whip.BP_SkillEffect_Unique_FlowerDinosaur_Whip_C.OnHit
// 0x0048 (0x0048 - 0x0000)
struct BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit final
{
public:
	class UPrimitiveComponent*                    MyHitComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherHitActor;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherHitComponent;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 FoliageIndex;                                      // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                HitLocation;                                       // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitCount;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit) == 0x000008, "Wrong alignment on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit");
static_assert(sizeof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit) == 0x000048, "Wrong size on BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit, MyHitComponent) == 0x000000, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit::MyHitComponent' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit, OtherHitActor) == 0x000008, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit::OtherHitActor' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit, OtherHitComponent) == 0x000010, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit::OtherHitComponent' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit, FoliageIndex) == 0x000018, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit::FoliageIndex' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit, HitLocation) == 0x000028, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit, HitCount) == 0x000040, "Member 'BP_SkillEffect_Unique_FlowerDinosaur_Whip_C_OnHit::HitCount' has a wrong offset!");

}

