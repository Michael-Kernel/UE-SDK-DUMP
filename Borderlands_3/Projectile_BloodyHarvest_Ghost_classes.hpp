#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_BloodyHarvest_Ghost

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_BloodyHarvest_Ghost.Projectile_BloodyHarvest_Ghost_C
// 0x00E8 (0x07C8 - 0x06E0)
class AProjectile_BloodyHarvest_Ghost_C final : public AOakAIBalancedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       PawnSphere;                                        // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMinimapIconComponent*               OakMinimapIcon;                                    // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGameplayTagContainerComponent*         GameplayTagContainer;                              // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_OakAttributeComponent_C*            BP_OakAttributeComponent;                          // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakDamageComponent*                    OakDamage;                                         // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDrunkenRandomMovementComponent*        DrunkenRandomMovement;                             // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileHomingComponent*             ProjectileHoming;                                  // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       SnapZoom;                                          // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTargetableComponent*                   Targetable;                                        // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               GhostFX;                                           // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               HauntedGroundFX;                                   // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceInstantSpawn;                                 // 0x0758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HomingDelay;                                       // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasKilledByDamage;                                // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageComponent*                       SecondWindReceivers;                               // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SecondWindDamageCausers;                           // 0x0770(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UParticleSystem*                        StartSpawnFX;                                      // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EndSpawnFX;                                        // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         GhostExplosionData;                                // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          NewPlayerTarget;                                   // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  DataTableDamageScale;                              // 0x07A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bCanDoCollisionCleanup;                            // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Projectile_BloodyHarvest_Ghost(int32 EntryPoint);
	void CheckPerceivableByAI();
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_DroneProj_TED_TenGallon(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void DoEndSpawnPresentation(bool ForceInstantSpawn_);
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_Projectile_BloodyHarvest_Ghost(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser);
	void OnHitWorld(const struct FHitResult& Hit);
	void OnHitDamagableObject(const struct FHitResult& Hit);
	void OnExplode();
	void SetPlayerTargets();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void DoSpawnInPresentation();
	void InitGhost();
	void DoStartSpawnPresentation(bool ForceInstantSpawn_);
	void SpawnLoot();
	void TrySecondWind();
	void CauseDamageGhost();
	void TryFindNextValidTarget(class AOakCharacter* SourcePlayer, class AOakCharacter** NewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_BloodyHarvest_Ghost_C">();
	}
	static class AProjectile_BloodyHarvest_Ghost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_BloodyHarvest_Ghost_C>();
	}
};
static_assert(alignof(AProjectile_BloodyHarvest_Ghost_C) == 0x000008, "Wrong alignment on AProjectile_BloodyHarvest_Ghost_C");
static_assert(sizeof(AProjectile_BloodyHarvest_Ghost_C) == 0x0007C8, "Wrong size on AProjectile_BloodyHarvest_Ghost_C");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, UberGraphFrame) == 0x0006E0, "Member 'AProjectile_BloodyHarvest_Ghost_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, PawnSphere) == 0x0006E8, "Member 'AProjectile_BloodyHarvest_Ghost_C::PawnSphere' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, OakMinimapIcon) == 0x0006F0, "Member 'AProjectile_BloodyHarvest_Ghost_C::OakMinimapIcon' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, GameplayTagContainer) == 0x0006F8, "Member 'AProjectile_BloodyHarvest_Ghost_C::GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, BP_OakAttributeComponent) == 0x000700, "Member 'AProjectile_BloodyHarvest_Ghost_C::BP_OakAttributeComponent' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, WwiseAudio) == 0x000708, "Member 'AProjectile_BloodyHarvest_Ghost_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, OakDamage) == 0x000710, "Member 'AProjectile_BloodyHarvest_Ghost_C::OakDamage' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, DrunkenRandomMovement) == 0x000718, "Member 'AProjectile_BloodyHarvest_Ghost_C::DrunkenRandomMovement' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, ProjectileHoming) == 0x000720, "Member 'AProjectile_BloodyHarvest_Ghost_C::ProjectileHoming' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, GbxProjectileMovement) == 0x000728, "Member 'AProjectile_BloodyHarvest_Ghost_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, SnapZoom) == 0x000730, "Member 'AProjectile_BloodyHarvest_Ghost_C::SnapZoom' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, Targetable) == 0x000738, "Member 'AProjectile_BloodyHarvest_Ghost_C::Targetable' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, Sphere) == 0x000740, "Member 'AProjectile_BloodyHarvest_Ghost_C::Sphere' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, GhostFX) == 0x000748, "Member 'AProjectile_BloodyHarvest_Ghost_C::GhostFX' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, HauntedGroundFX) == 0x000750, "Member 'AProjectile_BloodyHarvest_Ghost_C::HauntedGroundFX' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, ForceInstantSpawn) == 0x000758, "Member 'AProjectile_BloodyHarvest_Ghost_C::ForceInstantSpawn' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, HomingDelay) == 0x00075C, "Member 'AProjectile_BloodyHarvest_Ghost_C::HomingDelay' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, bWasKilledByDamage) == 0x000760, "Member 'AProjectile_BloodyHarvest_Ghost_C::bWasKilledByDamage' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, SecondWindReceivers) == 0x000768, "Member 'AProjectile_BloodyHarvest_Ghost_C::SecondWindReceivers' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, SecondWindDamageCausers) == 0x000770, "Member 'AProjectile_BloodyHarvest_Ghost_C::SecondWindDamageCausers' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, StartSpawnFX) == 0x000780, "Member 'AProjectile_BloodyHarvest_Ghost_C::StartSpawnFX' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, EndSpawnFX) == 0x000788, "Member 'AProjectile_BloodyHarvest_Ghost_C::EndSpawnFX' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, GhostExplosionData) == 0x000790, "Member 'AProjectile_BloodyHarvest_Ghost_C::GhostExplosionData' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, NewPlayerTarget) == 0x000798, "Member 'AProjectile_BloodyHarvest_Ghost_C::NewPlayerTarget' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, LifeTime) == 0x0007A0, "Member 'AProjectile_BloodyHarvest_Ghost_C::LifeTime' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, DataTableDamageScale) == 0x0007A8, "Member 'AProjectile_BloodyHarvest_Ghost_C::DataTableDamageScale' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_C, bCanDoCollisionCleanup) == 0x0007C0, "Member 'AProjectile_BloodyHarvest_Ghost_C::bCanDoCollisionCleanup' has a wrong offset!");

}

