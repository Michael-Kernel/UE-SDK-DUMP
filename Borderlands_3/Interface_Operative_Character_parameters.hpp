#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Interface_Operative_Character

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Skeletal Mesh Head
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_Get_Skeletal_Mesh_Head final
{
public:
	class UGbxSkeletalMeshComponent*              Head_Mesh;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Head) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Skeletal_Mesh_Head");
static_assert(sizeof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Head) == 0x000008, "Wrong size on Interface_Operative_Character_C_Get_Skeletal_Mesh_Head");
static_assert(offsetof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Head, Head_Mesh) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Skeletal_Mesh_Head::Head_Mesh' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Skeletal Mesh Arms
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms final
{
public:
	class USkeletalMeshComponent*                 Arms_Mesh;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms");
static_assert(sizeof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms) == 0x000008, "Wrong size on Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms");
static_assert(offsetof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms, Arms_Mesh) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Skeletal_Mesh_Arms::Arms_Mesh' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Skeletal Mesh Legs
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs final
{
public:
	class UGbxSkeletalMeshComponent*              Legs;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs");
static_assert(sizeof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs) == 0x000008, "Wrong size on Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs");
static_assert(offsetof(Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs, Legs) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Skeletal_Mesh_Legs::Legs' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Skeletal Mesh
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_Get_Skeletal_Mesh final
{
public:
	class USkeletalMeshComponent*                 Skeletal_Mesh;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Skeletal_Mesh) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Skeletal_Mesh");
static_assert(sizeof(Interface_Operative_Character_C_Get_Skeletal_Mesh) == 0x000008, "Wrong size on Interface_Operative_Character_C_Get_Skeletal_Mesh");
static_assert(offsetof(Interface_Operative_Character_C_Get_Skeletal_Mesh, Skeletal_Mesh) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Skeletal_Mesh::Skeletal_Mesh' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Materials Head
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_Get_Materials_Head final
{
public:
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Materials_Head) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Materials_Head");
static_assert(sizeof(Interface_Operative_Character_C_Get_Materials_Head) == 0x000010, "Wrong size on Interface_Operative_Character_C_Get_Materials_Head");
static_assert(offsetof(Interface_Operative_Character_C_Get_Materials_Head, Materials) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Materials_Head::Materials' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Materials Arms
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_Get_Materials_Arms final
{
public:
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Materials_Arms) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Materials_Arms");
static_assert(sizeof(Interface_Operative_Character_C_Get_Materials_Arms) == 0x000010, "Wrong size on Interface_Operative_Character_C_Get_Materials_Arms");
static_assert(offsetof(Interface_Operative_Character_C_Get_Materials_Arms, Materials) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Materials_Arms::Materials' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Materials Legs
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_Get_Materials_Legs final
{
public:
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Materials_Legs) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Materials_Legs");
static_assert(sizeof(Interface_Operative_Character_C_Get_Materials_Legs) == 0x000010, "Wrong size on Interface_Operative_Character_C_Get_Materials_Legs");
static_assert(offsetof(Interface_Operative_Character_C_Get_Materials_Legs, Materials) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Materials_Legs::Materials' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Materials Skeletal Mesh
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh final
{
public:
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh");
static_assert(sizeof(Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh) == 0x000010, "Wrong size on Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh");
static_assert(offsetof(Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh, Materials) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Materials_Skeletal_Mesh::Materials' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Materials FP Gun
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_Get_Materials_FP_Gun final
{
public:
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Materials_FP_Gun) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Materials_FP_Gun");
static_assert(sizeof(Interface_Operative_Character_C_Get_Materials_FP_Gun) == 0x000010, "Wrong size on Interface_Operative_Character_C_Get_Materials_FP_Gun");
static_assert(offsetof(Interface_Operative_Character_C_Get_Materials_FP_Gun, Materials) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Materials_FP_Gun::Materials' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.Get Materials TP Gun
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_Get_Materials_TP_Gun final
{
public:
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(Interface_Operative_Character_C_Get_Materials_TP_Gun) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_Get_Materials_TP_Gun");
static_assert(sizeof(Interface_Operative_Character_C_Get_Materials_TP_Gun) == 0x000010, "Wrong size on Interface_Operative_Character_C_Get_Materials_TP_Gun");
static_assert(offsetof(Interface_Operative_Character_C_Get_Materials_TP_Gun, Materials) == 0x000000, "Member 'Interface_Operative_Character_C_Get_Materials_TP_Gun::Materials' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetDroneSpawnLocation
// 0x0030 (0x0030 - 0x0000)
struct Interface_Operative_Character_C_GetDroneSpawnLocation final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_Character_C_GetDroneSpawnLocation) == 0x000010, "Wrong alignment on Interface_Operative_Character_C_GetDroneSpawnLocation");
static_assert(sizeof(Interface_Operative_Character_C_GetDroneSpawnLocation) == 0x000030, "Wrong size on Interface_Operative_Character_C_GetDroneSpawnLocation");
static_assert(offsetof(Interface_Operative_Character_C_GetDroneSpawnLocation, Transform) == 0x000000, "Member 'Interface_Operative_Character_C_GetDroneSpawnLocation::Transform' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.BlockOperativeActionSkillActivation
// 0x0001 (0x0001 - 0x0000)
struct Interface_Operative_Character_C_BlockOperativeActionSkillActivation final
{
public:
	bool                                          ShouldBlock;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_Character_C_BlockOperativeActionSkillActivation) == 0x000001, "Wrong alignment on Interface_Operative_Character_C_BlockOperativeActionSkillActivation");
static_assert(sizeof(Interface_Operative_Character_C_BlockOperativeActionSkillActivation) == 0x000001, "Wrong size on Interface_Operative_Character_C_BlockOperativeActionSkillActivation");
static_assert(offsetof(Interface_Operative_Character_C_BlockOperativeActionSkillActivation, ShouldBlock) == 0x000000, "Member 'Interface_Operative_Character_C_BlockOperativeActionSkillActivation::ShouldBlock' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.DoOperativeCryoNovaAtLocation
// 0x0010 (0x0010 - 0x0000)
struct Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation) == 0x000004, "Wrong alignment on Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation");
static_assert(sizeof(Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation) == 0x000010, "Wrong size on Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation");
static_assert(offsetof(Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation, Location) == 0x000000, "Member 'Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation::Location' has a wrong offset!");
static_assert(offsetof(Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation, Damage) == 0x00000C, "Member 'Interface_Operative_Character_C_DoOperativeCryoNovaAtLocation::Damage' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.SpawnAndThrowOperativeGrenade
// 0x0020 (0x0020 - 0x0000)
struct Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade final
{
public:
	class AActor*                                 SpawnFromActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpawnFromSocket;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Res;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Grenade;                                           // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade");
static_assert(sizeof(Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade) == 0x000020, "Wrong size on Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade");
static_assert(offsetof(Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade, SpawnFromActor) == 0x000000, "Member 'Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade::SpawnFromActor' has a wrong offset!");
static_assert(offsetof(Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade, SpawnFromSocket) == 0x000008, "Member 'Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade::SpawnFromSocket' has a wrong offset!");
static_assert(offsetof(Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade, Res) == 0x000010, "Member 'Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade::Res' has a wrong offset!");
static_assert(offsetof(Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade, Grenade) == 0x000018, "Member 'Interface_Operative_Character_C_SpawnAndThrowOperativeGrenade::Grenade' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetOperativeShieldRemainingPercent
// 0x0004 (0x0004 - 0x0000)
struct Interface_Operative_Character_C_GetOperativeShieldRemainingPercent final
{
public:
	float                                         ShieldPercentRemaining;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_GetOperativeShieldRemainingPercent) == 0x000004, "Wrong alignment on Interface_Operative_Character_C_GetOperativeShieldRemainingPercent");
static_assert(sizeof(Interface_Operative_Character_C_GetOperativeShieldRemainingPercent) == 0x000004, "Wrong size on Interface_Operative_Character_C_GetOperativeShieldRemainingPercent");
static_assert(offsetof(Interface_Operative_Character_C_GetOperativeShieldRemainingPercent, ShieldPercentRemaining) == 0x000000, "Member 'Interface_Operative_Character_C_GetOperativeShieldRemainingPercent::ShieldPercentRemaining' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetDigiCloneShieldRemainingPercent
// 0x0004 (0x0004 - 0x0000)
struct Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent final
{
public:
	float                                         ShieldPercentRemaining;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent) == 0x000004, "Wrong alignment on Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent");
static_assert(sizeof(Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent) == 0x000004, "Wrong size on Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent");
static_assert(offsetof(Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent, ShieldPercentRemaining) == 0x000000, "Member 'Interface_Operative_Character_C_GetDigiCloneShieldRemainingPercent::ShieldPercentRemaining' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetOperativeStatusEffectOverrides
// 0x001C (0x001C - 0x0000)
struct Interface_Operative_Character_C_GetOperativeStatusEffectOverrides final
{
public:
	struct FCauseDamageStatusEffectOverrides      Overrides;                                         // 0x0000(0x001C)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Interface_Operative_Character_C_GetOperativeStatusEffectOverrides) == 0x000004, "Wrong alignment on Interface_Operative_Character_C_GetOperativeStatusEffectOverrides");
static_assert(sizeof(Interface_Operative_Character_C_GetOperativeStatusEffectOverrides) == 0x00001C, "Wrong size on Interface_Operative_Character_C_GetOperativeStatusEffectOverrides");
static_assert(offsetof(Interface_Operative_Character_C_GetOperativeStatusEffectOverrides, Overrides) == 0x000000, "Member 'Interface_Operative_Character_C_GetOperativeStatusEffectOverrides::Overrides' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetBarrierActionAbility
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_GetBarrierActionAbility final
{
public:
	class UOakActionAbility_Barrier*              Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_GetBarrierActionAbility) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_GetBarrierActionAbility");
static_assert(sizeof(Interface_Operative_Character_C_GetBarrierActionAbility) == 0x000008, "Wrong size on Interface_Operative_Character_C_GetBarrierActionAbility");
static_assert(offsetof(Interface_Operative_Character_C_GetBarrierActionAbility, Res) == 0x000000, "Member 'Interface_Operative_Character_C_GetBarrierActionAbility::Res' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.SetOperativeDeviceVisible
// 0x0001 (0x0001 - 0x0000)
struct Interface_Operative_Character_C_SetOperativeDeviceVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_Character_C_SetOperativeDeviceVisible) == 0x000001, "Wrong alignment on Interface_Operative_Character_C_SetOperativeDeviceVisible");
static_assert(sizeof(Interface_Operative_Character_C_SetOperativeDeviceVisible) == 0x000001, "Wrong size on Interface_Operative_Character_C_SetOperativeDeviceVisible");
static_assert(offsetof(Interface_Operative_Character_C_SetOperativeDeviceVisible, bVisible) == 0x000000, "Member 'Interface_Operative_Character_C_SetOperativeDeviceVisible::bVisible' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.CanActivateTrapCard
// 0x0001 (0x0001 - 0x0000)
struct Interface_Operative_Character_C_CanActivateTrapCard final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_Character_C_CanActivateTrapCard) == 0x000001, "Wrong alignment on Interface_Operative_Character_C_CanActivateTrapCard");
static_assert(sizeof(Interface_Operative_Character_C_CanActivateTrapCard) == 0x000001, "Wrong size on Interface_Operative_Character_C_CanActivateTrapCard");
static_assert(offsetof(Interface_Operative_Character_C_CanActivateTrapCard, Res) == 0x000000, "Member 'Interface_Operative_Character_C_CanActivateTrapCard::Res' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetDigicloneActionAbility
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_GetDigicloneActionAbility final
{
public:
	class UOakActionAbility_Digiclone*            Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_GetDigicloneActionAbility) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_GetDigicloneActionAbility");
static_assert(sizeof(Interface_Operative_Character_C_GetDigicloneActionAbility) == 0x000008, "Wrong size on Interface_Operative_Character_C_GetDigicloneActionAbility");
static_assert(offsetof(Interface_Operative_Character_C_GetDigicloneActionAbility, Res) == 0x000000, "Member 'Interface_Operative_Character_C_GetDigicloneActionAbility::Res' has a wrong offset!");

// Function Interface_Operative_Character.Interface_Operative_Character_C.GetGRMLNActionAbility
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_Character_C_GetGRMLNActionAbility final
{
public:
	class UOakActionAbility_GRMLN*                Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_Character_C_GetGRMLNActionAbility) == 0x000008, "Wrong alignment on Interface_Operative_Character_C_GetGRMLNActionAbility");
static_assert(sizeof(Interface_Operative_Character_C_GetGRMLNActionAbility) == 0x000008, "Wrong size on Interface_Operative_Character_C_GetGRMLNActionAbility");
static_assert(offsetof(Interface_Operative_Character_C_GetGRMLNActionAbility, Res) == 0x000000, "Member 'Interface_Operative_Character_C_GetGRMLNActionAbility::Res' has a wrong offset!");

}

