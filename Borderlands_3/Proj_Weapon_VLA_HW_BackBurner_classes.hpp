#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Weapon_VLA_HW_BackBurner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Proj_Weapon_BaseProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_Weapon_VLA_HW_BackBurner.Proj_Weapon_VLA_HW_BackBurner_C
// 0x0040 (0x07D0 - 0x0790)
class AProj_Weapon_VLA_HW_BackBurner_C final : public AProj_Weapon_BaseProjectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Proj_Weapon_VLA_HW_BackBurner_C;    // 0x0790(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               LauncherFX;                                        // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TracerTrailFX;                                     // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     PointsArray;                                       // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         ChildDamageScale;                                  // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C4[0x4];                                      // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LightProjSource;                                   // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Proj_Weapon_VLA_HW_BackBurner(int32 EntryPoint);
	void ContinueFiring();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_Weapon_VLA_HW_BackBurner_C">();
	}
	static class AProj_Weapon_VLA_HW_BackBurner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_Weapon_VLA_HW_BackBurner_C>();
	}
};
static_assert(alignof(AProj_Weapon_VLA_HW_BackBurner_C) == 0x000008, "Wrong alignment on AProj_Weapon_VLA_HW_BackBurner_C");
static_assert(sizeof(AProj_Weapon_VLA_HW_BackBurner_C) == 0x0007D0, "Wrong size on AProj_Weapon_VLA_HW_BackBurner_C");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, UberGraphFrame_Proj_Weapon_VLA_HW_BackBurner_C) == 0x000790, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::UberGraphFrame_Proj_Weapon_VLA_HW_BackBurner_C' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, LauncherFX) == 0x000798, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::LauncherFX' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, Sphere) == 0x0007A0, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::Sphere' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, TracerTrailFX) == 0x0007A8, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::TracerTrailFX' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, PointsArray) == 0x0007B0, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::PointsArray' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, ChildDamageScale) == 0x0007C0, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::ChildDamageScale' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_VLA_HW_BackBurner_C, LightProjSource) == 0x0007C8, "Member 'AProj_Weapon_VLA_HW_BackBurner_C::LightProjSource' has a wrong offset!");

}

