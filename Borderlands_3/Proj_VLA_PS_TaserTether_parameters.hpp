#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_VLA_PS_TaserTether

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.ExecuteUbergraph_Proj_VLA_PS_TaserTether
// 0x02C0 (0x02C0 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_PhysicsOn_;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_ThrowVector;                          // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Force;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_RotatorForSpin;                       // 0x0018(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_FuseSpeedScale;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_AdditiveVector;                       // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enabled;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0078(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_ComponentBoundEvent_TouchingActor;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsPlayer1;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_ComponentTouched;       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_LeavingActor;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsPlayer;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_EvaluateConditionType_ReturnValue;     // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_IO_Combat_Barrel_C> K2Node_DynamicCast_AsBPI_IO_Combat_Barrel;         // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ExplodingObject_C*                  K2Node_DynamicCast_AsBP_Exploding_Object;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StickToTarget_Attached;                   // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StickToTarget_StuckToActor;               // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_HitPoint;                             // 0x0214(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitDetection;                         // 0x0220(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue1;             // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0230(0x0008)(NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x2];                                      // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0244(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0250(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x025C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0268(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x02A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x02AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether) == 0x000008, "Wrong alignment on Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether) == 0x0002C0, "Wrong size on Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, EntryPoint) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_PhysicsOn_) == 0x000005, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_PhysicsOn_' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_ThrowVector) == 0x000008, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_ThrowVector' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_Force) == 0x000014, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_RotatorForSpin) == 0x000018, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_RotatorForSpin' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_FuseSpeedScale) == 0x000024, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_FuseSpeedScale' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_AdditiveVector) == 0x000028, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_AdditiveVector' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_Enabled) == 0x000034, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_MyComp) == 0x000038, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_Other) == 0x000040, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_OtherComp) == 0x000048, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_bSelfMoved) == 0x000050, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_HitLocation) == 0x000054, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_HitNormal) == 0x000060, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_NormalImpulse) == 0x00006C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_Hit) == 0x000078, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_CreateDelegate_OutputDelegate) == 0x000110, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_ComponentBoundEvent_TouchingActor) == 0x000120, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_ComponentBoundEvent_TouchingActor' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_ComponentBoundEvent_bIsPlayer1) == 0x000128, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_ComponentBoundEvent_bIsPlayer1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_ComponentBoundEvent_ComponentTouched) == 0x000130, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_ComponentBoundEvent_ComponentTouched' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_ComponentBoundEvent_LeavingActor) == 0x000138, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_ComponentBoundEvent_LeavingActor' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_ComponentBoundEvent_bIsPlayer) == 0x000140, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_ComponentBoundEvent_bIsPlayer' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_GetDisplayName_ReturnValue) == 0x000148, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_Array_RemoveItem_ReturnValue) == 0x000158, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_Conv_StringToName_ReturnValue) == 0x000160, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_Array_AddUnique_ReturnValue) == 0x000168, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_Array_Contains_ReturnValue) == 0x00016C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_K2_EvaluateConditionType_ReturnValue) == 0x00016D, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_K2_EvaluateConditionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_bBlockingHit) == 0x00016E, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016F, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Time) == 0x000170, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Distance) == 0x000174, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_ImpactPoint) == 0x000184, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Normal) == 0x000190, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_ImpactNormal) == 0x00019C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_FaceIndex) == 0x0001CC, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_TraceStart) == 0x0001D0, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_TraceEnd) == 0x0001DC, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001E8, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_DynamicCast_AsBPI_IO_Combat_Barrel) == 0x0001F0, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_DynamicCast_AsBPI_IO_Combat_Barrel' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_DynamicCast_AsBP_Exploding_Object) == 0x000208, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_DynamicCast_AsBP_Exploding_Object' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_DynamicCast_bSuccess1) == 0x000210, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_StickToTarget_Attached) == 0x000211, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_StickToTarget_Attached' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_StickToTarget_StuckToActor) == 0x000212, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_StickToTarget_StuckToActor' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, Temp_bool_Has_Been_Initd_Variable) == 0x000213, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_HitPoint) == 0x000214, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_HitPoint' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, K2Node_Event_HitDetection) == 0x000220, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::K2Node_Event_HitDetection' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_Array_AddUnique_ReturnValue1) == 0x00022C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_Array_AddUnique_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_K2_SetTimer_ReturnValue) == 0x000230, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_bBlockingHit1) == 0x000238, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000239, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Time1) == 0x00023C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Distance1) == 0x000240, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Location1) == 0x000244, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_ImpactPoint1) == 0x000250, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_Normal1) == 0x00025C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_ImpactNormal1) == 0x000268, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_PhysMat1) == 0x000278, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitActor1) == 0x000280, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitComponent1) == 0x000288, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitBoneName1) == 0x000290, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_HitItem1) == 0x000298, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_FaceIndex1) == 0x00029C, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_TraceStart1) == 0x0002A0, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_BreakHitResult_TraceEnd1) == 0x0002AC, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0002B8, "Member 'Proj_VLA_PS_TaserTether_C_ExecuteUbergraph_Proj_VLA_PS_TaserTether::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether
// 0x0010 (0x0010 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether final
{
public:
	class AActor*                                 LeavingActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayer;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether) == 0x000008, "Wrong alignment on Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether) == 0x000010, "Wrong size on Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether, LeavingActor) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether::LeavingActor' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether, bIsPlayer) == 0x000008, "Member 'Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether::bIsPlayer' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether
// 0x0018 (0x0018 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether final
{
public:
	class AActor*                                 TouchingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayer;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        ComponentTouched;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether) == 0x000008, "Wrong alignment on Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether) == 0x000018, "Wrong size on Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether, TouchingActor) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether::TouchingActor' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether, bIsPlayer) == 0x000008, "Member 'Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether::bIsPlayer' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether, ComponentTouched) == 0x000010, "Member 'Proj_VLA_PS_TaserTether_C_BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether::ComponentTouched' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.BPI_SetNavPainterEnabled
// 0x0001 (0x0001 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled) == 0x000001, "Wrong alignment on Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled) == 0x000001, "Wrong size on Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled, Enabled) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_BPI_SetNavPainterEnabled::Enabled' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.BPI_ImpulseThrow
// 0x002C (0x002C - 0x0000)
struct Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow final
{
public:
	struct FVector                                ThrowVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatorForSpin;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         FuseSpeedScale;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdditiveVector;                                    // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow) == 0x000004, "Wrong alignment on Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow) == 0x00002C, "Wrong size on Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow, ThrowVector) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow::ThrowVector' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow, Force) == 0x00000C, "Member 'Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow::Force' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow, RotatorForSpin) == 0x000010, "Member 'Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow::RotatorForSpin' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow, FuseSpeedScale) == 0x00001C, "Member 'Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow::FuseSpeedScale' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow, AdditiveVector) == 0x000020, "Member 'Proj_VLA_PS_TaserTether_C_BPI_ImpulseThrow::AdditiveVector' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.BPI_SetSimulatePhysics
// 0x0001 (0x0001 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics final
{
public:
	bool                                          PhysicsOn_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics) == 0x000001, "Wrong alignment on Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics) == 0x000001, "Wrong size on Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics, PhysicsOn_) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_BPI_SetSimulatePhysics::PhysicsOn_' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.AttachBeam
// 0x0080 (0x0080 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_AttachBeam final
{
public:
	class AActor*                                 BeamTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Data;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x0020(0x0028)(NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0058(0x0028)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_AttachBeam) == 0x000008, "Wrong alignment on Proj_VLA_PS_TaserTether_C_AttachBeam");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_AttachBeam) == 0x000080, "Wrong size on Proj_VLA_PS_TaserTether_C_AttachBeam");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, BeamTarget) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::BeamTarget' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, Data) == 0x000008, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::Data' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, K2Node_MakeStruct_LightBeamAttachment) == 0x000020, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_AttachBeam, K2Node_MakeStruct_LightBeamAttachment1) == 0x000058, "Member 'Proj_VLA_PS_TaserTether_C_AttachBeam::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.Destructible_Fractured
// 0x0018 (0x0018 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_Destructible_Fractured final
{
public:
	struct FVector                                HitPoint;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitDetection;                                      // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_Destructible_Fractured) == 0x000004, "Wrong alignment on Proj_VLA_PS_TaserTether_C_Destructible_Fractured");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_Destructible_Fractured) == 0x000018, "Wrong size on Proj_VLA_PS_TaserTether_C_Destructible_Fractured");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_Destructible_Fractured, HitPoint) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_Destructible_Fractured::HitPoint' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_Destructible_Fractured, HitDetection) == 0x00000C, "Member 'Proj_VLA_PS_TaserTether_C_Destructible_Fractured::HitDetection' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_ReceiveHit) == 0x000008, "Wrong alignment on Proj_VLA_PS_TaserTether_C_ReceiveHit");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_ReceiveHit) == 0x0000D0, "Wrong size on Proj_VLA_PS_TaserTether_C_ReceiveHit");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, MyComp) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, Other) == 0x000008, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, HitNormal) == 0x000028, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_ReceiveHit, Hit) == 0x000040, "Member 'Proj_VLA_PS_TaserTether_C_ReceiveHit::Hit' has a wrong offset!");

// Function Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C.TriggerElementalPuddles
// 0x00C0 (0x00C0 - 0x0000)
struct Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles final
{
public:
	struct FHitResult                             Temp_struct_Variable;                              // 0x0000(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0090(0x0020)(NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles) == 0x000008, "Wrong alignment on Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles");
static_assert(sizeof(Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles) == 0x0000C0, "Wrong size on Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles, Temp_struct_Variable) == 0x000000, "Member 'Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000090, "Member 'Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles, CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue) == 0x0000BC, "Member 'Proj_VLA_PS_TaserTether_C_TriggerElementalPuddles::CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue' has a wrong offset!");

}

