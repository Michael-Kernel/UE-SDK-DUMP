#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TEDProjectile_Brightside

#include "Basic.hpp"

#include "TEDProjectile_Base_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TEDProjectile_Brightside.TEDProjectile_Brightside_C
// 0x0010 (0x08E0 - 0x08D0)
class ATEDProjectile_Brightside_C final : public ATEDProjectile_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TEDProjectile_Brightside_C;         // 0x08D0(0x0008)(Transient, DuplicateTransient)
	float                                         LoadedAmmo;                                        // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotImpacted;                                       // 0x08DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TEDProjectile_Brightside(int32 EntryPoint);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnBeginExplode();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TEDProjectile_Brightside_C">();
	}
	static class ATEDProjectile_Brightside_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATEDProjectile_Brightside_C>();
	}
};
static_assert(alignof(ATEDProjectile_Brightside_C) == 0x000010, "Wrong alignment on ATEDProjectile_Brightside_C");
static_assert(sizeof(ATEDProjectile_Brightside_C) == 0x0008E0, "Wrong size on ATEDProjectile_Brightside_C");
static_assert(offsetof(ATEDProjectile_Brightside_C, UberGraphFrame_TEDProjectile_Brightside_C) == 0x0008D0, "Member 'ATEDProjectile_Brightside_C::UberGraphFrame_TEDProjectile_Brightside_C' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Brightside_C, LoadedAmmo) == 0x0008D8, "Member 'ATEDProjectile_Brightside_C::LoadedAmmo' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Brightside_C, NotImpacted) == 0x0008DC, "Member 'ATEDProjectile_Brightside_C::NotImpacted' has a wrong offset!");

}

