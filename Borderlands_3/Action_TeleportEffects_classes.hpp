#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_TeleportEffects

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Action_TeleportEffects.Action_TeleportEffects_C
// 0x0018 (0x0160 - 0x0148)
class UAction_TeleportEffects_C final : public UOakAction_CoordinatedEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0148(0x0008)(Transient, DuplicateTransient)
	class AOakCharacter_Player*                   PlayerActor;                                       // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   PlayerController;                                  // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Action_TeleportEffects(int32 EntryPoint);
	void OnEnd(EGbxActionEndState ActionEndState, class AActor* Actor);
	void LockResources();
	void OnBegin(class AActor* Actor);
	void UnlockResources();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Action_TeleportEffects_C">();
	}
	static class UAction_TeleportEffects_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAction_TeleportEffects_C>();
	}
};
static_assert(alignof(UAction_TeleportEffects_C) == 0x000008, "Wrong alignment on UAction_TeleportEffects_C");
static_assert(sizeof(UAction_TeleportEffects_C) == 0x000160, "Wrong size on UAction_TeleportEffects_C");
static_assert(offsetof(UAction_TeleportEffects_C, UberGraphFrame) == 0x000148, "Member 'UAction_TeleportEffects_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAction_TeleportEffects_C, PlayerActor) == 0x000150, "Member 'UAction_TeleportEffects_C::PlayerActor' has a wrong offset!");
static_assert(offsetof(UAction_TeleportEffects_C, PlayerController) == 0x000158, "Member 'UAction_TeleportEffects_C::PlayerController' has a wrong offset!");

}

