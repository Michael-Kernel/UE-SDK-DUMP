#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Siren

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPChar_Siren.BPChar_Siren_C.ExecuteUbergraph_BPChar_Siren
// 0x02C0 (0x02C0 - 0x0000)
struct BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Killed)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x002C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x0038(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable2;                             // 0x0044(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable3;                             // 0x0050(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable4;                             // 0x005C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     Temp_byte_Variable1;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable5;                             // 0x006C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable6;                             // 0x0078(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable7;                             // 0x0084(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable8;                             // 0x0090(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable9;                             // 0x009C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00AC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x00B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable10;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable11;                            // 0x00C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_Event_Material;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bVisible1;                            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bVisible;                             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhaseTranceElementalType                     K2Node_Event_Type;                                 // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select1_Default;                            // 0x00FC(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x0108(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_GetActiveGhostArmElementalType_ReturnValue; // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetFirstPersonMesh_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible1;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select3_Default;                            // 0x0124(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_DamageInstigator;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Damage;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_ComponentBoundEvent_DamageType;             // 0x0148(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_ComponentBoundEvent_DamageSource;           // 0x0150(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_DamagedActor;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_ComponentBoundEvent_Details1;               // 0x0160(0x0060)(ContainsInstancedReference)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue1;                      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue1;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Siren_C*                    K2Node_DynamicCast_AsBPEvent_Hub_Siren;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E3[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility_PhaseTrance*          CallFunc_GetPhaseTranceAbility_Res;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActionSkill_Siren_Phasetrance_C*       K2Node_DynamicCast_AsAction_Skill_Siren_Phasetrance; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoEffect_Quicken_Res;                     // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhaseTranceEffectType                        CallFunc_BreakPhaseTranceEffectData_EffectType;    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceEffectData_DamageCoefficientData; // 0x0200(0x0038)(NoDestructor)
	const class UDamageComponent*                 K2Node_ComponentBoundEvent_Damaged;                // 0x0238(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    K2Node_ComponentBoundEvent_Details;                // 0x0240(0x0068)(ConstParm)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Killed;                         // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue2;              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren) == 0x000008, "Wrong alignment on BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren");
static_assert(sizeof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren) == 0x0002C0, "Wrong size on BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, EntryPoint) == 0x000000, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_bool_Variable) == 0x000018, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_object_Variable) == 0x000020, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_byte_Variable) == 0x000028, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable) == 0x00002C, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable1) == 0x000038, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable2) == 0x000044, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable3) == 0x000050, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable4) == 0x00005C, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_byte_Variable1) == 0x000068, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable5) == 0x00006C, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable6) == 0x000078, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable7) == 0x000084, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable8) == 0x000090, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable9) == 0x00009C, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_bool_Variable1) == 0x0000A8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_float_Variable) == 0x0000AC, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_float_Variable1) == 0x0000B0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable10) == 0x0000B8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable10' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, Temp_struct_Variable11) == 0x0000C8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::Temp_struct_Variable11' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Event_Material) == 0x0000E0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Event_Material' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Select_Default) == 0x0000F0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Event_bInstant) == 0x0000F8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Event_bInstant' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Event_bVisible1) == 0x0000F9, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Event_bVisible1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Event_bVisible) == 0x0000FA, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Event_Type) == 0x0000FB, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Select1_Default) == 0x0000FC, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Select2_Default) == 0x000108, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_GetActiveGhostArmElementalType_ReturnValue) == 0x000114, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_GetActiveGhostArmElementalType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_GetFirstPersonMesh_ReturnValue) == 0x000118, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_GetFirstPersonMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_CustomEvent_bVisible1) == 0x000120, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_CustomEvent_bVisible1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_Select3_Default) == 0x000124, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_CustomEvent_bVisible) == 0x000128, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_CustomEvent_bVisible' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_K2Play_ReturnValue) == 0x000130, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_K2Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_DamageInstigator) == 0x000138, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_Damage) == 0x000140, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_Damage' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_DamageType) == 0x000148, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_DamageSource) == 0x000150, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_DamagedActor) == 0x000158, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_Details1) == 0x000160, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_Details1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_K2Play_ReturnValue1) == 0x0001C0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_K2Play_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_GetObjectClass_ReturnValue) == 0x0001C8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_GetObjectClass_ReturnValue1) == 0x0001D0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_GetObjectClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_DynamicCast_AsBPEvent_Hub_Siren) == 0x0001D8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_DynamicCast_AsBPEvent_Hub_Siren' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_Not_PreBool_ReturnValue1) == 0x0001E1, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_Not_PreBool_ReturnValue2) == 0x0001E2, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_GetPhaseTranceAbility_Res) == 0x0001E8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_GetPhaseTranceAbility_Res' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_DynamicCast_AsAction_Skill_Siren_Phasetrance) == 0x0001F0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_DynamicCast_AsAction_Skill_Siren_Phasetrance' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_DynamicCast_bSuccess1) == 0x0001F8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_DoEffect_Quicken_Res) == 0x0001F9, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_DoEffect_Quicken_Res' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_BreakPhaseTranceEffectData_EffectType) == 0x0001FA, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_BreakPhaseTranceEffectData_EffectType' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_BreakPhaseTranceEffectData_DamageCoefficientData) == 0x000200, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_BreakPhaseTranceEffectData_DamageCoefficientData' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_Damaged) == 0x000238, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_Damaged' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_ComponentBoundEvent_Details) == 0x000240, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_ComponentBoundEvent_Details' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_SwitchEnum1_CmpSuccess) == 0x0002A8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, K2Node_CustomEvent_Killed) == 0x0002A9, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::K2Node_CustomEvent_Killed' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_GetObjectClass_ReturnValue2) == 0x0002B0, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_GetObjectClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren, CallFunc_ClassIsChildOf_ReturnValue) == 0x0002B8, "Member 'BPChar_Siren_C_ExecuteUbergraph_BPChar_Siren::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.PhasegraspEndedAndEnemyKilled
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Siren_C_PhasegraspEndedAndEnemyKilled final
{
public:
	bool                                          Killed;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_PhasegraspEndedAndEnemyKilled) == 0x000001, "Wrong alignment on BPChar_Siren_C_PhasegraspEndedAndEnemyKilled");
static_assert(sizeof(BPChar_Siren_C_PhasegraspEndedAndEnemyKilled) == 0x000001, "Wrong size on BPChar_Siren_C_PhasegraspEndedAndEnemyKilled");
static_assert(offsetof(BPChar_Siren_C_PhasegraspEndedAndEnemyKilled, Killed) == 0x000000, "Member 'BPChar_Siren_C_PhasegraspEndedAndEnemyKilled::Killed' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren
// 0x0070 (0x0070 - 0x0000)
struct BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren final
{
public:
	const class UDamageComponent*                 Damaged;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    Details;                                           // 0x0008(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren) == 0x000008, "Wrong alignment on BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren");
static_assert(sizeof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren) == 0x000070, "Wrong size on BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren, Damaged) == 0x000000, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren::Damaged' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren, Details) == 0x000008, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren::Details' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren
// 0x0088 (0x0088 - 0x0000)
struct BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren) == 0x000008, "Wrong alignment on BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren");
static_assert(sizeof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren) == 0x000088, "Wrong size on BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren, DamageInstigator) == 0x000000, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren::DamageInstigator' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren, Damage) == 0x000008, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren::Damage' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren, DamageType) == 0x000010, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren::DamageType' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren, DamageSource) == 0x000018, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren::DamageSource' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren, DamagedActor) == 0x000020, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren::DamagedActor' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren, Details) == 0x000028, "Member 'BPChar_Siren_C_BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren::Details' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.Handle3rdPersonArmFadeTransition
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Siren_C_Handle3rdPersonArmFadeTransition final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_Handle3rdPersonArmFadeTransition) == 0x000001, "Wrong alignment on BPChar_Siren_C_Handle3rdPersonArmFadeTransition");
static_assert(sizeof(BPChar_Siren_C_Handle3rdPersonArmFadeTransition) == 0x000001, "Wrong size on BPChar_Siren_C_Handle3rdPersonArmFadeTransition");
static_assert(offsetof(BPChar_Siren_C_Handle3rdPersonArmFadeTransition, bVisible) == 0x000000, "Member 'BPChar_Siren_C_Handle3rdPersonArmFadeTransition::bVisible' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.HandleInstant3rdPersonArmFade
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Siren_C_HandleInstant3rdPersonArmFade final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_HandleInstant3rdPersonArmFade) == 0x000001, "Wrong alignment on BPChar_Siren_C_HandleInstant3rdPersonArmFade");
static_assert(sizeof(BPChar_Siren_C_HandleInstant3rdPersonArmFade) == 0x000001, "Wrong size on BPChar_Siren_C_HandleInstant3rdPersonArmFade");
static_assert(offsetof(BPChar_Siren_C_HandleInstant3rdPersonArmFade, bVisible) == 0x000000, "Member 'BPChar_Siren_C_HandleInstant3rdPersonArmFade::bVisible' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.SetArmsElement
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Siren_C_SetArmsElement final
{
public:
	EPhaseTranceElementalType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_SetArmsElement) == 0x000001, "Wrong alignment on BPChar_Siren_C_SetArmsElement");
static_assert(sizeof(BPChar_Siren_C_SetArmsElement) == 0x000001, "Wrong size on BPChar_Siren_C_SetArmsElement");
static_assert(offsetof(BPChar_Siren_C_SetArmsElement, Type) == 0x000000, "Member 'BPChar_Siren_C_SetArmsElement::Type' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.PlayTattooFade
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Siren_C_PlayTattooFade final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_PlayTattooFade) == 0x000001, "Wrong alignment on BPChar_Siren_C_PlayTattooFade");
static_assert(sizeof(BPChar_Siren_C_PlayTattooFade) == 0x000001, "Wrong size on BPChar_Siren_C_PlayTattooFade");
static_assert(offsetof(BPChar_Siren_C_PlayTattooFade, bVisible) == 0x000000, "Member 'BPChar_Siren_C_PlayTattooFade::bVisible' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.Play3rdPersonArmFade
// 0x0002 (0x0002 - 0x0000)
struct BPChar_Siren_C_Play3rdPersonArmFade final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bVisible;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_Play3rdPersonArmFade) == 0x000001, "Wrong alignment on BPChar_Siren_C_Play3rdPersonArmFade");
static_assert(sizeof(BPChar_Siren_C_Play3rdPersonArmFade) == 0x000002, "Wrong size on BPChar_Siren_C_Play3rdPersonArmFade");
static_assert(offsetof(BPChar_Siren_C_Play3rdPersonArmFade, bInstant) == 0x000000, "Member 'BPChar_Siren_C_Play3rdPersonArmFade::bInstant' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_Play3rdPersonArmFade, bVisible) == 0x000001, "Member 'BPChar_Siren_C_Play3rdPersonArmFade::bVisible' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.SetArmsMaterial
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Siren_C_SetArmsMaterial final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_SetArmsMaterial) == 0x000008, "Wrong alignment on BPChar_Siren_C_SetArmsMaterial");
static_assert(sizeof(BPChar_Siren_C_SetArmsMaterial) == 0x000008, "Wrong size on BPChar_Siren_C_SetArmsMaterial");
static_assert(offsetof(BPChar_Siren_C_SetArmsMaterial, Material) == 0x000000, "Member 'BPChar_Siren_C_SetArmsMaterial::Material' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetPhaseTranceAbility
// 0x0020 (0x0020 - 0x0000)
struct BPChar_Siren_C_GetPhaseTranceAbility final
{
public:
	class UOakActionAbility_PhaseTrance*          Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility*                      CallFunc_FindActionAbility_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility_PhaseTrance*          K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_GetPhaseTranceAbility) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetPhaseTranceAbility");
static_assert(sizeof(BPChar_Siren_C_GetPhaseTranceAbility) == 0x000020, "Wrong size on BPChar_Siren_C_GetPhaseTranceAbility");
static_assert(offsetof(BPChar_Siren_C_GetPhaseTranceAbility, Res) == 0x000000, "Member 'BPChar_Siren_C_GetPhaseTranceAbility::Res' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetPhaseTranceAbility, CallFunc_FindActionAbility_ReturnValue) == 0x000008, "Member 'BPChar_Siren_C_GetPhaseTranceAbility::CallFunc_FindActionAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetPhaseTranceAbility, K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance) == 0x000010, "Member 'BPChar_Siren_C_GetPhaseTranceAbility::K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetPhaseTranceAbility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPChar_Siren_C_GetPhaseTranceAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetSirenArmsReference
// 0x0010 (0x0010 - 0x0000)
struct BPChar_Siren_C_GetSirenArmsReference final
{
public:
	class UGbxSkeletalMeshComponent*              Skel_Mesh_3rd;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Skel_Mesh_1st;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetSirenArmsReference) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetSirenArmsReference");
static_assert(sizeof(BPChar_Siren_C_GetSirenArmsReference) == 0x000010, "Wrong size on BPChar_Siren_C_GetSirenArmsReference");
static_assert(offsetof(BPChar_Siren_C_GetSirenArmsReference, Skel_Mesh_3rd) == 0x000000, "Member 'BPChar_Siren_C_GetSirenArmsReference::Skel_Mesh_3rd' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetSirenArmsReference, Skel_Mesh_1st) == 0x000008, "Member 'BPChar_Siren_C_GetSirenArmsReference::Skel_Mesh_1st' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetPhaseCastProjectileComponents
// 0x0018 (0x0018 - 0x0000)
struct BPChar_Siren_C_GetPhaseCastProjectileComponents final
{
public:
	class USkeletalMeshComponent*                 Body;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Head;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GhostArms;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetPhaseCastProjectileComponents) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetPhaseCastProjectileComponents");
static_assert(sizeof(BPChar_Siren_C_GetPhaseCastProjectileComponents) == 0x000018, "Wrong size on BPChar_Siren_C_GetPhaseCastProjectileComponents");
static_assert(offsetof(BPChar_Siren_C_GetPhaseCastProjectileComponents, Body) == 0x000000, "Member 'BPChar_Siren_C_GetPhaseCastProjectileComponents::Body' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetPhaseCastProjectileComponents, Head) == 0x000008, "Member 'BPChar_Siren_C_GetPhaseCastProjectileComponents::Head' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetPhaseCastProjectileComponents, GhostArms) == 0x000010, "Member 'BPChar_Siren_C_GetPhaseCastProjectileComponents::GhostArms' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetSirenGhostArmsComponent
// 0x0010 (0x0010 - 0x0000)
struct BPChar_Siren_C_GetSirenGhostArmsComponent final
{
public:
	class UGbxSkeletalMeshComponent*              Threerd_Person_Mesh;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Onest_Person_Mesh;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetSirenGhostArmsComponent) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetSirenGhostArmsComponent");
static_assert(sizeof(BPChar_Siren_C_GetSirenGhostArmsComponent) == 0x000010, "Wrong size on BPChar_Siren_C_GetSirenGhostArmsComponent");
static_assert(offsetof(BPChar_Siren_C_GetSirenGhostArmsComponent, Threerd_Person_Mesh) == 0x000000, "Member 'BPChar_Siren_C_GetSirenGhostArmsComponent::Threerd_Person_Mesh' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetSirenGhostArmsComponent, Onest_Person_Mesh) == 0x000008, "Member 'BPChar_Siren_C_GetSirenGhostArmsComponent::Onest_Person_Mesh' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.SirenHasAscendantSkill
// 0x0002 (0x0002 - 0x0000)
struct BPChar_Siren_C_SirenHasAscendantSkill final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAbility_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_SirenHasAscendantSkill) == 0x000001, "Wrong alignment on BPChar_Siren_C_SirenHasAscendantSkill");
static_assert(sizeof(BPChar_Siren_C_SirenHasAscendantSkill) == 0x000002, "Wrong size on BPChar_Siren_C_SirenHasAscendantSkill");
static_assert(offsetof(BPChar_Siren_C_SirenHasAscendantSkill, Res) == 0x000000, "Member 'BPChar_Siren_C_SirenHasAscendantSkill::Res' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_SirenHasAscendantSkill, CallFunc_HasAbility_ReturnValue) == 0x000001, "Member 'BPChar_Siren_C_SirenHasAscendantSkill::CallFunc_HasAbility_ReturnValue' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Siren_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_Setup_ReturnValue;                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Siren_C_UserConstructionScript) == 0x000001, "Wrong alignment on BPChar_Siren_C_UserConstructionScript");
static_assert(sizeof(BPChar_Siren_C_UserConstructionScript) == 0x000001, "Wrong size on BPChar_Siren_C_UserConstructionScript");
static_assert(offsetof(BPChar_Siren_C_UserConstructionScript, CallFunc_Setup_ReturnValue) == 0x000000, "Member 'BPChar_Siren_C_UserConstructionScript::CallFunc_Setup_ReturnValue' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetHeadMesh
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Siren_C_GetHeadMesh final
{
public:
	class USkeletalMesh*                          HeadMesh;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetHeadMesh) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetHeadMesh");
static_assert(sizeof(BPChar_Siren_C_GetHeadMesh) == 0x000008, "Wrong size on BPChar_Siren_C_GetHeadMesh");
static_assert(offsetof(BPChar_Siren_C_GetHeadMesh, HeadMesh) == 0x000000, "Member 'BPChar_Siren_C_GetHeadMesh::HeadMesh' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetStillnessOfMindControlledMove
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Siren_C_GetStillnessOfMindControlledMove final
{
public:
	class UClass*                                 Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetStillnessOfMindControlledMove) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetStillnessOfMindControlledMove");
static_assert(sizeof(BPChar_Siren_C_GetStillnessOfMindControlledMove) == 0x000008, "Wrong size on BPChar_Siren_C_GetStillnessOfMindControlledMove");
static_assert(offsetof(BPChar_Siren_C_GetStillnessOfMindControlledMove, Res) == 0x000000, "Member 'BPChar_Siren_C_GetStillnessOfMindControlledMove::Res' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetSoulSapProjectile
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Siren_C_GetSoulSapProjectile final
{
public:
	class UClass*                                 Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetSoulSapProjectile) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetSoulSapProjectile");
static_assert(sizeof(BPChar_Siren_C_GetSoulSapProjectile) == 0x000008, "Wrong size on BPChar_Siren_C_GetSoulSapProjectile");
static_assert(offsetof(BPChar_Siren_C_GetSoulSapProjectile, Res) == 0x000000, "Member 'BPChar_Siren_C_GetSoulSapProjectile::Res' has a wrong offset!");

// Function BPChar_Siren.BPChar_Siren_C.GetPrimaryActionAbility
// 0x0010 (0x0010 - 0x0000)
struct BPChar_Siren_C_GetPrimaryActionAbility final
{
public:
	class UOakActionAbility*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility*                      CallFunc_FindActionAbility_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Siren_C_GetPrimaryActionAbility) == 0x000008, "Wrong alignment on BPChar_Siren_C_GetPrimaryActionAbility");
static_assert(sizeof(BPChar_Siren_C_GetPrimaryActionAbility) == 0x000010, "Wrong size on BPChar_Siren_C_GetPrimaryActionAbility");
static_assert(offsetof(BPChar_Siren_C_GetPrimaryActionAbility, ReturnValue) == 0x000000, "Member 'BPChar_Siren_C_GetPrimaryActionAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Siren_C_GetPrimaryActionAbility, CallFunc_FindActionAbility_ReturnValue) == 0x000008, "Member 'BPChar_Siren_C_GetPrimaryActionAbility::CallFunc_FindActionAbility_ReturnValue' has a wrong offset!");

}

