#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_All_SkillActive_PulseFireNova

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Ability_AnointParent_SkillActive_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_All_SkillActive_PulseFireNova.Ability_All_SkillActive_PulseFireNova_C
// 0x0020 (0x0238 - 0x0218)
class UAbility_All_SkillActive_PulseFireNova_C final : public UAbility_AnointParent_SkillActive_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Ability_All_SkillActive_PulseFireNova_C; // 0x0218(0x0008)(Transient, DuplicateTransient)
	struct FTimerHandle                           NovaTimer;                                         // 0x0220(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UClass*                                 OverrideDamageSource;                              // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChargeBasedSkill;                                  // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Ability_All_SkillActive_PulseFireNova(int32 EntryPoint);
	void TriggerNova();
	void AnointTriggerEffect(bool TriggerEffect, bool* Res);
	void IsChargeBasedSkill(const class UObject* ActionSkill, bool* Res);
	void AnointRemoveEffect();
	void AnointOnActionSkillActivated(class UOakActionAbility* ActionAbility, bool* Res);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_All_SkillActive_PulseFireNova_C">();
	}
	static class UAbility_All_SkillActive_PulseFireNova_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_All_SkillActive_PulseFireNova_C>();
	}
};
static_assert(alignof(UAbility_All_SkillActive_PulseFireNova_C) == 0x000008, "Wrong alignment on UAbility_All_SkillActive_PulseFireNova_C");
static_assert(sizeof(UAbility_All_SkillActive_PulseFireNova_C) == 0x000238, "Wrong size on UAbility_All_SkillActive_PulseFireNova_C");
static_assert(offsetof(UAbility_All_SkillActive_PulseFireNova_C, UberGraphFrame_Ability_All_SkillActive_PulseFireNova_C) == 0x000218, "Member 'UAbility_All_SkillActive_PulseFireNova_C::UberGraphFrame_Ability_All_SkillActive_PulseFireNova_C' has a wrong offset!");
static_assert(offsetof(UAbility_All_SkillActive_PulseFireNova_C, NovaTimer) == 0x000220, "Member 'UAbility_All_SkillActive_PulseFireNova_C::NovaTimer' has a wrong offset!");
static_assert(offsetof(UAbility_All_SkillActive_PulseFireNova_C, OverrideDamageSource) == 0x000228, "Member 'UAbility_All_SkillActive_PulseFireNova_C::OverrideDamageSource' has a wrong offset!");
static_assert(offsetof(UAbility_All_SkillActive_PulseFireNova_C, ChargeBasedSkill) == 0x000230, "Member 'UAbility_All_SkillActive_PulseFireNova_C::ChargeBasedSkill' has a wrong offset!");

}

