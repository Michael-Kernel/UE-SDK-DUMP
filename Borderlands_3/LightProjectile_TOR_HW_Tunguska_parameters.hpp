#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TOR_HW_Tunguska

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TOR_HW_Tunguska.LightProjectile_TOR_HW_Tunguska_C.OnImpact
// 0x02F8 (0x02F8 - 0x0000)
struct LightProjectile_TOR_HW_Tunguska_C_OnImpact final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         DamageScale;                                       // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpecialRadius;                                     // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ProjectileSource;                                  // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightProjectile*                       MyProjectile;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetAttitudeTowardActor_ReturnValue;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue1;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0180(0x0020)(NoDestructor)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01B8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_TOR_HW_Tunguska_C_OnImpact) == 0x000008, "Wrong alignment on LightProjectile_TOR_HW_Tunguska_C_OnImpact");
static_assert(sizeof(LightProjectile_TOR_HW_Tunguska_C_OnImpact) == 0x0002F8, "Wrong size on LightProjectile_TOR_HW_Tunguska_C_OnImpact");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, Projectile) == 0x000000, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, Hit) == 0x000008, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, DamageScale) == 0x000098, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::DamageScale' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, SpecialRadius) == 0x00009C, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::SpecialRadius' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, ProjectileSource) == 0x0000A0, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::ProjectileSource' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, MyProjectile) == 0x0000A8, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::MyProjectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B0, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B1, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_FaceIndex) == 0x000114, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_TraceStart) == 0x000118, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BreakHitResult_TraceEnd) == 0x000124, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetSource_ReturnValue) == 0x000130, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetAttitudeTowardActor_ReturnValue) == 0x000138, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetAttitudeTowardActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_Add_VectorVector_ReturnValue) == 0x00013C, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000148, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000149, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_Add_VectorVector_ReturnValue1) == 0x00014C, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_BooleanOR_ReturnValue) == 0x000158, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetDataTableValue_OutValue) == 0x00015C, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetDataTableValue_ReturnValue) == 0x000160, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetDataTableValue_OutValue1) == 0x000164, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetDataTableValue_ReturnValue1) == 0x000168, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetSource_ReturnValue1) == 0x000170, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetSource_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetModifierValue_ReturnValue) == 0x000178, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000180, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetModifierType_ReturnValue) == 0x0001A0, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_GetInstigator_ReturnValue) == 0x0001A8, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001B0, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_HW_Tunguska_C_OnImpact, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001B8, "Member 'LightProjectile_TOR_HW_Tunguska_C_OnImpact::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

