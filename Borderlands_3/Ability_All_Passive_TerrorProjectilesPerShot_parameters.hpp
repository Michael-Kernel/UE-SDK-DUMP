#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_All_Passive_TerrorProjectilesPerShot

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Ability_All_Passive_TerrorProjectilesPerShot.Ability_All_Passive_TerrorProjectilesPerShot_C.ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot
// 0x0108 (0x0108 - 0x0000)
struct Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPChar_Player_C*                       K2Node_DynamicCast_AsBPChar_Player;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilitySpec                        K2Node_MakeStruct_GbxAbilitySpec;                  // 0x0028(0x0010)(NoDestructor)
	class UGbxAbility*                            CallFunc_AddAbility_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_CustomEvent_EventWeapon;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_CustomEvent_NewWeapon;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_CustomEvent_LastWeapon;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AWeapon* EventWeapon)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AWeapon* NewWeapon, class AWeapon* LastWeapon)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0078(0x0028)(NoDestructor)
	class AWeapon*                                K2Node_CustomEvent_InWeapon;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponFireProjectileComponent*         CallFunc_GetFiringComponent_FireComponent;         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxAttributeModifierActionExecOutput         CallFunc_ApplyAttributeEffect_ModifierActionResult; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeModifierHandle            CallFunc_ApplyAttributeEffect_ReturnValue;         // 0x00B8(0x0010)()
	bool                                          CallFunc_RemoveAttributeModifier_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1; // 0x00D0(0x0028)(NoDestructor)
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue1;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateAttributeInitializer_ReturnValue; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAbility_ReturnValue;                   // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot) == 0x000008, "Wrong alignment on Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot");
static_assert(sizeof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot) == 0x000108, "Wrong size on Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, EntryPoint) == 0x000000, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_GetAbilityOwner_ReturnValue) == 0x000008, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_DynamicCast_AsBPChar_Player) == 0x000018, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_DynamicCast_AsBPChar_Player' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_MakeStruct_GbxAbilitySpec) == 0x000028, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_MakeStruct_GbxAbilitySpec' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_AddAbility_ReturnValue) == 0x000038, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_AddAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_CustomEvent_EventWeapon) == 0x000040, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_CustomEvent_EventWeapon' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_CustomEvent_NewWeapon) == 0x000048, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_CustomEvent_NewWeapon' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_CustomEvent_LastWeapon) == 0x000050, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_CustomEvent_LastWeapon' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_CreateDelegate_OutputDelegate1) == 0x000068, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000078, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_CustomEvent_InWeapon) == 0x0000A0, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_CustomEvent_InWeapon' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_GetFiringComponent_FireComponent) == 0x0000A8, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_GetFiringComponent_FireComponent' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_ApplyAttributeEffect_ModifierActionResult) == 0x0000B0, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_ApplyAttributeEffect_ModifierActionResult' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_ApplyAttributeEffect_ReturnValue) == 0x0000B8, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_ApplyAttributeEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_RemoveAttributeModifier_ReturnValue) == 0x0000C8, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_RemoveAttributeModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_SwitchEnum_CmpSuccess) == 0x0000C9, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_IsValid_ReturnValue) == 0x0000CA, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1) == 0x0000D0, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_GetAbilityOwner_ReturnValue1) == 0x0000F8, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_GetAbilityOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_EvaluateAttributeInitializer_ReturnValue) == 0x000100, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_EvaluateAttributeInitializer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_HasAbility_ReturnValue) == 0x000104, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_HasAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000105, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

// Function Ability_All_Passive_TerrorProjectilesPerShot.Ability_All_Passive_TerrorProjectilesPerShot_C.AddProjectilePerShot
// 0x0008 (0x0008 - 0x0000)
struct Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot final
{
public:
	class AWeapon*                                InWeapon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot) == 0x000008, "Wrong alignment on Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot");
static_assert(sizeof(Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot) == 0x000008, "Wrong size on Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot, InWeapon) == 0x000000, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_AddProjectilePerShot::InWeapon' has a wrong offset!");

// Function Ability_All_Passive_TerrorProjectilesPerShot.Ability_All_Passive_TerrorProjectilesPerShot_C.GetFiringComponent
// 0x0018 (0x0018 - 0x0000)
struct Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent final
{
public:
	class AWeapon*                                InWeapon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponFireProjectileComponent*         FireComponent;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponFireProjectileComponent*         CallFunc_GetUseModeComponentByClass_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent) == 0x000008, "Wrong alignment on Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent");
static_assert(sizeof(Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent) == 0x000018, "Wrong size on Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent, InWeapon) == 0x000000, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent::InWeapon' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent, FireComponent) == 0x000008, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent::FireComponent' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent, CallFunc_GetUseModeComponentByClass_ReturnValue) == 0x000010, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_GetFiringComponent::CallFunc_GetUseModeComponentByClass_ReturnValue' has a wrong offset!");

// Function Ability_All_Passive_TerrorProjectilesPerShot.Ability_All_Passive_TerrorProjectilesPerShot_C.WeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged final
{
public:
	class AWeapon*                                NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                LastWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged) == 0x000008, "Wrong alignment on Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged");
static_assert(sizeof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged) == 0x000010, "Wrong size on Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged, NewWeapon) == 0x000000, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged, LastWeapon) == 0x000008, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponChanged::LastWeapon' has a wrong offset!");

// Function Ability_All_Passive_TerrorProjectilesPerShot.Ability_All_Passive_TerrorProjectilesPerShot_C.WeaponUsed
// 0x0008 (0x0008 - 0x0000)
struct Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed final
{
public:
	class AWeapon*                                EventWeapon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed) == 0x000008, "Wrong alignment on Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed");
static_assert(sizeof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed) == 0x000008, "Wrong size on Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed");
static_assert(offsetof(Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed, EventWeapon) == 0x000000, "Member 'Ability_All_Passive_TerrorProjectilesPerShot_C_WeaponUsed::EventWeapon' has a wrong offset!");

}

