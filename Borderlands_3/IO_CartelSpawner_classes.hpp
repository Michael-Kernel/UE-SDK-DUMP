#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_CartelSpawner

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "EMapNames_structs.hpp"
#include "Engine_structs.hpp"
#include "ECartelSpawnerType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_CartelSpawner.IO_CartelSpawner_C
// 0x01C0 (0x0710 - 0x0550)
class AIO_CartelSpawner_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpawnOptionData*                       CartelSpawnOption;                                 // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTimeTillSpawn;                                  // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpawnerComponent*                      OwnerSpawnerComponent;                             // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bNextKillSquadCanSpawnLt;                          // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnvQueryParams                        EQS_CartelSpawnLocs;                               // 0x0580(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FVector>                        PotentialCartelSpawnLocs;                          // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                BackupSpawnFXLocation;                             // 0x0648(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMapNames, class USpawnOptionData*>      MapNameToOptions_Thugs;                            // 0x0658(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EMapNames, class USpawnOptionData*>      MapNameToOptions_Underbosses;                      // 0x06A8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class AOakSpawner*>                    CreatedOakSpawners;                                // 0x06F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         OutstandingSpawnersBeforeCleanup;                  // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_IO_CartelSpawner(int32 EntryPoint);
	void OnSpawned_Underboss(class ASpawner* Spawner, class AActor* Actor);
	void OnSpawned_ThugSpawner(class ASpawner* Spawner, class AActor* Actor);
	void BeginFailsafeTimer();
	void OnSuspend_Thug(class ASpawner* Spawner, class AActor* Actor);
	void OnSuspend_Underboss(class ASpawner* Spawner, class AActor* Actor);
	void OnAllDied_ThugSpawner(class ASpawner* Spawner);
	void OnAllDied_Underboss(class ASpawner* Spawner);
	void DoStartupPresentation();
	void StartAsyncSpawnTrace();
	void SpawnUnderbossWithAllies();
	void SpawnCartelKillSquad();
	void ReceiveBeginPlay();
	void GbxAsyncRequest_Hit_71E9269F48E315C85EAA629E6FCD3C50(const struct FHitResult& Result);
	void GbxAsyncRequest_Miss_71E9269F48E315C85EAA629E6FCD3C50(const struct FHitResult& Result);
	void UserConstructionScript();
	void UpdateCartelMission();
	void BeginCleanup();
	void SpawnNewKillSquadMember(class USpawnOptionData* SpawnOptions, ECartelSpawnerType SpawnType);
	void InitCartelIO();
	void SpawnCartelFX(const struct FVector& BackupFX_Location);
	void CheckForSpawnCollisions(const struct FVector& CapsulePos, bool* CanSpawn);
	void HandleTestmapEnemySpawns(ECartelSpawnerType SpawnType);
	void SetSpawnedEnemyProvoke(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_CartelSpawner_C">();
	}
	static class AIO_CartelSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_CartelSpawner_C>();
	}
};
static_assert(alignof(AIO_CartelSpawner_C) == 0x000008, "Wrong alignment on AIO_CartelSpawner_C");
static_assert(sizeof(AIO_CartelSpawner_C) == 0x000710, "Wrong size on AIO_CartelSpawner_C");
static_assert(offsetof(AIO_CartelSpawner_C, UberGraphFrame) == 0x000550, "Member 'AIO_CartelSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, DefaultSceneRoot) == 0x000558, "Member 'AIO_CartelSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, CartelSpawnOption) == 0x000560, "Member 'AIO_CartelSpawner_C::CartelSpawnOption' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, MaxTimeTillSpawn) == 0x000568, "Member 'AIO_CartelSpawner_C::MaxTimeTillSpawn' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, OwnerSpawnerComponent) == 0x000570, "Member 'AIO_CartelSpawner_C::OwnerSpawnerComponent' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, bNextKillSquadCanSpawnLt) == 0x000578, "Member 'AIO_CartelSpawner_C::bNextKillSquadCanSpawnLt' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, EQS_CartelSpawnLocs) == 0x000580, "Member 'AIO_CartelSpawner_C::EQS_CartelSpawnLocs' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, PotentialCartelSpawnLocs) == 0x000638, "Member 'AIO_CartelSpawner_C::PotentialCartelSpawnLocs' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, BackupSpawnFXLocation) == 0x000648, "Member 'AIO_CartelSpawner_C::BackupSpawnFXLocation' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, MapNameToOptions_Thugs) == 0x000658, "Member 'AIO_CartelSpawner_C::MapNameToOptions_Thugs' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, MapNameToOptions_Underbosses) == 0x0006A8, "Member 'AIO_CartelSpawner_C::MapNameToOptions_Underbosses' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, CreatedOakSpawners) == 0x0006F8, "Member 'AIO_CartelSpawner_C::CreatedOakSpawners' has a wrong offset!");
static_assert(offsetof(AIO_CartelSpawner_C, OutstandingSpawnersBeforeCleanup) == 0x000708, "Member 'AIO_CartelSpawner_C::OutstandingSpawnersBeforeCleanup' has a wrong offset!");

}

