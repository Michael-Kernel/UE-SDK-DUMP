#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TOR_SG_Balrog

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TOR_SG_Balrog.LightProjectile_TOR_SG_Balrog_C.Boom
// 0x0098 (0x0098 - 0x0000)
struct LightProjectile_TOR_SG_Balrog_C_Boom final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0008(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_TOR_SG_Balrog_C_Boom) == 0x000008, "Wrong alignment on LightProjectile_TOR_SG_Balrog_C_Boom");
static_assert(sizeof(LightProjectile_TOR_SG_Balrog_C_Boom) == 0x000098, "Wrong size on LightProjectile_TOR_SG_Balrog_C_Boom");
static_assert(offsetof(LightProjectile_TOR_SG_Balrog_C_Boom, Projectile) == 0x000000, "Member 'LightProjectile_TOR_SG_Balrog_C_Boom::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Balrog_C_Boom, Temp_struct_Variable) == 0x000008, "Member 'LightProjectile_TOR_SG_Balrog_C_Boom::Temp_struct_Variable' has a wrong offset!");

// Function LightProjectile_TOR_SG_Balrog.LightProjectile_TOR_SG_Balrog_C.OnLifetimeExpired
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired) == 0x000008, "Wrong size on LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_TOR_SG_Balrog_C_OnLifetimeExpired::Projectile' has a wrong offset!");

}

