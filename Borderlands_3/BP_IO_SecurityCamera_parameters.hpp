#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IO_SecurityCamera

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_IO_SecurityCamera.BP_IO_SecurityCamera_C.LerpToTarget
// 0x0138 (0x0138 - 0x0000)
struct BP_IO_SecurityCamera_C_LerpToTarget final
{
public:
	float                                         TickDelta;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetRotation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0014(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x002C(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0038(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_DynamicCast_AsActor_Component;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00EC(0x000C)(IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue1;        // 0x0128(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_SecurityCamera_C_LerpToTarget) == 0x000008, "Wrong alignment on BP_IO_SecurityCamera_C_LerpToTarget");
static_assert(sizeof(BP_IO_SecurityCamera_C_LerpToTarget) == 0x000138, "Wrong size on BP_IO_SecurityCamera_C_LerpToTarget");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, TickDelta) == 0x000000, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::TickDelta' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, TargetRotation) == 0x000004, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000014, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_RLerp_ReturnValue) == 0x00002C, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000038, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x0000C8, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D4, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, K2Node_DynamicCast_AsActor_Component) == 0x0000E0, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::K2Node_DynamicCast_AsActor_Component' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000EC, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, K2Node_DynamicCast_AsActor) == 0x0000F8, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, K2Node_DynamicCast_bSuccess1) == 0x000100, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000104, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000110, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x00011C, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_LerpToTarget, CallFunc_Conv_VectorToRotator_ReturnValue1) == 0x000128, "Member 'BP_IO_SecurityCamera_C_LerpToTarget::CallFunc_Conv_VectorToRotator_ReturnValue1' has a wrong offset!");

// Function BP_IO_SecurityCamera.BP_IO_SecurityCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_IO_SecurityCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_SecurityCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_IO_SecurityCamera_C_ReceiveTick");
static_assert(sizeof(BP_IO_SecurityCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_IO_SecurityCamera_C_ReceiveTick");
static_assert(offsetof(BP_IO_SecurityCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_IO_SecurityCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_IO_SecurityCamera.BP_IO_SecurityCamera_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera
// 0x00B0 (0x00B0 - 0x0000)
struct BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera) == 0x000008, "Wrong alignment on BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera");
static_assert(sizeof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera) == 0x0000B0, "Wrong size on BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OverlappedComponent) == 0x000000, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OtherActor) == 0x000008, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OtherComp) == 0x000010, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OtherBodyIndex) == 0x000018, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, bFromSweep) == 0x00001C, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, SweepResult) == 0x000020, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::SweepResult' has a wrong offset!");

// Function BP_IO_SecurityCamera.BP_IO_SecurityCamera_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera) == 0x000008, "Wrong alignment on BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera");
static_assert(sizeof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera) == 0x000020, "Wrong size on BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OverlappedComponent) == 0x000000, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OtherActor) == 0x000008, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OtherComp) == 0x000010, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera, OtherBodyIndex) == 0x000018, "Member 'BP_IO_SecurityCamera_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BP_IO_SecurityCamera::OtherBodyIndex' has a wrong offset!");

// Function BP_IO_SecurityCamera.BP_IO_SecurityCamera_C.ExecuteUbergraph_BP_IO_SecurityCamera
// 0x0170 (0x0170 - 0x0000)
struct BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_PlayExplosion_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EIsPlayerExecOutput                           CallFunc_BranchOnIsPlayer_Branches;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIsPlayerExecOutput                           CallFunc_BranchOnIsPlayer_Branches1;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0148(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera) == 0x000008, "Wrong alignment on BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera");
static_assert(sizeof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera) == 0x000170, "Wrong size on BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, EntryPoint) == 0x000000, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_PlayExplosion_ReturnValue) == 0x000020, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_PlayExplosion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000028, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OtherActor1) == 0x000030, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OtherComp1) == 0x000038, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000040, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_BranchOnIsPlayer_Branches) == 0x0000D8, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_BranchOnIsPlayer_Branches' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000E0, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_SwitchEnum_CmpSuccess) == 0x0000F0, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_Array_Length_ReturnValue1) == 0x000104, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000110, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OtherActor) == 0x000118, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OtherComp) == 0x000120, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000128, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_BranchOnIsPlayer_Branches1) == 0x00012C, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_BranchOnIsPlayer_Branches1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_SwitchEnum1_CmpSuccess) == 0x00012D, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00012E, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00012F, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000130, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x000131, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_CreateDelegate_OutputDelegate) == 0x000138, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000148, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, Temp_int_Loop_Counter_Variable) == 0x000150, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000158, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, CallFunc_BooleanAND_ReturnValue) == 0x00015C, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_DynamicCast_AsOak_Character_Player) == 0x000160, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_IO_SecurityCamera_C_ExecuteUbergraph_BP_IO_SecurityCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_IO_SecurityCamera.BP_IO_SecurityCamera_C.CameraHasFoundANewTarget__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature final
{
public:
	class AOakCharacter_Player*                   PlayerTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature) == 0x000008, "Wrong alignment on BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature");
static_assert(sizeof(BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature) == 0x000008, "Wrong size on BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature");
static_assert(offsetof(BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature, PlayerTarget) == 0x000000, "Member 'BP_IO_SecurityCamera_C_CameraHasFoundANewTarget__DelegateSignature::PlayerTarget' has a wrong offset!");

}

