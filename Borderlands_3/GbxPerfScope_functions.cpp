#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxPerfScope

#include "Basic.hpp"

#include "GbxPerfScope_classes.hpp"
#include "GbxPerfScope_parameters.hpp"


namespace SDK
{

// Function GbxPerfScope.GbxPerfScopePerfSampleData.GetMapGPUHotspots
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSamples                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxPerfScopePerfSampleData::GetMapGPUHotspots(class UObject* WorldContext, int32 NumSamples, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxPerfScopePerfSampleData", "GetMapGPUHotspots");

	Params::GbxPerfScopePerfSampleData_GetMapGPUHotspots Parms{};

	Parms.WorldContext = WorldContext;
	Parms.NumSamples = NumSamples;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

