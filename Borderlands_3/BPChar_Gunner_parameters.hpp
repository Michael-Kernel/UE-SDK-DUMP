#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Gunner

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPChar_Gunner.BPChar_Gunner_C.ExecuteUbergraph_BPChar_Gunner
// 0x0010 (0x0010 - 0x0000)
struct BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible1;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Visible;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Event_Template;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner) == 0x000008, "Wrong alignment on BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner");
static_assert(sizeof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner) == 0x000010, "Wrong size on BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner");
static_assert(offsetof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner, EntryPoint) == 0x000000, "Member 'BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner, K2Node_Event_Visible1) == 0x000004, "Member 'BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner::K2Node_Event_Visible1' has a wrong offset!");
static_assert(offsetof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner, K2Node_Event_Visible) == 0x000006, "Member 'BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner, K2Node_Event_Template) == 0x000008, "Member 'BPChar_Gunner_C_ExecuteUbergraph_BPChar_Gunner::K2Node_Event_Template' has a wrong offset!");

// Function BPChar_Gunner.BPChar_Gunner_C.SetGunnerHologramTemplate
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Gunner_C_SetGunnerHologramTemplate final
{
public:
	class UParticleSystem*                        Template;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Gunner_C_SetGunnerHologramTemplate) == 0x000008, "Wrong alignment on BPChar_Gunner_C_SetGunnerHologramTemplate");
static_assert(sizeof(BPChar_Gunner_C_SetGunnerHologramTemplate) == 0x000008, "Wrong size on BPChar_Gunner_C_SetGunnerHologramTemplate");
static_assert(offsetof(BPChar_Gunner_C_SetGunnerHologramTemplate, Template) == 0x000000, "Member 'BPChar_Gunner_C_SetGunnerHologramTemplate::Template' has a wrong offset!");

// Function BPChar_Gunner.BPChar_Gunner_C.SetGunnerHologramVisible
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Gunner_C_SetGunnerHologramVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Gunner_C_SetGunnerHologramVisible) == 0x000001, "Wrong alignment on BPChar_Gunner_C_SetGunnerHologramVisible");
static_assert(sizeof(BPChar_Gunner_C_SetGunnerHologramVisible) == 0x000001, "Wrong size on BPChar_Gunner_C_SetGunnerHologramVisible");
static_assert(offsetof(BPChar_Gunner_C_SetGunnerHologramVisible, Visible) == 0x000000, "Member 'BPChar_Gunner_C_SetGunnerHologramVisible::Visible' has a wrong offset!");

// Function BPChar_Gunner.BPChar_Gunner_C.SetGunnerDeviceVisible
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Gunner_C_SetGunnerDeviceVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Gunner_C_SetGunnerDeviceVisible) == 0x000001, "Wrong alignment on BPChar_Gunner_C_SetGunnerDeviceVisible");
static_assert(sizeof(BPChar_Gunner_C_SetGunnerDeviceVisible) == 0x000001, "Wrong size on BPChar_Gunner_C_SetGunnerDeviceVisible");
static_assert(offsetof(BPChar_Gunner_C_SetGunnerDeviceVisible, Visible) == 0x000000, "Member 'BPChar_Gunner_C_SetGunnerDeviceVisible::Visible' has a wrong offset!");

// Function BPChar_Gunner.BPChar_Gunner_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Gunner_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_Setup_ReturnValue;                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Gunner_C_UserConstructionScript) == 0x000001, "Wrong alignment on BPChar_Gunner_C_UserConstructionScript");
static_assert(sizeof(BPChar_Gunner_C_UserConstructionScript) == 0x000001, "Wrong size on BPChar_Gunner_C_UserConstructionScript");
static_assert(offsetof(BPChar_Gunner_C_UserConstructionScript, CallFunc_Setup_ReturnValue) == 0x000000, "Member 'BPChar_Gunner_C_UserConstructionScript::CallFunc_Setup_ReturnValue' has a wrong offset!");

// Function BPChar_Gunner.BPChar_Gunner_C.GetHeadMesh
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Gunner_C_GetHeadMesh final
{
public:
	class USkeletalMesh*                          HeadMesh;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Gunner_C_GetHeadMesh) == 0x000008, "Wrong alignment on BPChar_Gunner_C_GetHeadMesh");
static_assert(sizeof(BPChar_Gunner_C_GetHeadMesh) == 0x000008, "Wrong size on BPChar_Gunner_C_GetHeadMesh");
static_assert(offsetof(BPChar_Gunner_C_GetHeadMesh, HeadMesh) == 0x000000, "Member 'BPChar_Gunner_C_GetHeadMesh::HeadMesh' has a wrong offset!");

// Function BPChar_Gunner.BPChar_Gunner_C.GetPrimaryActionAbility
// 0x0010 (0x0010 - 0x0000)
struct BPChar_Gunner_C_GetPrimaryActionAbility final
{
public:
	class UOakActionAbility*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility*                      CallFunc_FindActionAbility_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Gunner_C_GetPrimaryActionAbility) == 0x000008, "Wrong alignment on BPChar_Gunner_C_GetPrimaryActionAbility");
static_assert(sizeof(BPChar_Gunner_C_GetPrimaryActionAbility) == 0x000010, "Wrong size on BPChar_Gunner_C_GetPrimaryActionAbility");
static_assert(offsetof(BPChar_Gunner_C_GetPrimaryActionAbility, ReturnValue) == 0x000000, "Member 'BPChar_Gunner_C_GetPrimaryActionAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Gunner_C_GetPrimaryActionAbility, CallFunc_FindActionAbility_ReturnValue) == 0x000008, "Member 'BPChar_Gunner_C_GetPrimaryActionAbility::CallFunc_FindActionAbility_ReturnValue' has a wrong offset!");

}

