#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryAbility

#include "Basic.hpp"

#include "BP_InventoryAbility_classes.hpp"
#include "BP_InventoryAbility_parameters.hpp"


namespace SDK
{

// Function BP_InventoryAbility.BP_InventoryAbility_C.ExecuteUbergraph_BP_InventoryAbility
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryAbility_C::ExecuteUbergraph_BP_InventoryAbility(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryAbility_C", "ExecuteUbergraph_BP_InventoryAbility");

	Params::BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryAbility.BP_InventoryAbility_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UBP_InventoryAbility_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryAbility_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryAbility.BP_InventoryAbility_C.CalculateAbilityState
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGbxAbilityState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EGbxAbilityState UBP_InventoryAbility_C::CalculateAbilityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryAbility_C", "CalculateAbilityState");

	Params::BP_InventoryAbility_C_CalculateAbilityState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

