#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_ClaptrapBreach

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "EnumState_ClaptrapBreach_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_ClaptrapBreach.IO_ClaptrapBreach_C
// 0x0078 (0x05C8 - 0x0550)
class AIO_ClaptrapBreach_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        ClaptrapHack;                                      // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CautionSign;                                       // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AirSuck;                                           // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Patch;                                             // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EnumState_ClaptrapBreach                      BreachState;                                       // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxLevelSequenceActor*                 BreachSequence;                                    // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 Audio_BreachLoop;                                  // 0x05A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UGbxCondition*                          Cond_BreachState_NewEnumerator1;                   // 0x05B8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_BreachState_NewEnumerator2;                   // 0x05C0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void OnFailed_1A4C06044D4AD7ECBEF6A3921ED51522();
	void OnCompleted_1A4C06044D4AD7ECBEF6A3921ED51522();
	void OnAnimEnd_C2390F064F334D969D8D17AACD6823E6();
	void OnAllActorsArrived_1A4C06044D4AD7ECBEF6A3921ED51522();
	void OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522(class AActor* Actor);
	void OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522(class AActor* Actor);
	void OnEnd_C2390F064F334D969D8D17AACD6823E6(EGbxActionEndState EndState, class AActor* Actor);
	void __UserState_BreachState_0(bool bFromLoad);
	void ReceiveBeginPlay();
	void __UserState_BreachState_2(bool bFromLoad);
	void __UserState_BreachState_1(bool bFromLoad);
	void OnCompletedLevelSequence();
	void ExecuteUbergraph_IO_ClaptrapBreach(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_ClaptrapBreach_C">();
	}
	static class AIO_ClaptrapBreach_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_ClaptrapBreach_C>();
	}
};
static_assert(alignof(AIO_ClaptrapBreach_C) == 0x000008, "Wrong alignment on AIO_ClaptrapBreach_C");
static_assert(sizeof(AIO_ClaptrapBreach_C) == 0x0005C8, "Wrong size on AIO_ClaptrapBreach_C");
static_assert(offsetof(AIO_ClaptrapBreach_C, UberGraphFrame) == 0x000550, "Member 'AIO_ClaptrapBreach_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, ClaptrapHack) == 0x000558, "Member 'AIO_ClaptrapBreach_C::ClaptrapHack' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, CautionSign) == 0x000560, "Member 'AIO_ClaptrapBreach_C::CautionSign' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, Arrow) == 0x000568, "Member 'AIO_ClaptrapBreach_C::Arrow' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, AirSuck) == 0x000570, "Member 'AIO_ClaptrapBreach_C::AirSuck' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, Plane) == 0x000578, "Member 'AIO_ClaptrapBreach_C::Plane' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, Patch) == 0x000580, "Member 'AIO_ClaptrapBreach_C::Patch' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, DefaultSceneRoot) == 0x000588, "Member 'AIO_ClaptrapBreach_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, BreachState) == 0x000590, "Member 'AIO_ClaptrapBreach_C::BreachState' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, BreachSequence) == 0x000598, "Member 'AIO_ClaptrapBreach_C::BreachSequence' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, Audio_BreachLoop) == 0x0005A0, "Member 'AIO_ClaptrapBreach_C::Audio_BreachLoop' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, Cond_BreachState_NewEnumerator1) == 0x0005B8, "Member 'AIO_ClaptrapBreach_C::Cond_BreachState_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_ClaptrapBreach_C, Cond_BreachState_NewEnumerator2) == 0x0005C0, "Member 'AIO_ClaptrapBreach_C::Cond_BreachState_NewEnumerator2' has a wrong offset!");

}

