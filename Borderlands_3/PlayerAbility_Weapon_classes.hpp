#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAbility_Weapon

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerAbility_Weapon.PlayerAbility_Weapon_C
// 0x0008 (0x0138 - 0x0130)
class UPlayerAbility_Weapon_C final : public UOakCharacterInputAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0130(0x0008)(Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_PlayerAbility_Weapon(int32 EntryPoint);
	void OnPaused();
	void GbxInpActEvt_InputAction_Discrete_PreToggleWeaponMode_K2Node_GbxInputActionEvent_Discrete_15(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_SelectWeapon4_K2Node_GbxInputActionEvent_Discrete_16(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_SelectWeapon3_K2Node_GbxInputActionEvent_Discrete_17(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_SelectWeapon2_K2Node_GbxInputActionEvent_Discrete_18(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_SelectWeapon1_K2Node_GbxInputActionEvent_Discrete_19(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_NextWeapon_K2Node_GbxInputActionEvent_Discrete_20(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_PrevWeapon_K2Node_GbxInputActionEvent_Discrete_21(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_ToggleWeaponMode_K2Node_GbxInputActionEvent_Discrete_22(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_DropWeapon_K2Node_GbxInputActionEvent_Discrete_23(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_Grenade_K2Node_GbxInputActionEvent_Discrete_24(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_Reload_K2Node_GbxInputActionEvent_Discrete_25(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_Zoom_K2Node_GbxInputActionEvent_Discrete_26(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_Zoom_K2Node_GbxInputActionEvent_Discrete_27(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_Fire_K2Node_GbxInputActionEvent_Discrete_28(class UGbxInputActionData_Discrete* Action);
	void GbxInpActEvt_InputAction_Discrete_Fire_K2Node_GbxInputActionEvent_Discrete_29(class UGbxInputActionData_Discrete* Action);
	void QuickSelectWeapon(class UInventorySlotData* InvSlot, class UWeaponSlotData* WeaponSlot);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerAbility_Weapon_C">();
	}
	static class UPlayerAbility_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerAbility_Weapon_C>();
	}
};
static_assert(alignof(UPlayerAbility_Weapon_C) == 0x000008, "Wrong alignment on UPlayerAbility_Weapon_C");
static_assert(sizeof(UPlayerAbility_Weapon_C) == 0x000138, "Wrong size on UPlayerAbility_Weapon_C");
static_assert(offsetof(UPlayerAbility_Weapon_C, UberGraphFrame) == 0x000130, "Member 'UPlayerAbility_Weapon_C::UberGraphFrame' has a wrong offset!");

}

