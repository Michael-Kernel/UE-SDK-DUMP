#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Shield_BoostersPickedUp

#include "Basic.hpp"

#include "Challenge_Shield_BoostersPickedUp_classes.hpp"
#include "Challenge_Shield_BoostersPickedUp_parameters.hpp"


namespace SDK
{

// Function Challenge_Shield_BoostersPickedUp.Challenge_Shield_BoostersPickedUp_C.CheckItemPickup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PickedUpActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_Shield_BoostersPickedUp_C::CheckItemPickup(class AActor* PickedUpActor, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_Shield_BoostersPickedUp_C", "CheckItemPickup");

	Params::Challenge_Shield_BoostersPickedUp_C_CheckItemPickup Parms{};

	Parms.PickedUpActor = PickedUpActor;
	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_Shield_BoostersPickedUp.Challenge_Shield_BoostersPickedUp_C.OnInitChallengeInstance
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UChallengesComponent*             OwningChallenges                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGbxCharacter*                    AssociatedCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_Shield_BoostersPickedUp_C::OnInitChallengeInstance(class UChallengesComponent* OwningChallenges, class AGbxCharacter* AssociatedCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_Shield_BoostersPickedUp_C", "OnInitChallengeInstance");

	Params::Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance Parms{};

	Parms.OwningChallenges = OwningChallenges;
	Parms.AssociatedCharacter = AssociatedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

