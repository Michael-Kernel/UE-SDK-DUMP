#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_PetSkag

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_PetSkag.BPAnim_PetSkag_C.ExecuteUbergraph_BPAnim_PetSkag
// 0x0018 (0x0018 - 0x0000)
struct BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag) == 0x000004, "Wrong alignment on BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag");
static_assert(sizeof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag) == 0x000018, "Wrong size on BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag");
static_assert(offsetof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag, EntryPoint) == 0x000000, "Member 'BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000004, "Member 'BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BPAnim_PetSkag_C_ExecuteUbergraph_BPAnim_PetSkag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPAnim_PetSkag.BPAnim_PetSkag_C.InitComponents
// 0x0018 (0x0018 - 0x0000)
struct BPAnim_PetSkag_C_InitComponents final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PetSkag_C_InitComponents) == 0x000008, "Wrong alignment on BPAnim_PetSkag_C_InitComponents");
static_assert(sizeof(BPAnim_PetSkag_C_InitComponents) == 0x000018, "Wrong size on BPAnim_PetSkag_C_InitComponents");
static_assert(offsetof(BPAnim_PetSkag_C_InitComponents, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'BPAnim_PetSkag_C_InitComponents::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_InitComponents, K2Node_DynamicCast_AsOak_Character) == 0x000008, "Member 'BPAnim_PetSkag_C_InitComponents::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BPAnim_PetSkag_C_InitComponents, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BPAnim_PetSkag_C_InitComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

