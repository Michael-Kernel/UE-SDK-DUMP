#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IronBearAbility_Eject

#include "Basic.hpp"


namespace SDK::Params
{

// Function IronBearAbility_Eject.IronBearAbility_Eject_C.ExecuteUbergraph_IronBearAbility_Eject
// 0x00A0 (0x00A0 - 0x0000)
struct IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action1;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> Temp_softobject_Variable;                          // 0x0040(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1; // 0x0068(0x0028)(HasGetValueTypeHash)
	class AOakCharacter_IronBear*                 K2Node_DynamicCast_AsOak_Character_Iron_Bear;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject) == 0x000008, "Wrong alignment on IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject");
static_assert(sizeof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject) == 0x0000A0, "Wrong size on IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, EntryPoint) == 0x000000, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::EntryPoint' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, K2Node_GbxInputActionEvent_Discrete_Action1) == 0x000008, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::K2Node_GbxInputActionEvent_Discrete_Action1' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, K2Node_GbxInputActionEvent_Discrete_Action) == 0x000038, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::K2Node_GbxInputActionEvent_Discrete_Action' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, Temp_softobject_Variable) == 0x000040, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1) == 0x000068, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, K2Node_DynamicCast_AsOak_Character_Iron_Bear) == 0x000090, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::K2Node_DynamicCast_AsOak_Character_Iron_Bear' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'IronBearAbility_Eject_C_ExecuteUbergraph_IronBearAbility_Eject::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function IronBearAbility_Eject.IronBearAbility_Eject_C.GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2
// 0x0008 (0x0008 - 0x0000)
struct IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2) == 0x000008, "Wrong alignment on IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2");
static_assert(sizeof(IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2) == 0x000008, "Wrong size on IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2");
static_assert(offsetof(IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2, Action) == 0x000000, "Member 'IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_2::Action' has a wrong offset!");

// Function IronBearAbility_Eject.IronBearAbility_Eject_C.GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3
// 0x0008 (0x0008 - 0x0000)
struct IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3) == 0x000008, "Wrong alignment on IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3");
static_assert(sizeof(IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3) == 0x000008, "Wrong size on IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3");
static_assert(offsetof(IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3, Action) == 0x000000, "Member 'IronBearAbility_Eject_C_GbxInpActEvt_InputAction_Discrete_IronBear_Eject_K2Node_GbxInputActionEvent_Discrete_3::Action' has a wrong offset!");

// Function IronBearAbility_Eject.IronBearAbility_Eject_C.QuickSelectWeapon
// 0x0028 (0x0028 - 0x0000)
struct IronBearAbility_Eject_C_QuickSelectWeapon final
{
public:
	class UInventorySlotData*                     InvSlot;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponSlotData*                        WeaponSlot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEquippedInventoryForSlot_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IronBearAbility_Eject_C_QuickSelectWeapon) == 0x000008, "Wrong alignment on IronBearAbility_Eject_C_QuickSelectWeapon");
static_assert(sizeof(IronBearAbility_Eject_C_QuickSelectWeapon) == 0x000028, "Wrong size on IronBearAbility_Eject_C_QuickSelectWeapon");
static_assert(offsetof(IronBearAbility_Eject_C_QuickSelectWeapon, InvSlot) == 0x000000, "Member 'IronBearAbility_Eject_C_QuickSelectWeapon::InvSlot' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_QuickSelectWeapon, WeaponSlot) == 0x000008, "Member 'IronBearAbility_Eject_C_QuickSelectWeapon::WeaponSlot' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_QuickSelectWeapon, CallFunc_GetEquippedInventoryForSlot_ReturnValue) == 0x000010, "Member 'IronBearAbility_Eject_C_QuickSelectWeapon::CallFunc_GetEquippedInventoryForSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_QuickSelectWeapon, K2Node_DynamicCast_AsWeapon) == 0x000018, "Member 'IronBearAbility_Eject_C_QuickSelectWeapon::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_QuickSelectWeapon, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'IronBearAbility_Eject_C_QuickSelectWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IronBearAbility_Eject_C_QuickSelectWeapon, CallFunc_IsActive_ReturnValue) == 0x000021, "Member 'IronBearAbility_Eject_C_QuickSelectWeapon::CallFunc_IsActive_ReturnValue' has a wrong offset!");

}

