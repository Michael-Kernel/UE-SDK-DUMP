#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_MindMelt

#include "Basic.hpp"

#include "BP_InventoryAbility_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Artifact_MindMelt.Ability_Artifact_MindMelt_C
// 0x0068 (0x0188 - 0x0120)
class UAbility_Artifact_MindMelt_C final : public UBP_InventoryAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Ability_Artifact_MindMelt_C;        // 0x0120(0x0008)(Transient, DuplicateTransient)
	float                                         BonusDamage;                                       // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ElementalDamageType;                               // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Artifact_ToxicRevenger; // 0x0138(0x0028)()
	bool                                          AOEAvailable;                                      // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Player_C*                       Player;                                            // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AuraFX;                                            // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SlamTimer;                                         // 0x0178(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UClass*                                 MindMeltAction;                                    // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Artifact_MindMelt(int32 EntryPoint);
	void OnActivated();
	void OnDeactivated();
	void SlamEnd(const struct FGroundSlamEndedDetails& Details);
	void StopEffect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Artifact_MindMelt_C">();
	}
	static class UAbility_Artifact_MindMelt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Artifact_MindMelt_C>();
	}
};
static_assert(alignof(UAbility_Artifact_MindMelt_C) == 0x000008, "Wrong alignment on UAbility_Artifact_MindMelt_C");
static_assert(sizeof(UAbility_Artifact_MindMelt_C) == 0x000188, "Wrong size on UAbility_Artifact_MindMelt_C");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, UberGraphFrame_Ability_Artifact_MindMelt_C) == 0x000120, "Member 'UAbility_Artifact_MindMelt_C::UberGraphFrame_Ability_Artifact_MindMelt_C' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, BonusDamage) == 0x000128, "Member 'UAbility_Artifact_MindMelt_C::BonusDamage' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, ElementalDamageType) == 0x000130, "Member 'UAbility_Artifact_MindMelt_C::ElementalDamageType' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Artifact_ToxicRevenger) == 0x000138, "Member 'UAbility_Artifact_MindMelt_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Artifact_ToxicRevenger' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, AOEAvailable) == 0x000160, "Member 'UAbility_Artifact_MindMelt_C::AOEAvailable' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, Player) == 0x000168, "Member 'UAbility_Artifact_MindMelt_C::Player' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, AuraFX) == 0x000170, "Member 'UAbility_Artifact_MindMelt_C::AuraFX' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, SlamTimer) == 0x000178, "Member 'UAbility_Artifact_MindMelt_C::SlamTimer' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_MindMelt_C, MindMeltAction) == 0x000180, "Member 'UAbility_Artifact_MindMelt_C::MindMeltAction' has a wrong offset!");

}

