#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionSkill_Operative_DeployBarrier

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActionSkill_Operative_DeployBarrier.ActionSkill_Operative_DeployBarrier_C
// 0x0028 (0x02A0 - 0x0278)
class UActionSkill_Operative_DeployBarrier_C final : public UOakActionAbility_Barrier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(Transient, DuplicateTransient)
	bool                                          FailedToSpawnBarrier;                              // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BestLaidPlans;                                     // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  BestLaidPlains;                                    // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_ActionSkill_Operative_DeployBarrier(int32 EntryPoint);
	void OnStopActionAbility();
	void DeployNewBarrierAroundPlayer();
	void TryDropPickup();
	void DeployNewBarrierInHand(class AActor* Player);
	void OnStartActionAbility();
	void ActivateHighlyUnstableFromCarry();
	void ActivateHighlyUnstable();
	void StartHoldingBarrier(class AActor* Player);
	class AOperativeBarrier* SpawnNewBarrier(const struct FTransform& Transform);
	void GetBarrierHealthPercent(float* HealthPercent);
	void GetBarrierReference(class AActor** Barrier);
	void GiveBarrierHealth(float Health, float* New_Health);
	void RefillBarrierHealth(bool* Res);
	void IsHoldingBarrier(bool* Res);

	float GetCooldownRestartPercent() const;
	bool ShouldStopAbilityOnPawnSlotComponentAttach() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActionSkill_Operative_DeployBarrier_C">();
	}
	static class UActionSkill_Operative_DeployBarrier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionSkill_Operative_DeployBarrier_C>();
	}
};
static_assert(alignof(UActionSkill_Operative_DeployBarrier_C) == 0x000008, "Wrong alignment on UActionSkill_Operative_DeployBarrier_C");
static_assert(sizeof(UActionSkill_Operative_DeployBarrier_C) == 0x0002A0, "Wrong size on UActionSkill_Operative_DeployBarrier_C");
static_assert(offsetof(UActionSkill_Operative_DeployBarrier_C, UberGraphFrame) == 0x000278, "Member 'UActionSkill_Operative_DeployBarrier_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DeployBarrier_C, FailedToSpawnBarrier) == 0x000280, "Member 'UActionSkill_Operative_DeployBarrier_C::FailedToSpawnBarrier' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DeployBarrier_C, BestLaidPlans) == 0x000281, "Member 'UActionSkill_Operative_DeployBarrier_C::BestLaidPlans' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DeployBarrier_C, BestLaidPlains) == 0x000288, "Member 'UActionSkill_Operative_DeployBarrier_C::BestLaidPlains' has a wrong offset!");

}

