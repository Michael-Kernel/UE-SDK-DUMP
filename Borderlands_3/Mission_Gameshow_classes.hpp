#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_Gameshow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_OakMission_classes.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_Gameshow.Mission_Gameshow_C
// 0x00C8 (0x05D8 - 0x0510)
class UMission_Gameshow_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_Gameshow_C;                 // 0x0510(0x0008)(Transient, DuplicateTransient)
	int32                                         RoundNumber;                                       // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnswerVOFinished;                                 // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAtPodium;                                         // 0x051D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBoardCleared;                                     // 0x051E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bQuestionQueued;                                   // 0x051F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPlayerAnswered;                                   // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnemyAnswered;                                    // 0x0521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRoundActive;                                      // 0x0522(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_523[0x5];                                      // 0x0523(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjectiveSet*                   Set_ReadyUp_ObjSetVar;                             // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ReadyUp_ObjVar;                                // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Trivia_ObjSetVar;                              // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteRound_ObjVar;                          // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_TalkToHostess_ObjSetVar;                       // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_TalkToHostess_ObjVar;                          // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_GoToPodium_ObjSetVar;                          // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_ExplainRules_ObjSetVar;                        // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ExplainRules_ObjVar;                           // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_KillOpposition_ObjSetVar;                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_KillOpposition_ObjVar;                         // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_DecipherWords_ObjSetVar;                       // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_FollowHostess_ObjVar;                          // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_EnemyAnswer_INVS_ObjVar;                       // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Timer_INVS_ObjVar;                             // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ListenToQuestion_ObjVar;                       // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_AnswerA_ObjVar;                                // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_AnswerB_ObjVar;                                // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_AskQuestion_INVS_ObjVar;                       // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_StandAtPodium_ObjVar;                          // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GoToPodium_ObjVar;                             // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteTrivia_ObjVar;                         // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mission_Gameshow(int32 EntryPoint);
	void _Obj_StandAtPodium_Objective__PROXY_2();
	void MissionKickoff();
	void Set_GoToPodium(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_CompleteTrivia(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void PlayerIsAlreadyAtPodium(class UObject* Context);
	void CE_PlayerAnswered();
	void Set_ExplainRules(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void CE_ClearBoard();
	void CE_PlayerAnswersWrong();
	void UPDATE_FollowHostess(class UObject* Context);
	void OnLoad_ReadyUp(class UObject* Context);
	void _Obj_StandAtPodium_Objective__PROXY_1();
	void CE_AtPodium();
	void CE_AskQuestion();
	void Obj_ExplainRules(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_StandAtPodium_Objective__PROXY_0();
	void Obj_GoToPodium(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_StandAtPodium_Objective__PROXY();
	void MCE_PlayerLeftPodium(class UObject* Context);
	void MCE_PlayerAtPodium(class UObject* Context);
	void Obj_StandAtPodium(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OnLoad_ExplainRules(class UObject* Context);
	void CE_BothLostRound();
	void CE_PlayerLosesRound();
	void CE_PlayerWinsRound();
	void Obj_ReadyUp(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_ReadyUp(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_Trivia(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_CompleteRound(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_CompletedRound(class UObject* Context);
	void Set_TalkToHostess(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_TalkToHostess(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_TalkedToHostess(class UObject* Context);
	void MCE_Ready(class UObject* Context);
	void Set_KillOpposition(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void CE_AnswerVOFinished();
	void CE_ClearedBoard();
	void CE_ShowAnswer();
	void Obj_KillOpposition(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_KilledOpposition(class UObject* Context);
	void Obj_AskQuestion_INVS(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_AnswerB(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_AnswerA(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_ListenToQuestion(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_Timer_INVS(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_TimerFinished(class UObject* Context);
	void MCE_EnemiesAnswered(class UObject* Context);
	void Obj_EnemyAnswer_INVS(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_AnsweredB(class UObject* Context);
	void MCE_AnsweredA(class UObject* Context);
	void Obj_FollowHostess(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_DecipherWords(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OnDialogSequenceFinished_46();
	void OnDialogSequenceFinished_47();
	void OnDialogSequenceFinished_48();
	void OnDialogSequenceFinished_49();
	void OnDialogSequenceFinished_50();
	void OnDialogSequenceFinished_51();
	void OnDialogSequenceFinished_52();
	void OnDialogSequenceFinished_53();
	void OnDialogSequenceFinished_54();
	void OnDialogSequenceFinished_55();
	void OnDialogSequenceFinished_56();
	void OnDialogSequenceFinished_57();
	void OnDialogSequenceFinished_58();
	void OnDialogSequenceFinished_59();
	void OnDialogSequenceFinished_60();
	void OnDialogSequenceFinished_61();
	void OnDialogSequenceFinished_62();
	void OnDialogSequenceFinished_63();
	void OnDialogSequenceFinished_64();
	void OnDialogSequenceFinished_65();
	void OnDialogSequenceFinished_66();
	void OnDialogSequenceFinished_67();
	void OnDialogSequenceFinished_68();
	void OnDialogSequenceFinished_69();
	void OnDialogSequenceFinished_70();
	void OnDialogSequenceFinished_71();
	void OnDialogSequenceFinished_72();
	void OnDialogSequenceFinished_73();
	void OnDialogSequenceFinished_74();
	void OnDialogSequenceFinished_75();
	void OnDialogSequenceFinished_76();
	void OnDialogSequenceFinished_77();
	void OnDialogSequenceFinished_78();
	void OnDialogSequenceFinished_79();
	void OnDialogSequenceFinished_80();
	void OnDialogSequenceFinished_81();
	void OnDialogSequenceFinished_82();
	void OnDialogSequenceFinished_83();
	void OnDialogSequenceFinished_84();
	void OnDialogSequenceFinished_85();
	void OnDialogSequenceFinished_86();
	void OnDialogSequenceFinished_87();
	void OnDialogSequenceFinished_88();
	void OnDialogSequenceFinished_89();
	void OnDialogSequenceFinished_90();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_Gameshow_C">();
	}
	static class UMission_Gameshow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_Gameshow_C>();
	}
};
static_assert(alignof(UMission_Gameshow_C) == 0x000008, "Wrong alignment on UMission_Gameshow_C");
static_assert(sizeof(UMission_Gameshow_C) == 0x0005D8, "Wrong size on UMission_Gameshow_C");
static_assert(offsetof(UMission_Gameshow_C, UberGraphFrame_Mission_Gameshow_C) == 0x000510, "Member 'UMission_Gameshow_C::UberGraphFrame_Mission_Gameshow_C' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, RoundNumber) == 0x000518, "Member 'UMission_Gameshow_C::RoundNumber' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bAnswerVOFinished) == 0x00051C, "Member 'UMission_Gameshow_C::bAnswerVOFinished' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bAtPodium) == 0x00051D, "Member 'UMission_Gameshow_C::bAtPodium' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bBoardCleared) == 0x00051E, "Member 'UMission_Gameshow_C::bBoardCleared' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bQuestionQueued) == 0x00051F, "Member 'UMission_Gameshow_C::bQuestionQueued' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bPlayerAnswered) == 0x000520, "Member 'UMission_Gameshow_C::bPlayerAnswered' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bEnemyAnswered) == 0x000521, "Member 'UMission_Gameshow_C::bEnemyAnswered' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, bRoundActive) == 0x000522, "Member 'UMission_Gameshow_C::bRoundActive' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_ReadyUp_ObjSetVar) == 0x000528, "Member 'UMission_Gameshow_C::Set_ReadyUp_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_ReadyUp_ObjVar) == 0x000530, "Member 'UMission_Gameshow_C::Obj_ReadyUp_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_Trivia_ObjSetVar) == 0x000538, "Member 'UMission_Gameshow_C::Set_Trivia_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_CompleteRound_ObjVar) == 0x000540, "Member 'UMission_Gameshow_C::Obj_CompleteRound_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_TalkToHostess_ObjSetVar) == 0x000548, "Member 'UMission_Gameshow_C::Set_TalkToHostess_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_TalkToHostess_ObjVar) == 0x000550, "Member 'UMission_Gameshow_C::Obj_TalkToHostess_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_GoToPodium_ObjSetVar) == 0x000558, "Member 'UMission_Gameshow_C::Set_GoToPodium_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_ExplainRules_ObjSetVar) == 0x000560, "Member 'UMission_Gameshow_C::Set_ExplainRules_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_ExplainRules_ObjVar) == 0x000568, "Member 'UMission_Gameshow_C::Obj_ExplainRules_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_KillOpposition_ObjSetVar) == 0x000570, "Member 'UMission_Gameshow_C::Set_KillOpposition_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_KillOpposition_ObjVar) == 0x000578, "Member 'UMission_Gameshow_C::Obj_KillOpposition_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Set_DecipherWords_ObjSetVar) == 0x000580, "Member 'UMission_Gameshow_C::Set_DecipherWords_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_FollowHostess_ObjVar) == 0x000588, "Member 'UMission_Gameshow_C::Obj_FollowHostess_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_EnemyAnswer_INVS_ObjVar) == 0x000590, "Member 'UMission_Gameshow_C::Obj_EnemyAnswer_INVS_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_Timer_INVS_ObjVar) == 0x000598, "Member 'UMission_Gameshow_C::Obj_Timer_INVS_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_ListenToQuestion_ObjVar) == 0x0005A0, "Member 'UMission_Gameshow_C::Obj_ListenToQuestion_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_AnswerA_ObjVar) == 0x0005A8, "Member 'UMission_Gameshow_C::Obj_AnswerA_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_AnswerB_ObjVar) == 0x0005B0, "Member 'UMission_Gameshow_C::Obj_AnswerB_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_AskQuestion_INVS_ObjVar) == 0x0005B8, "Member 'UMission_Gameshow_C::Obj_AskQuestion_INVS_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_StandAtPodium_ObjVar) == 0x0005C0, "Member 'UMission_Gameshow_C::Obj_StandAtPodium_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_GoToPodium_ObjVar) == 0x0005C8, "Member 'UMission_Gameshow_C::Obj_GoToPodium_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Gameshow_C, Obj_CompleteTrivia_ObjVar) == 0x0005D0, "Member 'UMission_Gameshow_C::Obj_CompleteTrivia_ObjVar' has a wrong offset!");

}

