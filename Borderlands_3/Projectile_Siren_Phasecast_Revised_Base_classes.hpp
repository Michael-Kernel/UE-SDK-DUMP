#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_Siren_Phasecast_Revised_Base

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C
// 0x0088 (0x07C0 - 0x0738)
class AProjectile_Siren_Phasecast_Revised_Base_C : public AOakProjectile_PhaseTrance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0738(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       OverlapCollision;                                  // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       WorldCollision;                                    // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMesh;                                          // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GhostArms;                                         // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  LifeSpan;                                          // 0x0770(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bDoEnemyHitImpactEffect;                           // 0x0788(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UExplosionData*                         ShockExplosionData;                                // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         CorrosiveExplosionData;                            // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         IncendiaryExplosionData;                           // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CastDamageData;                                    // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WorldDamageData;                                   // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         CryoExplosionData;                                 // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Projectile_Siren_Phasecast_Revised_Base(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnOverlappedNeutral(const struct FHitResult& HitResult);
	void OnOverlappedEnemy(const struct FHitResult& HitResult);
	void OnHitEnemy(const struct FHitResult& Hit);
	void OnHitWorld(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void ConfigureSkeletalMesh();
	void PlayImpactEffect(struct FHitResult& InHitInfo);
	void GetImpactEffect(class UImpactData** Res);
	void HandleEnemyHit(struct FHitResult& HitResult);
	void DoDamageToEnemy(class AActor* Enemy);
	void CalculateDamage(float* Res);
	void GetTargetedHitDirectionForDamage(class AActor* Enemy, struct FVector* Res);
	void DoDamageToWorld(const struct FVector& Location);
	void HandleWorldHit(struct FHitResult& HitResult);
	void TryToAllure();

	class UPrimitiveComponent* GetOverlapComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_Siren_Phasecast_Revised_Base_C">();
	}
	static class AProjectile_Siren_Phasecast_Revised_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_Siren_Phasecast_Revised_Base_C>();
	}
};
static_assert(alignof(AProjectile_Siren_Phasecast_Revised_Base_C) == 0x000008, "Wrong alignment on AProjectile_Siren_Phasecast_Revised_Base_C");
static_assert(sizeof(AProjectile_Siren_Phasecast_Revised_Base_C) == 0x0007C0, "Wrong size on AProjectile_Siren_Phasecast_Revised_Base_C");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, UberGraphFrame) == 0x000738, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, OverlapCollision) == 0x000740, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::OverlapCollision' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, WorldCollision) == 0x000748, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::WorldCollision' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, GbxProjectileMovement) == 0x000750, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, BodyMesh) == 0x000758, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::BodyMesh' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, HeadMesh) == 0x000760, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, GhostArms) == 0x000768, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::GhostArms' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, LifeSpan) == 0x000770, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::LifeSpan' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, bDoEnemyHitImpactEffect) == 0x000788, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::bDoEnemyHitImpactEffect' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, ShockExplosionData) == 0x000790, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::ShockExplosionData' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, CorrosiveExplosionData) == 0x000798, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::CorrosiveExplosionData' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, IncendiaryExplosionData) == 0x0007A0, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::IncendiaryExplosionData' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, CastDamageData) == 0x0007A8, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::CastDamageData' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, WorldDamageData) == 0x0007B0, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::WorldDamageData' has a wrong offset!");
static_assert(offsetof(AProjectile_Siren_Phasecast_Revised_Base_C, CryoExplosionData) == 0x0007B8, "Member 'AProjectile_Siren_Phasecast_Revised_Base_C::CryoExplosionData' has a wrong offset!");

}

