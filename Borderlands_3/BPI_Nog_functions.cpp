#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Nog

#include "Basic.hpp"

#include "BPI_Nog_classes.hpp"
#include "BPI_Nog_parameters.hpp"


namespace SDK
{

// Function BPI_Nog.BPI_Nog_C.Nog_DeployLaserWire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WhichWave                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Nog_C::Nog_DeployLaserWire(int32 WhichWave, class AActor* MyTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_DeployLaserWire");

	Params::BPI_Nog_C_Nog_DeployLaserWire Parms{};

	Parms.WhichWave = WhichWave;
	Parms.MyTarget = MyTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_MultiTargetAttack_GetTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OptionalDefaultTarget                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           MyTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Nog_C::Nog_MultiTargetAttack_GetTarget(int32 TargetIndex, class AActor* OptionalDefaultTarget, class AActor** MyTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_MultiTargetAttack_GetTarget");

	Params::BPI_Nog_C_Nog_MultiTargetAttack_GetTarget Parms{};

	Parms.TargetIndex = TargetIndex;
	Parms.OptionalDefaultTarget = OptionalDefaultTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (MyTarget != nullptr)
		*MyTarget = Parms.MyTarget;
}


// Function BPI_Nog.BPI_Nog_C.Nog_BuildMultiTargetAttackList
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Nog_C::Nog_BuildMultiTargetAttackList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_BuildMultiTargetAttackList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Nog.BPI_Nog_C.Nog_GetDroneContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOakNogDroneContainerComponent*   DroneContainer                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Nog_C::Nog_GetDroneContainer(class UOakNogDroneContainerComponent** DroneContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_GetDroneContainer");

	Params::BPI_Nog_C_Nog_GetDroneContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DroneContainer != nullptr)
		*DroneContainer = Parms.DroneContainer;
}


// Function BPI_Nog.BPI_Nog_C.Nog_GetDroneHealthPctOfNog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HealthPctOfNog                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Nog_C::Nog_GetDroneHealthPctOfNog(float* HealthPctOfNog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_GetDroneHealthPctOfNog");

	Params::BPI_Nog_C_Nog_GetDroneHealthPctOfNog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HealthPctOfNog != nullptr)
		*HealthPctOfNog = Parms.HealthPctOfNog;
}


// Function BPI_Nog.BPI_Nog_C.Nog_GetDroneMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               DroneMaterial                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Nog_C::Nog_GetDroneMaterial(class UMaterialInterface** DroneMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_GetDroneMaterial");

	Params::BPI_Nog_C_Nog_GetDroneMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DroneMaterial != nullptr)
		*DroneMaterial = Parms.DroneMaterial;
}


// Function BPI_Nog.BPI_Nog_C.Nog_GetMultiTargetAttackList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   TargetList                                             (Parm, OutParm, ZeroConstructor)

void IBPI_Nog_C::Nog_GetMultiTargetAttackList(TArray<class AActor*>* TargetList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_GetMultiTargetAttackList");

	Params::BPI_Nog_C_Nog_GetMultiTargetAttackList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetList != nullptr)
		*TargetList = std::move(Parms.TargetList);
}


// Function BPI_Nog.BPI_Nog_C.Nog_MindControlled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Nog_C::Nog_MindControlled(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_MindControlled");

	Params::BPI_Nog_C_Nog_MindControlled Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_SetImmuneToVehicleImpact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Nog_C::Nog_SetImmuneToVehicleImpact(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_SetImmuneToVehicleImpact");

	Params::BPI_Nog_C_Nog_SetImmuneToVehicleImpact Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_ToggleStaticDroneBoard
// (Net, NetMulticast, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableStaticBoard                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Nog_C::Nog_ToggleStaticDroneBoard(bool EnableStaticBoard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_ToggleStaticDroneBoard");

	Params::BPI_Nog_C_Nog_ToggleStaticDroneBoard Parms{};

	Parms.EnableStaticBoard = EnableStaticBoard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_DroneThrow_InHand
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHandL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Nog_C::Nog_DroneThrow_InHand(bool IsHandL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_DroneThrow_InHand");

	Params::BPI_Nog_C_Nog_DroneThrow_InHand Parms{};

	Parms.IsHandL = IsHandL;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_DroneThrow_Launch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHandL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Nog_C::Nog_DroneThrow_Launch(class AActor* MyTarget, bool IsHandL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_DroneThrow_Launch");

	Params::BPI_Nog_C_Nog_DroneThrow_Launch Parms{};

	Parms.MyTarget = MyTarget;
	Parms.IsHandL = IsHandL;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_DroneThrow_Interrupt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHandL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Nog_C::Nog_DroneThrow_Interrupt(bool IsHandL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_DroneThrow_Interrupt");

	Params::BPI_Nog_C_Nog_DroneThrow_Interrupt Parms{};

	Parms.IsHandL = IsHandL;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_SpawnBuffDrone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              NogBuff                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    FromDroneMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Nog_C::Nog_SpawnBuffDrone(const struct FDataTableRowHandle& NogBuff, bool FromDroneMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_SpawnBuffDrone");

	Params::BPI_Nog_C_Nog_SpawnBuffDrone Parms{};

	Parms.NogBuff = std::move(NogBuff);
	Parms.FromDroneMesh = FromDroneMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Nog.BPI_Nog_C.Nog_BuffDrone_NotifyDestroyed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              NogBuff                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void IBPI_Nog_C::Nog_BuffDrone_NotifyDestroyed(const struct FDataTableRowHandle& NogBuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Nog_C", "Nog_BuffDrone_NotifyDestroyed");

	Params::BPI_Nog_C_Nog_BuffDrone_NotifyDestroyed Parms{};

	Parms.NogBuff = std::move(NogBuff);

	UObject::ProcessEvent(Func, &Parms);
}

}

