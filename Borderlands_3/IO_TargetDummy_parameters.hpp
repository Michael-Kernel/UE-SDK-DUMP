#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_TargetDummy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function IO_TargetDummy.IO_TargetDummy_C.ExecuteUbergraph_IO_TargetDummy
// 0x0120 (0x0120 - 0x0000)
struct IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AIO_Switch_ShootingRange_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class AIO_Switch_ShootingRange_C*             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_SwitchUser1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* LastActorToUseSwitch)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* LastActorToUseSwitch)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_SwitchUser;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* LastActorToUseSwitch)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* LastActorToUseSwitch)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0090(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy) == 0x000008, "Wrong alignment on IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy");
static_assert(sizeof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy) == 0x000120, "Wrong size on IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, EntryPoint) == 0x000000, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_Array_Get_Item) == 0x000018, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_CustomEvent_SwitchUser1) == 0x000020, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_CustomEvent_SwitchUser1' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_CreateDelegate_OutputDelegate1) == 0x000040, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_CustomEvent_SwitchUser) == 0x000050, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_CustomEvent_SwitchUser' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_CreateDelegate_OutputDelegate2) == 0x000058, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_CreateDelegate_OutputDelegate3) == 0x000068, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_UserStateEvent_bFromLoad1) == 0x000078, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, K2Node_UserStateEvent_bFromLoad) == 0x000079, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00007C, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000090, "Member 'IO_TargetDummy_C_ExecuteUbergraph_IO_TargetDummy::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function IO_TargetDummy.IO_TargetDummy_C.__UserState_DummyState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_TargetDummy_C___UserState_DummyState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_TargetDummy_C___UserState_DummyState_0) == 0x000001, "Wrong alignment on IO_TargetDummy_C___UserState_DummyState_0");
static_assert(sizeof(IO_TargetDummy_C___UserState_DummyState_0) == 0x000001, "Wrong size on IO_TargetDummy_C___UserState_DummyState_0");
static_assert(offsetof(IO_TargetDummy_C___UserState_DummyState_0, bFromLoad) == 0x000000, "Member 'IO_TargetDummy_C___UserState_DummyState_0::bFromLoad' has a wrong offset!");

// Function IO_TargetDummy.IO_TargetDummy_C.__UserState_DummyState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_TargetDummy_C___UserState_DummyState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_TargetDummy_C___UserState_DummyState_1) == 0x000001, "Wrong alignment on IO_TargetDummy_C___UserState_DummyState_1");
static_assert(sizeof(IO_TargetDummy_C___UserState_DummyState_1) == 0x000001, "Wrong size on IO_TargetDummy_C___UserState_DummyState_1");
static_assert(offsetof(IO_TargetDummy_C___UserState_DummyState_1, bFromLoad) == 0x000000, "Member 'IO_TargetDummy_C___UserState_DummyState_1::bFromLoad' has a wrong offset!");

// Function IO_TargetDummy.IO_TargetDummy_C.DummyOff
// 0x0008 (0x0008 - 0x0000)
struct IO_TargetDummy_C_DummyOff final
{
public:
	class AActor*                                 SwitchUser;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_TargetDummy_C_DummyOff) == 0x000008, "Wrong alignment on IO_TargetDummy_C_DummyOff");
static_assert(sizeof(IO_TargetDummy_C_DummyOff) == 0x000008, "Wrong size on IO_TargetDummy_C_DummyOff");
static_assert(offsetof(IO_TargetDummy_C_DummyOff, SwitchUser) == 0x000000, "Member 'IO_TargetDummy_C_DummyOff::SwitchUser' has a wrong offset!");

// Function IO_TargetDummy.IO_TargetDummy_C.DummyOn
// 0x0008 (0x0008 - 0x0000)
struct IO_TargetDummy_C_DummyOn final
{
public:
	class AActor*                                 SwitchUser;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_TargetDummy_C_DummyOn) == 0x000008, "Wrong alignment on IO_TargetDummy_C_DummyOn");
static_assert(sizeof(IO_TargetDummy_C_DummyOn) == 0x000008, "Wrong size on IO_TargetDummy_C_DummyOn");
static_assert(offsetof(IO_TargetDummy_C_DummyOn, SwitchUser) == 0x000000, "Member 'IO_TargetDummy_C_DummyOn::SwitchUser' has a wrong offset!");

}

