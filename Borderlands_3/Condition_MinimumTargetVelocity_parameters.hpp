#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_MinimumTargetVelocity

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Condition_MinimumTargetVelocity.Condition_MinimumTargetVelocity_C.EvaluateCondition
// 0x0060 (0x0060 - 0x0000)
struct Condition_MinimumTargetVelocity_C_EvaluateCondition final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OptionalContext;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetAssociatedController_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluatePure_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetingComponent*                    CallFunc_FindActorTargetingComponent_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBestTargetActor_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Condition_MinimumTargetVelocity_C_EvaluateCondition) == 0x000008, "Wrong alignment on Condition_MinimumTargetVelocity_C_EvaluateCondition");
static_assert(sizeof(Condition_MinimumTargetVelocity_C_EvaluateCondition) == 0x000060, "Wrong size on Condition_MinimumTargetVelocity_C_EvaluateCondition");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, Context) == 0x000000, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::Context' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, OptionalContext) == 0x000008, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::OptionalContext' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, ReturnValue) == 0x000010, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, K2Node_DynamicCast_AsActor) == 0x000018, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_GetAssociatedController_ReturnValue) == 0x000028, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_GetAssociatedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_EvaluatePure_ReturnValue) == 0x000030, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_EvaluatePure_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_FindActorTargetingComponent_ReturnValue) == 0x000038, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_FindActorTargetingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_GetBestTargetActor_ReturnValue) == 0x000040, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_GetBestTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_GetVelocity_ReturnValue) == 0x00004C, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_MinimumTargetVelocity_C_EvaluateCondition, CallFunc_Less_FloatFloat_ReturnValue) == 0x00005D, "Member 'Condition_MinimumTargetVelocity_C_EvaluateCondition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}

