#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_ATL_TrackerDart_Replay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Proj_Weapon_BaseProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_ATL_TrackerDart_Replay.Proj_ATL_TrackerDart_Replay_C
// 0x0308 (0x0A98 - 0x0790)
class AProj_ATL_TrackerDart_Replay_C final : public AProj_Weapon_BaseProjectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Proj_ATL_TrackerDart_Replay_C;      // 0x0790(0x0008)(Transient, DuplicateTransient)
	class UProjectileHomingComponent*             ProjectileHoming;                                  // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio_Master;                                 // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_ATL_Target_Highlight;                           // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ProjectileTrail;                                   // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TargetLocked;                                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABPWeap_ATL_BaseWeapon_C*               MyWeapon;                                          // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         MyHomingTargets;                                   // 0x07C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FEnvQueryParams                        EnvQuery;                                          // 0x07D8(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UParticleSystem*                        FX_MultiTarget;                                    // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo_0;                                         // 0x0898(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTimerHandle                           Fuse;                                              // 0x0928(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMap<class AActor*, struct FWwisePlaybackInstance> ActorToPlaybackInstance;                           // 0x0930(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class AActor*, class UParticleSystemComponent*> ActorToPSComponent;                                // 0x0980(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 StuckTarget;                                       // 0x09D0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        TargetHighlight;                                   // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        Query;                                             // 0x09E0(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_Proj_ATL_TrackerDart_Replay(int32 EntryPoint);
	void MultiTargetActorDeath_Event(class AActor* DamageReceiver, class AActor* DamageCauser_0);
	void TargetStuck();
	void FuseTriggered();
	void FuseStart(float FuseTime_0);
	void AttachedActorDeath();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnExplode();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SingleTargetTag();
	void RemoveAllTargets();
	void MultiTargetTag();
	void StartAudioLoopOnActor(class AActor* Target_Actor, class UWwiseEvent* Wwise_Event);
	void OnRep_StuckTarget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_ATL_TrackerDart_Replay_C">();
	}
	static class AProj_ATL_TrackerDart_Replay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_ATL_TrackerDart_Replay_C>();
	}
};
static_assert(alignof(AProj_ATL_TrackerDart_Replay_C) == 0x000008, "Wrong alignment on AProj_ATL_TrackerDart_Replay_C");
static_assert(sizeof(AProj_ATL_TrackerDart_Replay_C) == 0x000A98, "Wrong size on AProj_ATL_TrackerDart_Replay_C");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, UberGraphFrame_Proj_ATL_TrackerDart_Replay_C) == 0x000790, "Member 'AProj_ATL_TrackerDart_Replay_C::UberGraphFrame_Proj_ATL_TrackerDart_Replay_C' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, ProjectileHoming) == 0x000798, "Member 'AProj_ATL_TrackerDart_Replay_C::ProjectileHoming' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, WwiseAudio_Master) == 0x0007A0, "Member 'AProj_ATL_TrackerDart_Replay_C::WwiseAudio_Master' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, PS_ATL_Target_Highlight) == 0x0007A8, "Member 'AProj_ATL_TrackerDart_Replay_C::PS_ATL_Target_Highlight' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, ProjectileTrail) == 0x0007B0, "Member 'AProj_ATL_TrackerDart_Replay_C::ProjectileTrail' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, TargetLocked) == 0x0007B8, "Member 'AProj_ATL_TrackerDart_Replay_C::TargetLocked' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, MyWeapon) == 0x0007C0, "Member 'AProj_ATL_TrackerDart_Replay_C::MyWeapon' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, MyHomingTargets) == 0x0007C8, "Member 'AProj_ATL_TrackerDart_Replay_C::MyHomingTargets' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, EnvQuery) == 0x0007D8, "Member 'AProj_ATL_TrackerDart_Replay_C::EnvQuery' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, FX_MultiTarget) == 0x000890, "Member 'AProj_ATL_TrackerDart_Replay_C::FX_MultiTarget' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, HitInfo_0) == 0x000898, "Member 'AProj_ATL_TrackerDart_Replay_C::HitInfo_0' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, Fuse) == 0x000928, "Member 'AProj_ATL_TrackerDart_Replay_C::Fuse' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, ActorToPlaybackInstance) == 0x000930, "Member 'AProj_ATL_TrackerDart_Replay_C::ActorToPlaybackInstance' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, ActorToPSComponent) == 0x000980, "Member 'AProj_ATL_TrackerDart_Replay_C::ActorToPSComponent' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, StuckTarget) == 0x0009D0, "Member 'AProj_ATL_TrackerDart_Replay_C::StuckTarget' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, TargetHighlight) == 0x0009D8, "Member 'AProj_ATL_TrackerDart_Replay_C::TargetHighlight' has a wrong offset!");
static_assert(offsetof(AProj_ATL_TrackerDart_Replay_C, Query) == 0x0009E0, "Member 'AProj_ATL_TrackerDart_Replay_C::Query' has a wrong offset!");

}

