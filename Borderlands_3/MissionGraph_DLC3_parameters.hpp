#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionGraph_DLC3

#include "Basic.hpp"


namespace SDK::Params
{

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Blood From a Stone]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Blood_From_a_Stone_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Blood_From_a_Stone_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Blood_From_a_Stone_");
static_assert(sizeof(MissionGraph_DLC3_C__Blood_From_a_Stone_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Blood_From_a_Stone_");
static_assert(offsetof(MissionGraph_DLC3_C__Blood_From_a_Stone_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Blood_From_a_Stone_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Blood_From_a_Stone_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Blood_From_a_Stone_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Devil Rustlers]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Devil_Rustlers_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Devil_Rustlers_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Devil_Rustlers_");
static_assert(sizeof(MissionGraph_DLC3_C__Devil_Rustlers_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Devil_Rustlers_");
static_assert(offsetof(MissionGraph_DLC3_C__Devil_Rustlers_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Devil_Rustlers_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Devil_Rustlers_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Devil_Rustlers_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Dirty Deeds]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Dirty_Deeds_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Dirty_Deeds_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Dirty_Deeds_");
static_assert(sizeof(MissionGraph_DLC3_C__Dirty_Deeds_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Dirty_Deeds_");
static_assert(offsetof(MissionGraph_DLC3_C__Dirty_Deeds_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Dirty_Deeds_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Dirty_Deeds_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Dirty_Deeds_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Lost and Found]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Lost_and_Found_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Lost_and_Found_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Lost_and_Found_");
static_assert(sizeof(MissionGraph_DLC3_C__Lost_and_Found_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Lost_and_Found_");
static_assert(offsetof(MissionGraph_DLC3_C__Lost_and_Found_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Lost_and_Found_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Lost_and_Found_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Lost_and_Found_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Miracle Elixir Fixer]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Miracle_Elixir_Fixer_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Miracle_Elixir_Fixer_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Miracle_Elixir_Fixer_");
static_assert(sizeof(MissionGraph_DLC3_C__Miracle_Elixir_Fixer_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Miracle_Elixir_Fixer_");
static_assert(offsetof(MissionGraph_DLC3_C__Miracle_Elixir_Fixer_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Miracle_Elixir_Fixer_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Miracle_Elixir_Fixer_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Miracle_Elixir_Fixer_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Money Back Guarantee]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Money_Back_Guarantee_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Money_Back_Guarantee_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Money_Back_Guarantee_");
static_assert(sizeof(MissionGraph_DLC3_C__Money_Back_Guarantee_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Money_Back_Guarantee_");
static_assert(offsetof(MissionGraph_DLC3_C__Money_Back_Guarantee_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Money_Back_Guarantee_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Money_Back_Guarantee_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Money_Back_Guarantee_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Of Blood and Beans]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Of_Blood_and_Beans_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Of_Blood_and_Beans_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Of_Blood_and_Beans_");
static_assert(sizeof(MissionGraph_DLC3_C__Of_Blood_and_Beans_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Of_Blood_and_Beans_");
static_assert(offsetof(MissionGraph_DLC3_C__Of_Blood_and_Beans_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Of_Blood_and_Beans_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Of_Blood_and_Beans_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Of_Blood_and_Beans_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Off the Rails]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Off_the_Rails_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Off_the_Rails_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Off_the_Rails_");
static_assert(sizeof(MissionGraph_DLC3_C__Off_the_Rails_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Off_the_Rails_");
static_assert(offsetof(MissionGraph_DLC3_C__Off_the_Rails_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Off_the_Rails_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Off_the_Rails_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Off_the_Rails_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Riding to Ruin]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Riding_to_Ruin_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Riding_to_Ruin_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Riding_to_Ruin_");
static_assert(sizeof(MissionGraph_DLC3_C__Riding_to_Ruin_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Riding_to_Ruin_");
static_assert(offsetof(MissionGraph_DLC3_C__Riding_to_Ruin_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Riding_to_Ruin_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Riding_to_Ruin_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Riding_to_Ruin_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Saurdew Valley]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Saurdew_Valley_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Saurdew_Valley_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Saurdew_Valley_");
static_assert(sizeof(MissionGraph_DLC3_C__Saurdew_Valley_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Saurdew_Valley_");
static_assert(offsetof(MissionGraph_DLC3_C__Saurdew_Valley_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Saurdew_Valley_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Saurdew_Valley_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Saurdew_Valley_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[The Dandy and Damsel]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__The_Dandy_and_Damsel_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__The_Dandy_and_Damsel_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__The_Dandy_and_Damsel_");
static_assert(sizeof(MissionGraph_DLC3_C__The_Dandy_and_Damsel_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__The_Dandy_and_Damsel_");
static_assert(offsetof(MissionGraph_DLC3_C__The_Dandy_and_Damsel_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__The_Dandy_and_Damsel_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__The_Dandy_and_Damsel_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__The_Dandy_and_Damsel_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[The Legend of McSmugger]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__The_Legend_of_McSmugger_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__The_Legend_of_McSmugger_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__The_Legend_of_McSmugger_");
static_assert(sizeof(MissionGraph_DLC3_C__The_Legend_of_McSmugger_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__The_Legend_of_McSmugger_");
static_assert(offsetof(MissionGraph_DLC3_C__The_Legend_of_McSmugger_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__The_Legend_of_McSmugger_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__The_Legend_of_McSmugger_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__The_Legend_of_McSmugger_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[The Meatman Prophecy]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__The_Meatman_Prophecy_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__The_Meatman_Prophecy_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__The_Meatman_Prophecy_");
static_assert(sizeof(MissionGraph_DLC3_C__The_Meatman_Prophecy_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__The_Meatman_Prophecy_");
static_assert(offsetof(MissionGraph_DLC3_C__The_Meatman_Prophecy_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__The_Meatman_Prophecy_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__The_Meatman_Prophecy_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__The_Meatman_Prophecy_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[The Name of the Law]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__The_Name_of_the_Law_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__The_Name_of_the_Law_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__The_Name_of_the_Law_");
static_assert(sizeof(MissionGraph_DLC3_C__The_Name_of_the_Law_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__The_Name_of_the_Law_");
static_assert(offsetof(MissionGraph_DLC3_C__The_Name_of_the_Law_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__The_Name_of_the_Law_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__The_Name_of_the_Law_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__The_Name_of_the_Law_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[The Quick and the Quickerer]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_");
static_assert(sizeof(MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_");
static_assert(offsetof(MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__The_Quick_and_the_Quickerer_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.[Where it all Started]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC3_C__Where_it_all_Started_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C__Where_it_all_Started_) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C__Where_it_all_Started_");
static_assert(sizeof(MissionGraph_DLC3_C__Where_it_all_Started_) == 0x000010, "Wrong size on MissionGraph_DLC3_C__Where_it_all_Started_");
static_assert(offsetof(MissionGraph_DLC3_C__Where_it_all_Started_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC3_C__Where_it_all_Started_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C__Where_it_all_Started_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC3_C__Where_it_all_Started_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC3.MissionGraph_DLC3_C.ExecuteUbergraph_MissionGraph_DLC3
// 0x0108 (0x0108 - 0x0000)
struct MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks15;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission15;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks9;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission9;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks8;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission8;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks7;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission7;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks6;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission6;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks5;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission5;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks4;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission4;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks10;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission10;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks11;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission11;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks12;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission12;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks3;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission3;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks2;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission2;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission1;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks13;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission13;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks14;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission14;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3) == 0x000008, "Wrong alignment on MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3");
static_assert(sizeof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3) == 0x000108, "Wrong size on MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, EntryPoint) == 0x000000, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::EntryPoint' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks15) == 0x000008, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks15' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission15) == 0x000010, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission15' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks9) == 0x000018, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks9' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission9) == 0x000020, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission9' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks8) == 0x000028, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks8' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission8) == 0x000030, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission8' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks7) == 0x000038, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks7' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission7) == 0x000040, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission7' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks6) == 0x000048, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks6' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission6) == 0x000050, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission6' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks5) == 0x000058, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks5' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission5) == 0x000060, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission5' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks4) == 0x000068, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks4' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission4) == 0x000070, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission4' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks10) == 0x000078, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks10' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission10) == 0x000080, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission10' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks11) == 0x000088, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks11' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission11) == 0x000090, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission11' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks12) == 0x000098, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks12' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission12) == 0x0000A0, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission12' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks3) == 0x0000A8, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks3' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission3) == 0x0000B0, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission3' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks2) == 0x0000B8, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks2' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission2) == 0x0000C0, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission2' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks1) == 0x0000C8, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks1' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission1) == 0x0000D0, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission1' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks) == 0x0000D8, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission) == 0x0000E0, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks13) == 0x0000E8, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks13' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission13) == 0x0000F0, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission13' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Unlocks14) == 0x0000F8, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Unlocks14' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3, MissionK2Node_MissionRefEvent_Next_Mission14) == 0x000100, "Member 'MissionGraph_DLC3_C_ExecuteUbergraph_MissionGraph_DLC3::MissionK2Node_MissionRefEvent_Next_Mission14' has a wrong offset!");

}

