#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Drone_Operative_SNTRY

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "GbxDialog_structs.hpp"


namespace SDK::Params
{

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ExecuteUbergraph_Drone_Operative_SNTRY
// 0x0308 (0x0308 - 0x0000)
struct Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0010(0x0218)()
	struct FDialogConversation                    CallFunc_FinishTriggerDialog_Conversation;         // 0x0228(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishTriggerDialog_SequenceID;           // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishTriggerDialog_ReturnValue;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsBoosting;            // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target;                               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0250(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdvanceCalledShotCount_bIsValid;          // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_KilledActor;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0268(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0278(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0290(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x02A8(0x0018)()
	bool                                          K2Node_Event_bPhasing;                             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Operative_C*                K2Node_DynamicCast_AsBPEvent_Hub_Operative;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x02F0(0x0018)()
};
static_assert(alignof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY");
static_assert(sizeof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY) == 0x000308, "Wrong size on Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, EntryPoint) == 0x000000, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::EntryPoint' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000004, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_NewDialogContext_ReturnValue) == 0x000010, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_FinishTriggerDialog_Conversation) == 0x000228, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_FinishTriggerDialog_Conversation' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_FinishTriggerDialog_SequenceID) == 0x000234, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_FinishTriggerDialog_SequenceID' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_FinishTriggerDialog_ReturnValue) == 0x000238, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_FinishTriggerDialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_Conv_IntToBool_ReturnValue) == 0x000239, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_ComponentBoundEvent_bIsBoosting) == 0x00023A, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_ComponentBoundEvent_bIsBoosting' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_Event_Target) == 0x000240, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_GetOwner_ReturnValue) == 0x000248, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_Event_Location) == 0x000250, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_AdvanceCalledShotCount_bIsValid) == 0x00025C, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_AdvanceCalledShotCount_bIsValid' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_Event_KilledActor) == 0x000260, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_Event_KilledActor' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000268, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_PostWwiseEvent_ReturnValue) == 0x000278, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_PostEventAtLocation_ReturnValue) == 0x000290, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_PostWwiseEvent_ReturnValue1) == 0x0002A8, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_Event_bPhasing) == 0x0002C0, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_Event_bPhasing' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_HasAuthority_ReturnValue) == 0x0002C1, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x0002C4, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_GetOwner_ReturnValue1) == 0x0002C8, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002D0, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_GetComponentByClass_ReturnValue) == 0x0002D8, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_DynamicCast_AsBPEvent_Hub_Operative) == 0x0002E0, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_DynamicCast_AsBPEvent_Hub_Operative' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, K2Node_DynamicCast_bSuccess) == 0x0002E8, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY, CallFunc_PostWwiseEvent_ReturnValue2) == 0x0002F0, "Member 'Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetDronePhasing
// 0x0001 (0x0001 - 0x0000)
struct Drone_Operative_SNTRY_C_SetDronePhasing final
{
public:
	bool                                          bPhasing;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_SetDronePhasing) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_SetDronePhasing");
static_assert(sizeof(Drone_Operative_SNTRY_C_SetDronePhasing) == 0x000001, "Wrong size on Drone_Operative_SNTRY_C_SetDronePhasing");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetDronePhasing, bPhasing) == 0x000000, "Member 'Drone_Operative_SNTRY_C_SetDronePhasing::bPhasing' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnCalledShotKill
// 0x0008 (0x0008 - 0x0000)
struct Drone_Operative_SNTRY_C_OnCalledShotKill final
{
public:
	class AActor*                                 KilledActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_OnCalledShotKill) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_OnCalledShotKill");
static_assert(sizeof(Drone_Operative_SNTRY_C_OnCalledShotKill) == 0x000008, "Wrong size on Drone_Operative_SNTRY_C_OnCalledShotKill");
static_assert(offsetof(Drone_Operative_SNTRY_C_OnCalledShotKill, KilledActor) == 0x000000, "Member 'Drone_Operative_SNTRY_C_OnCalledShotKill::KilledActor' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnCalledShotActivated
// 0x000C (0x000C - 0x0000)
struct Drone_Operative_SNTRY_C_OnCalledShotActivated final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_OnCalledShotActivated) == 0x000004, "Wrong alignment on Drone_Operative_SNTRY_C_OnCalledShotActivated");
static_assert(sizeof(Drone_Operative_SNTRY_C_OnCalledShotActivated) == 0x00000C, "Wrong size on Drone_Operative_SNTRY_C_OnCalledShotActivated");
static_assert(offsetof(Drone_Operative_SNTRY_C_OnCalledShotActivated, Location) == 0x000000, "Member 'Drone_Operative_SNTRY_C_OnCalledShotActivated::Location' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ApplyCollisionDamageToTarget
// 0x0008 (0x0008 - 0x0000)
struct Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget");
static_assert(sizeof(Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget) == 0x000008, "Wrong size on Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget");
static_assert(offsetof(Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget, Target) == 0x000000, "Member 'Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget::Target' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY
// 0x0001 (0x0001 - 0x0000)
struct Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY final
{
public:
	bool                                          bIsBoosting;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY");
static_assert(sizeof(Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY) == 0x000001, "Wrong size on Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY");
static_assert(offsetof(Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY, bIsBoosting) == 0x000000, "Member 'Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY::bIsBoosting' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DropPayload
// 0x00C0 (0x00C0 - 0x0000)
struct Drone_Operative_SNTRY_C_DropPayload final
{
public:
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInterface_Operative_Character_C> K2Node_DynamicCast_AsInterface_Operative_Character; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnAndThrowOperativeGrenade_Res;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnAndThrowOperativeGrenade_Grenade;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_DropPayload) == 0x000010, "Wrong alignment on Drone_Operative_SNTRY_C_DropPayload");
static_assert(sizeof(Drone_Operative_SNTRY_C_DropPayload) == 0x0000C0, "Wrong size on Drone_Operative_SNTRY_C_DropPayload");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_RandomUnitVector_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_BreakTransform_Location) == 0x000060, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, K2Node_DynamicCast_AsInterface_Operative_Character) == 0x000088, "Member 'Drone_Operative_SNTRY_C_DropPayload::K2Node_DynamicCast_AsInterface_Operative_Character' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'Drone_Operative_SNTRY_C_DropPayload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_SpawnAndThrowOperativeGrenade_Res) == 0x000099, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_SpawnAndThrowOperativeGrenade_Res' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_SpawnAndThrowOperativeGrenade_Grenade) == 0x0000A0, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_SpawnAndThrowOperativeGrenade_Grenade' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_K2_TeleportTo_ReturnValue) == 0x0000A8, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_GetVelocity_ReturnValue) == 0x0000AC, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DropPayload, CallFunc_VSize_ReturnValue) == 0x0000B8, "Member 'Drone_Operative_SNTRY_C_DropPayload::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetExhaustFXEnabled
// 0x0001 (0x0001 - 0x0000)
struct Drone_Operative_SNTRY_C_SetExhaustFXEnabled final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_SetExhaustFXEnabled) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_SetExhaustFXEnabled");
static_assert(sizeof(Drone_Operative_SNTRY_C_SetExhaustFXEnabled) == 0x000001, "Wrong size on Drone_Operative_SNTRY_C_SetExhaustFXEnabled");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetExhaustFXEnabled, bIsEnabled) == 0x000000, "Member 'Drone_Operative_SNTRY_C_SetExhaustFXEnabled::bIsEnabled' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.GetMoveDelayForTarget
// 0x0004 (0x0004 - 0x0000)
struct Drone_Operative_SNTRY_C_GetMoveDelayForTarget final
{
public:
	float                                         Res;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_GetMoveDelayForTarget) == 0x000004, "Wrong alignment on Drone_Operative_SNTRY_C_GetMoveDelayForTarget");
static_assert(sizeof(Drone_Operative_SNTRY_C_GetMoveDelayForTarget) == 0x000004, "Wrong size on Drone_Operative_SNTRY_C_GetMoveDelayForTarget");
static_assert(offsetof(Drone_Operative_SNTRY_C_GetMoveDelayForTarget, Res) == 0x000000, "Member 'Drone_Operative_SNTRY_C_GetMoveDelayForTarget::Res' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.CauseCollisionDamageToEnemy
// 0x00E0 (0x00E0 - 0x0000)
struct Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy final
{
public:
	class AActor*                                 Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  ColDamage;                                         // 0x0008(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0020(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy");
static_assert(sizeof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy) == 0x0000E0, "Wrong size on Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, Enemy) == 0x000000, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, ColDamage) == 0x000008, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::ColDamage' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, Temp_struct_Variable) == 0x000020, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x0000C4, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000C8, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x0000D4, "Member 'Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupCryoBullets
// 0x0001 (0x0001 - 0x0000)
struct Drone_Operative_SNTRY_C_SetupCryoBullets final
{
public:
	bool                                          CallFunc_HasGRMLNMod_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_SetupCryoBullets) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_SetupCryoBullets");
static_assert(sizeof(Drone_Operative_SNTRY_C_SetupCryoBullets) == 0x000001, "Wrong size on Drone_Operative_SNTRY_C_SetupCryoBullets");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCryoBullets, CallFunc_HasGRMLNMod_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_SetupCryoBullets::CallFunc_HasGRMLNMod_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupStaticField
// 0x0001 (0x0001 - 0x0000)
struct Drone_Operative_SNTRY_C_SetupStaticField final
{
public:
	bool                                          CallFunc_HasGRMLNMod_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_SetupStaticField) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_SetupStaticField");
static_assert(sizeof(Drone_Operative_SNTRY_C_SetupStaticField) == 0x000001, "Wrong size on Drone_Operative_SNTRY_C_SetupStaticField");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupStaticField, CallFunc_HasGRMLNMod_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_SetupStaticField::CallFunc_HasGRMLNMod_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupCalledShot
// 0x0068 (0x0068 - 0x0000)
struct Drone_Operative_SNTRY_C_SetupCalledShot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  CalledShotRockets;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_Make_Transforms_Around_Cone_Out_Transforms; // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(Drone_Operative_SNTRY_C_SetupCalledShot) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_SetupCalledShot");
static_assert(sizeof(Drone_Operative_SNTRY_C_SetupCalledShot) == 0x000068, "Wrong size on Drone_Operative_SNTRY_C_SetupCalledShot");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, Location) == 0x000000, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::Location' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CalledShotRockets) == 0x000010, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CalledShotRockets' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x00002C, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_FTrunc_ReturnValue) == 0x00003C, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_GetActorUpVector_ReturnValue) == 0x000040, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_Normal_ReturnValue) == 0x00004C, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_SetupCalledShot, CallFunc_Make_Transforms_Around_Cone_Out_Transforms) == 0x000058, "Member 'Drone_Operative_SNTRY_C_SetupCalledShot::CallFunc_Make_Transforms_Around_Cone_Out_Transforms' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.AdvanceCalledShotCount
// 0x0230 (0x0230 - 0x0000)
struct Drone_Operative_SNTRY_C_AdvanceCalledShotCount final
{
public:
	bool                                          bIsValid;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  Damage;                                            // 0x0008(0x0018)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakLightProjectileInitializationData  K2Node_MakeStruct_OakLightProjectileInitializationData; // 0x00C8(0x0158)(ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount) == 0x000010, "Wrong alignment on Drone_Operative_SNTRY_C_AdvanceCalledShotCount");
static_assert(sizeof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount) == 0x000230, "Wrong size on Drone_Operative_SNTRY_C_AdvanceCalledShotCount");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, bIsValid) == 0x000000, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::bIsValid' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, Damage) == 0x000008, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::Damage' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, Temp_int_Variable) == 0x000020, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000030, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_GetActorUpVector_ReturnValue) == 0x000034, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_Array_Get_Item) == 0x000070, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C4, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, K2Node_MakeStruct_OakLightProjectileInitializationData) == 0x0000C8, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::K2Node_MakeStruct_OakLightProjectileInitializationData' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_AdvanceCalledShotCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000220, "Member 'Drone_Operative_SNTRY_C_AdvanceCalledShotCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.RefundDuration
// 0x0004 (0x0004 - 0x0000)
struct Drone_Operative_SNTRY_C_RefundDuration final
{
public:
	float                                         Val;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_RefundDuration) == 0x000004, "Wrong alignment on Drone_Operative_SNTRY_C_RefundDuration");
static_assert(sizeof(Drone_Operative_SNTRY_C_RefundDuration) == 0x000004, "Wrong size on Drone_Operative_SNTRY_C_RefundDuration");
static_assert(offsetof(Drone_Operative_SNTRY_C_RefundDuration, Val) == 0x000000, "Member 'Drone_Operative_SNTRY_C_RefundDuration::Val' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DispatchCalledShotRestorationParticles
// 0x01F8 (0x01F8 - 0x0000)
struct Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles final
{
public:
	class AActor*                                 KilledTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SourceTarget;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00B8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles");
static_assert(sizeof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles) == 0x0001F8, "Wrong size on Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, KilledTarget) == 0x000000, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::KilledTarget' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, SourceTarget) == 0x000008, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::SourceTarget' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, Temp_int_Variable) == 0x000010, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000018, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_GetActorForwardVector_ReturnValue) == 0x00001C, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_GetActorRightVector_ReturnValue) == 0x00002C, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_GetActorUpVector_ReturnValue) == 0x00003C, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_RandomFloatInRange_ReturnValue) == 0x000070, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000074, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000080, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_RandomFloatInRange_ReturnValue1) == 0x00008C, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000090, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Add_VectorVector_ReturnValue1) == 0x00009C, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, CallFunc_Add_VectorVector_ReturnValue2) == 0x0000A8, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000B8, "Member 'Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.RegisterDelegates
// 0x0040 (0x0040 - 0x0000)
struct Drone_Operative_SNTRY_C_RegisterDelegates final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasGRMLNMod_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakPlayerAbilityEventHub_Operative*    K2Node_DynamicCast_AsOak_Player_Ability_Event_Hub_Operative; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_RegisterDelegates) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_RegisterDelegates");
static_assert(sizeof(Drone_Operative_SNTRY_C_RegisterDelegates) == 0x000040, "Wrong size on Drone_Operative_SNTRY_C_RegisterDelegates");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, CallFunc_HasGRMLNMod_ReturnValue) == 0x000028, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::CallFunc_HasGRMLNMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, K2Node_DynamicCast_AsOak_Player_Ability_Event_Hub_Operative) == 0x000030, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::K2Node_DynamicCast_AsOak_Player_Ability_Event_Hub_Operative' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_RegisterDelegates, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Drone_Operative_SNTRY_C_RegisterDelegates::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnSimCalledShotRelease
// 0x0020 (0x0020 - 0x0000)
struct Drone_Operative_SNTRY_C_OnSimCalledShotRelease final
{
public:
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2_GetActionByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAction_Operative_CalledShot_C*         K2Node_DynamicCast_AsAction_Operative_Called_Shot; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_OnSimCalledShotRelease) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_OnSimCalledShotRelease");
static_assert(sizeof(Drone_Operative_SNTRY_C_OnSimCalledShotRelease) == 0x000020, "Wrong size on Drone_Operative_SNTRY_C_OnSimCalledShotRelease");
static_assert(offsetof(Drone_Operative_SNTRY_C_OnSimCalledShotRelease, CallFunc_GetInstigator_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_OnSimCalledShotRelease::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_OnSimCalledShotRelease, CallFunc_K2_GetActionByClass_ReturnValue) == 0x000008, "Member 'Drone_Operative_SNTRY_C_OnSimCalledShotRelease::CallFunc_K2_GetActionByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_OnSimCalledShotRelease, K2Node_DynamicCast_AsAction_Operative_Called_Shot) == 0x000010, "Member 'Drone_Operative_SNTRY_C_OnSimCalledShotRelease::K2Node_DynamicCast_AsAction_Operative_Called_Shot' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_OnSimCalledShotRelease, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Drone_Operative_SNTRY_C_OnSimCalledShotRelease::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ConfigureCryoEmitter
// 0x0003 (0x0003 - 0x0000)
struct Drone_Operative_SNTRY_C_ConfigureCryoEmitter final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_ConfigureCryoEmitter) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_ConfigureCryoEmitter");
static_assert(sizeof(Drone_Operative_SNTRY_C_ConfigureCryoEmitter) == 0x000003, "Wrong size on Drone_Operative_SNTRY_C_ConfigureCryoEmitter");
static_assert(offsetof(Drone_Operative_SNTRY_C_ConfigureCryoEmitter, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_ConfigureCryoEmitter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ConfigureCryoEmitter, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'Drone_Operative_SNTRY_C_ConfigureCryoEmitter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ConfigureCryoEmitter, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Drone_Operative_SNTRY_C_ConfigureCryoEmitter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ConfigureDigistruct
// 0x0010 (0x0010 - 0x0000)
struct Drone_Operative_SNTRY_C_ConfigureDigistruct final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Drone_Operative_SNTRY_C_ConfigureDigistruct) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_ConfigureDigistruct");
static_assert(sizeof(Drone_Operative_SNTRY_C_ConfigureDigistruct) == 0x000010, "Wrong size on Drone_Operative_SNTRY_C_ConfigureDigistruct");
static_assert(offsetof(Drone_Operative_SNTRY_C_ConfigureDigistruct, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_ConfigureDigistruct::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ConfigureDigistruct, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000008, "Member 'Drone_Operative_SNTRY_C_ConfigureDigistruct::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.FindNewTargetAutonomous
// 0x00D0 (0x00D0 - 0x0000)
struct Drone_Operative_SNTRY_C_FindNewTargetAutonomous final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        FindTargetParams;                                  // 0x0008(0x00B8)(Edit, BlueprintVisible, ContainsInstancedReference)
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_FindNewTargetAutonomous) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_FindNewTargetAutonomous");
static_assert(sizeof(Drone_Operative_SNTRY_C_FindNewTargetAutonomous) == 0x0000D0, "Wrong size on Drone_Operative_SNTRY_C_FindNewTargetAutonomous");
static_assert(offsetof(Drone_Operative_SNTRY_C_FindNewTargetAutonomous, ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_FindNewTargetAutonomous::ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_FindNewTargetAutonomous, FindTargetParams) == 0x000008, "Member 'Drone_Operative_SNTRY_C_FindNewTargetAutonomous::FindTargetParams' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_FindNewTargetAutonomous, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x0000C0, "Member 'Drone_Operative_SNTRY_C_FindNewTargetAutonomous::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_FindNewTargetAutonomous, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x0000C8, "Member 'Drone_Operative_SNTRY_C_FindNewTargetAutonomous::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.CreateBadDoseBeamToTarget
// 0x02B8 (0x02B8 - 0x0000)
struct Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  FatigueDuration;                                   // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  FatigueRayDamage;                                  // 0x0028(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  BaseStatusEffectChance;                            // 0x0040(0x0018)(Edit, BlueprintVisible, NoDestructor)
	class FName                                   BeamID;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BeamTarget;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0070(0x0038)(NoDestructor)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x00B0(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec1;               // 0x00C8(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue1;             // 0x0100(0x0018)(NoDestructor, ContainsInstancedReference)
	class UGbxSkeletalMeshComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue2; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x0128(0x0028)(NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0158(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FOakLightBeamInitializationData        K2Node_MakeStruct_OakLightBeamInitializationData;  // 0x0180(0x0138)(ContainsInstancedReference)
};
static_assert(alignof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget");
static_assert(sizeof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget) == 0x0002B8, "Wrong size on Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, TargetActor) == 0x000000, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, BeamName) == 0x000008, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::BeamName' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, FatigueDuration) == 0x000010, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::FatigueDuration' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, FatigueRayDamage) == 0x000028, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::FatigueRayDamage' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, BaseStatusEffectChance) == 0x000040, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::BaseStatusEffectChance' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, BeamID) == 0x000058, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::BeamID' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, BeamTarget) == 0x000060, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::BeamTarget' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000068, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, K2Node_MakeStruct_StatusEffectSpec) == 0x000070, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x0000A8, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_AddStatusEffect_ReturnValue) == 0x0000B0, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, K2Node_MakeStruct_StatusEffectSpec1) == 0x0000C8, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::K2Node_MakeStruct_StatusEffectSpec1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_AddStatusEffect_ReturnValue1) == 0x000100, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_AddStatusEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000118, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue2) == 0x000120, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, K2Node_MakeStruct_LightBeamAttachment) == 0x000128, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000150, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, K2Node_MakeStruct_LightBeamAttachment1) == 0x000158, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget, K2Node_MakeStruct_OakLightBeamInitializationData) == 0x000180, "Member 'Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget::K2Node_MakeStruct_OakLightBeamInitializationData' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.CreateStaticFieldBeamToTarget
// 0x01F8 (0x01F8 - 0x0000)
struct Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  StaticFieldDamage;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  BaseStatusEffectChance;                            // 0x0028(0x0018)(Edit, BlueprintVisible, NoDestructor)
	class FName                                   BeamID;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BeamTarget;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x0060(0x0028)(NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue2; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0090(0x0028)(NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue3; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakLightBeamInitializationData        K2Node_MakeStruct_OakLightBeamInitializationData;  // 0x00C0(0x0138)(ContainsInstancedReference)
};
static_assert(alignof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget");
static_assert(sizeof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget) == 0x0001F8, "Wrong size on Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, TargetActor) == 0x000000, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, BeamName) == 0x000008, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::BeamName' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, StaticFieldDamage) == 0x000010, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::StaticFieldDamage' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, BaseStatusEffectChance) == 0x000028, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::BaseStatusEffectChance' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, BeamID) == 0x000040, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::BeamID' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, BeamTarget) == 0x000048, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::BeamTarget' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000058, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, K2Node_MakeStruct_LightBeamAttachment) == 0x000060, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x000088, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue2) == 0x00008C, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, K2Node_MakeStruct_LightBeamAttachment1) == 0x000090, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue3) == 0x0000B8, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget, K2Node_MakeStruct_OakLightBeamInitializationData) == 0x0000C0, "Member 'Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget::K2Node_MakeStruct_OakLightBeamInitializationData' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ApplyShieldDamageRefund
// 0x00A8 (0x00A8 - 0x0000)
struct Drone_Operative_SNTRY_C_ApplyShieldDamageRefund final
{
public:
	class AActor*                                 CurrentTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastDamageLocation;                                // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalRefund;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0018(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Drone_Operative_SNTRY_C_ApplyShieldDamageRefund) == 0x000008, "Wrong alignment on Drone_Operative_SNTRY_C_ApplyShieldDamageRefund");
static_assert(sizeof(Drone_Operative_SNTRY_C_ApplyShieldDamageRefund) == 0x0000A8, "Wrong size on Drone_Operative_SNTRY_C_ApplyShieldDamageRefund");
static_assert(offsetof(Drone_Operative_SNTRY_C_ApplyShieldDamageRefund, CurrentTarget) == 0x000000, "Member 'Drone_Operative_SNTRY_C_ApplyShieldDamageRefund::CurrentTarget' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ApplyShieldDamageRefund, LastDamageLocation) == 0x000008, "Member 'Drone_Operative_SNTRY_C_ApplyShieldDamageRefund::LastDamageLocation' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ApplyShieldDamageRefund, TotalRefund) == 0x000014, "Member 'Drone_Operative_SNTRY_C_ApplyShieldDamageRefund::TotalRefund' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_ApplyShieldDamageRefund, Temp_struct_Variable) == 0x000018, "Member 'Drone_Operative_SNTRY_C_ApplyShieldDamageRefund::Temp_struct_Variable' has a wrong offset!");

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.HasValidDroneTarget
// 0x0003 (0x0003 - 0x0000)
struct Drone_Operative_SNTRY_C_HasValidDroneTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHostile_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasValidDroneTarget_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Drone_Operative_SNTRY_C_HasValidDroneTarget) == 0x000001, "Wrong alignment on Drone_Operative_SNTRY_C_HasValidDroneTarget");
static_assert(sizeof(Drone_Operative_SNTRY_C_HasValidDroneTarget) == 0x000003, "Wrong size on Drone_Operative_SNTRY_C_HasValidDroneTarget");
static_assert(offsetof(Drone_Operative_SNTRY_C_HasValidDroneTarget, ReturnValue) == 0x000000, "Member 'Drone_Operative_SNTRY_C_HasValidDroneTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_HasValidDroneTarget, CallFunc_IsHostile_ReturnValue) == 0x000001, "Member 'Drone_Operative_SNTRY_C_HasValidDroneTarget::CallFunc_IsHostile_ReturnValue' has a wrong offset!");
static_assert(offsetof(Drone_Operative_SNTRY_C_HasValidDroneTarget, CallFunc_HasValidDroneTarget_ReturnValue) == 0x000002, "Member 'Drone_Operative_SNTRY_C_HasValidDroneTarget::CallFunc_HasValidDroneTarget_ReturnValue' has a wrong offset!");

}

