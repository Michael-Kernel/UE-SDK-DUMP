#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_Ranged11

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Passive_Beastmaster_Ranged11.Passive_Beastmaster_Ranged11_C
// 0x0050 (0x0200 - 0x01B0)
class UPassive_Beastmaster_Ranged11_C final : public UOakPassiveAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(Transient, DuplicateTransient)
	struct FGameResourcePoolReference             NewResourcePool;                                   // 0x01B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	struct FRandomStream                          Stream_RandomChance;                               // 0x01D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Ranged11; // 0x01D8(0x0028)()

public:
	void ExecuteUbergraph_Passive_Beastmaster_Ranged11(int32 EntryPoint);
	void OnActivated();
	void OnCausedDamage_Ranged11(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnResumed();
	bool RandomChanceByGrade();
	EGbxAbilityState CalculateAbilityState();
	void NewFunction_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Passive_Beastmaster_Ranged11_C">();
	}
	static class UPassive_Beastmaster_Ranged11_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassive_Beastmaster_Ranged11_C>();
	}
};
static_assert(alignof(UPassive_Beastmaster_Ranged11_C) == 0x000008, "Wrong alignment on UPassive_Beastmaster_Ranged11_C");
static_assert(sizeof(UPassive_Beastmaster_Ranged11_C) == 0x000200, "Wrong size on UPassive_Beastmaster_Ranged11_C");
static_assert(offsetof(UPassive_Beastmaster_Ranged11_C, UberGraphFrame) == 0x0001B0, "Member 'UPassive_Beastmaster_Ranged11_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged11_C, NewResourcePool) == 0x0001B8, "Member 'UPassive_Beastmaster_Ranged11_C::NewResourcePool' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged11_C, Stream_RandomChance) == 0x0001D0, "Member 'UPassive_Beastmaster_Ranged11_C::Stream_RandomChance' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged11_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Ranged11) == 0x0001D8, "Member 'UPassive_Beastmaster_Ranged11_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Ranged11' has a wrong offset!");

}

