#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SocketSubsystemSpark

#include "Basic.hpp"

#include "OnlineSubsystemUtils_classes.hpp"


namespace SDK
{

// Class SocketSubsystemSpark.SparkNetConnection
// 0x0000 (0x19A0 - 0x19A0)
class USparkNetConnection : public UIpConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparkNetConnection">();
	}
	static class USparkNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparkNetConnection>();
	}
};
static_assert(alignof(USparkNetConnection) == 0x000008, "Wrong alignment on USparkNetConnection");
static_assert(sizeof(USparkNetConnection) == 0x0019A0, "Wrong size on USparkNetConnection");

// Class SocketSubsystemSpark.SparkBeaconNetConnection
// 0x0000 (0x19A0 - 0x19A0)
class USparkBeaconNetConnection final : public USparkNetConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparkBeaconNetConnection">();
	}
	static class USparkBeaconNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparkBeaconNetConnection>();
	}
};
static_assert(alignof(USparkBeaconNetConnection) == 0x000008, "Wrong alignment on USparkBeaconNetConnection");
static_assert(sizeof(USparkBeaconNetConnection) == 0x0019A0, "Wrong size on USparkBeaconNetConnection");

// Class SocketSubsystemSpark.SparkNetDriver
// 0x0018 (0x0590 - 0x0578)
class USparkNetDriver : public UIpNetDriver
{
public:
	bool                                          bIsPassthrough;                                    // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_579[0x17];                                     // 0x0579(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparkNetDriver">();
	}
	static class USparkNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparkNetDriver>();
	}
};
static_assert(alignof(USparkNetDriver) == 0x000008, "Wrong alignment on USparkNetDriver");
static_assert(sizeof(USparkNetDriver) == 0x000590, "Wrong size on USparkNetDriver");
static_assert(offsetof(USparkNetDriver, bIsPassthrough) == 0x000578, "Member 'USparkNetDriver::bIsPassthrough' has a wrong offset!");

// Class SocketSubsystemSpark.SparkBeaconNetDriver
// 0x0000 (0x0590 - 0x0590)
class USparkBeaconNetDriver final : public USparkNetDriver
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparkBeaconNetDriver">();
	}
	static class USparkBeaconNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparkBeaconNetDriver>();
	}
};
static_assert(alignof(USparkBeaconNetDriver) == 0x000008, "Wrong alignment on USparkBeaconNetDriver");
static_assert(sizeof(USparkBeaconNetDriver) == 0x000590, "Wrong size on USparkBeaconNetDriver");

}

