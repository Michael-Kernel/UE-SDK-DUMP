#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Anarchy

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_Anarchy.LightProjectile_Anarchy_C.OnRicochet
// 0x02D8 (0x02D8 - 0x0000)
struct LightProjectile_Anarchy_C_OnRicochet final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0098(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImpactData*                            CallFunc_GetImpactData_ReturnValue;                // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery;               // 0x0140(0x0018)(NoDestructor)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue;            // 0x0160(0x0010)(NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0198(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_Anarchy_C_OnRicochet) == 0x000008, "Wrong alignment on LightProjectile_Anarchy_C_OnRicochet");
static_assert(sizeof(LightProjectile_Anarchy_C_OnRicochet) == 0x0002D8, "Wrong size on LightProjectile_Anarchy_C_OnRicochet");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, Projectile) == 0x000000, "Member 'LightProjectile_Anarchy_C_OnRicochet::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, Hit) == 0x000008, "Member 'LightProjectile_Anarchy_C_OnRicochet::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, ImpactVelocity) == 0x000098, "Member 'LightProjectile_Anarchy_C_OnRicochet::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetDataTableValue_OutValue) == 0x0000A4, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetDataTableValue_ReturnValue) == 0x0000A8, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A9, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000AA, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_Time) == 0x0000AC, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_Distance) == 0x0000B0, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_Location) == 0x0000B4, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C0, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_Normal) == 0x0000CC, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D8, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_PhysMat) == 0x0000E8, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_HitActor) == 0x0000F0, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_HitComponent) == 0x0000F8, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_HitBoneName) == 0x000100, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_HitItem) == 0x000108, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_FaceIndex) == 0x00010C, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_TraceStart) == 0x000110, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_BreakHitResult_TraceEnd) == 0x00011C, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetInstigator_ReturnValue) == 0x000128, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetImpactData_ReturnValue) == 0x000130, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetImpactData_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetInstigator_ReturnValue1) == 0x000138, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, K2Node_MakeStruct_StatusEffectQuery) == 0x000140, "Member 'LightProjectile_Anarchy_C_OnRicochet::K2Node_MakeStruct_StatusEffectQuery' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetDataTableValue_OutValue1) == 0x000158, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_GetDataTableValue_ReturnValue1) == 0x00015C, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_QueryStatusEffect_ReturnValue) == 0x000160, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_QueryStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000170, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000174, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x000178, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x000180, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_Add_FloatFloat_ReturnValue) == 0x000184, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000188, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00018C, "Member 'LightProjectile_Anarchy_C_OnRicochet::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Anarchy_C_OnRicochet, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000198, "Member 'LightProjectile_Anarchy_C_OnRicochet::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

