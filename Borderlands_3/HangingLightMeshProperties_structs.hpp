#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HangingLightMeshProperties

#include "Basic.hpp"

#include "HangingLightMaterialProperties_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct HangingLightMeshProperties.HangingLightMeshProperties
// 0x0080 (0x0080 - 0x0000)
struct FHangingLightMeshProperties final
{
public:
	class UStaticMesh*                            LightMesh_2_7A507CC141C04D425A446498D2323671;      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHangingLightMaterialProperties> LightVariants_61_7E3ECD094187E165258EA99218B6D63F; // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                MeshLocalSpaceOffset_14_6A7567304E0918C1C21600BB1A50A1A7; // 0x0018(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CastShadows_53_A1DAA8BF4A36C83CF3F0FF98393FA748;   // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LightLocalSpaceOffset_16_869D3957426A61948C9E6F930873CB0D; // 0x0028(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLensFlares_25_CED87077489122DF45F8788F9D93268D; // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LensFlareOffset_18_A94670B2427CDAC3BA768693E52113DE; // 0x0038(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LensFlareIntensity_21_FBD1BB7F46EAC4CA471609B30E045261; // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InitialRotation_41_688E326B4F48B32699419B9670251EA2; // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               RandomRotation_43_3057458E4253B73D08C436B4DFDA4E3F; // 0x0054(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                InitialScale_46_819E2A2A413C4D569CD7CABCBD38481B;  // 0x0060(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomScale_48_C301AABC48E754E0482E03AA7094C8AC;   // 0x006C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CullDistanceStart_59_B3F720D2411C3EEDBC9EC28B55AE685A; // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CullDistanceEnd_60_6E16B5A145731858E77C0882B7D5FBF2; // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FHangingLightMeshProperties) == 0x000008, "Wrong alignment on FHangingLightMeshProperties");
static_assert(sizeof(FHangingLightMeshProperties) == 0x000080, "Wrong size on FHangingLightMeshProperties");
static_assert(offsetof(FHangingLightMeshProperties, LightMesh_2_7A507CC141C04D425A446498D2323671) == 0x000000, "Member 'FHangingLightMeshProperties::LightMesh_2_7A507CC141C04D425A446498D2323671' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, LightVariants_61_7E3ECD094187E165258EA99218B6D63F) == 0x000008, "Member 'FHangingLightMeshProperties::LightVariants_61_7E3ECD094187E165258EA99218B6D63F' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, MeshLocalSpaceOffset_14_6A7567304E0918C1C21600BB1A50A1A7) == 0x000018, "Member 'FHangingLightMeshProperties::MeshLocalSpaceOffset_14_6A7567304E0918C1C21600BB1A50A1A7' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, CastShadows_53_A1DAA8BF4A36C83CF3F0FF98393FA748) == 0x000024, "Member 'FHangingLightMeshProperties::CastShadows_53_A1DAA8BF4A36C83CF3F0FF98393FA748' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, LightLocalSpaceOffset_16_869D3957426A61948C9E6F930873CB0D) == 0x000028, "Member 'FHangingLightMeshProperties::LightLocalSpaceOffset_16_869D3957426A61948C9E6F930873CB0D' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, EnableLensFlares_25_CED87077489122DF45F8788F9D93268D) == 0x000034, "Member 'FHangingLightMeshProperties::EnableLensFlares_25_CED87077489122DF45F8788F9D93268D' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, LensFlareOffset_18_A94670B2427CDAC3BA768693E52113DE) == 0x000038, "Member 'FHangingLightMeshProperties::LensFlareOffset_18_A94670B2427CDAC3BA768693E52113DE' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, LensFlareIntensity_21_FBD1BB7F46EAC4CA471609B30E045261) == 0x000044, "Member 'FHangingLightMeshProperties::LensFlareIntensity_21_FBD1BB7F46EAC4CA471609B30E045261' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, InitialRotation_41_688E326B4F48B32699419B9670251EA2) == 0x000048, "Member 'FHangingLightMeshProperties::InitialRotation_41_688E326B4F48B32699419B9670251EA2' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, RandomRotation_43_3057458E4253B73D08C436B4DFDA4E3F) == 0x000054, "Member 'FHangingLightMeshProperties::RandomRotation_43_3057458E4253B73D08C436B4DFDA4E3F' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, InitialScale_46_819E2A2A413C4D569CD7CABCBD38481B) == 0x000060, "Member 'FHangingLightMeshProperties::InitialScale_46_819E2A2A413C4D569CD7CABCBD38481B' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, RandomScale_48_C301AABC48E754E0482E03AA7094C8AC) == 0x00006C, "Member 'FHangingLightMeshProperties::RandomScale_48_C301AABC48E754E0482E03AA7094C8AC' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, CullDistanceStart_59_B3F720D2411C3EEDBC9EC28B55AE685A) == 0x000078, "Member 'FHangingLightMeshProperties::CullDistanceStart_59_B3F720D2411C3EEDBC9EC28B55AE685A' has a wrong offset!");
static_assert(offsetof(FHangingLightMeshProperties, CullDistanceEnd_60_6E16B5A145731858E77C0882B7D5FBF2) == 0x00007C, "Member 'FHangingLightMeshProperties::CullDistanceEnd_60_6E16B5A145731858E77C0882B7D5FBF2' has a wrong offset!");

}

