#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_ATL_BaseWeapon

#include "Basic.hpp"

#include "BPWeap_ATL_BaseWeapon_classes.hpp"
#include "BPWeap_ATL_BaseWeapon_parameters.hpp"


namespace SDK
{

// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.ExecuteUbergraph_BPWeap_ATL_BaseWeapon
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_ATL_BaseWeapon_C::ExecuteUbergraph_BPWeap_ATL_BaseWeapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "ExecuteUbergraph_BPWeap_ATL_BaseWeapon");

	Params::BPWeap_ATL_BaseWeapon_C_ExecuteUbergraph_BPWeap_ATL_BaseWeapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.Weapon_NotifyPutDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          EventWeapon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_ATL_BaseWeapon_C::Weapon_NotifyPutDown(class AWeapon* EventWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "Weapon_NotifyPutDown");

	Params::BPWeap_ATL_BaseWeapon_C_Weapon_NotifyPutDown Parms{};

	Parms.EventWeapon = EventWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.ReEvaluateEmissive
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::ReEvaluateEmissive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "ReEvaluateEmissive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.SetEmissiveData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     BaseColor_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     HighlightColor_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     MarkerBaseColor_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     MarkerHighlightColor_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     HomingOverrideBase                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     NewParamHomingOverrideHighlight                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_ATL_BaseWeapon_C::SetEmissiveData(const struct FLinearColor& BaseColor_0, const struct FLinearColor& HighlightColor_0, const struct FLinearColor& MarkerBaseColor_0, const struct FLinearColor& MarkerHighlightColor_0, const struct FLinearColor& HomingOverrideBase, const struct FLinearColor& NewParamHomingOverrideHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "SetEmissiveData");

	Params::BPWeap_ATL_BaseWeapon_C_SetEmissiveData Parms{};

	Parms.BaseColor_0 = std::move(BaseColor_0);
	Parms.HighlightColor_0 = std::move(HighlightColor_0);
	Parms.MarkerBaseColor_0 = std::move(MarkerBaseColor_0);
	Parms.MarkerHighlightColor_0 = std::move(MarkerHighlightColor_0);
	Parms.HomingOverrideBase = std::move(HomingOverrideBase);
	Parms.NewParamHomingOverrideHighlight = std::move(NewParamHomingOverrideHighlight);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.NotifySwitchedMode_Event
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::NotifySwitchedMode_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "NotifySwitchedMode_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.Initialize Elemental Emissive
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::Initialize_Elemental_Emissive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "Initialize Elemental Emissive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.RemoveHomingTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HomingTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_ATL_BaseWeapon_C::RemoveHomingTarget(class AActor* HomingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "RemoveHomingTarget");

	Params::BPWeap_ATL_BaseWeapon_C_RemoveHomingTarget Parms{};

	Parms.HomingTarget = HomingTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.AddHomingTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HomingTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_ATL_BaseWeapon_C::AddHomingTarget(class AActor* HomingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "AddHomingTarget");

	Params::BPWeap_ATL_BaseWeapon_C_AddHomingTarget Parms{};

	Parms.HomingTarget = HomingTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.InitBaseGlow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::InitBaseGlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "InitBaseGlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.InitMarkerGlow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::InitMarkerGlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "InitMarkerGlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.InitHoming
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::InitHoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "InitHoming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.Notify_ReloadStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAutoReload                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeap_ATL_BaseWeapon_C::Notify_ReloadStarted(bool bAutoReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "Notify_ReloadStarted");

	Params::BPWeap_ATL_BaseWeapon_C_Notify_ReloadStarted Parms{};

	Parms.bAutoReload = bAutoReload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_ATL_BaseWeapon.BPWeap_ATL_BaseWeapon_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPWeap_ATL_BaseWeapon_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_ATL_BaseWeapon_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

