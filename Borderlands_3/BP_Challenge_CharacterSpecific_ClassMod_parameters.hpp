#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Challenge_CharacterSpecific_ClassMod

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Challenge_CharacterSpecific_ClassMod.BP_Challenge_CharacterSpecific_ClassMod_C.ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod
// 0x0004 (0x0004 - 0x0000)
struct BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod) == 0x000004, "Wrong alignment on BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod");
static_assert(sizeof(BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod) == 0x000004, "Wrong size on BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod, EntryPoint) == 0x000000, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific_ClassMod::EntryPoint' has a wrong offset!");

// Function BP_Challenge_CharacterSpecific_ClassMod.BP_Challenge_CharacterSpecific_ClassMod_C.CheckClassMod
// 0x0038 (0x0038 - 0x0000)
struct BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod final
{
public:
	class AActor*                                 EquippedActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     SlotData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEquippedInventoryForSlot_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBalanceStateComponent*        CallFunc_GetInventoryBalanceState_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryRarityData*                   CallFunc_GetInventoryRarityData_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod) == 0x000008, "Wrong alignment on BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod");
static_assert(sizeof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod) == 0x000038, "Wrong size on BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, EquippedActor) == 0x000000, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::EquippedActor' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, SlotData) == 0x000008, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::SlotData' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, CallFunc_GetEquippedInventoryForSlot_ReturnValue) == 0x000010, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::CallFunc_GetEquippedInventoryForSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, CallFunc_GetInventoryBalanceState_ReturnValue) == 0x000020, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::CallFunc_GetInventoryBalanceState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, CallFunc_GetInventoryRarityData_ReturnValue) == 0x000028, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::CallFunc_GetInventoryRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_CheckClassMod::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_Challenge_CharacterSpecific_ClassMod.BP_Challenge_CharacterSpecific_ClassMod_C.SetBinds
// 0x0020 (0x0020 - 0x0000)
struct BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindSet;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* EquippedActor, class UInventorySlotData* SlotData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds) == 0x000008, "Wrong alignment on BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds");
static_assert(sizeof(BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds) == 0x000020, "Wrong size on BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds, Character) == 0x000000, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds::Character' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds, BindSet) == 0x000008, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds::BindSet' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_Challenge_CharacterSpecific_ClassMod_C_SetBinds::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

