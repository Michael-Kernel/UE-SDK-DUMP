#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SlaughterGameState

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_SlaughterGameState.BP_SlaughterGameState_C.ExecuteUbergraph_BP_SlaughterGameState
// 0x0128 (0x0128 - 0x0000)
struct BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bBossWave, int32 CountdownDuration)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AOakPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 RoundNumber)>            K2Node_CreateDelegate_OutputDelegate3;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_RoundNumber1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBossWave;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_CountdownDuration;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AOakPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RoundNumber;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 RoundNumber)>            K2Node_CreateDelegate_OutputDelegate4;             // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState) == 0x000008, "Wrong alignment on BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState");
static_assert(sizeof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState) == 0x000128, "Wrong size on BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, EntryPoint) == 0x000000, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CreateDelegate_OutputDelegate2) == 0x000028, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CreateDelegate_OutputDelegate3) == 0x000038, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CustomEvent_RoundNumber1) == 0x000048, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CustomEvent_RoundNumber1' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CustomEvent_bBossWave) == 0x00004C, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CustomEvent_bBossWave' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CustomEvent_CountdownDuration) == 0x000050, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CustomEvent_CountdownDuration' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Conv_IntToString_ReturnValue1) == 0x000068, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_SelectString_ReturnValue) == 0x000088, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Concat_StrStr_ReturnValue1) == 0x000098, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CustomEvent_PlayerState) == 0x0000A8, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000B0, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_GetDisplayName_ReturnValue) == 0x0000C0, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000D0, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000E0, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CustomEvent_RoundNumber) == 0x0000F0, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CustomEvent_RoundNumber' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Conv_IntToString_ReturnValue2) == 0x0000F8, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, CallFunc_Concat_StrStr_ReturnValue5) == 0x000108, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState, K2Node_CreateDelegate_OutputDelegate4) == 0x000118, "Member 'BP_SlaughterGameState_C_ExecuteUbergraph_BP_SlaughterGameState::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");

// Function BP_SlaughterGameState.BP_SlaughterGameState_C.OnRoundComplete_Event_0
// 0x0004 (0x0004 - 0x0000)
struct BP_SlaughterGameState_C_OnRoundComplete_Event_0 final
{
public:
	int32                                         RoundNumber;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaughterGameState_C_OnRoundComplete_Event_0) == 0x000004, "Wrong alignment on BP_SlaughterGameState_C_OnRoundComplete_Event_0");
static_assert(sizeof(BP_SlaughterGameState_C_OnRoundComplete_Event_0) == 0x000004, "Wrong size on BP_SlaughterGameState_C_OnRoundComplete_Event_0");
static_assert(offsetof(BP_SlaughterGameState_C_OnRoundComplete_Event_0, RoundNumber) == 0x000000, "Member 'BP_SlaughterGameState_C_OnRoundComplete_Event_0::RoundNumber' has a wrong offset!");

// Function BP_SlaughterGameState.BP_SlaughterGameState_C.OnPlayerDied_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_SlaughterGameState_C_OnPlayerDied_Event_0 final
{
public:
	class AOakPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaughterGameState_C_OnPlayerDied_Event_0) == 0x000008, "Wrong alignment on BP_SlaughterGameState_C_OnPlayerDied_Event_0");
static_assert(sizeof(BP_SlaughterGameState_C_OnPlayerDied_Event_0) == 0x000008, "Wrong size on BP_SlaughterGameState_C_OnPlayerDied_Event_0");
static_assert(offsetof(BP_SlaughterGameState_C_OnPlayerDied_Event_0, PlayerState) == 0x000000, "Member 'BP_SlaughterGameState_C_OnPlayerDied_Event_0::PlayerState' has a wrong offset!");

// Function BP_SlaughterGameState.BP_SlaughterGameState_C.OnNewWave_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_SlaughterGameState_C_OnNewWave_Event_0 final
{
public:
	bool                                          bBossWave;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountdownDuration;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaughterGameState_C_OnNewWave_Event_0) == 0x000004, "Wrong alignment on BP_SlaughterGameState_C_OnNewWave_Event_0");
static_assert(sizeof(BP_SlaughterGameState_C_OnNewWave_Event_0) == 0x000008, "Wrong size on BP_SlaughterGameState_C_OnNewWave_Event_0");
static_assert(offsetof(BP_SlaughterGameState_C_OnNewWave_Event_0, bBossWave) == 0x000000, "Member 'BP_SlaughterGameState_C_OnNewWave_Event_0::bBossWave' has a wrong offset!");
static_assert(offsetof(BP_SlaughterGameState_C_OnNewWave_Event_0, CountdownDuration) == 0x000004, "Member 'BP_SlaughterGameState_C_OnNewWave_Event_0::CountdownDuration' has a wrong offset!");

// Function BP_SlaughterGameState.BP_SlaughterGameState_C.OnNewRound_Event_0
// 0x0004 (0x0004 - 0x0000)
struct BP_SlaughterGameState_C_OnNewRound_Event_0 final
{
public:
	int32                                         RoundNumber;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaughterGameState_C_OnNewRound_Event_0) == 0x000004, "Wrong alignment on BP_SlaughterGameState_C_OnNewRound_Event_0");
static_assert(sizeof(BP_SlaughterGameState_C_OnNewRound_Event_0) == 0x000004, "Wrong size on BP_SlaughterGameState_C_OnNewRound_Event_0");
static_assert(offsetof(BP_SlaughterGameState_C_OnNewRound_Event_0, RoundNumber) == 0x000000, "Member 'BP_SlaughterGameState_C_OnNewRound_Event_0::RoundNumber' has a wrong offset!");

}

