#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_SM_Hyperion

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPWeap_SM_Hyperion.BPWeap_SM_Hyperion_C.ExecuteUbergraph_BPWeap_SM_Hyperion
// 0x0030 (0x0030 - 0x0000)
struct BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        CallFunc_GetInventoryBalanceState_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTedioreWeaponBalanceStateComponent*    K2Node_DynamicCast_AsTediore_Weapon_Balance_State_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetTedioreProjectileClass_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAutoReload;                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion) == 0x000008, "Wrong alignment on BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion");
static_assert(sizeof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion) == 0x000030, "Wrong size on BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, EntryPoint) == 0x000000, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000004, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, CallFunc_GetInventoryBalanceState_ReturnValue) == 0x000008, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::CallFunc_GetInventoryBalanceState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, K2Node_DynamicCast_AsTediore_Weapon_Balance_State_Component) == 0x000010, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::K2Node_DynamicCast_AsTediore_Weapon_Balance_State_Component' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, CallFunc_GetTedioreProjectileClass_ReturnValue) == 0x000020, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::CallFunc_GetTedioreProjectileClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion, K2Node_Event_bAutoReload) == 0x000028, "Member 'BPWeap_SM_Hyperion_C_ExecuteUbergraph_BPWeap_SM_Hyperion::K2Node_Event_bAutoReload' has a wrong offset!");

// Function BPWeap_SM_Hyperion.BPWeap_SM_Hyperion_C.ShowWeapon
// 0x0020 (0x0020 - 0x0000)
struct BPWeap_SM_Hyperion_C_ShowWeapon final
{
public:
	class UWwiseAudioComponent*                   CallFunc_GetDefaultWwiseComponent_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BPWeap_SM_Hyperion_C_ShowWeapon) == 0x000008, "Wrong alignment on BPWeap_SM_Hyperion_C_ShowWeapon");
static_assert(sizeof(BPWeap_SM_Hyperion_C_ShowWeapon) == 0x000020, "Wrong size on BPWeap_SM_Hyperion_C_ShowWeapon");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ShowWeapon, CallFunc_GetDefaultWwiseComponent_ReturnValue) == 0x000000, "Member 'BPWeap_SM_Hyperion_C_ShowWeapon::CallFunc_GetDefaultWwiseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_ShowWeapon, CallFunc_PostWwiseEvent_ReturnValue) == 0x000008, "Member 'BPWeap_SM_Hyperion_C_ShowWeapon::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function BPWeap_SM_Hyperion.BPWeap_SM_Hyperion_C.HideWeapon
// 0x0018 (0x0018 - 0x0000)
struct BPWeap_SM_Hyperion_C_HideWeapon final
{
public:
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_SM_Hyperion_C_HideWeapon) == 0x000008, "Wrong alignment on BPWeap_SM_Hyperion_C_HideWeapon");
static_assert(sizeof(BPWeap_SM_Hyperion_C_HideWeapon) == 0x000018, "Wrong size on BPWeap_SM_Hyperion_C_HideWeapon");
static_assert(offsetof(BPWeap_SM_Hyperion_C_HideWeapon, Temp_struct_Variable) == 0x000000, "Member 'BPWeap_SM_Hyperion_C_HideWeapon::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_HideWeapon, CallFunc_K2Play_ReturnValue) == 0x000010, "Member 'BPWeap_SM_Hyperion_C_HideWeapon::CallFunc_K2Play_ReturnValue' has a wrong offset!");

// Function BPWeap_SM_Hyperion.BPWeap_SM_Hyperion_C.Tediore_WeaponData
// 0x0020 (0x0020 - 0x0000)
struct BPWeap_SM_Hyperion_C_Tediore_WeaponData final
{
public:
	float                                         DamageRadius;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageTypeClass;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMirvProjectiles;                                // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireRate;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LoadedAmmo;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ThrowType;                                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_SM_Hyperion_C_Tediore_WeaponData) == 0x000008, "Wrong alignment on BPWeap_SM_Hyperion_C_Tediore_WeaponData");
static_assert(sizeof(BPWeap_SM_Hyperion_C_Tediore_WeaponData) == 0x000020, "Wrong size on BPWeap_SM_Hyperion_C_Tediore_WeaponData");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Tediore_WeaponData, DamageRadius) == 0x000000, "Member 'BPWeap_SM_Hyperion_C_Tediore_WeaponData::DamageRadius' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Tediore_WeaponData, DamageTypeClass) == 0x000008, "Member 'BPWeap_SM_Hyperion_C_Tediore_WeaponData::DamageTypeClass' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Tediore_WeaponData, NumMirvProjectiles) == 0x000010, "Member 'BPWeap_SM_Hyperion_C_Tediore_WeaponData::NumMirvProjectiles' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Tediore_WeaponData, FireRate) == 0x000014, "Member 'BPWeap_SM_Hyperion_C_Tediore_WeaponData::FireRate' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Tediore_WeaponData, LoadedAmmo) == 0x000018, "Member 'BPWeap_SM_Hyperion_C_Tediore_WeaponData::LoadedAmmo' has a wrong offset!");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Tediore_WeaponData, ThrowType) == 0x00001C, "Member 'BPWeap_SM_Hyperion_C_Tediore_WeaponData::ThrowType' has a wrong offset!");

// Function BPWeap_SM_Hyperion.BPWeap_SM_Hyperion_C.Notify_ReloadStarted
// 0x0001 (0x0001 - 0x0000)
struct BPWeap_SM_Hyperion_C_Notify_ReloadStarted final
{
public:
	bool                                          bAutoReload;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_SM_Hyperion_C_Notify_ReloadStarted) == 0x000001, "Wrong alignment on BPWeap_SM_Hyperion_C_Notify_ReloadStarted");
static_assert(sizeof(BPWeap_SM_Hyperion_C_Notify_ReloadStarted) == 0x000001, "Wrong size on BPWeap_SM_Hyperion_C_Notify_ReloadStarted");
static_assert(offsetof(BPWeap_SM_Hyperion_C_Notify_ReloadStarted, bAutoReload) == 0x000000, "Member 'BPWeap_SM_Hyperion_C_Notify_ReloadStarted::bAutoReload' has a wrong offset!");

}

