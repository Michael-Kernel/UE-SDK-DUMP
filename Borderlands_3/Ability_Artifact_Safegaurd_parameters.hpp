#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_Safegaurd

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_Safegaurd.Ability_Artifact_Safegaurd_C.ExecuteUbergraph_Ability_Artifact_Safegaurd
// 0x0098 (0x0098 - 0x0000)
struct Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0008(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0040(0x0018)(NoDestructor, ContainsInstancedReference)
	TDelegate<void(struct FGroundSlamEndedDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0068(0x0028)(NoDestructor)
	struct FGroundSlamEndedDetails                K2Node_CustomEvent_Details;                        // 0x0090(0x0008)(ConstParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd) == 0x000008, "Wrong alignment on Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd");
static_assert(sizeof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd) == 0x000098, "Wrong size on Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd, EntryPoint) == 0x000000, "Member 'Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd, K2Node_MakeStruct_StatusEffectSpec) == 0x000008, "Member 'Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd, CallFunc_AddStatusEffect_ReturnValue) == 0x000040, "Member 'Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000068, "Member 'Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd, K2Node_CustomEvent_Details) == 0x000090, "Member 'Ability_Artifact_Safegaurd_C_ExecuteUbergraph_Ability_Artifact_Safegaurd::K2Node_CustomEvent_Details' has a wrong offset!");

// Function Ability_Artifact_Safegaurd.Ability_Artifact_Safegaurd_C.SlamEnd
// 0x0008 (0x0008 - 0x0000)
struct Ability_Artifact_Safegaurd_C_SlamEnd final
{
public:
	struct FGroundSlamEndedDetails                Details;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Safegaurd_C_SlamEnd) == 0x000004, "Wrong alignment on Ability_Artifact_Safegaurd_C_SlamEnd");
static_assert(sizeof(Ability_Artifact_Safegaurd_C_SlamEnd) == 0x000008, "Wrong size on Ability_Artifact_Safegaurd_C_SlamEnd");
static_assert(offsetof(Ability_Artifact_Safegaurd_C_SlamEnd, Details) == 0x000000, "Member 'Ability_Artifact_Safegaurd_C_SlamEnd::Details' has a wrong offset!");

}

