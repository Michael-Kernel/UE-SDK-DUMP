#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IBPChar_DigiClone

#include "Basic.hpp"

#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function IBPChar_DigiClone.IBPChar_DigiClone_C.Get Owners Grenade Projectile Class
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class final
{
public:
	class UClass*                                 Grenade_Projectile_Class;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class) == 0x000008, "Wrong alignment on IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class");
static_assert(sizeof(IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class) == 0x000008, "Wrong size on IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class");
static_assert(offsetof(IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class, Grenade_Projectile_Class) == 0x000000, "Member 'IBPChar_DigiClone_C_Get_Owners_Grenade_Projectile_Class::Grenade_Projectile_Class' has a wrong offset!");

// Function IBPChar_DigiClone.IBPChar_DigiClone_C.AutomagicallyRegisterDamageOverride
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride final
{
public:
	EOakElementalType                             ElementalType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Grade;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride) == 0x000004, "Wrong alignment on IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride");
static_assert(sizeof(IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride) == 0x000008, "Wrong size on IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride");
static_assert(offsetof(IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride, ElementalType) == 0x000000, "Member 'IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride::ElementalType' has a wrong offset!");
static_assert(offsetof(IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride, Grade) == 0x000004, "Member 'IBPChar_DigiClone_C_AutomagicallyRegisterDamageOverride::Grade' has a wrong offset!");

// Function IBPChar_DigiClone.IBPChar_DigiClone_C.SetIsTeleporting
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_DigiClone_C_SetIsTeleporting final
{
public:
	bool                                          bIsTeleporting;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_DigiClone_C_SetIsTeleporting) == 0x000001, "Wrong alignment on IBPChar_DigiClone_C_SetIsTeleporting");
static_assert(sizeof(IBPChar_DigiClone_C_SetIsTeleporting) == 0x000001, "Wrong size on IBPChar_DigiClone_C_SetIsTeleporting");
static_assert(offsetof(IBPChar_DigiClone_C_SetIsTeleporting, bIsTeleporting) == 0x000000, "Member 'IBPChar_DigiClone_C_SetIsTeleporting::bIsTeleporting' has a wrong offset!");

}

