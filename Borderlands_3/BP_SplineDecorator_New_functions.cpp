#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineDecorator_New

#include "Basic.hpp"

#include "BP_SplineDecorator_New_classes.hpp"
#include "BP_SplineDecorator_New_parameters.hpp"


namespace SDK
{

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.GetResampledSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*                 NewParam                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineDecorator_New_C::GetResampledSpline(class USplineComponent** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "GetResampledSpline");

	Params::BP_SplineDecorator_New_C_GetResampledSpline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Check Overrides
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      Static_Mesh                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point_Offset                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineDecorator_New_C::Check_Overrides(int32 Index_0, class UStaticMesh** Static_Mesh, struct FVector* Point_Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "Check Overrides");

	Params::BP_SplineDecorator_New_C_Check_Overrides Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Static_Mesh != nullptr)
		*Static_Mesh = Parms.Static_Mesh;

	if (Point_Offset != nullptr)
		*Point_Offset = std::move(Parms.Point_Offset);
}


// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Show Spline Point Index
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineDecorator_New_C::Show_Spline_Point_Index()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "Show Spline Point Index");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Place Decoration
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_SplineDecoratorParams    Spline_Decoration_Params                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SplineDecorator_New_C::Place_Decoration(const struct FStruct_SplineDecoratorParams& Spline_Decoration_Params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "Place Decoration");

	Params::BP_SplineDecorator_New_C_Place_Decoration Parms{};

	Parms.Spline_Decoration_Params = std::move(Spline_Decoration_Params);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Genereate Spline Mesh Segments
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineDecorator_New_C::Genereate_Spline_Mesh_Segments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "Genereate Spline Mesh Segments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Resample Builder Spline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineDecorator_New_C::Resample_Builder_Spline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "Resample Builder Spline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineDecorator_New_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineDecorator_New_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

