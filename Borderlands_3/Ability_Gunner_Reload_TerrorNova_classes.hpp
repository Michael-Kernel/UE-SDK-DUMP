#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Gunner_Reload_TerrorNova

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Gunner_Reload_TerrorNova.Ability_Gunner_Reload_TerrorNova_C
// 0x0038 (0x0130 - 0x00F8)
class UAbility_Gunner_Reload_TerrorNova_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_TestEndGame; // 0x0100(0x0028)()
	class ABPChar_Player_C*                       Player;                                            // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Gunner_Reload_TerrorNova(int32 EntryPoint);
	void ReloadStarted(class AWeapon* EventWeapon, bool bAutoReload);
	void OnActivated();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Gunner_Reload_TerrorNova_C">();
	}
	static class UAbility_Gunner_Reload_TerrorNova_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Gunner_Reload_TerrorNova_C>();
	}
};
static_assert(alignof(UAbility_Gunner_Reload_TerrorNova_C) == 0x000008, "Wrong alignment on UAbility_Gunner_Reload_TerrorNova_C");
static_assert(sizeof(UAbility_Gunner_Reload_TerrorNova_C) == 0x000130, "Wrong size on UAbility_Gunner_Reload_TerrorNova_C");
static_assert(offsetof(UAbility_Gunner_Reload_TerrorNova_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Gunner_Reload_TerrorNova_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Gunner_Reload_TerrorNova_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_TestEndGame) == 0x000100, "Member 'UAbility_Gunner_Reload_TerrorNova_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_TestEndGame' has a wrong offset!");
static_assert(offsetof(UAbility_Gunner_Reload_TerrorNova_C, Player) == 0x000128, "Member 'UAbility_Gunner_Reload_TerrorNova_C::Player' has a wrong offset!");

}

