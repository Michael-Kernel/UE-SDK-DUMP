#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolumetricFog

#include "Basic.hpp"

#include "BP_VolumetricFog_classes.hpp"
#include "BP_VolumetricFog_parameters.hpp"


namespace SDK
{

// Function BP_VolumetricFog.BP_VolumetricFog_C.Set Properties
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VolumetricFog_C::Set_Properties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricFog_C", "Set Properties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VolumetricFog.BP_VolumetricFog_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VolumetricFog_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricFog_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VolumetricFog.BP_VolumetricFog_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VolumetricFog_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricFog_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VolumetricFog.BP_VolumetricFog_C.ExecuteUbergraph_BP_VolumetricFog
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VolumetricFog_C::ExecuteUbergraph_BP_VolumetricFog(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricFog_C", "ExecuteUbergraph_BP_VolumetricFog");

	Params::BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

