#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxMixer

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GbxMixer.GbxMixerSettings
// 0x0040 (0x0068 - 0x0028)
class UGbxMixerSettings final : public UObject
{
public:
	class FString                                 AppClientID;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequiredAuthScope;                                 // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MixplayProjectVersionID;                           // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BackendServiceURL;                                 // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxMixerSettings">();
	}
	static class UGbxMixerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxMixerSettings>();
	}
};
static_assert(alignof(UGbxMixerSettings) == 0x000008, "Wrong alignment on UGbxMixerSettings");
static_assert(sizeof(UGbxMixerSettings) == 0x000068, "Wrong size on UGbxMixerSettings");
static_assert(offsetof(UGbxMixerSettings, AppClientID) == 0x000028, "Member 'UGbxMixerSettings::AppClientID' has a wrong offset!");
static_assert(offsetof(UGbxMixerSettings, RequiredAuthScope) == 0x000038, "Member 'UGbxMixerSettings::RequiredAuthScope' has a wrong offset!");
static_assert(offsetof(UGbxMixerSettings, MixplayProjectVersionID) == 0x000048, "Member 'UGbxMixerSettings::MixplayProjectVersionID' has a wrong offset!");
static_assert(offsetof(UGbxMixerSettings, BackendServiceURL) == 0x000058, "Member 'UGbxMixerSettings::BackendServiceURL' has a wrong offset!");

}

