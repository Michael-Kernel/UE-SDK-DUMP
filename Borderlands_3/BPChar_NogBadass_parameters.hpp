#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_NogBadass

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPChar_NogBadass.BPChar_NogBadass_C.ExecuteUbergraph_BPChar_NogBadass
// 0x0280 (0x0280 - 0x0000)
struct BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_MaxTicks_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_TickRate_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_MaxDuration_Variable;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Running_Variable;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Current_Tick_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Current_Tick_Variable1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0028(0x0018)()
	class UBlackboardComponent*                   CallFunc_GetBlackboardComponent_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardFloat_Value;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardBool_Value;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Running_Variable1;                       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_MaxDuration_Variable1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WasDestroyed1;                        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OptionalDamageCauser;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x00C8(0x0018)()
	float                                         Temp_float_TickRate_Variable1;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_MaxTicks_Variable1;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBlackboardBool_Value1;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageReactionEventSummary            K2Node_CustomEvent_Damage;                         // 0x00F0(0x0060)(NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetHitRegionPercentHealth_ReturnValue;    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BadassDroneShieldSwitchByHealth_SwitchStateName; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NogBadass_C>      K2Node_DynamicCast_AsBPI_Nog_Badass;               // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_WasDestroyed;                         // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BadassDroneShieldSwitchByHealth_SwitchStateName1; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardBool_Value2;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget1;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DelayBetweenLaunch;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable2;                              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DefaultTarget;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x01B0(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Nog_BuffDrone_C>  K2Node_DynamicCast_AsBPI_Nog_Buff_Drone;           // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x0208(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue3;              // 0x0220(0x0018)()
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0248(0x0018)()
	bool                                          CallFunc_IsFacingTargetBP_ReturnValue;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enable1;                              // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enable;                               // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardBool_Value3;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass) == 0x000010, "Wrong alignment on BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass");
static_assert(sizeof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass) == 0x000280, "Wrong size on BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, EntryPoint) == 0x000000, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_int_MaxTicks_Variable) == 0x000004, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_int_MaxTicks_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_float_TickRate_Variable) == 0x000008, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_float_TickRate_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_float_MaxDuration_Variable) == 0x000010, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_float_MaxDuration_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_bool_Running_Variable) == 0x000014, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_bool_Running_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000015, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_int_Current_Tick_Variable) == 0x000018, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_int_Current_Tick_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_int_Current_Tick_Variable1) == 0x00001C, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_int_Current_Tick_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_PostWwiseEvent_ReturnValue) == 0x000028, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetBlackboardComponent_ReturnValue) == 0x000040, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetBlackboardComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_int_Variable) == 0x000048, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetBlackboardFloat_Value) == 0x00004C, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetBlackboardFloat_Value' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetBlackboardBool_Value) == 0x000050, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetBlackboardBool_Value' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_bool_Running_Variable1) == 0x000051, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_bool_Running_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_float_MaxDuration_Variable1) == 0x000054, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_float_MaxDuration_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000060, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000090, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_BreakTransform_Location) == 0x000094, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_BreakTransform_Scale) == 0x0000AC, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_WasDestroyed1) == 0x0000B8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_WasDestroyed1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_OptionalDamageCauser) == 0x0000C0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_OptionalDamageCauser' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_PostWwiseEvent_ReturnValue1) == 0x0000C8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_float_TickRate_Variable1) == 0x0000E0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_float_TickRate_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_int_MaxTicks_Variable1) == 0x0000E4, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_int_MaxTicks_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetBlackboardBool_Value1) == 0x0000E9, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetBlackboardBool_Value1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Greater_IntInt_ReturnValue1) == 0x0000EA, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_CustomEvent_Damage) == 0x0000F0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetHitRegionPercentHealth_ReturnValue) == 0x000150, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetHitRegionPercentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_BadassDroneShieldSwitchByHealth_SwitchStateName) == 0x000158, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_BadassDroneShieldSwitchByHealth_SwitchStateName' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000160, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_BooleanAND_ReturnValue) == 0x000161, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_DynamicCast_AsBPI_Nog_Badass) == 0x000168, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_DynamicCast_AsBPI_Nog_Badass' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_WasDestroyed) == 0x000179, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_WasDestroyed' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_bool_Variable) == 0x00017A, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, Temp_int_Variable1) == 0x00017C, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_HasAuthority_ReturnValue) == 0x000180, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000181, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_BadassDroneShieldSwitchByHealth_SwitchStateName1) == 0x000188, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_BadassDroneShieldSwitchByHealth_SwitchStateName1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetBlackboardBool_Value2) == 0x000190, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetBlackboardBool_Value2' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_MyTarget1) == 0x000198, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_MyTarget1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_DelayBetweenLaunch) == 0x0001A0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_DelayBetweenLaunch' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_Enable2) == 0x0001A4, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_Enable2' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_DefaultTarget) == 0x0001A8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_DefaultTarget' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x0001B0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetValueAsObject_ReturnValue) == 0x0001C8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001D0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_DynamicCast_AsBPI_Nog_Buff_Drone) == 0x0001D8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_DynamicCast_AsBPI_Nog_Buff_Drone' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_DynamicCast_bSuccess1) == 0x0001E8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0001EC, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_IsValid_ReturnValue1) == 0x0001F9, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Select_Default) == 0x000200, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_PostWwiseEvent_ReturnValue2) == 0x000208, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_PostWwiseEvent_ReturnValue3) == 0x000220, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_PostWwiseEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetSocketLocation_ReturnValue) == 0x000238, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_PostEventAtLocation_ReturnValue) == 0x000248, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_IsFacingTargetBP_ReturnValue) == 0x000260, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_IsFacingTargetBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_Enable1) == 0x000261, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_Enable1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_Enable) == 0x000262, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, K2Node_Event_MyTarget) == 0x000268, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass, CallFunc_GetBlackboardBool_Value3) == 0x000270, "Member 'BPChar_NogBadass_C_ExecuteUbergraph_BPChar_NogBadass::CallFunc_GetBlackboardBool_Value3' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_DeathLaserBarrage
// 0x0010 (0x0010 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_DeathLaserBarrage final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 MyTarget;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_DeathLaserBarrage) == 0x000008, "Wrong alignment on BPChar_NogBadass_C_NogBadass_DeathLaserBarrage");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_DeathLaserBarrage) == 0x000010, "Wrong size on BPChar_NogBadass_C_NogBadass_DeathLaserBarrage");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DeathLaserBarrage, Enable) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_DeathLaserBarrage::Enable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DeathLaserBarrage, MyTarget) == 0x000008, "Member 'BPChar_NogBadass_C_NogBadass_DeathLaserBarrage::MyTarget' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_AttackDeathLaserFX
// 0x0001 (0x0001 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX) == 0x000001, "Wrong alignment on BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX) == 0x000001, "Wrong size on BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX, Enable) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_AttackDeathLaserFX::Enable' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_DronenadoBarrage
// 0x0010 (0x0010 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_DronenadoBarrage final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DefaultTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_DronenadoBarrage) == 0x000008, "Wrong alignment on BPChar_NogBadass_C_NogBadass_DronenadoBarrage");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_DronenadoBarrage) == 0x000010, "Wrong size on BPChar_NogBadass_C_NogBadass_DronenadoBarrage");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DronenadoBarrage, Enable) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_DronenadoBarrage::Enable' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DronenadoBarrage, DefaultTarget) == 0x000008, "Member 'BPChar_NogBadass_C_NogBadass_DronenadoBarrage::DefaultTarget' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_LaunchAllDrones
// 0x0010 (0x0010 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_LaunchAllDrones final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenLaunch;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_LaunchAllDrones) == 0x000008, "Wrong alignment on BPChar_NogBadass_C_NogBadass_LaunchAllDrones");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_LaunchAllDrones) == 0x000010, "Wrong size on BPChar_NogBadass_C_NogBadass_LaunchAllDrones");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_LaunchAllDrones, MyTarget) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_LaunchAllDrones::MyTarget' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_LaunchAllDrones, DelayBetweenLaunch) == 0x000008, "Member 'BPChar_NogBadass_C_NogBadass_LaunchAllDrones::DelayBetweenLaunch' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_DroneShieldDisable_FromHitReaction
// 0x0001 (0x0001 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction final
{
public:
	bool                                          WasDestroyed;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction) == 0x000001, "Wrong alignment on BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction) == 0x000001, "Wrong size on BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction, WasDestroyed) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_DroneShieldDisable_FromHitReaction::WasDestroyed' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.DroneShieldDamage
// 0x0060 (0x0060 - 0x0000)
struct BPChar_NogBadass_C_DroneShieldDamage final
{
public:
	struct FDamageReactionEventSummary            Damage;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_NogBadass_C_DroneShieldDamage) == 0x000008, "Wrong alignment on BPChar_NogBadass_C_DroneShieldDamage");
static_assert(sizeof(BPChar_NogBadass_C_DroneShieldDamage) == 0x000060, "Wrong size on BPChar_NogBadass_C_DroneShieldDamage");
static_assert(offsetof(BPChar_NogBadass_C_DroneShieldDamage, Damage) == 0x000000, "Member 'BPChar_NogBadass_C_DroneShieldDamage::Damage' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_DroneShieldDisable
// 0x0010 (0x0010 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_DroneShieldDisable final
{
public:
	bool                                          WasDestroyed;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OptionalDamageCauser;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable) == 0x000008, "Wrong alignment on BPChar_NogBadass_C_NogBadass_DroneShieldDisable");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable) == 0x000010, "Wrong size on BPChar_NogBadass_C_NogBadass_DroneShieldDisable");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable, WasDestroyed) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_DroneShieldDisable::WasDestroyed' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_DroneShieldDisable, OptionalDamageCauser) == 0x000008, "Member 'BPChar_NogBadass_C_NogBadass_DroneShieldDisable::OptionalDamageCauser' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.BadassDroneShieldSwitchByHealth
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth final
{
public:
	float                                         DroneShieldHealth;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SwitchStateName;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth) == 0x000008, "Wrong alignment on BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth");
static_assert(sizeof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth) == 0x000018, "Wrong size on BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, DroneShieldHealth) == 0x000000, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::DroneShieldHealth' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, SwitchStateName) == 0x000008, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::SwitchStateName' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000012, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000013, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x000014, "Member 'BPChar_NogBadass_C_BadassDroneShieldSwitchByHealth::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");

// Function BPChar_NogBadass.BPChar_NogBadass_C.NogBadass_GetDroneBombHealthPctOfNog
// 0x0004 (0x0004 - 0x0000)
struct BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog final
{
public:
	float                                         HealthPctOfNog;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog) == 0x000004, "Wrong alignment on BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog");
static_assert(sizeof(BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog) == 0x000004, "Wrong size on BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog");
static_assert(offsetof(BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog, HealthPctOfNog) == 0x000000, "Member 'BPChar_NogBadass_C_NogBadass_GetDroneBombHealthPctOfNog::HealthPctOfNog' has a wrong offset!");

}

