#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Maya

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_Maya.BPI_Maya_C.NPCMayaHeliosBlast
// 0x0008 (0x0008 - 0x0000)
struct BPI_Maya_C_NPCMayaHeliosBlast final
{
public:
	class AActor*                                 HeliosTargetActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Maya_C_NPCMayaHeliosBlast) == 0x000008, "Wrong alignment on BPI_Maya_C_NPCMayaHeliosBlast");
static_assert(sizeof(BPI_Maya_C_NPCMayaHeliosBlast) == 0x000008, "Wrong size on BPI_Maya_C_NPCMayaHeliosBlast");
static_assert(offsetof(BPI_Maya_C_NPCMayaHeliosBlast, HeliosTargetActor) == 0x000000, "Member 'BPI_Maya_C_NPCMayaHeliosBlast::HeliosTargetActor' has a wrong offset!");

// Function BPI_Maya.BPI_Maya_C.NPCSirenPhaselockMove
// 0x0050 (0x0050 - 0x0000)
struct BPI_Maya_C_NPCSirenPhaselockMove final
{
public:
	class AActor*                                 ObjectToMove;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HoverTarget;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ObjectEndingTransform;                             // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         OverTime;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 MoveToNode;                                        // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Maya_C_NPCSirenPhaselockMove) == 0x000010, "Wrong alignment on BPI_Maya_C_NPCSirenPhaselockMove");
static_assert(sizeof(BPI_Maya_C_NPCSirenPhaselockMove) == 0x000050, "Wrong size on BPI_Maya_C_NPCSirenPhaselockMove");
static_assert(offsetof(BPI_Maya_C_NPCSirenPhaselockMove, ObjectToMove) == 0x000000, "Member 'BPI_Maya_C_NPCSirenPhaselockMove::ObjectToMove' has a wrong offset!");
static_assert(offsetof(BPI_Maya_C_NPCSirenPhaselockMove, HoverTarget) == 0x000008, "Member 'BPI_Maya_C_NPCSirenPhaselockMove::HoverTarget' has a wrong offset!");
static_assert(offsetof(BPI_Maya_C_NPCSirenPhaselockMove, ObjectEndingTransform) == 0x000010, "Member 'BPI_Maya_C_NPCSirenPhaselockMove::ObjectEndingTransform' has a wrong offset!");
static_assert(offsetof(BPI_Maya_C_NPCSirenPhaselockMove, OverTime) == 0x000040, "Member 'BPI_Maya_C_NPCSirenPhaselockMove::OverTime' has a wrong offset!");
static_assert(offsetof(BPI_Maya_C_NPCSirenPhaselockMove, MoveToNode) == 0x000048, "Member 'BPI_Maya_C_NPCSirenPhaselockMove::MoveToNode' has a wrong offset!");

}

