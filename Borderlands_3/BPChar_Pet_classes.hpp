#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Pet

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "BPChar_Enemy_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Pet.BPChar_Pet_C
// 0x0260 (0x25F0 - 0x2390)
#pragma pack(push, 0x1)
class alignas(0x10) ABPChar_Pet_C : public ABPChar_Enemy_C
{
public:
	uint8                                         Pad_2381[0x7];                                     // 0x2381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Pet_C;                       // 0x2388(0x0008)(Transient, DuplicateTransient)
	class UOakInventoryListComponent*             OakInventoryList;                                  // 0x2390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x2398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Rad_Audio;                                         // 0x23A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              FFYLReviveFX;                                      // 0x23A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BeastMaster_Pet_Healing_Looping;                // 0x23B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FFYL_ReviveFX_Off;                                 // 0x23B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FFYL_ReviveFX_On;                                  // 0x23C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BeastMaster_Pet_Mod2_RadAura_Off;               // 0x23C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BeastMaster_Pet_Mod2_RadAura;                   // 0x23D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AuraOff;                                           // 0x23D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AuraOn;                                            // 0x23E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              HulkOutRadiationAuraSwitch;                        // 0x23E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxCustomizationComponent*             GbxCustomization;                                  // 0x23F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPNPCFightForYourLifeComponent_C*      BPNPCFightForYourLifeComponent;                    // 0x23F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_UsableComponent_C*                  UsableComponentPet;                                // 0x2400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_2_A6C3A78149ABE084DCECBA9FADC6C2EB; // 0x2408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A6C3A78149ABE084DCECBA9FADC6C2EB; // 0x240C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_240D[0x3];                                     // 0x240D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x2410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   Beastmaster;                                       // 0x2418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 PetSpawnActionClass;                               // 0x2420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBeingReleased;                                  // 0x2428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2429[0x7];                                     // 0x2429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPEventHub_Beastmaster_C*              AbilityHub_Beastmaster;                            // 0x2430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ScriptedFFYLTarget;                                // 0x2438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakCharacter_Player*>           PlayerAllies;                                      // 0x2440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	EOakActionAbilityPetEvolutionType             EvolutionType;                                     // 0x2450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EOakActionAbilityPetType                      PetType;                                           // 0x2451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2452[0x2];                                     // 0x2452(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     PetSkagFrenzyPlayRate;                             // 0x2454(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UCharacterSoundTag*                     CSTPet_Death;                                      // 0x2460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSoundTag*                     CSTPet_Retreat;                                    // 0x2468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Rep_ScriptedPetTarget;                             // 0x2470(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UStatusEffectData*                      PlayerStatusEffectData;                            // 0x2478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectInstanceReference         PlayerStatusEffectRef;                             // 0x2480(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	struct FEnvQueryParams                        QueryAttackCommand;                                // 0x2498(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FHUDInWorldIconTargetInfo              PetAttackTargetICON;                               // 0x2550(0x0058)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	struct FGbxAttributeFloat                     Att_AttackCommand_Damage;                          // 0x25A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGbxAttributeFloat                     OnRep_TrackHealingFX;                              // 0x25B4(0x000C)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bIsInFFYL;                                         // 0x25C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25C1[0x3];                                     // 0x25C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EnragedActorScale;                                 // 0x25C4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnraged;                                        // 0x25D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_25D1[0x3];                                     // 0x25D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreEnragedActorScale;                              // 0x25D4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ClassModTauntFX;                                   // 0x25E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPChar_Pet(int32 EntryPoint);
	void PetJabbermon_ChangeGunVis(bool NewVisibility);
	void Beastmaster_FFYLStart();
	void Beastmaster_FFYLStop();
	void PetJabbermon_ChangeLauncherVis(bool NewVisibility);
	void OnDeath_FFYLScriptedTarget(class AActor* DamageReceiver, class AActor* DamageCauser);
	void Player_OnLevelUp(const int32 OldExperienceLevel, const int32 NewExperienceLevel);
	void PetJabbermon_FireRocket();
	void PetJabbermon_BarrelAlign(class AActor* NewBarrel);
	void PetJabbermon_BarrelSet(class AActor* NewBarrel);
	void OnInventoryPickedUp(class AActor* PickedUpActor, int32 Quantity);
	void OnInventoryUnequipped(class AActor* InventoryActor, class UInventorySlotData* SlotData);
	void OnInventoryEquipped(class AActor* InventoryActor, class UInventorySlotData* SlotData);
	void PetJabbermon_BarrelThrow();
	void BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_7_FightForYourLifeWithBoolEvent__DelegateSignature_BPChar_Pet(bool IsSuccessful);
	void PetSucceededRevive();
	void PetJabbermon_BarrelDrop();
	void PetAttackIconFinished(const struct FGameResourcePoolReference& ResourcePool);
	void InitializePetSpawned(class AOakCharacter_Player* Beastmaster_0, EOakActionAbilityPetEvolutionType EvolutionType_0);
	void OnHealingFXChanged(float OldValue, float NewValue);
	void BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_1_FightForYourLifeEvent__DelegateSignature_BPChar_Pet();
	void Pet_DownStateStart();
	void CancelPetEnrageScale();
	void ReversePetEnrageScale();
	void SetEnraged(bool bIsEnraged_0);
	void ReceiveDestroyed();
	void BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_5_CauseDeathDelegate__DelegateSignature_BPChar_Pet(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_4_FightForYourLifeEvent__DelegateSignature_BPChar_Pet();
	void BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_2_FightForYourLifeEvent__DelegateSignature_BPChar_Pet();
	void OnDeAggro_PlayerPets(float AggroDuration);
	void OnAggro_PlayerPets();
	void PetSpawnTrapProjectile();
	void OnPetReleased(bool bForced, EPetReleaseReason Reason);
	void PetJabbermon_ChangeMeleeVis(bool NewWeapVisibility);
	void BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_0_FightForYourLifeEvent__DelegateSignature_BPChar_Pet();
	void BndEvt__DamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Pet(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void BndEvt__DamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseDeathDelegate__DelegateSignature_BPChar_Pet(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void BeginAttackCommand();
	void BndEvt__UsableComponentPet_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Pet(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void PetJabbermon_Poop_Show();
	void OnBeastmasterCausedAnyDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnPetTargetDied(class AActor* DamageReceiver, class AActor* DamageCauser);
	void DoAttackCommand(class UObject* EnemyObject);
	void DoAttackCommandFail();
	void DoAttackCommandEQS();
	void PetJabbermon_Poop_Hide();
	void OnEnd_448EE01D4E3F143531F722AF23144929(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_448EE01D4E3F143531F722AF23144929();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void IsOwnerInFFYL(bool* InFFYL);
	void PlaySpawnActions();
	void ComparePetKillerToAllies(class AActor* Killer, bool* AssignPetToKiller);
	void SetUltimateBlackboard(bool Value);
	void SecondWindInjuredAllies(TArray<class AOakCharacter_Player*>& Allies);
	void NotifyPetSpawn();
	void SetBlackboard_Aggro(bool Toggle);
	void TryAddPlayerStatusEffect();
	void TryRemovePlayerStatusEffect();
	void DoPetAttackCommand(class UObject* Target);
	void OnRep_ScriptedPetTarget();
	void ToggleAttackCommand_ScriptedTarget(bool Toggle);
	void AddAttackCommandIcon();
	void RemoveAttackCommandIcon();
	void ToggleAttackCommand_BB(bool Value);
	void OnRep_bIsEnraged();
	void OnEnrageBegin();
	void OnEnrageEnd();
	void DoShrinkAudio();
	void IncrementKillStat();
	void TogglePetTaunt_CLASSMODONLY(bool IsEnraged);
	void RefreshIconDuration();
	void UpdateHealingFX();
	void GetBeastmasterOwner(class AOakCharacter_Player** Beastmaster_0);
	void MatchesPetProfile(class UOakPlayerCharacterAugmentData_Pet* InAugment, bool* Res);
	void GetPetType(EOakActionAbilityPetType* PetType_0);
	void GetPetEvolutionType(EOakActionAbilityPetEvolutionType* EvolutionType_0);
	void GetPetJabberIngenuityBarrel(class AActor** Barrel);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Pet_C">();
	}
	static class ABPChar_Pet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Pet_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABPChar_Pet_C) == 0x000010, "Wrong alignment on ABPChar_Pet_C");
static_assert(sizeof(ABPChar_Pet_C) == 0x0025F0, "Wrong size on ABPChar_Pet_C");
static_assert(offsetof(ABPChar_Pet_C, UberGraphFrame_BPChar_Pet_C) == 0x002388, "Member 'ABPChar_Pet_C::UberGraphFrame_BPChar_Pet_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, OakInventoryList) == 0x002390, "Member 'ABPChar_Pet_C::OakInventoryList' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, WwiseAudio) == 0x002398, "Member 'ABPChar_Pet_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Rad_Audio) == 0x0023A0, "Member 'ABPChar_Pet_C::Rad_Audio' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, FFYLReviveFX) == 0x0023A8, "Member 'ABPChar_Pet_C::FFYLReviveFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PS_BeastMaster_Pet_Healing_Looping) == 0x0023B0, "Member 'ABPChar_Pet_C::PS_BeastMaster_Pet_Healing_Looping' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, FFYL_ReviveFX_Off) == 0x0023B8, "Member 'ABPChar_Pet_C::FFYL_ReviveFX_Off' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, FFYL_ReviveFX_On) == 0x0023C0, "Member 'ABPChar_Pet_C::FFYL_ReviveFX_On' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PS_BeastMaster_Pet_Mod2_RadAura_Off) == 0x0023C8, "Member 'ABPChar_Pet_C::PS_BeastMaster_Pet_Mod2_RadAura_Off' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PS_BeastMaster_Pet_Mod2_RadAura) == 0x0023D0, "Member 'ABPChar_Pet_C::PS_BeastMaster_Pet_Mod2_RadAura' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, AuraOff) == 0x0023D8, "Member 'ABPChar_Pet_C::AuraOff' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, AuraOn) == 0x0023E0, "Member 'ABPChar_Pet_C::AuraOn' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, HulkOutRadiationAuraSwitch) == 0x0023E8, "Member 'ABPChar_Pet_C::HulkOutRadiationAuraSwitch' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, GbxCustomization) == 0x0023F0, "Member 'ABPChar_Pet_C::GbxCustomization' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, BPNPCFightForYourLifeComponent) == 0x0023F8, "Member 'ABPChar_Pet_C::BPNPCFightForYourLifeComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, UsableComponentPet) == 0x002400, "Member 'ABPChar_Pet_C::UsableComponentPet' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Timeline_0_NewTrack_2_A6C3A78149ABE084DCECBA9FADC6C2EB) == 0x002408, "Member 'ABPChar_Pet_C::Timeline_0_NewTrack_2_A6C3A78149ABE084DCECBA9FADC6C2EB' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Timeline_0__Direction_A6C3A78149ABE084DCECBA9FADC6C2EB) == 0x00240C, "Member 'ABPChar_Pet_C::Timeline_0__Direction_A6C3A78149ABE084DCECBA9FADC6C2EB' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Timeline_0) == 0x002410, "Member 'ABPChar_Pet_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Beastmaster) == 0x002418, "Member 'ABPChar_Pet_C::Beastmaster' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PetSpawnActionClass) == 0x002420, "Member 'ABPChar_Pet_C::PetSpawnActionClass' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, bIsBeingReleased) == 0x002428, "Member 'ABPChar_Pet_C::bIsBeingReleased' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, AbilityHub_Beastmaster) == 0x002430, "Member 'ABPChar_Pet_C::AbilityHub_Beastmaster' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, ScriptedFFYLTarget) == 0x002438, "Member 'ABPChar_Pet_C::ScriptedFFYLTarget' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PlayerAllies) == 0x002440, "Member 'ABPChar_Pet_C::PlayerAllies' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, EvolutionType) == 0x002450, "Member 'ABPChar_Pet_C::EvolutionType' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PetType) == 0x002451, "Member 'ABPChar_Pet_C::PetType' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PetSkagFrenzyPlayRate) == 0x002454, "Member 'ABPChar_Pet_C::PetSkagFrenzyPlayRate' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, CSTPet_Death) == 0x002460, "Member 'ABPChar_Pet_C::CSTPet_Death' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, CSTPet_Retreat) == 0x002468, "Member 'ABPChar_Pet_C::CSTPet_Retreat' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Rep_ScriptedPetTarget) == 0x002470, "Member 'ABPChar_Pet_C::Rep_ScriptedPetTarget' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PlayerStatusEffectData) == 0x002478, "Member 'ABPChar_Pet_C::PlayerStatusEffectData' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PlayerStatusEffectRef) == 0x002480, "Member 'ABPChar_Pet_C::PlayerStatusEffectRef' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, QueryAttackCommand) == 0x002498, "Member 'ABPChar_Pet_C::QueryAttackCommand' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PetAttackTargetICON) == 0x002550, "Member 'ABPChar_Pet_C::PetAttackTargetICON' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, Att_AttackCommand_Damage) == 0x0025A8, "Member 'ABPChar_Pet_C::Att_AttackCommand_Damage' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, OnRep_TrackHealingFX) == 0x0025B4, "Member 'ABPChar_Pet_C::OnRep_TrackHealingFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, bIsInFFYL) == 0x0025C0, "Member 'ABPChar_Pet_C::bIsInFFYL' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, EnragedActorScale) == 0x0025C4, "Member 'ABPChar_Pet_C::EnragedActorScale' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, bIsEnraged) == 0x0025D0, "Member 'ABPChar_Pet_C::bIsEnraged' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, PreEnragedActorScale) == 0x0025D4, "Member 'ABPChar_Pet_C::PreEnragedActorScale' has a wrong offset!");
static_assert(offsetof(ABPChar_Pet_C, ClassModTauntFX) == 0x0025E0, "Member 'ABPChar_Pet_C::ClassModTauntFX' has a wrong offset!");

}

