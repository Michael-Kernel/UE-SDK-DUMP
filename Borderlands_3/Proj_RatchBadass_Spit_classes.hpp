#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_RatchBadass_Spit

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_RatchBadass_Spit.Proj_RatchBadass_Spit_C
// 0x0038 (0x0718 - 0x06E0)
class AProj_RatchBadass_Spit_C final : public AOakAIBalancedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Ratch_Projectile;                                // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTargetableComponent*                   Targetable;                                        // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereCollision;                                   // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FuseTime;                                          // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x070C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRadius;                                      // 0x0710(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void OnExplode();
	void GbxAsyncRequest_Spawned_E8D872FE46B2D8B0A68CC3B29476C0B9(class AActor* Actor, int32 InstanceIndex);
	void GbxAsyncRequest_Failed_E8D872FE46B2D8B0A68CC3B29476C0B9(class AActor* Actor, int32 InstanceIndex);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_Proj_RatchBadass_Spit(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_RatchBadass_Spit_C">();
	}
	static class AProj_RatchBadass_Spit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_RatchBadass_Spit_C>();
	}
};
static_assert(alignof(AProj_RatchBadass_Spit_C) == 0x000008, "Wrong alignment on AProj_RatchBadass_Spit_C");
static_assert(sizeof(AProj_RatchBadass_Spit_C) == 0x000718, "Wrong size on AProj_RatchBadass_Spit_C");
static_assert(offsetof(AProj_RatchBadass_Spit_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_RatchBadass_Spit_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, P_Ratch_Projectile) == 0x0006E8, "Member 'AProj_RatchBadass_Spit_C::P_Ratch_Projectile' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, Targetable) == 0x0006F0, "Member 'AProj_RatchBadass_Spit_C::Targetable' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, SphereCollision) == 0x0006F8, "Member 'AProj_RatchBadass_Spit_C::SphereCollision' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, GbxProjectileMovement) == 0x000700, "Member 'AProj_RatchBadass_Spit_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, FuseTime) == 0x000708, "Member 'AProj_RatchBadass_Spit_C::FuseTime' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, Damage) == 0x00070C, "Member 'AProj_RatchBadass_Spit_C::Damage' has a wrong offset!");
static_assert(offsetof(AProj_RatchBadass_Spit_C, DamageRadius) == 0x000710, "Member 'AProj_RatchBadass_Spit_C::DamageRadius' has a wrong offset!");

}

