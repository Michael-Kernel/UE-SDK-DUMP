#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Narp

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Narp.Ability_Narp_C
// 0x0040 (0x0138 - 0x00F8)
class UAbility_Narp_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 Killed;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD; // 0x0108(0x0028)()
	int32                                         LoadedAmmo;                                        // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Narp(int32 EntryPoint);
	void OnUnregistered();
	void OnDeactivated();
	void OnReloadEnded(class AWeapon* EventWeapon, bool bCompleted);
	void OnReloadStarted(class AWeapon* EventWeapon, bool bAutoReload);
	void OnActivated();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Narp_C">();
	}
	static class UAbility_Narp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Narp_C>();
	}
};
static_assert(alignof(UAbility_Narp_C) == 0x000008, "Wrong alignment on UAbility_Narp_C");
static_assert(sizeof(UAbility_Narp_C) == 0x000138, "Wrong size on UAbility_Narp_C");
static_assert(offsetof(UAbility_Narp_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Narp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Narp_C, Killed) == 0x000100, "Member 'UAbility_Narp_C::Killed' has a wrong offset!");
static_assert(offsetof(UAbility_Narp_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD) == 0x000108, "Member 'UAbility_Narp_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD' has a wrong offset!");
static_assert(offsetof(UAbility_Narp_C, LoadedAmmo) == 0x000130, "Member 'UAbility_Narp_C::LoadedAmmo' has a wrong offset!");

}

