#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_Cauterizer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.ExecuteUbergraph_Ability_Artifact_Cauterizer
// 0x0340 (0x0340 - 0x0000)
struct Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_MakeStruct_OakAbilityTimerSpec;             // 0x0008(0x0018)(NoDestructor)
	struct FSlideEndedDetails                     K2Node_CustomEvent_Details;                        // 0x0020(0x0018)(ConstParm, NoDestructor)
	TDelegate<void(struct FSlideEndedDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0098(0x0028)(NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x00C0(0x0230)(ContainsInstancedReference)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec1;                                // 0x02F8(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec;                                 // 0x0310(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerResult                 K2Node_Event_Result;                               // 0x0328(0x000C)(ConstParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer) == 0x000010, "Wrong alignment on Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer");
static_assert(sizeof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer) == 0x000340, "Wrong size on Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, EntryPoint) == 0x000000, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000004, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_MakeStruct_OakAbilityTimerSpec) == 0x000008, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_MakeStruct_OakAbilityTimerSpec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_CustomEvent_Details) == 0x000020, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_SwitchEnum_CmpSuccess) == 0x000091, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000098, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x0000C0, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, CallFunc_SpawnActorAsync_ReturnValue) == 0x0002F0, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_Event_Spec1) == 0x0002F8, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_Event_Spec1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_Event_Spec) == 0x000310, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer, K2Node_Event_Result) == 0x000328, "Member 'Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer::K2Node_Event_Result' has a wrong offset!");

// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.OnAbilityTimerEnded
// 0x0028 (0x0028 - 0x0000)
struct Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FOakAbilityTimerResult                 Result;                                            // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded) == 0x000008, "Wrong alignment on Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded");
static_assert(sizeof(Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded) == 0x000028, "Wrong size on Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded, Spec) == 0x000000, "Member 'Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded::Spec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded, Result) == 0x000018, "Member 'Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded::Result' has a wrong offset!");

// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.OnAbilityTimerStarted
// 0x0018 (0x0018 - 0x0000)
struct Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted) == 0x000008, "Wrong alignment on Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted");
static_assert(sizeof(Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted) == 0x000018, "Wrong size on Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted, Spec) == 0x000000, "Member 'Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted::Spec' has a wrong offset!");

// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.StopSlide
// 0x0018 (0x0018 - 0x0000)
struct Ability_Artifact_Cauterizer_C_StopSlide final
{
public:
	struct FSlideEndedDetails                     Details;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Cauterizer_C_StopSlide) == 0x000008, "Wrong alignment on Ability_Artifact_Cauterizer_C_StopSlide");
static_assert(sizeof(Ability_Artifact_Cauterizer_C_StopSlide) == 0x000018, "Wrong size on Ability_Artifact_Cauterizer_C_StopSlide");
static_assert(offsetof(Ability_Artifact_Cauterizer_C_StopSlide, Details) == 0x000000, "Member 'Ability_Artifact_Cauterizer_C_StopSlide::Details' has a wrong offset!");

}

