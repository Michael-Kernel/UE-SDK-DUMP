#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SignificanceManager

#include "Basic.hpp"

#include "SignificanceManager_classes.hpp"
#include "SignificanceManager_parameters.hpp"


namespace SDK
{

// Function SignificanceManager.SignificanceManager.OnTickActorEndPlay
// (Final, Native, Public)
// Parameters:
// class AActor*                           TickOptimActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USignificanceManager::OnTickActorEndPlay(class AActor* TickOptimActor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SignificanceManager", "OnTickActorEndPlay");

	Params::SignificanceManager_OnTickActorEndPlay Parms{};

	Parms.TickOptimActor = TickOptimActor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SignificanceManager.SignificanceManager.UnregisterForTickOptim
// (Final, Native, Public)
// Parameters:
// class AActor*                           TickOptimActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USignificanceManager::UnregisterForTickOptim(class AActor* TickOptimActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SignificanceManager", "UnregisterForTickOptim");

	Params::SignificanceManager_UnregisterForTickOptim Parms{};

	Parms.TickOptimActor = TickOptimActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

