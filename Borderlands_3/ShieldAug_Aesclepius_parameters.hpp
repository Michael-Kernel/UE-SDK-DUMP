#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_Aesclepius

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function ShieldAug_Aesclepius.ShieldAug_Aesclepius_C.K2_OnDamageTaken
// 0x0118 (0x0118 - 0x0000)
struct ShieldAug_Aesclepius_C_K2_OnDamageTaken final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class UDamageComponent*                       DamageReceiver;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0048(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0050(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0068(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x00C8(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0100(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ShieldAug_Aesclepius_C_K2_OnDamageTaken) == 0x000008, "Wrong alignment on ShieldAug_Aesclepius_C_K2_OnDamageTaken");
static_assert(sizeof(ShieldAug_Aesclepius_C_K2_OnDamageTaken) == 0x000118, "Wrong size on ShieldAug_Aesclepius_C_K2_OnDamageTaken");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, Shield) == 0x000000, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, StackData) == 0x000008, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, DamageReceiver) == 0x000038, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::DamageReceiver' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, Damage) == 0x000040, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::Damage' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, DamageType) == 0x000048, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::DamageType' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, DamageSource) == 0x000050, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::DamageSource' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, InstigatedBy) == 0x000058, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::InstigatedBy' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, DamageCauser) == 0x000060, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::DamageCauser' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, Details) == 0x000068, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::Details' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, K2Node_MakeStruct_StatusEffectSpec) == 0x0000C8, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_OnDamageTaken, CallFunc_AddStatusEffect_ReturnValue) == 0x000100, "Member 'ShieldAug_Aesclepius_C_K2_OnDamageTaken::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");

// Function ShieldAug_Aesclepius.ShieldAug_Aesclepius_C.K2_UntriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct ShieldAug_Aesclepius_C_K2_UntriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ShieldAug_Aesclepius_C_K2_UntriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_Aesclepius_C_K2_UntriggerEffect");
static_assert(sizeof(ShieldAug_Aesclepius_C_K2_UntriggerEffect) == 0x000050, "Wrong size on ShieldAug_Aesclepius_C_K2_UntriggerEffect");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_UntriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_Aesclepius_C_K2_UntriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_UntriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_Aesclepius_C_K2_UntriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_UntriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_Aesclepius_C_K2_UntriggerEffect::StackData' has a wrong offset!");

// Function ShieldAug_Aesclepius.ShieldAug_Aesclepius_C.K2_TriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct ShieldAug_Aesclepius_C_K2_TriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ShieldAug_Aesclepius_C_K2_TriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_Aesclepius_C_K2_TriggerEffect");
static_assert(sizeof(ShieldAug_Aesclepius_C_K2_TriggerEffect) == 0x000050, "Wrong size on ShieldAug_Aesclepius_C_K2_TriggerEffect");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_TriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_Aesclepius_C_K2_TriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_TriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_Aesclepius_C_K2_TriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_Aesclepius_C_K2_TriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_Aesclepius_C_K2_TriggerEffect::StackData' has a wrong offset!");

}

