#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GM_Payload_HipHop

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GM_Payload_HipHop.BP_GM_Payload_HipHop_C.K2_NativeDelayCallback
// 0x02B0 (0x02B0 - 0x0000)
struct BP_GM_Payload_HipHop_C_K2_NativeDelayCallback final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   DelayName;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenade*                               MyGrenade;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0090(0x0020)(NoDestructor)
	float                                         CallFunc_BreakVector_X1;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x00D8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0130(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0170(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback) == 0x000010, "Wrong alignment on BP_GM_Payload_HipHop_C_K2_NativeDelayCallback");
static_assert(sizeof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback) == 0x0002B0, "Wrong size on BP_GM_Payload_HipHop_C_K2_NativeDelayCallback");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, Grenade) == 0x000000, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, InstanceData) == 0x000010, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, DelayName) == 0x000040, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::DelayName' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, MyGrenade) == 0x000048, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::MyGrenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakVector_Y) == 0x000074, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000090, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakVector_X1) == 0x0000B0, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakVector_Y1) == 0x0000B4, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakVector_Z1) == 0x0000B8, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000BC, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_MakeVector_ReturnValue1) == 0x0000CC, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x0000D8, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Location) == 0x000124, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Rotation) == 0x000130, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Scale) == 0x00013C, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_GetForwardVector_ReturnValue) == 0x000148, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000154, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000170, "Member 'BP_GM_Payload_HipHop_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function BP_GM_Payload_HipHop.BP_GM_Payload_HipHop_C.K2_GrenadeInitialized
// 0x0040 (0x0040 - 0x0000)
struct BP_GM_Payload_HipHop_C_K2_GrenadeInitialized final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_HipHop_C_K2_GrenadeInitialized) == 0x000008, "Wrong alignment on BP_GM_Payload_HipHop_C_K2_GrenadeInitialized");
static_assert(sizeof(BP_GM_Payload_HipHop_C_K2_GrenadeInitialized) == 0x000040, "Wrong size on BP_GM_Payload_HipHop_C_K2_GrenadeInitialized");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeInitialized, Grenade) == 0x000000, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeInitialized::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeInitialized, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeInitialized::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeInitialized, InstanceData) == 0x000010, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeInitialized::InstanceData' has a wrong offset!");

// Function BP_GM_Payload_HipHop.BP_GM_Payload_HipHop_C.K2_GrenadeImpact
// 0x0168 (0x0168 - 0x0000)
struct BP_GM_Payload_HipHop_C_K2_GrenadeImpact final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0010(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x00A0(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         BounceDistance;                                    // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPayloadInstanceData                   MyInstanceData;                                    // 0x00D8(0x0030)(Edit, BlueprintVisible, NoDestructor)
	class AGrenadeMod*                            MyGrenadeMod;                                      // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenade*                               MyGrenade;                                         // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x012C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0138(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact) == 0x000008, "Wrong alignment on BP_GM_Payload_HipHop_C_K2_GrenadeImpact");
static_assert(sizeof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact) == 0x000168, "Wrong size on BP_GM_Payload_HipHop_C_K2_GrenadeImpact");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, Grenade) == 0x000000, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, HitResult) == 0x000010, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::HitResult' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, InstanceData) == 0x0000A0, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, BounceDistance) == 0x0000D0, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::BounceDistance' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, MyInstanceData) == 0x0000D8, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::MyInstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, MyGrenadeMod) == 0x000108, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::MyGrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, MyGrenade) == 0x000110, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::MyGrenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_BreakVector_X) == 0x00011C, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_BreakVector_Y) == 0x000120, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_BreakVector_Z) == 0x000124, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000128, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_MakeVector2D_ReturnValue) == 0x00012C, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000134, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Normal2D_ReturnValue) == 0x000138, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Fraction_ReturnValue) == 0x000140, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_BreakVector2D_X) == 0x000144, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_BreakVector2D_Y) == 0x000148, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00014C, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000154, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_MakeVector_ReturnValue) == 0x000158, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000164, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeImpact, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000165, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeImpact::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_HipHop.BP_GM_Payload_HipHop_C.K2_GrenadeLastBounce
// 0x0040 (0x0040 - 0x0000)
struct BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce) == 0x000008, "Wrong alignment on BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce");
static_assert(sizeof(BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce) == 0x000040, "Wrong size on BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce, Grenade) == 0x000000, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce, InstanceData) == 0x000010, "Member 'BP_GM_Payload_HipHop_C_K2_GrenadeLastBounce::InstanceData' has a wrong offset!");

}

