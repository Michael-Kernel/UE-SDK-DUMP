#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAbility_Sprint

#include "Basic.hpp"


namespace SDK::Params
{

// Function PlayerAbility_Sprint.PlayerAbility_Sprint_C.ExecuteUbergraph_PlayerAbility_Sprint
// 0x0098 (0x0098 - 0x0000)
struct PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action1;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> Temp_softobject_Variable;                          // 0x0040(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1; // 0x0068(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSprintToggle_Res;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWantsToSprint_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSprintToggle_Res1;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint) == 0x000008, "Wrong alignment on PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint");
static_assert(sizeof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint) == 0x000098, "Wrong size on PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, EntryPoint) == 0x000000, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, K2Node_GbxInputActionEvent_Discrete_Action1) == 0x000008, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::K2Node_GbxInputActionEvent_Discrete_Action1' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, K2Node_GbxInputActionEvent_Discrete_Action) == 0x000038, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::K2Node_GbxInputActionEvent_Discrete_Action' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, Temp_softobject_Variable) == 0x000040, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1) == 0x000068, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, CallFunc_IsSprintToggle_Res) == 0x000090, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::CallFunc_IsSprintToggle_Res' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, CallFunc_GetWantsToSprint_ReturnValue) == 0x000091, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::CallFunc_GetWantsToSprint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint, CallFunc_IsSprintToggle_Res1) == 0x000092, "Member 'PlayerAbility_Sprint_C_ExecuteUbergraph_PlayerAbility_Sprint::CallFunc_IsSprintToggle_Res1' has a wrong offset!");

// Function PlayerAbility_Sprint.PlayerAbility_Sprint_C.GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2) == 0x000008, "Wrong alignment on PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2");
static_assert(sizeof(PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2) == 0x000008, "Wrong size on PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2");
static_assert(offsetof(PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2, Action) == 0x000000, "Member 'PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_2::Action' has a wrong offset!");

// Function PlayerAbility_Sprint.PlayerAbility_Sprint_C.GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3) == 0x000008, "Wrong alignment on PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3");
static_assert(sizeof(PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3) == 0x000008, "Wrong size on PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3");
static_assert(offsetof(PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3, Action) == 0x000000, "Member 'PlayerAbility_Sprint_C_GbxInpActEvt_InputAction_Discrete_Sprint_K2Node_GbxInputActionEvent_Discrete_3::Action' has a wrong offset!");

// Function PlayerAbility_Sprint.PlayerAbility_Sprint_C.IsSprintToggle
// 0x0010 (0x0010 - 0x0000)
struct PlayerAbility_Sprint_C_IsSprintToggle final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxProfile*                            CallFunc_GetPlayerProfile_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Sprint_C_IsSprintToggle) == 0x000008, "Wrong alignment on PlayerAbility_Sprint_C_IsSprintToggle");
static_assert(sizeof(PlayerAbility_Sprint_C_IsSprintToggle) == 0x000010, "Wrong size on PlayerAbility_Sprint_C_IsSprintToggle");
static_assert(offsetof(PlayerAbility_Sprint_C_IsSprintToggle, Res) == 0x000000, "Member 'PlayerAbility_Sprint_C_IsSprintToggle::Res' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Sprint_C_IsSprintToggle, CallFunc_GetPlayerProfile_ReturnValue) == 0x000008, "Member 'PlayerAbility_Sprint_C_IsSprintToggle::CallFunc_GetPlayerProfile_ReturnValue' has a wrong offset!");

}

