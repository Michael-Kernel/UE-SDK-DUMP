#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Interface_Operative_DeployBarrier

#include "Basic.hpp"


namespace SDK::Params
{

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.DeployNewBarrierInHand
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand) == 0x000008, "Wrong alignment on Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand) == 0x000008, "Wrong size on Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand, Player) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_DeployNewBarrierInHand::Player' has a wrong offset!");

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.StartHoldingBarrier
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_DeployBarrier_C_StartHoldingBarrier final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_StartHoldingBarrier) == 0x000008, "Wrong alignment on Interface_Operative_DeployBarrier_C_StartHoldingBarrier");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_StartHoldingBarrier) == 0x000008, "Wrong size on Interface_Operative_DeployBarrier_C_StartHoldingBarrier");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_StartHoldingBarrier, Player) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_StartHoldingBarrier::Player' has a wrong offset!");

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.GetBarrierHealthPercent
// 0x0004 (0x0004 - 0x0000)
struct Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent final
{
public:
	float                                         HealthPercent;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent) == 0x000004, "Wrong alignment on Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent) == 0x000004, "Wrong size on Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent, HealthPercent) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_GetBarrierHealthPercent::HealthPercent' has a wrong offset!");

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.GetBarrierReference
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_DeployBarrier_C_GetBarrierReference final
{
public:
	class AActor*                                 Barrier;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_GetBarrierReference) == 0x000008, "Wrong alignment on Interface_Operative_DeployBarrier_C_GetBarrierReference");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_GetBarrierReference) == 0x000008, "Wrong size on Interface_Operative_DeployBarrier_C_GetBarrierReference");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_GetBarrierReference, Barrier) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_GetBarrierReference::Barrier' has a wrong offset!");

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.GiveBarrierHealth
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_DeployBarrier_C_GiveBarrierHealth final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Health;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_GiveBarrierHealth) == 0x000004, "Wrong alignment on Interface_Operative_DeployBarrier_C_GiveBarrierHealth");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_GiveBarrierHealth) == 0x000008, "Wrong size on Interface_Operative_DeployBarrier_C_GiveBarrierHealth");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_GiveBarrierHealth, Health) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_GiveBarrierHealth::Health' has a wrong offset!");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_GiveBarrierHealth, New_Health) == 0x000004, "Member 'Interface_Operative_DeployBarrier_C_GiveBarrierHealth::New_Health' has a wrong offset!");

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.RefillBarrierHealth
// 0x0001 (0x0001 - 0x0000)
struct Interface_Operative_DeployBarrier_C_RefillBarrierHealth final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_RefillBarrierHealth) == 0x000001, "Wrong alignment on Interface_Operative_DeployBarrier_C_RefillBarrierHealth");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_RefillBarrierHealth) == 0x000001, "Wrong size on Interface_Operative_DeployBarrier_C_RefillBarrierHealth");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_RefillBarrierHealth, Res) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_RefillBarrierHealth::Res' has a wrong offset!");

// Function Interface_Operative_DeployBarrier.Interface_Operative_DeployBarrier_C.IsHoldingBarrier
// 0x0001 (0x0001 - 0x0000)
struct Interface_Operative_DeployBarrier_C_IsHoldingBarrier final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_DeployBarrier_C_IsHoldingBarrier) == 0x000001, "Wrong alignment on Interface_Operative_DeployBarrier_C_IsHoldingBarrier");
static_assert(sizeof(Interface_Operative_DeployBarrier_C_IsHoldingBarrier) == 0x000001, "Wrong size on Interface_Operative_DeployBarrier_C_IsHoldingBarrier");
static_assert(offsetof(Interface_Operative_DeployBarrier_C_IsHoldingBarrier, Res) == 0x000000, "Member 'Interface_Operative_DeployBarrier_C_IsHoldingBarrier::Res' has a wrong offset!");

}

