#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_JoshsFunctionLibrary

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_TestHitReactionType_structs.hpp"
#include "Enum_TestHitReactionDirection_structs.hpp"
#include "Enum_ResourceLockType_structs.hpp"


namespace SDK::Params
{

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GBXActionVariableSetup
// 0x0058 (0x0058 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GBXActionVariableSetup final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MySelf;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 MyDamageCausingComponent;                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             MyCharacter;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTeam*                                  MyTeam;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTargetingComponent*                    CallFunc_GetComponentByClass_ReturnValue1;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBestTargetActor_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GBXActionVariableSetup");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup) == 0x000058, "Wrong size on FL_JoshsFunctionLibrary_C_GBXActionVariableSetup");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, Actor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::Actor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, __WorldContext) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, MySelf) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::MySelf' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, MyTarget) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::MyTarget' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, MyDamageCausingComponent) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::MyDamageCausingComponent' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, MyCharacter) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::MyCharacter' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, MyTeam) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::MyTeam' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, CallFunc_GetAIController_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, CallFunc_GetComponentByClass_ReturnValue1) == 0x000048, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GBXActionVariableSetup, CallFunc_GetBestTargetActor_ReturnValue) == 0x000050, "Member 'FL_JoshsFunctionLibrary_C_GBXActionVariableSetup::CallFunc_GetBestTargetActor_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.ResourceLock
// 0x0050 (0x0050 - 0x0000)
struct FL_JoshsFunctionLibrary_C_ResourceLock final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ResourceLockType                         Lock_Type;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Reason;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockState;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalLockState;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LocalReason;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ResourceLockType                         LocalLockType;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LocalActor;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_ResourceLock) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_ResourceLock");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_ResourceLock) == 0x000050, "Wrong size on FL_JoshsFunctionLibrary_C_ResourceLock");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, Actor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::Actor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, Lock_Type) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::Lock_Type' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, Reason) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::Reason' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, LockState) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::LockState' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, __WorldContext) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, LocalLockState) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::LocalLockState' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, LocalReason) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::LocalReason' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, LocalLockType) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::LocalLockType' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, LocalActor) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::LocalActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ResourceLock, K2Node_SwitchEnum1_CmpSuccess) == 0x000049, "Member 'FL_JoshsFunctionLibrary_C_ResourceLock::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.ForciblyResetSpawner
// 0x0018 (0x0018 - 0x0000)
struct FL_JoshsFunctionLibrary_C_ForciblyResetSpawner final
{
public:
	class ASpawner*                               Spawner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kill_Existing_Actors;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_ForciblyResetSpawner) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_ForciblyResetSpawner");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_ForciblyResetSpawner) == 0x000018, "Wrong size on FL_JoshsFunctionLibrary_C_ForciblyResetSpawner");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ForciblyResetSpawner, Spawner) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_ForciblyResetSpawner::Spawner' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ForciblyResetSpawner, Kill_Existing_Actors) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_ForciblyResetSpawner::Kill_Existing_Actors' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ForciblyResetSpawner, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_ForciblyResetSpawner::__WorldContext' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.SetStance
// 0x0028 (0x0028 - 0x0000)
struct FL_JoshsFunctionLibrary_C_SetStance final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakStanceData*                         New_Stance;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStanceComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_SetStance) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_SetStance");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_SetStance) == 0x000028, "Wrong size on FL_JoshsFunctionLibrary_C_SetStance");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetStance, Target) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_SetStance::Target' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetStance, New_Stance) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_SetStance::New_Stance' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetStance, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_SetStance::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetStance, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_SetStance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetStance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_SetStance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.SetBlackboardBool
// 0x0040 (0x0040 - 0x0000)
struct FL_JoshsFunctionLibrary_C_SetBlackboardBool final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_SetBlackboardBool) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_SetBlackboardBool");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_SetBlackboardBool) == 0x000040, "Wrong size on FL_JoshsFunctionLibrary_C_SetBlackboardBool");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, Value) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, __WorldContext) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardBool, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardBool::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.SetBlackboardFloat
// 0x0040 (0x0040 - 0x0000)
struct FL_JoshsFunctionLibrary_C_SetBlackboardFloat final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_SetBlackboardFloat");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat) == 0x000040, "Wrong size on FL_JoshsFunctionLibrary_C_SetBlackboardFloat");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, Value) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, __WorldContext) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardFloat, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardFloat::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GetBlackboardBool
// 0x0048 (0x0048 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GetBlackboardBool final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GetBlackboardBool) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GetBlackboardBool");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GetBlackboardBool) == 0x000048, "Wrong size on FL_JoshsFunctionLibrary_C_GetBlackboardBool");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, Value) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardBool, CallFunc_GetValueAsBool_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardBool::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GetBlackboardFloat
// 0x0048 (0x0048 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GetBlackboardFloat final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GetBlackboardFloat");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat) == 0x000048, "Wrong size on FL_JoshsFunctionLibrary_C_GetBlackboardFloat");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, Value) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardFloat, CallFunc_GetValueAsFloat_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardFloat::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GetCurrentTarget
// 0x0038 (0x0038 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GetCurrentTarget final
{
public:
	class APawn*                                  Who_s_Target_;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTargetingComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBestTargetActor_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GetCurrentTarget) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GetCurrentTarget");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GetCurrentTarget) == 0x000038, "Wrong size on FL_JoshsFunctionLibrary_C_GetCurrentTarget");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, Who_s_Target_) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::Who_s_Target_' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, __WorldContext) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, Target) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::Target' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, CallFunc_IsValid_ReturnValue1) == 0x000029, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetCurrentTarget, CallFunc_GetBestTargetActor_ReturnValue) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_GetCurrentTarget::CallFunc_GetBestTargetActor_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.Setup for Throw Actor At
// 0x0078 (0x0078 - 0x0000)
struct FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At final
{
public:
	class APawn*                                  Who_is_Throwing_;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetOverride;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetSocket;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0020(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetVelocity;                                    // 0x002C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBestKnownLocation_ReturnValue;         // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTargetingComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBestTargetActor_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At) == 0x000078, "Wrong size on FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, Who_is_Throwing_) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::Who_is_Throwing_' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, TargetOverride) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::TargetOverride' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, TargetSocket) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::TargetSocket' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, __WorldContext) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, TargetLocation) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::TargetLocation' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, TargetVelocity) == 0x00002C, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::TargetVelocity' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, MyTarget) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::MyTarget' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, CallFunc_GetBestKnownLocation_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::CallFunc_GetBestKnownLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, CallFunc_GetVelocity_ReturnValue) == 0x00004C, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At, CallFunc_GetBestTargetActor_ReturnValue) == 0x000070, "Member 'FL_JoshsFunctionLibrary_C_Setup_for_Throw_Actor_At::CallFunc_GetBestTargetActor_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.SetBlackboardObject
// 0x0040 (0x0040 - 0x0000)
struct FL_JoshsFunctionLibrary_C_SetBlackboardObject final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Value;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_SetBlackboardObject) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_SetBlackboardObject");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_SetBlackboardObject) == 0x000040, "Wrong size on FL_JoshsFunctionLibrary_C_SetBlackboardObject");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, Value) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, __WorldContext) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardObject, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardObject::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GetBlackboardObject
// 0x0048 (0x0048 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GetBlackboardObject final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Value;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GetBlackboardObject) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GetBlackboardObject");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GetBlackboardObject) == 0x000048, "Wrong size on FL_JoshsFunctionLibrary_C_GetBlackboardObject");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, Value) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardObject, CallFunc_GetValueAsObject_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardObject::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GetElementalTypeFromWeapon
// 0x0050 (0x0050 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon final
{
public:
	class AActor*                                 ActorWithWeapon;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             WeaponElement;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WeaponDamageTypeLocal;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorWithWeaponLocal;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UGbxDamageType*                   CallFunc_GetDamageType_ReturnValue;                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             CallFunc_GetElementalType_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon) == 0x000050, "Wrong size on FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, ActorWithWeapon) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::ActorWithWeapon' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, __WorldContext) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, WeaponElement) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::WeaponElement' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, WeaponDamageTypeLocal) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::WeaponDamageTypeLocal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, ActorWithWeaponLocal) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::ActorWithWeaponLocal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, K2Node_DynamicCast_AsOak_Character) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, CallFunc_GetWeapon_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, CallFunc_GetDamageType_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon, CallFunc_GetElementalType_ReturnValue) == 0x000048, "Member 'FL_JoshsFunctionLibrary_C_GetElementalTypeFromWeapon::CallFunc_GetElementalType_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.SimpleScreenParticle
// 0x0070 (0x0070 - 0x0000)
struct FL_JoshsFunctionLibrary_C_SimpleScreenParticle final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ScreenParticle;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowMultipleInstances;                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OnlyDrawIfShieldsAreDepleted;                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameResourcePoolManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue;    // 0x0030(0x0018)(NoDestructor, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakResourcePoolReference_bValid;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakResourcePoolReference_CurrentValue;  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MinValue;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MaxValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScreenParticleManagerComponent*        CallFunc_GetComponentByClass_ReturnValue1;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_SimpleScreenParticle");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle) == 0x000070, "Wrong size on FL_JoshsFunctionLibrary_C_SimpleScreenParticle");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, Target) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::Target' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, ScreenParticle) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::ScreenParticle' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, AllowMultipleInstances) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::AllowMultipleInstances' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, OnlyDrawIfShieldsAreDepleted) == 0x000011, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::OnlyDrawIfShieldsAreDepleted' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, __WorldContext) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_IsValid_ReturnValue1) == 0x000021, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_GetResourcePoolByResource_ReturnValue) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_GetResourcePoolByResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000048, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_BreakResourcePoolReference_bValid) == 0x000050, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_BreakResourcePoolReference_bValid' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_BreakResourcePoolReference_CurrentValue) == 0x000054, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_BreakResourcePoolReference_CurrentValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_BreakResourcePoolReference_MinValue) == 0x000058, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_BreakResourcePoolReference_MinValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_BreakResourcePoolReference_MaxValue) == 0x00005C, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_BreakResourcePoolReference_MaxValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_GetComponentByClass_ReturnValue1) == 0x000060, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SimpleScreenParticle, CallFunc_IsValid_ReturnValue2) == 0x000069, "Member 'FL_JoshsFunctionLibrary_C_SimpleScreenParticle::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GrantSecondWind
// 0x0020 (0x0020 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GrantSecondWind final
{
public:
	class AActor*                                 ActorToGrantSecondWindTo;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInDownState_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GrantSecondWind) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GrantSecondWind");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GrantSecondWind) == 0x000020, "Wrong size on FL_JoshsFunctionLibrary_C_GrantSecondWind");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GrantSecondWind, ActorToGrantSecondWindTo) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GrantSecondWind::ActorToGrantSecondWindTo' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GrantSecondWind, __WorldContext) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GrantSecondWind::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GrantSecondWind, K2Node_DynamicCast_AsOak_Character) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GrantSecondWind::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GrantSecondWind, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GrantSecondWind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GrantSecondWind, CallFunc_IsInDownState_ReturnValue) == 0x000019, "Member 'FL_JoshsFunctionLibrary_C_GrantSecondWind::CallFunc_IsInDownState_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.TransformSplat
// 0x01B0 (0x01B0 - 0x0000)
struct FL_JoshsFunctionLibrary_C_TransformSplat final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SplatTransform;                                    // 0x00A0(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0150(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x016C(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_TransformSplat) == 0x000010, "Wrong alignment on FL_JoshsFunctionLibrary_C_TransformSplat");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_TransformSplat) == 0x0001B0, "Wrong size on FL_JoshsFunctionLibrary_C_TransformSplat");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, HitResult) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::HitResult' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, __WorldContext) == 0x000090, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, SplatTransform) == 0x0000A0, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::SplatTransform' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D0, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D1, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000150, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakRotator_Roll) == 0x00015C, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakRotator_Pitch) == 0x000160, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_BreakRotator_Yaw) == 0x000164, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000168, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_MakeRotator_ReturnValue) == 0x00016C, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TransformSplat, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member 'FL_JoshsFunctionLibrary_C_TransformSplat::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.ThrowLightProjectile
// 0x02C0 (0x02C0 - 0x0000)
struct FL_JoshsFunctionLibrary_C_ThrowLightProjectile final
{
public:
	class AActor*                                 WhoIsThrowing_;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LightProjectileData;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SourceSocket;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetOverride;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetSocket;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPrediction;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnglePercent;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DirectionOffset;                                   // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                LocalTargetOffset;                                 // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DataFlags;                                         // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MyLocalTargetOffset;                               // 0x0058(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               MyLocalDirectionOffset;                            // 0x0064(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         MyLocalAnglePercent;                               // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyLocalSpeed;                                      // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyLocalMaxPrediction;                              // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MyLocalTargetSocket;                               // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MyLocalSourceSocket;                               // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MyLightProjectileData;                             // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  MySelfLocal;                                       // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetAssociatedPawn_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Setup_for_Throw_Actor_At_TargetLocation;  // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Setup_for_Throw_Actor_At_TargetVelocity;  // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetActorSocket_ReturnValue;               // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x011C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTarget_Target;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcThrowVelocity_ResultVelocity;         // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcThrowVelocity_ResultGravityScale;     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakLightProjectileInitializationData  K2Node_MakeStruct_OakLightProjectileInitializationData; // 0x0168(0x0158)(ContainsInstancedReference)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile) == 0x000010, "Wrong alignment on FL_JoshsFunctionLibrary_C_ThrowLightProjectile");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile) == 0x0002C0, "Wrong size on FL_JoshsFunctionLibrary_C_ThrowLightProjectile");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, WhoIsThrowing_) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::WhoIsThrowing_' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, LightProjectileData) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::LightProjectileData' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, SourceSocket) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::SourceSocket' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, TargetOverride) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::TargetOverride' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, TargetSocket) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::TargetSocket' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MaxPrediction) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MaxPrediction' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, Speed) == 0x00002C, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::Speed' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, AnglePercent) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::AnglePercent' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, DirectionOffset) == 0x000034, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::DirectionOffset' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, LocalTargetOffset) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::LocalTargetOffset' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, DataFlags) == 0x00004C, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::DataFlags' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, __WorldContext) == 0x000050, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalTargetOffset) == 0x000058, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalTargetOffset' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalDirectionOffset) == 0x000064, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalDirectionOffset' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalAnglePercent) == 0x000070, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalAnglePercent' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalSpeed) == 0x000074, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalSpeed' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalMaxPrediction) == 0x000078, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalMaxPrediction' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalTargetSocket) == 0x000080, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalTargetSocket' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLocalSourceSocket) == 0x000088, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLocalSourceSocket' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyTarget) == 0x000090, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyTarget' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MyLightProjectileData) == 0x000098, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MyLightProjectileData' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, MySelfLocal) == 0x0000A0, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::MySelfLocal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_GetAssociatedPawn_ReturnValue) == 0x0000B0, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_GetAssociatedPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, Temp_bool_Variable) == 0x0000B8, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_Setup_for_Throw_Actor_At_TargetLocation) == 0x0000BC, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_Setup_for_Throw_Actor_At_TargetLocation' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_Setup_for_Throw_Actor_At_TargetVelocity) == 0x0000C8, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_Setup_for_Throw_Actor_At_TargetVelocity' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_GetActorSocket_ReturnValue) == 0x0000E0, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_GetActorSocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_BreakTransform_Location) == 0x000110, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_BreakTransform_Rotation) == 0x00011C, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_GetCurrentTarget_Target) == 0x000138, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_GetCurrentTarget_Target' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_CalcThrowVelocity_ResultVelocity) == 0x000140, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_CalcThrowVelocity_ResultVelocity' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_CalcThrowVelocity_ResultGravityScale) == 0x00014C, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_CalcThrowVelocity_ResultGravityScale' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, K2Node_Select_Default) == 0x000150, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_Add_VectorVector_ReturnValue) == 0x000158, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, CallFunc_VSize_ReturnValue) == 0x000164, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ThrowLightProjectile, K2Node_MakeStruct_OakLightProjectileInitializationData) == 0x000168, "Member 'FL_JoshsFunctionLibrary_C_ThrowLightProjectile::K2Node_MakeStruct_OakLightProjectileInitializationData' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.TestHitReaction
// 0x01D0 (0x01D0 - 0x0000)
struct FL_JoshsFunctionLibrary_C_TestHitReaction final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_TestHitReactionType                      Hit_Reaction_Type;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_TestHitReactionDirection                 Hit_Reaction_Direction;                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        Force;                                             // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Display_Text;                                      // 0x0038(0x0018)(Parm, OutParm)
	class AActor*                                 LocalHitReactingActor;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_TestHitReactionDirection                 LocalHitReactionDirection;                         // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_TestHitReactionType                      LocalHitReactionType;                              // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_TestHitReactionDirection                 Temp_byte_Variable;                                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable2;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	Enum_TestHitReactionType                      Temp_byte_Variable1;                               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable4;                             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable5;                             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable6;                             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	Enum_TestHitReactionDirection                 Temp_byte_Variable2;                               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable2;                             // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable3;                             // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_TestHitReactionType                      Temp_byte_Variable3;                               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitReactionTag*                        Temp_object_Variable;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionTag*                        Temp_object_Variable1;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionTag*                        Temp_object_Variable2;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select1_Default;                            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0198(0x0018)()
	class FText                                   K2Node_Select3_Default;                            // 0x01B0(0x0018)()
	class UHitReactionTag*                        K2Node_Select4_Default;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_TestHitReaction) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_TestHitReaction");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_TestHitReaction) == 0x0001D0, "Wrong size on FL_JoshsFunctionLibrary_C_TestHitReaction");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Actor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Actor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Hit_Reaction_Type) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Hit_Reaction_Type' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Hit_Reaction_Direction) == 0x000009, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Hit_Reaction_Direction' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Force) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Force' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, __WorldContext) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Display_Text) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Display_Text' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, LocalHitReactingActor) == 0x000050, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::LocalHitReactingActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, LocalHitReactionDirection) == 0x000058, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::LocalHitReactionDirection' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, LocalHitReactionType) == 0x000059, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::LocalHitReactionType' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_bool_Variable) == 0x00005A, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_byte_Variable) == 0x00005B, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable) == 0x000060, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable1) == 0x000070, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable2) == 0x000080, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable3) == 0x000090, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_byte_Variable1) == 0x0000A0, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable4) == 0x0000A8, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable5) == 0x0000B8, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_string_Variable6) == 0x0000C8, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_byte_Variable2) == 0x0000D8, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_struct_Variable) == 0x0000DC, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_struct_Variable1) == 0x0000E8, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_struct_Variable2) == 0x0000F4, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_struct_Variable3) == 0x000100, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_byte_Variable3) == 0x00010C, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_object_Variable) == 0x000110, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_object_Variable1) == 0x000118, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, Temp_object_Variable2) == 0x000120, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000128, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, K2Node_Select_Default) == 0x000130, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, K2Node_Select1_Default) == 0x000140, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, CallFunc_Concat_StrStr_ReturnValue) == 0x000150, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, K2Node_Select2_Default) == 0x000160, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, CallFunc_Concat_StrStr_ReturnValue1) == 0x000188, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, CallFunc_Conv_StringToText_ReturnValue1) == 0x000198, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, K2Node_Select3_Default) == 0x0001B0, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_TestHitReaction, K2Node_Select4_Default) == 0x0001C8, "Member 'FL_JoshsFunctionLibrary_C_TestHitReaction::K2Node_Select4_Default' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.GetBlackboardInt
// 0x0048 (0x0048 - 0x0000)
struct FL_JoshsFunctionLibrary_C_GetBlackboardInt final
{
public:
	class AActor*                                 ControlledActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlackboardKey;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0028(0x0010)(NoDestructor)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValueAsInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_GetBlackboardInt) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_GetBlackboardInt");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_GetBlackboardInt) == 0x000048, "Wrong size on FL_JoshsFunctionLibrary_C_GetBlackboardInt");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, ControlledActor) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, BlackboardKey) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, Value) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_GetBlackboardInt, CallFunc_GetValueAsInt_ReturnValue) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_GetBlackboardInt::CallFunc_GetValueAsInt_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.SetBlackboardInt
// 0x0040 (0x0040 - 0x0000)
struct FL_JoshsFunctionLibrary_C_SetBlackboardInt final
{
public:
	class FName                                   BlackboardKey;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ControlledActor;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0020(0x0010)(NoDestructor)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_SetBlackboardInt) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_SetBlackboardInt");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_SetBlackboardInt) == 0x000040, "Wrong size on FL_JoshsFunctionLibrary_C_SetBlackboardInt");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, BlackboardKey) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::BlackboardKey' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, ControlledActor) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::ControlledActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, Value) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::Value' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, __WorldContext) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, CallFunc_GetAIController_ReturnValue) == 0x000030, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_SetBlackboardInt, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_SetBlackboardInt::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.AIScriptedLookAtPlayers
// 0x0010 (0x0010 - 0x0000)
struct FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers) == 0x000010, "Wrong size on FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers, Target) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers::Target' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers, __WorldContext) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_AIScriptedLookAtPlayers::__WorldContext' has a wrong offset!");

// Function FL_JoshsFunctionLibrary.FL_JoshsFunctionLibrary_C.ValidateSpawnPoint
// 0x02C8 (0x02C8 - 0x0000)
struct FL_JoshsFunctionLibrary_C_ValidateSpawnPoint final
{
public:
	class USpawnPointComponent*                   PointToValidate;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDropDistance;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDropDistance_Local;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpawnPointComponent*                   PointToDrop_Local;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UBillboardComponent*                    K2Node_DynamicCast_AsBillboard_Component;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x005C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0098(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_LineTraceSingleByProfile_OutHit;          // 0x0128(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleByProfile_ReturnValue;     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x1];                                      // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x022C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0238(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint) == 0x000008, "Wrong alignment on FL_JoshsFunctionLibrary_C_ValidateSpawnPoint");
static_assert(sizeof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint) == 0x0002C8, "Wrong size on FL_JoshsFunctionLibrary_C_ValidateSpawnPoint");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, PointToValidate) == 0x000000, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::PointToValidate' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, MaxDropDistance) == 0x000008, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::MaxDropDistance' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, __WorldContext) == 0x000010, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, MaxDropDistance_Local) == 0x000018, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::MaxDropDistance_Local' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, PointToDrop_Local) == 0x000020, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::PointToDrop_Local' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_GetChildComponent_ReturnValue) == 0x000038, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, Temp_object_Variable) == 0x000040, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, K2Node_DynamicCast_AsBillboard_Component) == 0x000050, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::K2Node_DynamicCast_AsBillboard_Component' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00005C, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000074, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000098, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_LineTraceSingleByProfile_OutHit) == 0x000128, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_LineTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_LineTraceSingleByProfile_ReturnValue) == 0x0001B8, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_LineTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B9, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001BA, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_Time) == 0x0001BC, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_Distance) == 0x0001C0, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_Location) == 0x0001C4, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_Normal) == 0x0001DC, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E8, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_FaceIndex) == 0x00021C, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_BreakHitResult_TraceEnd) == 0x00022C, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FL_JoshsFunctionLibrary_C_ValidateSpawnPoint, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000238, "Member 'FL_JoshsFunctionLibrary_C_ValidateSpawnPoint::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

}

