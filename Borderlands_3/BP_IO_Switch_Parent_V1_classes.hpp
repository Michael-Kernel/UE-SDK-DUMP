#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IO_Switch_Parent_V1

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_Switch_State_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_States_SwitchPositions_structs.hpp"
#include "Enum_Switch_ReasonForMoving_structs.hpp"
#include "GbxMission_structs.hpp"
#include "Enum_States_SwitchFeedback_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IO_Switch_Parent_V1.BP_IO_Switch_Parent_V1_C
// 0x01D8 (0x0728 - 0x0550)
class ABP_IO_Switch_Parent_V1_C : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UUsableComponent*                       Usable;                                            // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box_UseCollisionHelper;                            // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMissionIconComponent*               OakMissionIcon;                                    // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseComponent;                                    // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          StartOn;                                           // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StartLocked;                                       // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastPlayerToUseSwitch;                             // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPointLightComponent*>           PointLightArray;                                   // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	Enum_Switch_State                             Enum_GetSwitchState;                               // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   On_SwitchLocked;                                   // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_SwitchUnlocked;                                 // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_SwitchOn;                                       // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_SwitchOff;                                      // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_SwitchTurningOn;                                // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_SwitchTurningOff;                               // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_SwitchUsed;                                     // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SingleActivation;                                  // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AElevator*                              Elevator;                                          // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           StaticMeshComponentArray;                          // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       DynamicMaterialArray;                              // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                            Event_TurningOn;                                   // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_TurningOff;                                  // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_On;                                          // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_Off;                                         // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_Lock;                                        // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_Unlock;                                      // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_LockedUse;                                   // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_Interactive;                                 // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Event_NonInteractive;                              // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   On_SwitchLockedUsed;                               // 0x0690(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          StartNoFeedback;                                   // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x3];                                      // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color_Feedback_Locked;                             // 0x06A4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Feedback_Unlocked;                           // 0x06B4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Feedback_NoFeedback;                         // 0x06C4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_GoalColor;                                   // 0x06D4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Switch_ReasonForMoving                   CurrentReasonForSwitchMovement;                    // 0x06E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFeedbackData*                          Feedback_ControllerAndCamera;                      // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInMotion;                                        // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	Enum_States_SwitchPositions                   PreviewSwitchPosition;                             // 0x06F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_States_SwitchFeedback                    PreviewSwitchFeedback;                             // 0x06F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_States_SwitchPositions                   SwitchPositionState;                               // 0x06F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_States_SwitchFeedback                    SwitchFeedbackState;                               // 0x06F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5[0x3];                                      // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionEventReference                 MissionEventToSendOnUse;                           // 0x06F8(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          MissionDriven;                                     // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_SwitchPositionState_NewEnumerator2;           // 0x0710(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_SwitchFeedbackState_NewEnumerator0;           // 0x0718(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_SwitchFeedbackState_NewEnumerator2;           // 0x0720(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void GetSwitchFeedbackState(Enum_States_SwitchFeedback* FeedbackState);
	void GetSwitchState(Enum_Switch_State* SwitchState);
	void GetSwitchLockedState(bool* Locked);
	void GetSwitchInteractiveState(bool* Interactive);
	void PlayControllerAndCameraFeedback();
	void AddToDynamicMaterialArray(class UMeshComponent* NewParam);
	void UserConstructionScript();
	void SetSwitchState(Enum_Switch_State SwitchState);
	void SetSwitchInteractiveState(bool Interactive);
	void SetSwitchLockedState(bool Locked);
	void PlayLockedOnTimeline();
	void PlayLockedOffTimeline();
	void FinishedPlayingLockedTimeline();
	void PlaySwitchMovement(Enum_Switch_ReasonForMoving Reason);
	void SwitchMovementFinished();
	void ReceiveBeginPlay();
	void Preview_On();
	void Preview_Off();
	void Switch_Feedback_JustOn();
	void Switch_Feedback_JustOff();
	void Switch_Feedback_OffFromLoad();
	void Switch_Feedback_OnFromLoad();
	void PrepPlaySwitchMovement(Enum_Switch_ReasonForMoving Reason);
	void PlayLockedUse();
	void Switch_Feedback_LockedUseOn();
	void Switch_Feedback_LockedUseOff();
	void __UserState_SwitchPositionState_1(bool bFromLoad);
	void __UserState_SwitchPositionState_0(bool bFromLoad);
	void Preview_Unlocked();
	void Preview_Locked();
	void Preview_NoFeedback();
	void SetLightColor(const struct FLinearColor& Color);
	void __UserState_SwitchFeedbackState_1(bool bFromLoad);
	void __UserState_SwitchFeedbackState_0(bool bFromLoad);
	void __UserState_SwitchFeedbackState_2(bool bFromLoad);
	void BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedSignature__DelegateSignature_BP_IO_Switch_Parent_V1(const struct FUseEvent& UseEvent);
	void SetSwitchFeedbackState(Enum_States_SwitchFeedback FeedbackState);
	void ExecuteUbergraph_BP_IO_Switch_Parent_V1(int32 EntryPoint);
	void On_SwitchLockedUsed__DelegateSignature(class AController* UserController);
	void On_SwitchUsed__DelegateSignature(class AController* UserController);
	void On_SwitchTurningOff__DelegateSignature(class AActor* LastActorToUseSwitch);
	void On_SwitchTurningOn__DelegateSignature(class AActor* LastActorToUseSwitch);
	void On_SwitchOff__DelegateSignature(class AActor* LastActorToUseSwitch);
	void On_SwitchOn__DelegateSignature(class AActor* LastActorToUseSwitch);
	void On_SwitchUnlocked__DelegateSignature();
	void On_SwitchLocked__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IO_Switch_Parent_V1_C">();
	}
	static class ABP_IO_Switch_Parent_V1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IO_Switch_Parent_V1_C>();
	}
};
static_assert(alignof(ABP_IO_Switch_Parent_V1_C) == 0x000008, "Wrong alignment on ABP_IO_Switch_Parent_V1_C");
static_assert(sizeof(ABP_IO_Switch_Parent_V1_C) == 0x000728, "Wrong size on ABP_IO_Switch_Parent_V1_C");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, UberGraphFrame) == 0x000550, "Member 'ABP_IO_Switch_Parent_V1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Usable) == 0x000558, "Member 'ABP_IO_Switch_Parent_V1_C::Usable' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Box_UseCollisionHelper) == 0x000560, "Member 'ABP_IO_Switch_Parent_V1_C::Box_UseCollisionHelper' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, OakMissionIcon) == 0x000568, "Member 'ABP_IO_Switch_Parent_V1_C::OakMissionIcon' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, WwiseComponent) == 0x000570, "Member 'ABP_IO_Switch_Parent_V1_C::WwiseComponent' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, DefaultSceneRoot) == 0x000578, "Member 'ABP_IO_Switch_Parent_V1_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, StartOn) == 0x000580, "Member 'ABP_IO_Switch_Parent_V1_C::StartOn' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, StartLocked) == 0x000581, "Member 'ABP_IO_Switch_Parent_V1_C::StartLocked' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, LastPlayerToUseSwitch) == 0x000588, "Member 'ABP_IO_Switch_Parent_V1_C::LastPlayerToUseSwitch' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, PointLightArray) == 0x000590, "Member 'ABP_IO_Switch_Parent_V1_C::PointLightArray' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Enum_GetSwitchState) == 0x0005A0, "Member 'ABP_IO_Switch_Parent_V1_C::Enum_GetSwitchState' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchLocked) == 0x0005A8, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchLocked' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchUnlocked) == 0x0005B8, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchUnlocked' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchOn) == 0x0005C8, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchOn' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchOff) == 0x0005D8, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchOff' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchTurningOn) == 0x0005E8, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchTurningOn' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchTurningOff) == 0x0005F8, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchTurningOff' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchUsed) == 0x000608, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchUsed' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, SingleActivation) == 0x000618, "Member 'ABP_IO_Switch_Parent_V1_C::SingleActivation' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Elevator) == 0x000620, "Member 'ABP_IO_Switch_Parent_V1_C::Elevator' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, StaticMeshComponentArray) == 0x000628, "Member 'ABP_IO_Switch_Parent_V1_C::StaticMeshComponentArray' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, DynamicMaterialArray) == 0x000638, "Member 'ABP_IO_Switch_Parent_V1_C::DynamicMaterialArray' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_TurningOn) == 0x000648, "Member 'ABP_IO_Switch_Parent_V1_C::Event_TurningOn' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_TurningOff) == 0x000650, "Member 'ABP_IO_Switch_Parent_V1_C::Event_TurningOff' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_On) == 0x000658, "Member 'ABP_IO_Switch_Parent_V1_C::Event_On' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_Off) == 0x000660, "Member 'ABP_IO_Switch_Parent_V1_C::Event_Off' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_Lock) == 0x000668, "Member 'ABP_IO_Switch_Parent_V1_C::Event_Lock' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_Unlock) == 0x000670, "Member 'ABP_IO_Switch_Parent_V1_C::Event_Unlock' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_LockedUse) == 0x000678, "Member 'ABP_IO_Switch_Parent_V1_C::Event_LockedUse' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_Interactive) == 0x000680, "Member 'ABP_IO_Switch_Parent_V1_C::Event_Interactive' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Event_NonInteractive) == 0x000688, "Member 'ABP_IO_Switch_Parent_V1_C::Event_NonInteractive' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, On_SwitchLockedUsed) == 0x000690, "Member 'ABP_IO_Switch_Parent_V1_C::On_SwitchLockedUsed' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, StartNoFeedback) == 0x0006A0, "Member 'ABP_IO_Switch_Parent_V1_C::StartNoFeedback' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Color_Feedback_Locked) == 0x0006A4, "Member 'ABP_IO_Switch_Parent_V1_C::Color_Feedback_Locked' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Color_Feedback_Unlocked) == 0x0006B4, "Member 'ABP_IO_Switch_Parent_V1_C::Color_Feedback_Unlocked' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Color_Feedback_NoFeedback) == 0x0006C4, "Member 'ABP_IO_Switch_Parent_V1_C::Color_Feedback_NoFeedback' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Color_GoalColor) == 0x0006D4, "Member 'ABP_IO_Switch_Parent_V1_C::Color_GoalColor' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, CurrentReasonForSwitchMovement) == 0x0006E4, "Member 'ABP_IO_Switch_Parent_V1_C::CurrentReasonForSwitchMovement' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Feedback_ControllerAndCamera) == 0x0006E8, "Member 'ABP_IO_Switch_Parent_V1_C::Feedback_ControllerAndCamera' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, IsInMotion) == 0x0006F0, "Member 'ABP_IO_Switch_Parent_V1_C::IsInMotion' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, PreviewSwitchPosition) == 0x0006F1, "Member 'ABP_IO_Switch_Parent_V1_C::PreviewSwitchPosition' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, PreviewSwitchFeedback) == 0x0006F2, "Member 'ABP_IO_Switch_Parent_V1_C::PreviewSwitchFeedback' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, SwitchPositionState) == 0x0006F3, "Member 'ABP_IO_Switch_Parent_V1_C::SwitchPositionState' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, SwitchFeedbackState) == 0x0006F4, "Member 'ABP_IO_Switch_Parent_V1_C::SwitchFeedbackState' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, MissionEventToSendOnUse) == 0x0006F8, "Member 'ABP_IO_Switch_Parent_V1_C::MissionEventToSendOnUse' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, MissionDriven) == 0x000708, "Member 'ABP_IO_Switch_Parent_V1_C::MissionDriven' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Cond_SwitchPositionState_NewEnumerator2) == 0x000710, "Member 'ABP_IO_Switch_Parent_V1_C::Cond_SwitchPositionState_NewEnumerator2' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Cond_SwitchFeedbackState_NewEnumerator0) == 0x000718, "Member 'ABP_IO_Switch_Parent_V1_C::Cond_SwitchFeedbackState_NewEnumerator0' has a wrong offset!");
static_assert(offsetof(ABP_IO_Switch_Parent_V1_C, Cond_SwitchFeedbackState_NewEnumerator2) == 0x000720, "Member 'ABP_IO_Switch_Parent_V1_C::Cond_SwitchFeedbackState_NewEnumerator2' has a wrong offset!");

}

