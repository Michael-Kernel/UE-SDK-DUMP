#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPBeastmasterComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.ExecuteUbergraph_BPBeastmasterComponent
// 0x0038 (0x0038 - 0x0000)
struct BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBPChar_Pet_C>        K2Node_DynamicCast_AsIBPChar_Pet;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bForced;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPetReleaseReason                             K2Node_Event_ReleaseReason;                        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBPChar_Pet_C>        K2Node_DynamicCast_AsIBPChar_Pet1;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent) == 0x000008, "Wrong alignment on BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent");
static_assert(sizeof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent) == 0x000038, "Wrong size on BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, EntryPoint) == 0x000000, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, K2Node_DynamicCast_AsIBPChar_Pet) == 0x000008, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::K2Node_DynamicCast_AsIBPChar_Pet' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, K2Node_Event_bForced) == 0x00001A, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::K2Node_Event_bForced' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, K2Node_Event_ReleaseReason) == 0x00001B, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::K2Node_Event_ReleaseReason' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, K2Node_DynamicCast_AsIBPChar_Pet1) == 0x000020, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::K2Node_DynamicCast_AsIBPChar_Pet1' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.OnReleasedPet
// 0x0002 (0x0002 - 0x0000)
struct BPBeastmasterComponent_C_OnReleasedPet final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPetReleaseReason                             ReleaseReason;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPBeastmasterComponent_C_OnReleasedPet) == 0x000001, "Wrong alignment on BPBeastmasterComponent_C_OnReleasedPet");
static_assert(sizeof(BPBeastmasterComponent_C_OnReleasedPet) == 0x000002, "Wrong size on BPBeastmasterComponent_C_OnReleasedPet");
static_assert(offsetof(BPBeastmasterComponent_C_OnReleasedPet, bForced) == 0x000000, "Member 'BPBeastmasterComponent_C_OnReleasedPet::bForced' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_OnReleasedPet, ReleaseReason) == 0x000001, "Member 'BPBeastmasterComponent_C_OnReleasedPet::ReleaseReason' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.SpawnNewPet
// 0x0090 (0x0090 - 0x0000)
struct BPBeastmasterComponent_C_SpawnNewPet final
{
public:
	class UOakPlayerCharacterAugmentData_Pet*     PetAugment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckForSpawnCollisions_bCollisionsDetected; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetPetSpawnClass_Res;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      CallFunc_BreakPetAugment_PetType;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetEvolutionType             CallFunc_BreakPetAugment_EvolutionType;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakPetAugment_FrameName;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABPChar_Pet_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPBeastmasterComponent_C_SpawnNewPet) == 0x000010, "Wrong alignment on BPBeastmasterComponent_C_SpawnNewPet");
static_assert(sizeof(BPBeastmasterComponent_C_SpawnNewPet) == 0x000090, "Wrong size on BPBeastmasterComponent_C_SpawnNewPet");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, PetAugment) == 0x000000, "Member 'BPBeastmasterComponent_C_SpawnNewPet::PetAugment' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, SpawnLocation) == 0x000008, "Member 'BPBeastmasterComponent_C_SpawnNewPet::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, ReturnValue) == 0x000018, "Member 'BPBeastmasterComponent_C_SpawnNewPet::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_CheckForSpawnCollisions_bCollisionsDetected) == 0x000050, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_CheckForSpawnCollisions_bCollisionsDetected' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_GetPetSpawnClass_Res) == 0x000058, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_GetPetSpawnClass_Res' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_BreakPetAugment_PetType) == 0x000068, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_BreakPetAugment_PetType' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_BreakPetAugment_EvolutionType) == 0x000069, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_BreakPetAugment_EvolutionType' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_BreakPetAugment_FrameName) == 0x000070, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_BreakPetAugment_FrameName' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_SpawnNewPet, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BPBeastmasterComponent_C_SpawnNewPet::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.CheckForSpawnCollisions
// 0x0090 (0x0090 - 0x0000)
struct BPBeastmasterComponent_C_CheckForSpawnCollisions final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCollisionsDetected;                               // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocalVar_0;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewFacingYaw;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PetCapsuleHalfHeight;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PetCapsuleRadius;                                  // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_CapsuleOverlapActors_OutActors;           // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapActors_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCurrentFacingRotation_ReturnValue;     // 0x0074(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPBeastmasterComponent_C_CheckForSpawnCollisions) == 0x000008, "Wrong alignment on BPBeastmasterComponent_C_CheckForSpawnCollisions");
static_assert(sizeof(BPBeastmasterComponent_C_CheckForSpawnCollisions) == 0x000090, "Wrong size on BPBeastmasterComponent_C_CheckForSpawnCollisions");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, SpawnLocation) == 0x000000, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, bCollisionsDetected) == 0x00000C, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::bCollisionsDetected' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, NewLocalVar_0) == 0x000010, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, NewFacingYaw) == 0x00001C, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::NewFacingYaw' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, PetCapsuleHalfHeight) == 0x000020, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::PetCapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, PetCapsuleRadius) == 0x000024, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::PetCapsuleRadius' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, Temp_object_Variable) == 0x000028, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, K2Node_MakeArray_Array) == 0x000038, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_CapsuleOverlapActors_OutActors) == 0x000060, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_CapsuleOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_CapsuleOverlapActors_ReturnValue) == 0x000070, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_CapsuleOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_GetCurrentFacingRotation_ReturnValue) == 0x000074, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_GetCurrentFacingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_CheckForSpawnCollisions, K2Node_SwitchEnum_CmpSuccess) == 0x00008C, "Member 'BPBeastmasterComponent_C_CheckForSpawnCollisions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.GetPetSpawnClass
// 0x00D8 (0x00D8 - 0x0000)
struct BPBeastmasterComponent_C_GetPetSpawnClass final
{
public:
	class UOakPlayerCharacterAugmentData_Pet*     InAugment;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Res;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetEvolutionType             PetEvo;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      PetType;                                           // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      CallFunc_BreakPetAugment_PetType;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetEvolutionType             CallFunc_BreakPetAugment_EvolutionType;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakPetAugment_FrameName;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable2;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable3;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable4;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable5;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable6;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable7;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable8;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable9;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOakActionAbilityPetType                      Temp_byte_Variable1;                               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable10;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable11;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable12;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable13;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable14;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      Temp_byte_Variable2;                               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select1_Default;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select2_Default;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPBeastmasterComponent_C_GetPetSpawnClass) == 0x000008, "Wrong alignment on BPBeastmasterComponent_C_GetPetSpawnClass");
static_assert(sizeof(BPBeastmasterComponent_C_GetPetSpawnClass) == 0x0000D8, "Wrong size on BPBeastmasterComponent_C_GetPetSpawnClass");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, InAugment) == 0x000000, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::InAugment' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Res) == 0x000008, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Res' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, PetEvo) == 0x000010, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::PetEvo' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, PetType) == 0x000011, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::PetType' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable) == 0x000018, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, CallFunc_BreakPetAugment_PetType) == 0x000020, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::CallFunc_BreakPetAugment_PetType' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, CallFunc_BreakPetAugment_EvolutionType) == 0x000021, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::CallFunc_BreakPetAugment_EvolutionType' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, CallFunc_BreakPetAugment_FrameName) == 0x000028, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::CallFunc_BreakPetAugment_FrameName' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable1) == 0x000038, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable2) == 0x000040, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable3) == 0x000048, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable3' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable4) == 0x000050, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable4' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_byte_Variable) == 0x000058, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable5) == 0x000060, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable5' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable6) == 0x000068, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable6' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable7) == 0x000070, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable7' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable8) == 0x000078, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable8' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable9) == 0x000080, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable9' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_byte_Variable1) == 0x000089, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable10) == 0x000090, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable10' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable11) == 0x000098, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable11' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable12) == 0x0000A0, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable12' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable13) == 0x0000A8, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable13' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_class_Variable14) == 0x0000B0, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_class_Variable14' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, Temp_byte_Variable2) == 0x0000B8, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, K2Node_Select_Default) == 0x0000C0, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, K2Node_Select1_Default) == 0x0000C8, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetSpawnClass, K2Node_Select2_Default) == 0x0000D0, "Member 'BPBeastmasterComponent_C_GetPetSpawnClass::K2Node_Select2_Default' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.GetFallbackPetSpawnLocation
// 0x00D0 (0x00D0 - 0x0000)
struct BPBeastmasterComponent_C_GetFallbackPetSpawnLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select_Default;                             // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation) == 0x000010, "Wrong alignment on BPBeastmasterComponent_C_GetFallbackPetSpawnLocation");
static_assert(sizeof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation) == 0x0000D0, "Wrong size on BPBeastmasterComponent_C_GetFallbackPetSpawnLocation");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, ReturnValue) == 0x000000, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, Temp_bool_Variable) == 0x00000C, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, Temp_struct_Variable) == 0x000010, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, Temp_struct_Variable1) == 0x00001C, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, K2Node_Select_Default) == 0x000060, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_BreakTransform_Location) == 0x00006C, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_BreakTransform_Scale) == 0x000084, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_BreakVector_X) == 0x00009C, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000A8, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetFallbackPetSpawnLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BPBeastmasterComponent_C_GetFallbackPetSpawnLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.GetPetCooldownRefundPercent
// 0x0018 (0x0018 - 0x0000)
struct BPBeastmasterComponent_C_GetPetCooldownRefundPercent final
{
public:
	EPetRespawnCooldownRefundType                 RefundType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPetRespawnCooldownRefundType                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent) == 0x000004, "Wrong alignment on BPBeastmasterComponent_C_GetPetCooldownRefundPercent");
static_assert(sizeof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent) == 0x000018, "Wrong size on BPBeastmasterComponent_C_GetPetCooldownRefundPercent");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent, RefundType) == 0x000000, "Member 'BPBeastmasterComponent_C_GetPetCooldownRefundPercent::RefundType' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent, ReturnValue) == 0x000004, "Member 'BPBeastmasterComponent_C_GetPetCooldownRefundPercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent, Temp_byte_Variable) == 0x000008, "Member 'BPBeastmasterComponent_C_GetPetCooldownRefundPercent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent, CallFunc_GetDataTableValue_OutValue) == 0x00000C, "Member 'BPBeastmasterComponent_C_GetPetCooldownRefundPercent::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent, CallFunc_GetDataTableValue_ReturnValue) == 0x000010, "Member 'BPBeastmasterComponent_C_GetPetCooldownRefundPercent::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_GetPetCooldownRefundPercent, K2Node_Select_Default) == 0x000014, "Member 'BPBeastmasterComponent_C_GetPetCooldownRefundPercent::K2Node_Select_Default' has a wrong offset!");

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.ValidateCurrentPetAugment
// 0x0028 (0x0028 - 0x0000)
struct BPBeastmasterComponent_C_ValidateCurrentPetAugment final
{
public:
	class UOakPlayerCharacterAugmentData_Pet*     PetAugment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBPChar_Pet_C>        K2Node_DynamicCast_AsIBPChar_Pet;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesPetProfile_Res;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPBeastmasterComponent_C_ValidateCurrentPetAugment) == 0x000008, "Wrong alignment on BPBeastmasterComponent_C_ValidateCurrentPetAugment");
static_assert(sizeof(BPBeastmasterComponent_C_ValidateCurrentPetAugment) == 0x000028, "Wrong size on BPBeastmasterComponent_C_ValidateCurrentPetAugment");
static_assert(offsetof(BPBeastmasterComponent_C_ValidateCurrentPetAugment, PetAugment) == 0x000000, "Member 'BPBeastmasterComponent_C_ValidateCurrentPetAugment::PetAugment' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ValidateCurrentPetAugment, ReturnValue) == 0x000008, "Member 'BPBeastmasterComponent_C_ValidateCurrentPetAugment::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ValidateCurrentPetAugment, K2Node_DynamicCast_AsIBPChar_Pet) == 0x000010, "Member 'BPBeastmasterComponent_C_ValidateCurrentPetAugment::K2Node_DynamicCast_AsIBPChar_Pet' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ValidateCurrentPetAugment, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPBeastmasterComponent_C_ValidateCurrentPetAugment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPBeastmasterComponent_C_ValidateCurrentPetAugment, CallFunc_MatchesPetProfile_Res) == 0x000021, "Member 'BPBeastmasterComponent_C_ValidateCurrentPetAugment::CallFunc_MatchesPetProfile_Res' has a wrong offset!");

}

