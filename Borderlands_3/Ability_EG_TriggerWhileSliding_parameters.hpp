#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_EG_TriggerWhileSliding

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Ability_EG_TriggerWhileSliding.Ability_EG_TriggerWhileSliding_C.ExecuteUbergraph_Ability_EG_TriggerWhileSliding
// 0x0020 (0x0020 - 0x0000)
struct Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding) == 0x000008, "Wrong alignment on Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding");
static_assert(sizeof(Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding) == 0x000020, "Wrong size on Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding, EntryPoint) == 0x000000, "Member 'Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding, CallFunc_GetAbilityOwner_ReturnValue) == 0x000008, "Member 'Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding, K2Node_DynamicCast_AsOak_Character) == 0x000010, "Member 'Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_EG_TriggerWhileSliding_C_ExecuteUbergraph_Ability_EG_TriggerWhileSliding::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ability_EG_TriggerWhileSliding.Ability_EG_TriggerWhileSliding_C.CalculateAbilityState
// 0x0004 (0x0004 - 0x0000)
struct Ability_EG_TriggerWhileSliding_C_CalculateAbilityState final
{
public:
	EGbxAbilityState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSliding_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              CallFunc_CalculateAbilityState_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ability_EG_TriggerWhileSliding_C_CalculateAbilityState) == 0x000001, "Wrong alignment on Ability_EG_TriggerWhileSliding_C_CalculateAbilityState");
static_assert(sizeof(Ability_EG_TriggerWhileSliding_C_CalculateAbilityState) == 0x000004, "Wrong size on Ability_EG_TriggerWhileSliding_C_CalculateAbilityState");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_CalculateAbilityState, ReturnValue) == 0x000000, "Member 'Ability_EG_TriggerWhileSliding_C_CalculateAbilityState::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_CalculateAbilityState, CallFunc_IsCharacterSliding_ReturnValue) == 0x000001, "Member 'Ability_EG_TriggerWhileSliding_C_CalculateAbilityState::CallFunc_IsCharacterSliding_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_CalculateAbilityState, CallFunc_CalculateAbilityState_ReturnValue) == 0x000002, "Member 'Ability_EG_TriggerWhileSliding_C_CalculateAbilityState::CallFunc_CalculateAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_EG_TriggerWhileSliding_C_CalculateAbilityState, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'Ability_EG_TriggerWhileSliding_C_CalculateAbilityState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

