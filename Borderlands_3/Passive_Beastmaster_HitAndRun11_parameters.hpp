#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_HitAndRun11

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Passive_Beastmaster_HitAndRun11.Passive_Beastmaster_HitAndRun11_C.ExecuteUbergraph_Passive_Beastmaster_HitAndRun11
// 0x0068 (0x0068 - 0x0000)
struct Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue1;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UOakActionAbility* ActionAbility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UOakActionAbility*                      K2Node_CustomEvent_ActionAbility;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0040(0x0028)(NoDestructor)
};
static_assert(alignof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11) == 0x000008, "Wrong alignment on Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11");
static_assert(sizeof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11) == 0x000068, "Wrong size on Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, EntryPoint) == 0x000000, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000004, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, CallFunc_GetValueOfAttribute_ReturnValue1) == 0x000008, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::CallFunc_GetValueOfAttribute_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, Temp_bool_Variable) == 0x00000C, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000D, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, Temp_float_Variable) == 0x000010, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, Temp_float_Variable1) == 0x000014, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, K2Node_Select_Default) == 0x000018, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, K2Node_CustomEvent_ActionAbility) == 0x000038, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::K2Node_CustomEvent_ActionAbility' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000040, "Member 'Passive_Beastmaster_HitAndRun11_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun11::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");

// Function Passive_Beastmaster_HitAndRun11.Passive_Beastmaster_HitAndRun11_C.OnActionSkillActivated_HitAndRun11
// 0x0008 (0x0008 - 0x0000)
struct Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11 final
{
public:
	class UOakActionAbility*                      ActionAbility;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11) == 0x000008, "Wrong alignment on Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11");
static_assert(sizeof(Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11) == 0x000008, "Wrong size on Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11");
static_assert(offsetof(Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11, ActionAbility) == 0x000000, "Member 'Passive_Beastmaster_HitAndRun11_C_OnActionSkillActivated_HitAndRun11::ActionAbility' has a wrong offset!");

}

