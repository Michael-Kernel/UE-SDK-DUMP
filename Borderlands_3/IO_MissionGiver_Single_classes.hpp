#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionGiver_Single

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "EnumState_MissionGiver_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_MissionGiver_Single.IO_MissionGiver_Single_C
// 0x0048 (0x0598 - 0x0550)
class AIO_MissionGiver_Single_C : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UUsableComponent*                       Usable;                                            // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMissionDirectorComponent*           OakMissionDirector;                                // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MissionToGive;                                     // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EnumState_MissionGiver                        MissionGiverState;                                 // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   MissionGiverSingle_PlacacrdTriggered;              // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UGbxCondition*                          Cond_MissionGiverState_NewEnumerator1;             // 0x0590(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void MissionGiverSingle_PlacacrdTriggered__DelegateSignature(bool MissionAvailable, class UOakMissionDirectorComponent* MissionDirectorComponent, class AOakPlayerController* UserPlayerController);
	void ExecuteUbergraph_IO_MissionGiver_Single(int32 EntryPoint);
	void Play_Feedback_NoMissionsAvailable();
	void Play_Feedback_MissionsAvailable();
	void __UserState_MissionGiverState_1(bool bFromLoad);
	void __UserState_MissionGiverState_0(bool bFromLoad);
	void BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void BndEvt__OakMissionDirector_K2Node_ComponentBoundEvent_1_MissionDirectorDisabled__DelegateSignature_IO_MissionUsable_GrowingPains_WaterPurifier();
	void BndEvt__OakMissionDirector_K2Node_ComponentBoundEvent_2_MissionDirectorEnabled__DelegateSignature_IO_MissionUsable_GrowingPains_WaterPurifier();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_MissionGiver_Single_C">();
	}
	static class AIO_MissionGiver_Single_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_MissionGiver_Single_C>();
	}
};
static_assert(alignof(AIO_MissionGiver_Single_C) == 0x000008, "Wrong alignment on AIO_MissionGiver_Single_C");
static_assert(sizeof(AIO_MissionGiver_Single_C) == 0x000598, "Wrong size on AIO_MissionGiver_Single_C");
static_assert(offsetof(AIO_MissionGiver_Single_C, UberGraphFrame) == 0x000550, "Member 'AIO_MissionGiver_Single_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, Usable) == 0x000558, "Member 'AIO_MissionGiver_Single_C::Usable' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, OakMissionDirector) == 0x000560, "Member 'AIO_MissionGiver_Single_C::OakMissionDirector' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, DefaultSceneRoot) == 0x000568, "Member 'AIO_MissionGiver_Single_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, MissionToGive) == 0x000570, "Member 'AIO_MissionGiver_Single_C::MissionToGive' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, MissionGiverState) == 0x000578, "Member 'AIO_MissionGiver_Single_C::MissionGiverState' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, MissionGiverSingle_PlacacrdTriggered) == 0x000580, "Member 'AIO_MissionGiver_Single_C::MissionGiverSingle_PlacacrdTriggered' has a wrong offset!");
static_assert(offsetof(AIO_MissionGiver_Single_C, Cond_MissionGiverState_NewEnumerator1) == 0x000590, "Member 'AIO_MissionGiver_Single_C::Cond_MissionGiverState_NewEnumerator1' has a wrong offset!");

}

