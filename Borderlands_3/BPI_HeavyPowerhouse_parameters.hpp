#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HeavyPowerhouse

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_HeavyPowerhouse.BPI_HeavyPowerhouse_C.HeavyPowerhouse_ZigZagLightning_StartBeam
// 0x0008 (0x0008 - 0x0000)
struct BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam final
{
public:
	class AActor*                                 BeamTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam) == 0x000008, "Wrong alignment on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam");
static_assert(sizeof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam) == 0x000008, "Wrong size on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam");
static_assert(offsetof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam, BeamTarget) == 0x000000, "Member 'BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_StartBeam::BeamTarget' has a wrong offset!");

// Function BPI_HeavyPowerhouse.BPI_HeavyPowerhouse_C.HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint
// 0x0008 (0x0008 - 0x0000)
struct BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint final
{
public:
	class AActor*                                 AttackTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint) == 0x000008, "Wrong alignment on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint");
static_assert(sizeof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint) == 0x000008, "Wrong size on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint");
static_assert(offsetof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint, AttackTarget) == 0x000000, "Member 'BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_SpawnTargetPoint::AttackTarget' has a wrong offset!");

// Function BPI_HeavyPowerhouse.BPI_HeavyPowerhouse_C.HeavyPowerhouse_ZigZagLightning_GetTravelingAudio
// 0x0008 (0x0008 - 0x0000)
struct BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio final
{
public:
	class UWwiseAudioComponent*                   TravelingAudio;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio) == 0x000008, "Wrong alignment on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio");
static_assert(sizeof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio) == 0x000008, "Wrong size on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio");
static_assert(offsetof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio, TravelingAudio) == 0x000000, "Member 'BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning_GetTravelingAudio::TravelingAudio' has a wrong offset!");

// Function BPI_HeavyPowerhouse.BPI_HeavyPowerhouse_C.HeavyPowerhouse_ZigZagLightning
// 0x0010 (0x0010 - 0x0000)
struct BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLeftHand;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning) == 0x000008, "Wrong alignment on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning");
static_assert(sizeof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning) == 0x000010, "Wrong size on BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning");
static_assert(offsetof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning, MyTarget) == 0x000000, "Member 'BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning::MyTarget' has a wrong offset!");
static_assert(offsetof(BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning, IsLeftHand) == 0x000008, "Member 'BPI_HeavyPowerhouse_C_HeavyPowerhouse_ZigZagLightning::IsLeftHand' has a wrong offset!");

}

