#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Screen_Actor

#include "Basic.hpp"

#include "BP_Screen_Actor_classes.hpp"
#include "BP_Screen_Actor_parameters.hpp"


namespace SDK
{

// Function BP_Screen_Actor.BP_Screen_Actor_C.ManageLight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Screen_Actor_C::ManageLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "ManageLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Screen_Actor.BP_Screen_Actor_C.Create Dynamic Screen Material Instance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         DynamicScreenMaterialOut                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               DefaultScreenMaterialOut                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         DynamicLightMaterialOut                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Screen_Actor_C::Create_Dynamic_Screen_Material_Instance(class UMaterialInstanceDynamic** DynamicScreenMaterialOut, class UMaterialInterface** DefaultScreenMaterialOut, class UMaterialInstanceDynamic** DynamicLightMaterialOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "Create Dynamic Screen Material Instance");

	Params::BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DynamicScreenMaterialOut != nullptr)
		*DynamicScreenMaterialOut = Parms.DynamicScreenMaterialOut;

	if (DefaultScreenMaterialOut != nullptr)
		*DefaultScreenMaterialOut = Parms.DefaultScreenMaterialOut;

	if (DynamicLightMaterialOut != nullptr)
		*DynamicLightMaterialOut = Parms.DynamicLightMaterialOut;
}


// Function BP_Screen_Actor.BP_Screen_Actor_C.Set Per Element Screen Material Parameters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         DynamicScreenMat                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               DefaultScreenMaterial                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         DynamicLightMat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         DynamicMaterial                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Screen_Actor_C::Set_Per_Element_Screen_Material_Parameters(class UMaterialInstanceDynamic* DynamicScreenMat, class UMaterialInterface* DefaultScreenMaterial, class UMaterialInstanceDynamic* DynamicLightMat, class UMaterialInstanceDynamic** DynamicMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "Set Per Element Screen Material Parameters");

	Params::BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters Parms{};

	Parms.DynamicScreenMat = DynamicScreenMat;
	Parms.DefaultScreenMaterial = DefaultScreenMaterial;
	Parms.DynamicLightMat = DynamicLightMat;

	UObject::ProcessEvent(Func, &Parms);

	if (DynamicMaterial != nullptr)
		*DynamicMaterial = Parms.DynamicMaterial;
}


// Function BP_Screen_Actor.BP_Screen_Actor_C.Set Level ColorScheme
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Screen_Actor_C::Set_Level_ColorScheme()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "Set Level ColorScheme");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Screen_Actor.BP_Screen_Actor_C.Set Per Element Base Material Parameters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Material_Instance_Dynamic                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Array_index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Dynamic_Material_Instance                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Material_ID_Out                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Default_Material_Out                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Screen_Actor_C::Set_Per_Element_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Material_ID_Out, class UMaterialInstanceDynamic** Default_Material_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "Set Per Element Base Material Parameters");

	Params::BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters Parms{};

	Parms.Material_Instance_Dynamic = Material_Instance_Dynamic;
	Parms.Array_index = Array_index;

	UObject::ProcessEvent(Func, &Parms);

	if (Dynamic_Material_Instance != nullptr)
		*Dynamic_Material_Instance = Parms.Dynamic_Material_Instance;

	if (Material_ID_Out != nullptr)
		*Material_ID_Out = Parms.Material_ID_Out;

	if (Default_Material_Out != nullptr)
		*Default_Material_Out = Parms.Default_Material_Out;
}


// Function BP_Screen_Actor.BP_Screen_Actor_C.Per Instance Master Material Parameters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Screen_Actor_C::Per_Instance_Master_Material_Parameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "Per Instance Master Material Parameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Screen_Actor.BP_Screen_Actor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Screen_Actor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Screen_Actor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

