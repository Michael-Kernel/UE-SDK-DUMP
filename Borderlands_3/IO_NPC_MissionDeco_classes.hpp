#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_NPC_MissionDeco

#include "Basic.hpp"

#include "Struct_NPC_MissionDeco_BasicColor_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EnumState_NPC_MissionDeco_structs.hpp"
#include "Struct_NPC_MissionDeco_HairColor_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_NPC_MissionDeco.IO_NPC_MissionDeco_C
// 0x01A8 (0x06F8 - 0x0550)
class AIO_NPC_MissionDeco_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UGbxActionComponent*                    GbxAction;                                         // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrivialFoleyImplementationComponent*   TrivialFoleyImplementation;                        // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFoleyMainComponent*                    FoleyMain;                                         // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakDamageComponent*                    OakDamage;                                         // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTargetableComponent*                   Targetable;                                        // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavMeshPainterComponent*            GbxNavMeshPainter;                                 // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              GbxSkeletalMesh;                                   // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EnumState_NPC_MissionDeco                     NPC_Deco_State;                                    // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDA_NPC_MissionDeco_C*                  NPC_DataAsset;                                     // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayTasksComponent*                GameplayTaskComponent;                             // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RandomIsMale;                                      // 0x05C9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA[0x2];                                      // 0x05CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SkinTone;                                          // 0x05CC(0x0010)(Edit, BlueprintVisible, Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkinToneScale_Min;                                 // 0x05DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkinToneScale_Max;                                 // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumState_NPC_MissionDeco                     NPC_Deco_State_Preview;                            // 0x05E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequireSecondaryEnableState;                       // 0x05E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E6[0x2];                                      // 0x05E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         State03_Rand;                                      // 0x05E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         State04_Rand;                                      // 0x05EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         State05_Rand;                                      // 0x05F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AccumulativeDefaultStates;                         // 0x05F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RandomizeHairColor;                                // 0x05F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F6[0x2];                                      // 0x05F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_NPC_MissionDeco_HairColor> HairColor;                                         // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference)
	bool                                          RandomizeEyeColor;                                 // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   EyeColor;                                          // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          RandomizeGeneralColors;                            // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_NPC_MissionDeco_BasicColor> GeneralColor;                                      // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference)
	struct FStruct_NPC_MissionDeco_HairColor      ChosenHairColor;                                   // 0x0638(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	struct FLinearColor                           ChosenEyeColor;                                    // 0x0668(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_NPC_MissionDeco_BasicColor     ChosenGeneralColor;                                // 0x0678(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_NPC_Deco_State_NewEnumerator1;                // 0x06D8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_NPC_Deco_State_NewEnumerator2;                // 0x06E0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_NPC_Deco_State_NewEnumerator3;                // 0x06E8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_NPC_Deco_State_NewEnumerator4;                // 0x06F0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void CreateGameplayTaskComponent();
	void UserConstructionScript();
	void OnAnimEnd_002DF8024F99216FC29A04BC3201FC4B();
	void OnEnd_002DF8024F99216FC29A04BC3201FC4B(EGbxActionEndState EndState, class AActor* Actor);
	void __UserState_NPC_Deco_State_0(bool bFromLoad);
	void HideSkeletal();
	void ShowSkeletal();
	void EvaluateNPCDecoStruct(const struct FStruct_NPC_MissionDeco& NPCDecoStruct);
	void __UserState_NPC_Deco_State_1(bool bFromLoad);
	void __UserState_NPC_Deco_State_2(bool bFromLoad);
	void __UserState_NPC_Deco_State_3(bool bFromLoad);
	void __UserState_NPC_Deco_State_4(bool bFromLoad);
	void Preview_State_01();
	void Preview_State_02();
	void Preview_State_03();
	void Preview_State_04();
	void Preview_State_05();
	void ReceiveBeginPlay();
	void SetNPCMissionDecoState(EnumState_NPC_MissionDeco State);
	void OnEnabled();
	void OnDisabled();
	void OnEnabled_State02();
	void OnEnabled_State03();
	void OnEnabled_State04();
	void OnEnabled_State05();
	void OnEnabled_DefaultState();
	void SetHairColor(class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void SetEyeColor(class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void SetGeneralColors(class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void ExecuteUbergraph_IO_NPC_MissionDeco(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_NPC_MissionDeco_C">();
	}
	static class AIO_NPC_MissionDeco_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_NPC_MissionDeco_C>();
	}
};
static_assert(alignof(AIO_NPC_MissionDeco_C) == 0x000008, "Wrong alignment on AIO_NPC_MissionDeco_C");
static_assert(sizeof(AIO_NPC_MissionDeco_C) == 0x0006F8, "Wrong size on AIO_NPC_MissionDeco_C");
static_assert(offsetof(AIO_NPC_MissionDeco_C, UberGraphFrame) == 0x000550, "Member 'AIO_NPC_MissionDeco_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, GbxAction) == 0x000558, "Member 'AIO_NPC_MissionDeco_C::GbxAction' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, TrivialFoleyImplementation) == 0x000560, "Member 'AIO_NPC_MissionDeco_C::TrivialFoleyImplementation' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, FoleyMain) == 0x000568, "Member 'AIO_NPC_MissionDeco_C::FoleyMain' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, OakDamage) == 0x000570, "Member 'AIO_NPC_MissionDeco_C::OakDamage' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Targetable) == 0x000578, "Member 'AIO_NPC_MissionDeco_C::Targetable' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, TextRender) == 0x000580, "Member 'AIO_NPC_MissionDeco_C::TextRender' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Cube) == 0x000588, "Member 'AIO_NPC_MissionDeco_C::Cube' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Capsule) == 0x000590, "Member 'AIO_NPC_MissionDeco_C::Capsule' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, GbxNavMeshPainter) == 0x000598, "Member 'AIO_NPC_MissionDeco_C::GbxNavMeshPainter' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, GbxSkeletalMesh) == 0x0005A0, "Member 'AIO_NPC_MissionDeco_C::GbxSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, DefaultSceneRoot) == 0x0005A8, "Member 'AIO_NPC_MissionDeco_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, NPC_Deco_State) == 0x0005B0, "Member 'AIO_NPC_MissionDeco_C::NPC_Deco_State' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, NPC_DataAsset) == 0x0005B8, "Member 'AIO_NPC_MissionDeco_C::NPC_DataAsset' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, GameplayTaskComponent) == 0x0005C0, "Member 'AIO_NPC_MissionDeco_C::GameplayTaskComponent' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, IsMale) == 0x0005C8, "Member 'AIO_NPC_MissionDeco_C::IsMale' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, RandomIsMale) == 0x0005C9, "Member 'AIO_NPC_MissionDeco_C::RandomIsMale' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, SkinTone) == 0x0005CC, "Member 'AIO_NPC_MissionDeco_C::SkinTone' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, SkinToneScale_Min) == 0x0005DC, "Member 'AIO_NPC_MissionDeco_C::SkinToneScale_Min' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, SkinToneScale_Max) == 0x0005E0, "Member 'AIO_NPC_MissionDeco_C::SkinToneScale_Max' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, NPC_Deco_State_Preview) == 0x0005E4, "Member 'AIO_NPC_MissionDeco_C::NPC_Deco_State_Preview' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, RequireSecondaryEnableState) == 0x0005E5, "Member 'AIO_NPC_MissionDeco_C::RequireSecondaryEnableState' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, State03_Rand) == 0x0005E8, "Member 'AIO_NPC_MissionDeco_C::State03_Rand' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, State04_Rand) == 0x0005EC, "Member 'AIO_NPC_MissionDeco_C::State04_Rand' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, State05_Rand) == 0x0005F0, "Member 'AIO_NPC_MissionDeco_C::State05_Rand' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, AccumulativeDefaultStates) == 0x0005F4, "Member 'AIO_NPC_MissionDeco_C::AccumulativeDefaultStates' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, RandomizeHairColor) == 0x0005F5, "Member 'AIO_NPC_MissionDeco_C::RandomizeHairColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, HairColor) == 0x0005F8, "Member 'AIO_NPC_MissionDeco_C::HairColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, RandomizeEyeColor) == 0x000608, "Member 'AIO_NPC_MissionDeco_C::RandomizeEyeColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, EyeColor) == 0x000610, "Member 'AIO_NPC_MissionDeco_C::EyeColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, RandomizeGeneralColors) == 0x000620, "Member 'AIO_NPC_MissionDeco_C::RandomizeGeneralColors' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, GeneralColor) == 0x000628, "Member 'AIO_NPC_MissionDeco_C::GeneralColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, ChosenHairColor) == 0x000638, "Member 'AIO_NPC_MissionDeco_C::ChosenHairColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, ChosenEyeColor) == 0x000668, "Member 'AIO_NPC_MissionDeco_C::ChosenEyeColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, ChosenGeneralColor) == 0x000678, "Member 'AIO_NPC_MissionDeco_C::ChosenGeneralColor' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Cond_NPC_Deco_State_NewEnumerator1) == 0x0006D8, "Member 'AIO_NPC_MissionDeco_C::Cond_NPC_Deco_State_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Cond_NPC_Deco_State_NewEnumerator2) == 0x0006E0, "Member 'AIO_NPC_MissionDeco_C::Cond_NPC_Deco_State_NewEnumerator2' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Cond_NPC_Deco_State_NewEnumerator3) == 0x0006E8, "Member 'AIO_NPC_MissionDeco_C::Cond_NPC_Deco_State_NewEnumerator3' has a wrong offset!");
static_assert(offsetof(AIO_NPC_MissionDeco_C, Cond_NPC_Deco_State_NewEnumerator4) == 0x0006F0, "Member 'AIO_NPC_MissionDeco_C::Cond_NPC_Deco_State_NewEnumerator4' has a wrong offset!");

}

