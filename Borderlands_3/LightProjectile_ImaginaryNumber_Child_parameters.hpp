#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_ImaginaryNumber_Child

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_ImaginaryNumber_Child.LightProjectile_ImaginaryNumber_Child_C.OnLifetimeExpired
// 0x0200 (0x0200 - 0x0000)
struct LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLoc;                                            // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NextFiringID;                                      // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetFiringPatternID_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetFiringPatternID_ReturnValue1;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0054(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakLightProjectileInitializationData  K2Node_MakeStruct_OakLightProjectileInitializationData; // 0x00A8(0x0158)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired) == 0x000200, "Wrong size on LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, EndLoc) == 0x000008, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::EndLoc' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, NextFiringID) == 0x000014, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::NextFiringID' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GetFiringPatternID_ReturnValue) == 0x000015, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GetFiringPatternID_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000016, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000018, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GetFiringPatternID_ReturnValue1) == 0x00001C, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GetFiringPatternID_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_Add_ByteByte_ReturnValue) == 0x000024, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000030, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GetDamageCauser_ReturnValue) == 0x000040, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_BreakTransform_Location) == 0x000048, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_BreakTransform_Rotation) == 0x000054, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GetSource_ReturnValue) == 0x000070, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GetForwardVector_ReturnValue) == 0x000078, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, CallFunc_GetInstigator_ReturnValue) == 0x0000A0, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired, K2Node_MakeStruct_OakLightProjectileInitializationData) == 0x0000A8, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnLifetimeExpired::K2Node_MakeStruct_OakLightProjectileInitializationData' has a wrong offset!");

// Function LightProjectile_ImaginaryNumber_Child.LightProjectile_ImaginaryNumber_Child_C.OnDamage
// 0x00A0 (0x00A0 - 0x0000)
struct LightProjectile_ImaginaryNumber_Child_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_ImaginaryNumber_Child_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_ImaginaryNumber_Child_C_OnDamage");
static_assert(sizeof(LightProjectile_ImaginaryNumber_Child_C_OnDamage) == 0x0000A0, "Wrong size on LightProjectile_ImaginaryNumber_Child_C_OnDamage");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_ImaginaryNumber_Child_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_ImaginaryNumber_Child_C_OnDamage::bCritical' has a wrong offset!");

}

