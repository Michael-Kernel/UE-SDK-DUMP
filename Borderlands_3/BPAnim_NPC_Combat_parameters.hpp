#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_NPC_Combat

#include "Basic.hpp"

#include "Enum_AnimPostures_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPAnim_NPC_Combat.BPAnim_NPC_Combat_C.Sort_Posture_StateMachine_TransitionRules
// 0x0005 (0x0005 - 0x0000)
struct BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules final
{
public:
	Enum_AnimPostures                             Posture_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules) == 0x000001, "Wrong alignment on BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules");
static_assert(sizeof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules) == 0x000005, "Wrong size on BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules");
static_assert(offsetof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules, Posture_0) == 0x000000, "Member 'BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules::Posture_0' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000003, "Member 'BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000004, "Member 'BPAnim_NPC_Combat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");

// Function BPAnim_NPC_Combat.BPAnim_NPC_Combat_C.CalculateWeaponHoldData
// 0x0088 (0x0088 - 0x0000)
struct BPAnim_NPC_Combat_C_CalculateWeaponHoldData final
{
public:
	class AWeapon*                                Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                PreviousWeapon;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakWeapon*                             K2Node_DynamicCast_AsOak_Weapon;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue4;     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue5;     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue1;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakInventoryBalanceStateComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManufacturerData*                      CallFunc_GetManufacturer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue6;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue7;     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue8;     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue9;     // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue10;    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue11;    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue12;    // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue13;    // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue14;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select1_Default;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select2_Default;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData) == 0x000008, "Wrong alignment on BPAnim_NPC_Combat_C_CalculateWeaponHoldData");
static_assert(sizeof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData) == 0x000088, "Wrong size on BPAnim_NPC_Combat_C_CalculateWeaponHoldData");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, Weapon) == 0x000000, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::Weapon' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, PreviousWeapon) == 0x000008, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::PreviousWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, K2Node_DynamicCast_AsOak_Weapon) == 0x000010, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::K2Node_DynamicCast_AsOak_Weapon' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00001A, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x00001B, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x00001C, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue4) == 0x00001D, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue5) == 0x00001E, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_Conv_ByteToInt_ReturnValue1) == 0x000024, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_Conv_ByteToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_GetManufacturer_ReturnValue) == 0x000038, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_GetManufacturer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, Temp_bool_Variable) == 0x000040, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_Array_Get_Item1) == 0x000050, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, K2Node_Select_Default) == 0x000058, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_Array_Get_Item2) == 0x000060, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue6) == 0x000068, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue7) == 0x000069, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue8) == 0x00006A, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue9) == 0x00006B, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue10) == 0x00006C, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue11) == 0x00006D, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue12) == 0x00006E, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue13) == 0x00006F, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue14) == 0x000070, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, Temp_bool_Variable1) == 0x000071, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, Temp_bool_Variable2) == 0x000072, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, K2Node_Select1_Default) == 0x000078, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_CalculateWeaponHoldData, K2Node_Select2_Default) == 0x000080, "Member 'BPAnim_NPC_Combat_C_CalculateWeaponHoldData::K2Node_Select2_Default' has a wrong offset!");

// Function BPAnim_NPC_Combat.BPAnim_NPC_Combat_C.OnWeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_NPC_Combat_C_OnWeaponChanged final
{
public:
	class AWeapon*                                NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NPC_Combat_C_OnWeaponChanged) == 0x000008, "Wrong alignment on BPAnim_NPC_Combat_C_OnWeaponChanged");
static_assert(sizeof(BPAnim_NPC_Combat_C_OnWeaponChanged) == 0x000010, "Wrong size on BPAnim_NPC_Combat_C_OnWeaponChanged");
static_assert(offsetof(BPAnim_NPC_Combat_C_OnWeaponChanged, NewWeapon) == 0x000000, "Member 'BPAnim_NPC_Combat_C_OnWeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_OnWeaponChanged, PrevWeapon) == 0x000008, "Member 'BPAnim_NPC_Combat_C_OnWeaponChanged::PrevWeapon' has a wrong offset!");

// Function BPAnim_NPC_Combat.BPAnim_NPC_Combat_C.ExecuteUbergraph_BPAnim_NPC_Combat
// 0x0168 (0x0168 - 0x0000)
struct BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable1;                             // 0x0038(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable2;                             // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable3;                             // 0x0058(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable4;                             // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable5;                             // 0x0078(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          CallFunc_InitCharacterComponents_Characteroutput;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxCharacterMovementComponent*         CallFunc_InitCharacterComponents_GbxCharacterMovement; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCharacterMovementComponent*         CallFunc_InitCharacterComponents_OakCharacterMovement; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue1;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue4;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue5;         // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue6;         // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue7;         // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue1;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue2;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue3;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue4;                      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue5;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue;    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_Event_NewWeapon;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_Event_PrevWeapon;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlendSpaceBaseFromAnimSet_bIsValid;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpaceBase*                        CallFunc_GetBlendSpaceBaseFromAnimSet_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBlendSpaceBaseFromAnimSet_bIsValid1;   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpaceBase*                        CallFunc_GetBlendSpaceBaseFromAnimSet_ReturnValue1; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAnimationStyle_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid1;      // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue1;   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid2;      // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue2;   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid3;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue3;   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid4;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue4;   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat) == 0x000008, "Wrong alignment on BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat");
static_assert(sizeof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat) == 0x000168, "Wrong size on BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, EntryPoint) == 0x000000, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue1) == 0x000005, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BreakRotator_Roll1) == 0x000014, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BreakRotator_Pitch1) == 0x000018, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BreakRotator_Yaw1) == 0x00001C, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue2) == 0x000020, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue3) == 0x000021, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue4) == 0x000022, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue5) == 0x000023, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Not_PreBool_ReturnValue6) == 0x000024, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, Temp_struct_Variable) == 0x000028, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, Temp_struct_Variable1) == 0x000038, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, Temp_struct_Variable2) == 0x000048, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, Temp_struct_Variable3) == 0x000058, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, Temp_struct_Variable4) == 0x000068, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, Temp_struct_Variable5) == 0x000078, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000088, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_InitCharacterComponents_Characteroutput) == 0x000090, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_InitCharacterComponents_Characteroutput' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_InitCharacterComponents_GbxCharacterMovement) == 0x000098, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_InitCharacterComponents_GbxCharacterMovement' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_InitCharacterComponents_OakCharacterMovement) == 0x0000A0, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_InitCharacterComponents_OakCharacterMovement' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000A8, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue1) == 0x0000A9, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x0000AA, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x0000AB, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue4) == 0x0000AC, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue5) == 0x0000AD, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue6) == 0x0000AE, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_EqualEqual_NameName_ReturnValue7) == 0x0000AF, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_EqualEqual_NameName_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_K2Play_ReturnValue) == 0x0000B0, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_K2Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_K2Play_ReturnValue1) == 0x0000B8, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_K2Play_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_K2Play_ReturnValue2) == 0x0000C0, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_K2Play_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_K2Play_ReturnValue3) == 0x0000C8, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_K2Play_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_K2Play_ReturnValue4) == 0x0000D0, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_K2Play_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_K2Play_ReturnValue5) == 0x0000D8, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_K2Play_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid) == 0x0000E8, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue) == 0x0000F0, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, K2Node_Event_NewWeapon) == 0x0000F8, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::K2Node_Event_NewWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, K2Node_Event_PrevWeapon) == 0x000100, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::K2Node_Event_PrevWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetBlendSpaceBaseFromAnimSet_bIsValid) == 0x000108, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetBlendSpaceBaseFromAnimSet_bIsValid' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetBlendSpaceBaseFromAnimSet_ReturnValue) == 0x000110, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetBlendSpaceBaseFromAnimSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_BooleanAND_ReturnValue) == 0x000118, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetBlendSpaceBaseFromAnimSet_bIsValid1) == 0x000119, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetBlendSpaceBaseFromAnimSet_bIsValid1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetBlendSpaceBaseFromAnimSet_ReturnValue1) == 0x000120, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetBlendSpaceBaseFromAnimSet_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimationStyle_ReturnValue) == 0x000128, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimationStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetValidValue_ReturnValue) == 0x000129, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid1) == 0x00012A, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue1) == 0x000130, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000138, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid2) == 0x00013C, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue2) == 0x000140, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid3) == 0x000148, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue3) == 0x000150, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid4) == 0x000158, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue4) == 0x000160, "Member 'BPAnim_NPC_Combat_C_ExecuteUbergraph_BPAnim_NPC_Combat::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue4' has a wrong offset!");

}

