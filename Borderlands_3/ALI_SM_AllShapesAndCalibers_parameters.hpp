#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALI_SM_AllShapesAndCalibers

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK::Params
{

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.ExecuteUbergraph_ALI_SM_AllShapesAndCalibers
// 0x4B68 (0x4B68 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0008(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue1;            // 0x0220(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue2;            // 0x0438(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue3;            // 0x0650(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue4;            // 0x0868(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue5;            // 0x0A80(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue6;            // 0x0C98(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue7;            // 0x0EB0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue8;            // 0x10C8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue9;            // 0x12E0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue10;           // 0x14F8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue11;           // 0x1710(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue12;           // 0x1928(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x1B40(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x1B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x1B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x1B51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B52[0x6];                                     // 0x1B52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue13;           // 0x1B58(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation1;                // 0x1D70(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID1;                  // 0x1D7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue1;                 // 0x1D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue1;              // 0x1D81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D82[0x6];                                     // 0x1D82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue14;           // 0x1D88(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue15;           // 0x1FA0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue16;           // 0x21B8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue17;           // 0x23D0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue18;           // 0x25E8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue19;           // 0x2800(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue20;           // 0x2A18(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue21;           // 0x2C30(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue22;           // 0x2E48(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue23;           // 0x3060(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue24;           // 0x3278(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation2;                // 0x3490(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID2;                  // 0x349C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue2;                 // 0x34A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue2;              // 0x34A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A2[0x6];                                     // 0x34A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue25;           // 0x34A8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue26;           // 0x36C0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue27;           // 0x38D8(0x0218)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x3AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF1[0x7];                                     // 0x3AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue28;           // 0x3AF8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue29;           // 0x3D10(0x0218)()
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue; // 0x3F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F29[0x3];                                     // 0x3F29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation3;                // 0x3F2C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID3;                  // 0x3F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue3;                 // 0x3F3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x3F3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue3;              // 0x3F3E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3F[0x1];                                     // 0x3F3F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation4;                // 0x3F40(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID4;                  // 0x3F4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue4;                 // 0x3F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue4;              // 0x3F51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F52[0x2];                                     // 0x3F52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation5;                // 0x3F54(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID5;                  // 0x3F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue5;                 // 0x3F64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue5;              // 0x3F65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x3F66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x3F67(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue30;           // 0x3F68(0x0218)()
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x4180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4181[0x3];                                     // 0x4181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation6;                // 0x4184(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID6;                  // 0x4190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue6;                 // 0x4194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue6;              // 0x4195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4196[0x2];                                     // 0x4196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation7;                // 0x4198(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID7;                  // 0x41A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue7;                 // 0x41A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue7;              // 0x41A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41AA[0x2];                                     // 0x41AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation8;                // 0x41AC(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID8;                  // 0x41B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue8;                 // 0x41BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue8;              // 0x41BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41BE[0x2];                                     // 0x41BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation9;                // 0x41C0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID9;                  // 0x41CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue9;                 // 0x41D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue9;              // 0x41D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D2[0x2];                                     // 0x41D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation10;               // 0x41D4(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID10;                 // 0x41E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue10;                // 0x41E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue10;             // 0x41E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E6[0x2];                                     // 0x41E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation11;               // 0x41E8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID11;                 // 0x41F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue11;                // 0x41F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue11;             // 0x41F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FA[0x2];                                     // 0x41FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation12;               // 0x41FC(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID12;                 // 0x4208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue12;                // 0x420C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue12;             // 0x420D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420E[0x2];                                     // 0x420E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation13;               // 0x4210(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID13;                 // 0x421C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue13;                // 0x4220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue13;             // 0x4221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4222[0x2];                                     // 0x4222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation14;               // 0x4224(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID14;                 // 0x4230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue14;                // 0x4234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue14;             // 0x4235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4236[0x2];                                     // 0x4236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation15;               // 0x4238(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID15;                 // 0x4244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue15;                // 0x4248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue15;             // 0x4249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424A[0x2];                                     // 0x424A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation16;               // 0x424C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID16;                 // 0x4258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue16;                // 0x425C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue16;             // 0x425D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x425E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue1; // 0x425F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x4260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x4261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2; // 0x4262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x4263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent11; // 0x4264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent34;     // 0x4265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4266[0x2];                                     // 0x4266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount34;     // 0x4268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x426C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent10; // 0x426D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent9; // 0x426E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue2; // 0x426F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent8; // 0x4270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x4271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue3; // 0x4272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x4273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent7; // 0x4274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6; // 0x4275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4276[0x2];                                     // 0x4276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x4278(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5; // 0x4288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4289[0x7];                                     // 0x4289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue31;           // 0x4290(0x0218)()
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4; // 0x44A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue4; // 0x44A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent33;     // 0x44AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AB[0x1];                                     // 0x44AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount33;     // 0x44AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x44B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x44B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B2[0x6];                                     // 0x44B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context26;        // 0x44B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent32;     // 0x44C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C1[0x3];                                     // 0x44C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount32;     // 0x44C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context25;        // 0x44C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x44D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent31;     // 0x44D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D2[0x2];                                     // 0x44D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount31;     // 0x44D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context24;        // 0x44D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x44E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent30;     // 0x44E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E2[0x2];                                     // 0x44E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount30;     // 0x44E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context23;        // 0x44E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x44F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F1[0x7];                                     // 0x44F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x44F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x4508(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x4518(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent29;     // 0x4528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4529[0x3];                                     // 0x4529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount29;     // 0x452C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x4530(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x4540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent28;     // 0x4541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4542[0x2];                                     // 0x4542(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount28;     // 0x4544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent27;     // 0x4548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4549[0x3];                                     // 0x4549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount27;     // 0x454C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum6_CmpSuccess;                     // 0x4550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum7_CmpSuccess;                     // 0x4551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4552[0x6];                                     // 0x4552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context22;        // 0x4558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context21;        // 0x4560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent26;     // 0x4568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4569[0x3];                                     // 0x4569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount26;     // 0x456C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent25;     // 0x4570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4571[0x3];                                     // 0x4571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount25;     // 0x4574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum8_CmpSuccess;                     // 0x4578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum9_CmpSuccess;                     // 0x4579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3; // 0x457A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_457B[0x5];                                     // 0x457B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x4580(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent24;     // 0x4590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4591[0x3];                                     // 0x4591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount24;     // 0x4594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context20;        // 0x4598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum10_CmpSuccess;                    // 0x45A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent23;     // 0x45A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45A2[0x2];                                     // 0x45A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount23;     // 0x45A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x45A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum11_CmpSuccess;                    // 0x45B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45B9[0x7];                                     // 0x45B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context19;        // 0x45C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent22;     // 0x45C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C9[0x3];                                     // 0x45C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount22;     // 0x45CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x45D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum12_CmpSuccess;                    // 0x45E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E1[0x7];                                     // 0x45E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context18;        // 0x45E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent21;     // 0x45F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F1[0x3];                                     // 0x45F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount21;     // 0x45F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent20;     // 0x45F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F9[0x3];                                     // 0x45F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount20;     // 0x45FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum13_CmpSuccess;                    // 0x4600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum14_CmpSuccess;                    // 0x4601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4602[0x6];                                     // 0x4602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x4608(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context17;        // 0x4618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent19;     // 0x4620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4621[0x3];                                     // 0x4621(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount19;     // 0x4624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent18;     // 0x4628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4629[0x3];                                     // 0x4629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount18;     // 0x462C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context16;        // 0x4630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum15_CmpSuccess;                    // 0x4638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4639[0x7];                                     // 0x4639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x4640(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent17;     // 0x4650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4651[0x3];                                     // 0x4651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount17;     // 0x4654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context15;        // 0x4658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum16_CmpSuccess;                    // 0x4660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4661[0x7];                                     // 0x4661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x4668(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate11;            // 0x4678(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent16;     // 0x4688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4689[0x3];                                     // 0x4689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount16;     // 0x468C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent15;     // 0x4690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4691[0x3];                                     // 0x4691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount15;     // 0x4694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x4698(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum17_CmpSuccess;                    // 0x46A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent14;     // 0x46A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46AA[0x2];                                     // 0x46AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount14;     // 0x46AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent13;     // 0x46B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46B1[0x3];                                     // 0x46B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount13;     // 0x46B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum18_CmpSuccess;                    // 0x46B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum19_CmpSuccess;                    // 0x46B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46BA[0x6];                                     // 0x46BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x46C0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x46D0(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context14;        // 0x46E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context13;        // 0x46E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context12;        // 0x46F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent12;     // 0x46F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46F9[0x3];                                     // 0x46F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount12;     // 0x46FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2; // 0x4700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum20_CmpSuccess;                    // 0x4701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent11;     // 0x4702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4703[0x1];                                     // 0x4703(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount11;     // 0x4704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context11;        // 0x4708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum21_CmpSuccess;                    // 0x4710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent10;     // 0x4711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4712[0x2];                                     // 0x4712(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount10;     // 0x4714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context10;        // 0x4718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum22_CmpSuccess;                    // 0x4720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent9;      // 0x4721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4722[0x2];                                     // 0x4722(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount9;      // 0x4724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context9;         // 0x4728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum23_CmpSuccess;                    // 0x4730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4731[0x7];                                     // 0x4731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context8;         // 0x4738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context7;         // 0x4740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent8;      // 0x4748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4749[0x3];                                     // 0x4749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount8;      // 0x474C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context6;         // 0x4750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context5;         // 0x4758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMissionObjectiveCount_CurrentObjectiveCount; // 0x4760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMissionObjectiveCount_TotalObjectiveCount; // 0x4764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context4;         // 0x4768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x4770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x4774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4775[0x3];                                     // 0x4775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context3;         // 0x4778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent7;      // 0x4780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4781[0x3];                                     // 0x4781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount7;      // 0x4784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context2;         // 0x4788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent6;      // 0x4790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4791[0x3];                                     // 0x4791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount6;      // 0x4794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent5;      // 0x4798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4799[0x3];                                     // 0x4799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount5;      // 0x479C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum24_CmpSuccess;                    // 0x47A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent4;      // 0x47A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A2[0x2];                                     // 0x47A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount4;      // 0x47A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent3;      // 0x47A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A9[0x3];                                     // 0x47A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount3;      // 0x47AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent2;      // 0x47B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B1[0x3];                                     // 0x47B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount2;      // 0x47B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x47B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1; // 0x47B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent1;      // 0x47BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BB[0x1];                                     // 0x47BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount1;      // 0x47BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent; // 0x47C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum25_CmpSuccess;                    // 0x47C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent;       // 0x47C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C3[0x1];                                     // 0x47C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount;       // 0x47C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum26_CmpSuccess;                    // 0x47C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47C9[0x7];                                     // 0x47C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context1;         // 0x47D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context;          // 0x47D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x47E0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate16;            // 0x47F0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate17;            // 0x4800(0x0010)(ZeroConstructor, NoDestructor)
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue32;           // 0x4810(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation17;               // 0x4A28(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID17;                 // 0x4A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue17;                // 0x4A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x4A39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue17;             // 0x4A3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A3B[0x1];                                     // 0x4A3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation18;               // 0x4A3C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID18;                 // 0x4A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue18;                // 0x4A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue18;             // 0x4A4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A4E[0x2];                                     // 0x4A4E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation19;               // 0x4A50(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID19;                 // 0x4A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue19;                // 0x4A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue19;             // 0x4A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A62[0x2];                                     // 0x4A62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation20;               // 0x4A64(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID20;                 // 0x4A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue20;                // 0x4A74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue20;             // 0x4A75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A76[0x2];                                     // 0x4A76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation21;               // 0x4A78(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID21;                 // 0x4A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue21;                // 0x4A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue21;             // 0x4A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A8A[0x2];                                     // 0x4A8A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation22;               // 0x4A8C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID22;                 // 0x4A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue22;                // 0x4A9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue22;             // 0x4A9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9E[0x2];                                     // 0x4A9E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation23;               // 0x4AA0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID23;                 // 0x4AAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue23;                // 0x4AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue23;             // 0x4AB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AB2[0x2];                                     // 0x4AB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation24;               // 0x4AB4(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID24;                 // 0x4AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue24;                // 0x4AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue24;             // 0x4AC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AC6[0x2];                                     // 0x4AC6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation25;               // 0x4AC8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID25;                 // 0x4AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue25;                // 0x4AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue25;             // 0x4AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ADA[0x2];                                     // 0x4ADA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation26;               // 0x4ADC(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID26;                 // 0x4AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue26;                // 0x4AEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue26;             // 0x4AED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AEE[0x2];                                     // 0x4AEE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation27;               // 0x4AF0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID27;                 // 0x4AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue27;                // 0x4B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue27;             // 0x4B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B02[0x2];                                     // 0x4B02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation28;               // 0x4B04(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID28;                 // 0x4B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue28;                // 0x4B14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue28;             // 0x4B15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B16[0x2];                                     // 0x4B16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation29;               // 0x4B18(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID29;                 // 0x4B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue29;                // 0x4B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue29;             // 0x4B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2A[0x2];                                     // 0x4B2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation30;               // 0x4B2C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID30;                 // 0x4B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue30;                // 0x4B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue30;             // 0x4B3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3E[0x2];                                     // 0x4B3E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation31;               // 0x4B40(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID31;                 // 0x4B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue31;                // 0x4B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue31;             // 0x4B51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B52[0x2];                                     // 0x4B52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation32;               // 0x4B54(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID32;                 // 0x4B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue32;                // 0x4B64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue32;             // 0x4B65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers) == 0x004B68, "Wrong size on ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, EntryPoint) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue) == 0x000008, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue1) == 0x000220, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue2) == 0x000438, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue3) == 0x000650, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue4) == 0x000868, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue5) == 0x000A80, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue6) == 0x000C98, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue7) == 0x000EB0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue8) == 0x0010C8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue9) == 0x0012E0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue10) == 0x0014F8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue11) == 0x001710, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue12) == 0x001928, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation) == 0x001B40, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID) == 0x001B4C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue) == 0x001B50, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue) == 0x001B51, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue13) == 0x001B58, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation1) == 0x001D70, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID1) == 0x001D7C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue1) == 0x001D80, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue1) == 0x001D81, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue14) == 0x001D88, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue15) == 0x001FA0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue16) == 0x0021B8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue17) == 0x0023D0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue18) == 0x0025E8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue19) == 0x002800, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue20) == 0x002A18, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue21) == 0x002C30, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue22) == 0x002E48, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue23) == 0x003060, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue24) == 0x003278, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation2) == 0x003490, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID2) == 0x00349C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue2) == 0x0034A0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue2) == 0x0034A1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue25) == 0x0034A8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue26) == 0x0036C0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue27) == 0x0038D8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Greater_IntInt_ReturnValue) == 0x003AF0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue28) == 0x003AF8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue29) == 0x003D10, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveStatusRef_ReturnValue) == 0x003F28, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveStatusRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation3) == 0x003F2C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID3) == 0x003F38, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue3) == 0x003F3C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x003F3D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue3) == 0x003F3E, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation4) == 0x003F40, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID4) == 0x003F4C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue4) == 0x003F50, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue4) == 0x003F51, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation5) == 0x003F54, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID5) == 0x003F60, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue5) == 0x003F64, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue5) == 0x003F65, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x003F66, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_Has_Been_Initd_Variable) == 0x003F67, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue30) == 0x003F68, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_IsClosed_Variable) == 0x004180, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation6) == 0x004184, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID6) == 0x004190, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue6) == 0x004194, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue6) == 0x004195, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation7) == 0x004198, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID7) == 0x0041A4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue7) == 0x0041A8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue7) == 0x0041A9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation8) == 0x0041AC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID8) == 0x0041B8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue8) == 0x0041BC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue8) == 0x0041BD, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation9) == 0x0041C0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID9) == 0x0041CC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue9) == 0x0041D0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue9) == 0x0041D1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation10) == 0x0041D4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID10) == 0x0041E0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue10) == 0x0041E4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue10) == 0x0041E5, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation11) == 0x0041E8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID11) == 0x0041F4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue11) == 0x0041F8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue11) == 0x0041F9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation12) == 0x0041FC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID12) == 0x004208, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue12) == 0x00420C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue12) == 0x00420D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation13) == 0x004210, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID13) == 0x00421C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue13) == 0x004220, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue13) == 0x004221, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation14) == 0x004224, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID14) == 0x004230, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue14) == 0x004234, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue14) == 0x004235, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation15) == 0x004238, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID15) == 0x004244, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue15) == 0x004248, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue15) == 0x004249, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation16) == 0x00424C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID16) == 0x004258, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue16) == 0x00425C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue16) == 0x00425D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x00425E, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveStatusRef_ReturnValue1) == 0x00425F, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveStatusRef_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x004260, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_Has_Been_Initd_Variable1) == 0x004261, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2) == 0x004262, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_IsClosed_Variable1) == 0x004263, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent11) == 0x004264, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent34) == 0x004265, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent34' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount34) == 0x004268, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount34' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum_CmpSuccess) == 0x00426C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent10) == 0x00426D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent9) == 0x00426E, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveStatusRef_ReturnValue2) == 0x00426F, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveStatusRef_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent8) == 0x004270, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x004271, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveStatusRef_ReturnValue3) == 0x004272, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveStatusRef_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x004273, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent7) == 0x004274, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6) == 0x004275, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate) == 0x004278, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5) == 0x004288, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue31) == 0x004290, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4) == 0x0044A8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveStatusRef_ReturnValue4) == 0x0044A9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveStatusRef_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent33) == 0x0044AA, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent33' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount33) == 0x0044AC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount33' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x0044B0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum1_CmpSuccess) == 0x0044B1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context26) == 0x0044B8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent32) == 0x0044C0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent32' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount32) == 0x0044C4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount32' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context25) == 0x0044C8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum2_CmpSuccess) == 0x0044D0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent31) == 0x0044D1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount31) == 0x0044D4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context24) == 0x0044D8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum3_CmpSuccess) == 0x0044E0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent30) == 0x0044E1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount30) == 0x0044E4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context23) == 0x0044E8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum4_CmpSuccess) == 0x0044F0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate1) == 0x0044F8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate2) == 0x004508, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate3) == 0x004518, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent29) == 0x004528, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount29) == 0x00452C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate4) == 0x004530, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum5_CmpSuccess) == 0x004540, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent28) == 0x004541, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount28) == 0x004544, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent27) == 0x004548, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount27) == 0x00454C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum6_CmpSuccess) == 0x004550, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum6_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum7_CmpSuccess) == 0x004551, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum7_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context22) == 0x004558, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context21) == 0x004560, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent26) == 0x004568, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount26) == 0x00456C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent25) == 0x004570, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount25) == 0x004574, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum8_CmpSuccess) == 0x004578, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum8_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum9_CmpSuccess) == 0x004579, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum9_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3) == 0x00457A, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate5) == 0x004580, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent24) == 0x004590, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount24) == 0x004594, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context20) == 0x004598, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum10_CmpSuccess) == 0x0045A0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum10_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent23) == 0x0045A1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount23) == 0x0045A4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate6) == 0x0045A8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum11_CmpSuccess) == 0x0045B8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum11_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context19) == 0x0045C0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent22) == 0x0045C8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount22) == 0x0045CC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate7) == 0x0045D0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum12_CmpSuccess) == 0x0045E0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum12_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context18) == 0x0045E8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent21) == 0x0045F0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount21) == 0x0045F4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent20) == 0x0045F8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount20) == 0x0045FC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum13_CmpSuccess) == 0x004600, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum13_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum14_CmpSuccess) == 0x004601, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum14_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate8) == 0x004608, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context17) == 0x004618, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent19) == 0x004620, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount19) == 0x004624, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent18) == 0x004628, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount18) == 0x00462C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context16) == 0x004630, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum15_CmpSuccess) == 0x004638, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum15_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate9) == 0x004640, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent17) == 0x004650, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount17) == 0x004654, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context15) == 0x004658, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum16_CmpSuccess) == 0x004660, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum16_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate10) == 0x004668, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate11) == 0x004678, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent16) == 0x004688, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount16) == 0x00468C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent15) == 0x004690, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount15) == 0x004694, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate12) == 0x004698, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum17_CmpSuccess) == 0x0046A8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum17_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent14) == 0x0046A9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount14) == 0x0046AC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent13) == 0x0046B0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount13) == 0x0046B4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum18_CmpSuccess) == 0x0046B8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum18_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum19_CmpSuccess) == 0x0046B9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum19_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate13) == 0x0046C0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate14) == 0x0046D0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context14) == 0x0046E0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context14' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context13) == 0x0046E8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context13' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context12) == 0x0046F0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent12) == 0x0046F8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount12) == 0x0046FC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount12' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2) == 0x004700, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum20_CmpSuccess) == 0x004701, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum20_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent11) == 0x004702, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount11) == 0x004704, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context11) == 0x004708, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context11' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum21_CmpSuccess) == 0x004710, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum21_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent10) == 0x004711, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount10) == 0x004714, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context10) == 0x004718, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context10' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum22_CmpSuccess) == 0x004720, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum22_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent9) == 0x004721, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount9) == 0x004724, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context9) == 0x004728, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context9' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum23_CmpSuccess) == 0x004730, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum23_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context8) == 0x004738, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context7) == 0x004740, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent8) == 0x004748, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount8) == 0x00474C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount8' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context6) == 0x004750, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context5) == 0x004758, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveCount_CurrentObjectiveCount) == 0x004760, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveCount_CurrentObjectiveCount' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_GetMissionObjectiveCount_TotalObjectiveCount) == 0x004764, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_GetMissionObjectiveCount_TotalObjectiveCount' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context4) == 0x004768, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Subtract_IntInt_ReturnValue) == 0x004770, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToByte_ReturnValue) == 0x004774, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context3) == 0x004778, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent7) == 0x004780, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount7) == 0x004784, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount7' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context2) == 0x004788, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent6) == 0x004790, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount6) == 0x004794, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount6' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent5) == 0x004798, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount5) == 0x00479C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount5' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum24_CmpSuccess) == 0x0047A0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum24_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent4) == 0x0047A1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount4) == 0x0047A4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount4' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent3) == 0x0047A8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount3) == 0x0047AC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount3' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent2) == 0x0047B0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount2) == 0x0047B4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_Has_Been_Initd_Variable2) == 0x0047B8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1) == 0x0047B9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent1) == 0x0047BA, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount1) == 0x0047BC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent) == 0x0047C0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum25_CmpSuccess) == 0x0047C1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum25_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveEvent) == 0x0047C2, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_ObjectiveEvent_ObjectiveCount) == 0x0047C4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_ObjectiveEvent_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_SwitchEnum26_CmpSuccess) == 0x0047C8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_SwitchEnum26_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context1) == 0x0047D0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context1' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, MissionK2Node_MissionCustomEvent_Context) == 0x0047D8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::MissionK2Node_MissionCustomEvent_Context' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate15) == 0x0047E0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate16) == 0x0047F0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, K2Node_CreateDelegate_OutputDelegate17) == 0x004800, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_NewDialogContext_ReturnValue32) == 0x004810, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_NewDialogContext_ReturnValue32' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation17) == 0x004A28, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID17) == 0x004A34, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue17) == 0x004A38, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, Temp_bool_IsClosed_Variable2) == 0x004A39, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue17) == 0x004A3A, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue17' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation18) == 0x004A3C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID18) == 0x004A48, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue18) == 0x004A4C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue18) == 0x004A4D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue18' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation19) == 0x004A50, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID19) == 0x004A5C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue19) == 0x004A60, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue19) == 0x004A61, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue19' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation20) == 0x004A64, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID20) == 0x004A70, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue20) == 0x004A74, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue20) == 0x004A75, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue20' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation21) == 0x004A78, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID21) == 0x004A84, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue21) == 0x004A88, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue21) == 0x004A89, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue21' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation22) == 0x004A8C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID22) == 0x004A98, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue22) == 0x004A9C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue22) == 0x004A9D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue22' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation23) == 0x004AA0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID23) == 0x004AAC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue23) == 0x004AB0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue23) == 0x004AB1, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue23' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation24) == 0x004AB4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID24) == 0x004AC0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue24) == 0x004AC4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue24) == 0x004AC5, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue24' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation25) == 0x004AC8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID25) == 0x004AD4, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue25) == 0x004AD8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue25) == 0x004AD9, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue25' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation26) == 0x004ADC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID26) == 0x004AE8, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue26) == 0x004AEC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue26) == 0x004AED, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue26' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation27) == 0x004AF0, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID27) == 0x004AFC, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue27) == 0x004B00, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue27) == 0x004B01, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue27' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation28) == 0x004B04, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID28) == 0x004B10, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue28) == 0x004B14, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue28) == 0x004B15, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue28' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation29) == 0x004B18, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID29) == 0x004B24, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue29) == 0x004B28, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue29) == 0x004B29, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue29' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation30) == 0x004B2C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID30) == 0x004B38, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue30) == 0x004B3C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue30) == 0x004B3D, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue30' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation31) == 0x004B40, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID31) == 0x004B4C, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue31) == 0x004B50, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue31) == 0x004B51, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue31' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_Conversation32) == 0x004B54, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_Conversation32' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_SequenceID32) == 0x004B60, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_SequenceID32' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_FinishSpeak_ReturnValue32) == 0x004B64, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_FinishSpeak_ReturnValue32' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers, CallFunc_Conv_IntToBool_ReturnValue32) == 0x004B65, "Member 'ALI_SM_AllShapesAndCalibers_C_ExecuteUbergraph_ALI_SM_AllShapesAndCalibers::CallFunc_Conv_IntToBool_ReturnValue32' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_FoundDistort
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_FoundDistort::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_TalkedPAT
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_TalkedPAT::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_FindDistort
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FindDistort::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_FindDistort
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_FindDistort final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_FindDistort) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_FindDistort");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_FindDistort) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_FindDistort");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_FindDistort, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_FindDistort::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_TalkPAT
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_TalkPAT::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_TalkPAT
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_TalkPAT::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ClearEnemiesPrecheck
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ClearEnemiesPrecheck::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ReadyForEggLayAim
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLayAim::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_ScanDone_PostHang
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_ScanDone_PostHang::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ScanDone
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ScanDone::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ThiefDoorOpen
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ThiefDoorOpen::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_OpenedExitDoor
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_OpenedExitDoor::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_OpenExitDoor
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_OpenExitDoor::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_PickedUpBabyGun
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_PickedUpBabyGun::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_ReduceIncubationTimer
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_ReduceIncubationTimer::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_EggLayComplete
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_EggLayComplete::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_ReadyForThief
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForThief::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ReadyForThief
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForThief::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_WallBlastComplete
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_WallBlastComplete::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_ReadyForWallBlast
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_ReadyForWallBlast::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_PatDoneScaling_3
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_3::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_PatDoneScaling_3
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_3::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_PatDoneScaling_2
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_2::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_PatDoneScaling_2
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_2::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_PatDoneScaling_1
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_PatDoneScaling_1::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_PatDoneScaling_1
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_PatDoneScaling_1::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.SET_PickUpGun
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_SET_PickUpGun::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Pickupgun
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Pickupgun final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Pickupgun) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Pickupgun");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Pickupgun) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Pickupgun");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Pickupgun, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Pickupgun::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Pickupgun, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Pickupgun::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_NoPlayerOnEgg
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_NoPlayerOnEgg::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_UpdateIncubateTimer
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_UpdateIncubateTimer::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_CrouchedOnEgg
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_CrouchedOnEgg::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_IncubateEgg
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_IncubateEgg::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_CrouchOnEgg
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_CrouchOnEgg::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_EggLayComplete
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_EggLayComplete::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ReadyForEggLay
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForEggLay::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_HangSchematic
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_HangSchematic::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_HangSchematic
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_HangSchematic::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_ReturnedWithSchematic
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedWithSchematic::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_ReturnWithSchematic
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_ReturnWithSchematic::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_KillThiefPreCheck
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_KillThiefPreCheck::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_KilledThief
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_KilledThief::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_GetSchematic
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_GetSchematic::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_KillThief
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_KillThief final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_KillThief) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_KillThief");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_KillThief) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_KillThief");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_KillThief, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_KillThief::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_KillThief, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_KillThief::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_FindThief
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_FindThief final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_FindThief) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_FindThief");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_FindThief) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_FindThief");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_FindThief, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_FindThief::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_FindThief
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_FindThief final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_FindThief) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_FindThief");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_FindThief) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_FindThief");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FindThief, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FindThief::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FindThief, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FindThief::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_EscortedPatHome
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_EscortedPatHome::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_EscortPatHomne
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_EscortPatHomne::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_ClearedEnemies
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_ClearedEnemies::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_ClearEnemies
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_ClearEnemies::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_ClearEnemies
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_ClearEnemies::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_WallBlastComplete
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_WallBlastComplete::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_Obj_ReadyForWallBlast
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_Obj_ReadyForWallBlast::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_PatArrivedAtShootSpot
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_PatArrivedAtShootSpot::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_PlayerArrivedAtShootSpot
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_PlayerArrivedAtShootSpot::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_PatArrivedAtShootSpot
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_PatArrivedAtShootSpot::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.INV_PlayerArrivedAtShootSpot
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_INV_PlayerArrivedAtShootSpot::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_FollowPat
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FollowPat::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_FedPat_3
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_3::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_FeedPat_3
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_3::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_FedPat_2
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_2::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_FeedPat_2
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_2::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_FedPat_1
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_FedPat_1::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_FeedPat_1
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_FeedPat_1::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.MCE_ReturnedToPat
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat) == 0x000008, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat, Context) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_MCE_ReturnedToPat::Context' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_ReturnToPat
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_ReturnToPat::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_CrouchOnEgg
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_CrouchOnEgg::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_HangSchematic
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_HangSchematic::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_ReturnToPatWithSchematic
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPatWithSchematic::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_GetSchematic
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_GetSchematic::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_Escort
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_Escort final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_Escort) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_Escort");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_Escort) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_Escort");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_Escort, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_Escort::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_FeedPat
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_FeedPat final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_FeedPat) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_FeedPat");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_FeedPat) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_FeedPat");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_FeedPat, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_FeedPat::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_ReturnToPat
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_ReturnToPat::ObjectiveSetEvent' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Obj_GetBullets
// 0x0008 (0x0008 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets) == 0x000004, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets) == 0x000008, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets, ObjectiveEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets, ObjectiveCount) == 0x000004, "Member 'ALI_SM_AllShapesAndCalibers_C_Obj_GetBullets::ObjectiveCount' has a wrong offset!");

// Function ALI_SM_AllShapesAndCalibers.ALI_SM_AllShapesAndCalibers_C.Set_GetBullets
// 0x0001 (0x0001 - 0x0000)
struct ALI_SM_AllShapesAndCalibers_C_Set_GetBullets final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_SM_AllShapesAndCalibers_C_Set_GetBullets) == 0x000001, "Wrong alignment on ALI_SM_AllShapesAndCalibers_C_Set_GetBullets");
static_assert(sizeof(ALI_SM_AllShapesAndCalibers_C_Set_GetBullets) == 0x000001, "Wrong size on ALI_SM_AllShapesAndCalibers_C_Set_GetBullets");
static_assert(offsetof(ALI_SM_AllShapesAndCalibers_C_Set_GetBullets, ObjectiveSetEvent) == 0x000000, "Member 'ALI_SM_AllShapesAndCalibers_C_Set_GetBullets::ObjectiveSetEvent' has a wrong offset!");

}

