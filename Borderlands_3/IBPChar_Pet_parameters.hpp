#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IBPChar_Pet

#include "Basic.hpp"

#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function IBPChar_Pet.IBPChar_Pet_C.GetBeastmasterOwner
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Pet_C_GetBeastmasterOwner final
{
public:
	class AOakCharacter_Player*                   Beastmaster;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_GetBeastmasterOwner) == 0x000008, "Wrong alignment on IBPChar_Pet_C_GetBeastmasterOwner");
static_assert(sizeof(IBPChar_Pet_C_GetBeastmasterOwner) == 0x000008, "Wrong size on IBPChar_Pet_C_GetBeastmasterOwner");
static_assert(offsetof(IBPChar_Pet_C_GetBeastmasterOwner, Beastmaster) == 0x000000, "Member 'IBPChar_Pet_C_GetBeastmasterOwner::Beastmaster' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.MatchesPetProfile
// 0x0010 (0x0010 - 0x0000)
struct IBPChar_Pet_C_MatchesPetProfile final
{
public:
	class UOakPlayerCharacterAugmentData_Pet*     InAugment;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Res;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Pet_C_MatchesPetProfile) == 0x000008, "Wrong alignment on IBPChar_Pet_C_MatchesPetProfile");
static_assert(sizeof(IBPChar_Pet_C_MatchesPetProfile) == 0x000010, "Wrong size on IBPChar_Pet_C_MatchesPetProfile");
static_assert(offsetof(IBPChar_Pet_C_MatchesPetProfile, InAugment) == 0x000000, "Member 'IBPChar_Pet_C_MatchesPetProfile::InAugment' has a wrong offset!");
static_assert(offsetof(IBPChar_Pet_C_MatchesPetProfile, Res) == 0x000008, "Member 'IBPChar_Pet_C_MatchesPetProfile::Res' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.OnPetReleased
// 0x0002 (0x0002 - 0x0000)
struct IBPChar_Pet_C_OnPetReleased final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPetReleaseReason                             Reason;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_OnPetReleased) == 0x000001, "Wrong alignment on IBPChar_Pet_C_OnPetReleased");
static_assert(sizeof(IBPChar_Pet_C_OnPetReleased) == 0x000002, "Wrong size on IBPChar_Pet_C_OnPetReleased");
static_assert(offsetof(IBPChar_Pet_C_OnPetReleased, bForced) == 0x000000, "Member 'IBPChar_Pet_C_OnPetReleased::bForced' has a wrong offset!");
static_assert(offsetof(IBPChar_Pet_C_OnPetReleased, Reason) == 0x000001, "Member 'IBPChar_Pet_C_OnPetReleased::Reason' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.PetJabbermon_ChangeMeleeVis
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis final
{
public:
	bool                                          NewWeapVisibility;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis) == 0x000001, "Wrong alignment on IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis");
static_assert(sizeof(IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis) == 0x000001, "Wrong size on IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis");
static_assert(offsetof(IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis, NewWeapVisibility) == 0x000000, "Member 'IBPChar_Pet_C_PetJabbermon_ChangeMeleeVis::NewWeapVisibility' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.PetJabbermon_ChangeGunVis
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Pet_C_PetJabbermon_ChangeGunVis final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Pet_C_PetJabbermon_ChangeGunVis) == 0x000001, "Wrong alignment on IBPChar_Pet_C_PetJabbermon_ChangeGunVis");
static_assert(sizeof(IBPChar_Pet_C_PetJabbermon_ChangeGunVis) == 0x000001, "Wrong size on IBPChar_Pet_C_PetJabbermon_ChangeGunVis");
static_assert(offsetof(IBPChar_Pet_C_PetJabbermon_ChangeGunVis, NewVisibility) == 0x000000, "Member 'IBPChar_Pet_C_PetJabbermon_ChangeGunVis::NewVisibility' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.PetJabbermon_ChangeLauncherVis
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis) == 0x000001, "Wrong alignment on IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis");
static_assert(sizeof(IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis) == 0x000001, "Wrong size on IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis");
static_assert(offsetof(IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis, NewVisibility) == 0x000000, "Member 'IBPChar_Pet_C_PetJabbermon_ChangeLauncherVis::NewVisibility' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.GetPetType
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Pet_C_GetPetType final
{
public:
	EOakActionAbilityPetType                      PetType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_GetPetType) == 0x000001, "Wrong alignment on IBPChar_Pet_C_GetPetType");
static_assert(sizeof(IBPChar_Pet_C_GetPetType) == 0x000001, "Wrong size on IBPChar_Pet_C_GetPetType");
static_assert(offsetof(IBPChar_Pet_C_GetPetType, PetType) == 0x000000, "Member 'IBPChar_Pet_C_GetPetType::PetType' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.DoAttackCommand
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Pet_C_DoAttackCommand final
{
public:
	class UObject*                                EnemyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_DoAttackCommand) == 0x000008, "Wrong alignment on IBPChar_Pet_C_DoAttackCommand");
static_assert(sizeof(IBPChar_Pet_C_DoAttackCommand) == 0x000008, "Wrong size on IBPChar_Pet_C_DoAttackCommand");
static_assert(offsetof(IBPChar_Pet_C_DoAttackCommand, EnemyObject) == 0x000000, "Member 'IBPChar_Pet_C_DoAttackCommand::EnemyObject' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.GetPetEvolutionType
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Pet_C_GetPetEvolutionType final
{
public:
	EOakActionAbilityPetEvolutionType             EvolutionType;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_GetPetEvolutionType) == 0x000001, "Wrong alignment on IBPChar_Pet_C_GetPetEvolutionType");
static_assert(sizeof(IBPChar_Pet_C_GetPetEvolutionType) == 0x000001, "Wrong size on IBPChar_Pet_C_GetPetEvolutionType");
static_assert(offsetof(IBPChar_Pet_C_GetPetEvolutionType, EvolutionType) == 0x000000, "Member 'IBPChar_Pet_C_GetPetEvolutionType::EvolutionType' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.SetEnraged
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Pet_C_SetEnraged final
{
public:
	bool                                          bIsEnraged;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Pet_C_SetEnraged) == 0x000001, "Wrong alignment on IBPChar_Pet_C_SetEnraged");
static_assert(sizeof(IBPChar_Pet_C_SetEnraged) == 0x000001, "Wrong size on IBPChar_Pet_C_SetEnraged");
static_assert(offsetof(IBPChar_Pet_C_SetEnraged, bIsEnraged) == 0x000000, "Member 'IBPChar_Pet_C_SetEnraged::bIsEnraged' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.PetJabbermon_BarrelAlign
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Pet_C_PetJabbermon_BarrelAlign final
{
public:
	class AActor*                                 NewBarrel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_PetJabbermon_BarrelAlign) == 0x000008, "Wrong alignment on IBPChar_Pet_C_PetJabbermon_BarrelAlign");
static_assert(sizeof(IBPChar_Pet_C_PetJabbermon_BarrelAlign) == 0x000008, "Wrong size on IBPChar_Pet_C_PetJabbermon_BarrelAlign");
static_assert(offsetof(IBPChar_Pet_C_PetJabbermon_BarrelAlign, NewBarrel) == 0x000000, "Member 'IBPChar_Pet_C_PetJabbermon_BarrelAlign::NewBarrel' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.PetJabbermon_BarrelSet
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Pet_C_PetJabbermon_BarrelSet final
{
public:
	class AActor*                                 NewBarrel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_PetJabbermon_BarrelSet) == 0x000008, "Wrong alignment on IBPChar_Pet_C_PetJabbermon_BarrelSet");
static_assert(sizeof(IBPChar_Pet_C_PetJabbermon_BarrelSet) == 0x000008, "Wrong size on IBPChar_Pet_C_PetJabbermon_BarrelSet");
static_assert(offsetof(IBPChar_Pet_C_PetJabbermon_BarrelSet, NewBarrel) == 0x000000, "Member 'IBPChar_Pet_C_PetJabbermon_BarrelSet::NewBarrel' has a wrong offset!");

// Function IBPChar_Pet.IBPChar_Pet_C.GetPetJabberIngenuityBarrel
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Pet_C_GetPetJabberIngenuityBarrel final
{
public:
	class AActor*                                 Barrel;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Pet_C_GetPetJabberIngenuityBarrel) == 0x000008, "Wrong alignment on IBPChar_Pet_C_GetPetJabberIngenuityBarrel");
static_assert(sizeof(IBPChar_Pet_C_GetPetJabberIngenuityBarrel) == 0x000008, "Wrong size on IBPChar_Pet_C_GetPetJabberIngenuityBarrel");
static_assert(offsetof(IBPChar_Pet_C_GetPetJabberIngenuityBarrel, Barrel) == 0x000000, "Member 'IBPChar_Pet_C_GetPetJabberIngenuityBarrel::Barrel' has a wrong offset!");

}

