#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Move_IronBear_SurpriseForYou

#include "Basic.hpp"

#include "Move_IronBear_SurpriseForYou_classes.hpp"
#include "Move_IronBear_SurpriseForYou_parameters.hpp"


namespace SDK
{

// Function Move_IronBear_SurpriseForYou.Move_IronBear_SurpriseForYou_C.ExecuteUbergraph_Move_IronBear_SurpriseForYou
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMove_IronBear_SurpriseForYou_C::ExecuteUbergraph_Move_IronBear_SurpriseForYou(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Move_IronBear_SurpriseForYou_C", "ExecuteUbergraph_Move_IronBear_SurpriseForYou");

	Params::Move_IronBear_SurpriseForYou_C_ExecuteUbergraph_Move_IronBear_SurpriseForYou Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Move_IronBear_SurpriseForYou.Move_IronBear_SurpriseForYou_C.OnStop
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMove_IronBear_SurpriseForYou_C::OnStop(bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Move_IronBear_SurpriseForYou_C", "OnStop");

	Params::Move_IronBear_SurpriseForYou_C_OnStop Parms{};

	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Move_IronBear_SurpriseForYou.Move_IronBear_SurpriseForYou_C.OnServerStart
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   MoveDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMove_IronBear_SurpriseForYou_C::OnServerStart(float MoveDuration, class AActor* TargetActor, class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Move_IronBear_SurpriseForYou_C", "OnServerStart");

	Params::Move_IronBear_SurpriseForYou_C_OnServerStart Parms{};

	Parms.MoveDuration = MoveDuration;
	Parms.TargetActor = TargetActor;
	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Move_IronBear_SurpriseForYou.Move_IronBear_SurpriseForYou_C.OnHitTargetable
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMove_IronBear_SurpriseForYou_C::OnHitTargetable(class AActor* HitActor, const struct FVector& HitNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Move_IronBear_SurpriseForYou_C", "OnHitTargetable");

	Params::Move_IronBear_SurpriseForYou_C_OnHitTargetable Parms{};

	Parms.HitActor = HitActor;
	Parms.HitNormal = std::move(HitNormal);

	UObject::ProcessEvent(Func, &Parms);
}

}

