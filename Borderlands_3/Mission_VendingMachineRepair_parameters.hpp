#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_VendingMachineRepair

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK::Params
{

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.ExecuteUbergraph_Mission_VendingMachineRepair
// 0x1E08 (0x1E08 - 0x0000)
struct Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0008(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0220(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue1;            // 0x0238(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation1;                // 0x0450(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID1;                  // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue1;                 // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue2;            // 0x0468(0x0218)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue1;              // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation2;                // 0x0684(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID2;                  // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue2;                 // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue2;              // 0x0695(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_696[0x2];                                      // 0x0696(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue3;            // 0x0698(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation3;                // 0x08B0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID3;                  // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue3;                 // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue3;              // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C2[0x6];                                      // 0x08C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue4;            // 0x08C8(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation4;                // 0x0AE0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID4;                  // 0x0AEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue4;                 // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue4;              // 0x0AF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF2[0x6];                                      // 0x0AF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue5;            // 0x0AF8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue6;            // 0x0D10(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue7;            // 0x0F28(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation5;                // 0x1140(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID5;                  // 0x114C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue5;                 // 0x1150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue5;              // 0x1151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1152[0x6];                                     // 0x1152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue8;            // 0x1158(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation6;                // 0x1370(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID6;                  // 0x137C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue6;                 // 0x1380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue6;              // 0x1381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1382[0x6];                                     // 0x1382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue9;            // 0x1388(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation7;                // 0x15A0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID7;                  // 0x15AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue7;                 // 0x15B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue7;              // 0x15B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_EvaluateCondition_ReturnValue;         // 0x15B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B3[0x5];                                     // 0x15B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue10;           // 0x15B8(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation8;                // 0x17D0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID8;                  // 0x17DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue8;                 // 0x17E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue8;              // 0x17E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E2[0x2];                                     // 0x17E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation9;                // 0x17E4(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID9;                  // 0x17F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue9;                 // 0x17F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue9;              // 0x17F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17F6[0x2];                                     // 0x17F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation10;               // 0x17F8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID10;                 // 0x1804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue10;                // 0x1808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue10;             // 0x1809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_180A[0x6];                                     // 0x180A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x1810(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x1820(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x1830(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x1840(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x1850(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue; // 0x1860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1862[0x6];                                     // 0x1862(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context5;         // 0x1868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue1; // 0x1870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x1871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1872[0x6];                                     // 0x1872(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x1878(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x1888(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context4;         // 0x1898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent10; // 0x18A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent7;      // 0x18A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A2[0x2];                                     // 0x18A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount7;      // 0x18A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context3;         // 0x18A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x18B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent9; // 0x18B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue;           // 0x18B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B3[0x5];                                     // 0x18B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue11;           // 0x18B8(0x0218)()
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent6;      // 0x1AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD1[0x3];                                     // 0x1AD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount6;      // 0x1AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation11;               // 0x1AD8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID11;                 // 0x1AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue11;                // 0x1AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x1AE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue11;             // 0x1AEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue2; // 0x1AEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x1AEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AED[0x3];                                     // 0x1AED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context2;         // 0x1AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent8; // 0x1AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent7; // 0x1AF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6; // 0x1AFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent5;      // 0x1AFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount5;      // 0x1AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5; // 0x1B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x1B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent4;      // 0x1B02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B03[0x1];                                     // 0x1B03(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount4;      // 0x1B04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum6_CmpSuccess;                     // 0x1B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B09[0x7];                                     // 0x1B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x1B10(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue3; // 0x1B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum7_CmpSuccess;                     // 0x1B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4; // 0x1B22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue1;          // 0x1B23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3; // 0x1B24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B25[0x3];                                     // 0x1B25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x1B28(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum8_CmpSuccess;                     // 0x1B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B39[0x7];                                     // 0x1B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x1B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent3;      // 0x1B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B49[0x3];                                     // 0x1B49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount3;      // 0x1B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum9_CmpSuccess;                     // 0x1B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent2;      // 0x1B51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B52[0x2];                                     // 0x1B52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount2;      // 0x1B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum10_CmpSuccess;                    // 0x1B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B59[0x7];                                     // 0x1B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue1;             // 0x1B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent1;      // 0x1B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B69[0x3];                                     // 0x1B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount1;      // 0x1B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum11_CmpSuccess;                    // 0x1B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2; // 0x1B71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B72[0x6];                                     // 0x1B72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context1;         // 0x1B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1; // 0x1B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B81[0x7];                                     // 0x1B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue12;           // 0x1B88(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation12;               // 0x1DA0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID12;                 // 0x1DAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue12;                // 0x1DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB1[0x7];                                     // 0x1DB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x1DB8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue12;             // 0x1DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent; // 0x1DC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCA[0x6];                                     // 0x1DCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x1DD0(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent;       // 0x1DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE1[0x3];                                     // 0x1DE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount;       // 0x1DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum12_CmpSuccess;                    // 0x1DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE9[0x7];                                     // 0x1DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context;          // 0x1DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue4; // 0x1DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum13_CmpSuccess;                    // 0x1DF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue2;          // 0x1DFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue3;          // 0x1DFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue5; // 0x1DFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum14_CmpSuccess;                    // 0x1DFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue6; // 0x1DFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum15_CmpSuccess;                    // 0x1DFF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue7; // 0x1E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum16_CmpSuccess;                    // 0x1E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue8; // 0x1E02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue9; // 0x1E03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum17_CmpSuccess;                    // 0x1E04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum18_CmpSuccess;                    // 0x1E05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair");
static_assert(sizeof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair) == 0x001E08, "Wrong size on Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, EntryPoint) == 0x000000, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue) == 0x000008, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation) == 0x000220, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID) == 0x00022C, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue) == 0x000230, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue) == 0x000231, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue1) == 0x000238, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation1) == 0x000450, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID1) == 0x00045C, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue1) == 0x000460, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue2) == 0x000468, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue1) == 0x000680, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation2) == 0x000684, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID2) == 0x000690, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue2) == 0x000694, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue2) == 0x000695, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue3) == 0x000698, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation3) == 0x0008B0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID3) == 0x0008BC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue3) == 0x0008C0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue3) == 0x0008C1, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue4) == 0x0008C8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation4) == 0x000AE0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID4) == 0x000AEC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue4) == 0x000AF0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue4) == 0x000AF1, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue5) == 0x000AF8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue6) == 0x000D10, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue7) == 0x000F28, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation5) == 0x001140, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID5) == 0x00114C, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue5) == 0x001150, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue5) == 0x001151, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue8) == 0x001158, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation6) == 0x001370, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID6) == 0x00137C, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue6) == 0x001380, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue6) == 0x001381, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue9) == 0x001388, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation7) == 0x0015A0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID7) == 0x0015AC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue7) == 0x0015B0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue7) == 0x0015B1, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_K2_EvaluateCondition_ReturnValue) == 0x0015B2, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_K2_EvaluateCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue10) == 0x0015B8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation8) == 0x0017D0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID8) == 0x0017DC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue8) == 0x0017E0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue8) == 0x0017E1, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation9) == 0x0017E4, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID9) == 0x0017F0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue9) == 0x0017F4, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue9) == 0x0017F5, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation10) == 0x0017F8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID10) == 0x001804, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue10) == 0x001808, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue10) == 0x001809, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate) == 0x001810, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate1) == 0x001820, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate2) == 0x001830, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate3) == 0x001840, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate4) == 0x001850, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue) == 0x001860, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum_CmpSuccess) == 0x001861, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_MissionCustomEvent_Context5) == 0x001868, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_MissionCustomEvent_Context5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue1) == 0x001870, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum1_CmpSuccess) == 0x001871, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate5) == 0x001878, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate6) == 0x001888, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_MissionCustomEvent_Context4) == 0x001898, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_MissionCustomEvent_Context4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent10) == 0x0018A0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent7) == 0x0018A1, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount7) == 0x0018A4, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_MissionCustomEvent_Context3) == 0x0018A8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_MissionCustomEvent_Context3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum2_CmpSuccess) == 0x0018B0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent9) == 0x0018B1, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_MissionRemoteEvent_ReturnValue) == 0x0018B2, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_MissionRemoteEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue11) == 0x0018B8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent6) == 0x001AD0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount6) == 0x001AD4, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation11) == 0x001AD8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation11' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID11) == 0x001AE4, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID11' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue11) == 0x001AE8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum3_CmpSuccess) == 0x001AE9, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue11) == 0x001AEA, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue2) == 0x001AEB, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum4_CmpSuccess) == 0x001AEC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_MissionCustomEvent_Context2) == 0x001AF0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_MissionCustomEvent_Context2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent8) == 0x001AF8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent7) == 0x001AF9, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6) == 0x001AFA, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent5) == 0x001AFB, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount5) == 0x001AFC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5) == 0x001B00, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum5_CmpSuccess) == 0x001B01, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent4) == 0x001B02, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount4) == 0x001B04, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum6_CmpSuccess) == 0x001B08, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum6_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate7) == 0x001B10, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue3) == 0x001B20, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum7_CmpSuccess) == 0x001B21, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum7_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4) == 0x001B22, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_MissionRemoteEvent_ReturnValue1) == 0x001B23, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_MissionRemoteEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3) == 0x001B24, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate8) == 0x001B28, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum8_CmpSuccess) == 0x001B38, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum8_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetGameInstance_ReturnValue) == 0x001B40, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent3) == 0x001B48, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount3) == 0x001B4C, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum9_CmpSuccess) == 0x001B50, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum9_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent2) == 0x001B51, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount2) == 0x001B54, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum10_CmpSuccess) == 0x001B58, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum10_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetGameInstance_ReturnValue1) == 0x001B60, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetGameInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent1) == 0x001B68, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount1) == 0x001B6C, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum11_CmpSuccess) == 0x001B70, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum11_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2) == 0x001B71, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_MissionCustomEvent_Context1) == 0x001B78, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_MissionCustomEvent_Context1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1) == 0x001B80, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_NewDialogContext_ReturnValue12) == 0x001B88, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_NewDialogContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_Conversation12) == 0x001DA0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_Conversation12' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_SequenceID12) == 0x001DAC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_SequenceID12' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_FinishSpeak_ReturnValue12) == 0x001DB0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_FinishSpeak_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate9) == 0x001DB8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_Conv_IntToBool_ReturnValue12) == 0x001DC8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_Conv_IntToBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent) == 0x001DC9, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_CreateDelegate_OutputDelegate10) == 0x001DD0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveEvent) == 0x001DE0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_ObjectiveEvent_ObjectiveCount) == 0x001DE4, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_ObjectiveEvent_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum12_CmpSuccess) == 0x001DE8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum12_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, MissionK2Node_MissionCustomEvent_Context) == 0x001DF0, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::MissionK2Node_MissionCustomEvent_Context' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue4) == 0x001DF8, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum13_CmpSuccess) == 0x001DF9, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum13_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_MissionRemoteEvent_ReturnValue2) == 0x001DFA, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_MissionRemoteEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_MissionRemoteEvent_ReturnValue3) == 0x001DFB, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_MissionRemoteEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue5) == 0x001DFC, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum14_CmpSuccess) == 0x001DFD, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum14_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue6) == 0x001DFE, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum15_CmpSuccess) == 0x001DFF, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum15_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue7) == 0x001E00, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum16_CmpSuccess) == 0x001E01, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum16_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue8) == 0x001E02, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, CallFunc_GetMissionObjectiveStatusRef_ReturnValue9) == 0x001E03, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::CallFunc_GetMissionObjectiveStatusRef_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum17_CmpSuccess) == 0x001E04, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum17_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair, K2Node_SwitchEnum18_CmpSuccess) == 0x001E05, "Member 'Mission_VendingMachineRepair_C_ExecuteUbergraph_Mission_VendingMachineRepair::K2Node_SwitchEnum18_CmpSuccess' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.MCE_UsedSkagSpineOnMachine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine");
static_assert(sizeof(Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine");
static_assert(offsetof(Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine, Context) == 0x000000, "Member 'Mission_VendingMachineRepair_C_MCE_UsedSkagSpineOnMachine::Context' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_UseSkagSpine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_UseSkagSpine final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_UseSkagSpine) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_UseSkagSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_UseSkagSpine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_UseSkagSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_UseSkagSpine, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_UseSkagSpine::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_UseSkagSpine, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_UseSkagSpine::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_UseSkagSpine
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_UseSkagSpine final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_UseSkagSpine) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_UseSkagSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_UseSkagSpine) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_UseSkagSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_UseSkagSpine, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_UseSkagSpine::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_VendingMachineInteraction
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_VendingMachineInteraction final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_VendingMachineInteraction) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_VendingMachineInteraction");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_VendingMachineInteraction) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_VendingMachineInteraction");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_VendingMachineInteraction, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_VendingMachineInteraction::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Advance_GoSeeSecretArea
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea");
static_assert(sizeof(Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea");
static_assert(offsetof(Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea, Context) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Advance_GoSeeSecretArea::Context' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_CompleteGoSeeSecretArea
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_CompleteGoSeeSecretArea::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_GoSeeSecretArea
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_GoSeeSecretArea::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_GetSkagSpine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_GetSkagSpine final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_GetSkagSpine) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_GetSkagSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_GetSkagSpine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_GetSkagSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_GetSkagSpine, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_GetSkagSpine::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_GetSkagSpine, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_GetSkagSpine::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_GetCoVSpine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_GetCoVSpine final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_GetCoVSpine) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_GetCoVSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_GetCoVSpine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_GetCoVSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_GetCoVSpine, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_GetCoVSpine::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_GetCoVSpine, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_GetCoVSpine::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_ShowSkagSpineObj
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_ShowSkagSpineObj::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_UseCOVSpine
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_UseCOVSpine final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_UseCOVSpine) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_UseCOVSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_UseCOVSpine) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_UseCOVSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_UseCOVSpine, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_UseCOVSpine::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_CompleteMarcusVendingMachine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_CompleteMarcusVendingMachine::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_MissionComplete
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_MissionComplete final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_MissionComplete) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_MissionComplete");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_MissionComplete) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_MissionComplete");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_MissionComplete, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_MissionComplete::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_UseCoVSpine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_UseCoVSpine final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_UseCoVSpine) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_UseCoVSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_UseCoVSpine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_UseCoVSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_UseCoVSpine, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_UseCoVSpine::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_UseCoVSpine, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_UseCoVSpine::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_UseSkageSpine
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_UseSkageSpine final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_UseSkageSpine) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_UseSkageSpine");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_UseSkageSpine) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_UseSkageSpine");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_UseSkageSpine, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_UseSkageSpine::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_CollectedHumanSpineButNotSkag
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_CollectedHumanSpineButNotSkag::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_GetSkagSpineSingle
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_GetSkagSpineSingle::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Advance_FakeCoVSpineUsedSkagSpineNotCollected
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected");
static_assert(sizeof(Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected");
static_assert(offsetof(Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected, Context) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Advance_FakeCoVSpineUsedSkagSpineNotCollected::Context' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_FakeCoVSpineUsedSkagSpineNotCollected
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_FakeCoVSpineUsedSkagSpineNotCollected::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_CollectedSkagSpineButNotHuman
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_CollectedSkagSpineButNotHuman::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Advance_FindTheProblem
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Advance_FindTheProblem final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Advance_FindTheProblem) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_Advance_FindTheProblem");
static_assert(sizeof(Mission_VendingMachineRepair_C_Advance_FindTheProblem) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Advance_FindTheProblem");
static_assert(offsetof(Mission_VendingMachineRepair_C_Advance_FindTheProblem, Context) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Advance_FindTheProblem::Context' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Obj_FindTheProblem
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Obj_FindTheProblem final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Obj_FindTheProblem) == 0x000004, "Wrong alignment on Mission_VendingMachineRepair_C_Obj_FindTheProblem");
static_assert(sizeof(Mission_VendingMachineRepair_C_Obj_FindTheProblem) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Obj_FindTheProblem");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_FindTheProblem, ObjectiveEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Obj_FindTheProblem::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_VendingMachineRepair_C_Obj_FindTheProblem, ObjectiveCount) == 0x000004, "Member 'Mission_VendingMachineRepair_C_Obj_FindTheProblem::ObjectiveCount' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Set_CollectSpines
// 0x0001 (0x0001 - 0x0000)
struct Mission_VendingMachineRepair_C_Set_CollectSpines final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Set_CollectSpines) == 0x000001, "Wrong alignment on Mission_VendingMachineRepair_C_Set_CollectSpines");
static_assert(sizeof(Mission_VendingMachineRepair_C_Set_CollectSpines) == 0x000001, "Wrong size on Mission_VendingMachineRepair_C_Set_CollectSpines");
static_assert(offsetof(Mission_VendingMachineRepair_C_Set_CollectSpines, ObjectiveSetEvent) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Set_CollectSpines::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.MCE_UsedHumanSpineOnMachine
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine");
static_assert(sizeof(Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine");
static_assert(offsetof(Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine, Context) == 0x000000, "Member 'Mission_VendingMachineRepair_C_MCE_UsedHumanSpineOnMachine::Context' has a wrong offset!");

// Function Mission_VendingMachineRepair.Mission_VendingMachineRepair_C.Update_MissionDeliverySpeak
// 0x0008 (0x0008 - 0x0000)
struct Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak) == 0x000008, "Wrong alignment on Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak");
static_assert(sizeof(Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak) == 0x000008, "Wrong size on Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak");
static_assert(offsetof(Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak, Context) == 0x000000, "Member 'Mission_VendingMachineRepair_C_Update_MissionDeliverySpeak::Context' has a wrong offset!");

}

