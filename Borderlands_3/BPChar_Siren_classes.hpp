#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Siren

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "BPChar_Player_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Siren.BPChar_Siren_C
// 0x0080 (0x3670 - 0x35F0)
class ABPChar_Siren_C final : public ABPChar_Player_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Siren_C;                     // 0x35E8(0x0008)(Transient, DuplicateTransient)
	class UFaceFXComponent*                       FaceFX;                                            // 0x35F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPSirenCharacterComponent_C*           BPSirenCharacterComponent;                         // 0x35F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PhaseCast_Body;                                    // 0x3600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              PhaseCast_Head;                                    // 0x3608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PhaseCast_Arms;                                    // 0x3610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              SK_Play_SirenBrawler_Base_Head;                    // 0x3618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Ghost_Arms_3rd;                                    // 0x3620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TattooFlare_Scalar_D2A50537458CFA8E3B7462A51046E30B; // 0x3628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TattooFlare__Direction_D2A50537458CFA8E3B7462A51046E30B; // 0x362C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362D[0x3];                                     // 0x362D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TattooFlare;                                       // 0x3630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeArms3rd_Scalar_B54767784E02CDC0D75380ABF7394F15; // 0x3638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeArms3rd__Direction_B54767784E02CDC0D75380ABF7394F15; // 0x363C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x3];                                     // 0x363D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeArms3rd;                                       // 0x3640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Ghost_Arms_1st;                                    // 0x3648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Arms;                                              // 0x3650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Siren_C*                    SirenEventHub;                                     // 0x3658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAttributeFloat                     Att_Siren_FindYourCenterActive;                    // 0x3660(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bArmFadeInterrupted;                               // 0x366C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPChar_Siren(int32 EntryPoint);
	void PhasegraspEndedAndEnemyKilled(bool Killed);
	void BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Siren(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void InterruptArmFade();
	void BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseAnyPipelineDamageDelegate__DelegateSignature_BPChar_Siren(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void Handle3rdPersonArmFadeTransition(bool bVisible);
	void HandleInstant3rdPersonArmFade(bool bVisible);
	void SetArmsElement(EPhaseTranceElementalType Type);
	void PlayTattooFade(bool bVisible);
	void Play3rdPersonArmFade(bool bInstant, bool bVisible);
	void SetArmsMaterial(class UMaterialInstance* Material);
	void TattooFlare__UpdateFunc();
	void TattooFlare__FinishedFunc();
	void FadeArms3rd__UpdateFunc();
	void FadeArms3rd__FinishedFunc();
	void GetPhaseTranceAbility(class UOakActionAbility_PhaseTrance** Res);
	void GetSirenArmsReference(class UGbxSkeletalMeshComponent** Skel_Mesh_3rd, class UGbxSkeletalMeshComponent** Skel_Mesh_1st);
	void GetPhaseCastProjectileComponents(class USkeletalMeshComponent** Body, class UGbxSkeletalMeshComponent** Head, class USkeletalMeshComponent** GhostArms);
	void GetSirenGhostArmsComponent(class UGbxSkeletalMeshComponent** Threerd_Person_Mesh, class UGbxSkeletalMeshComponent** Onest_Person_Mesh);
	void SirenHasAscendantSkill(bool* Res);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetHeadMesh(class USkeletalMesh** HeadMesh);
	void GetStillnessOfMindControlledMove(class UClass** Res);
	void GetSoulSapProjectile(class UClass** Res);

	class UOakActionAbility* GetPrimaryActionAbility() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Siren_C">();
	}
	static class ABPChar_Siren_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Siren_C>();
	}
};
static_assert(alignof(ABPChar_Siren_C) == 0x000010, "Wrong alignment on ABPChar_Siren_C");
static_assert(sizeof(ABPChar_Siren_C) == 0x003670, "Wrong size on ABPChar_Siren_C");
static_assert(offsetof(ABPChar_Siren_C, UberGraphFrame_BPChar_Siren_C) == 0x0035E8, "Member 'ABPChar_Siren_C::UberGraphFrame_BPChar_Siren_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, FaceFX) == 0x0035F0, "Member 'ABPChar_Siren_C::FaceFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, BPSirenCharacterComponent) == 0x0035F8, "Member 'ABPChar_Siren_C::BPSirenCharacterComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, PhaseCast_Body) == 0x003600, "Member 'ABPChar_Siren_C::PhaseCast_Body' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, PhaseCast_Head) == 0x003608, "Member 'ABPChar_Siren_C::PhaseCast_Head' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, PhaseCast_Arms) == 0x003610, "Member 'ABPChar_Siren_C::PhaseCast_Arms' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, SK_Play_SirenBrawler_Base_Head) == 0x003618, "Member 'ABPChar_Siren_C::SK_Play_SirenBrawler_Base_Head' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, Ghost_Arms_3rd) == 0x003620, "Member 'ABPChar_Siren_C::Ghost_Arms_3rd' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, TattooFlare_Scalar_D2A50537458CFA8E3B7462A51046E30B) == 0x003628, "Member 'ABPChar_Siren_C::TattooFlare_Scalar_D2A50537458CFA8E3B7462A51046E30B' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, TattooFlare__Direction_D2A50537458CFA8E3B7462A51046E30B) == 0x00362C, "Member 'ABPChar_Siren_C::TattooFlare__Direction_D2A50537458CFA8E3B7462A51046E30B' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, TattooFlare) == 0x003630, "Member 'ABPChar_Siren_C::TattooFlare' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, FadeArms3rd_Scalar_B54767784E02CDC0D75380ABF7394F15) == 0x003638, "Member 'ABPChar_Siren_C::FadeArms3rd_Scalar_B54767784E02CDC0D75380ABF7394F15' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, FadeArms3rd__Direction_B54767784E02CDC0D75380ABF7394F15) == 0x00363C, "Member 'ABPChar_Siren_C::FadeArms3rd__Direction_B54767784E02CDC0D75380ABF7394F15' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, FadeArms3rd) == 0x003640, "Member 'ABPChar_Siren_C::FadeArms3rd' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, Ghost_Arms_1st) == 0x003648, "Member 'ABPChar_Siren_C::Ghost_Arms_1st' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, Arms) == 0x003650, "Member 'ABPChar_Siren_C::Arms' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, SirenEventHub) == 0x003658, "Member 'ABPChar_Siren_C::SirenEventHub' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, Att_Siren_FindYourCenterActive) == 0x003660, "Member 'ABPChar_Siren_C::Att_Siren_FindYourCenterActive' has a wrong offset!");
static_assert(offsetof(ABPChar_Siren_C, bArmFadeInterrupted) == 0x00366C, "Member 'ABPChar_Siren_C::bArmFadeInterrupted' has a wrong offset!");

}

