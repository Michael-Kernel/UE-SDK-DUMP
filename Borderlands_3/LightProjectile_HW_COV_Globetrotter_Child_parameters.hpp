#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_HW_COV_Globetrotter_Child

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_HW_COV_Globetrotter_Child.LightProjectile_HW_COV_Globetrotter_Child_C.OnLifetimeExpired
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired) == 0x000008, "Wrong size on LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnLifetimeExpired::Projectile' has a wrong offset!");

// Function LightProjectile_HW_COV_Globetrotter_Child.LightProjectile_HW_COV_Globetrotter_Child_C.OnImpact
// 0x0098 (0x0098 - 0x0000)
struct LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact) == 0x000008, "Wrong alignment on LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact");
static_assert(sizeof(LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact) == 0x000098, "Wrong size on LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact, Projectile) == 0x000000, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact, Hit) == 0x000008, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnImpact::Hit' has a wrong offset!");

// Function LightProjectile_HW_COV_Globetrotter_Child.LightProjectile_HW_COV_Globetrotter_Child_C.OnRicochet
// 0x01E0 (0x01E0 - 0x0000)
struct LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0098(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x00A8(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x01B8(0x0018)()
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet) == 0x000008, "Wrong alignment on LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet");
static_assert(sizeof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet) == 0x0001E0, "Wrong size on LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, Projectile) == 0x000000, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, Hit) == 0x000008, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, ImpactVelocity) == 0x000098, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, Temp_struct_Variable) == 0x0000A8, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_bBlockingHit) == 0x000138, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_bInitialOverlap) == 0x000139, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_Location) == 0x000144, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_Normal) == 0x00015C, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_FaceIndex) == 0x00019C, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_BreakHitResult_TraceEnd) == 0x0001AC, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_PostEventAtLocation_ReturnValue) == 0x0001B8, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001D0, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet, CallFunc_GetInstigator_ReturnValue) == 0x0001D8, "Member 'LightProjectile_HW_COV_Globetrotter_Child_C_OnRicochet::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");

}

