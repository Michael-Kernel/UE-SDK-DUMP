#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxInput

#include "Basic.hpp"

#include "GbxInput_classes.hpp"
#include "GbxInput_parameters.hpp"


namespace SDK
{

// Function GbxInput.GbxInputComponent.InputAction_Continuous_Vector_Impl
// (Final, Native, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UGbxInputActionData_Continuous_Vector*AxisAction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxInputComponent::InputAction_Continuous_Vector_Impl(class UGbxInputActionData_Continuous_Vector* AxisAction, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxInputComponent", "InputAction_Continuous_Vector_Impl");

	Params::GbxInputComponent_InputAction_Continuous_Vector_Impl Parms{};

	Parms.AxisAction = AxisAction;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxInput.GbxInputComponent.StartInputAction_Discrete_Impl
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UGbxInputActionData_Discrete*     DiscreteAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bConsumeEvent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxInputComponent::StartInputAction_Discrete_Impl(class UGbxInputActionData_Discrete* DiscreteAction, bool bConsumeEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxInputComponent", "StartInputAction_Discrete_Impl");

	Params::GbxInputComponent_StartInputAction_Discrete_Impl Parms{};

	Parms.DiscreteAction = DiscreteAction;
	Parms.bConsumeEvent = bConsumeEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxInput.GbxInputComponent.StartInputConsumeKeyImpl
// (Final, Native, Private)

void UGbxInputComponent::StartInputConsumeKeyImpl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxInputComponent", "StartInputConsumeKeyImpl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxInput.GbxInputEventHelpers.SigFunc_Axis
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          Val                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxInputEventHelpers::SigFunc_Axis(const struct FVector& Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxInputEventHelpers", "SigFunc_Axis");

	Params::GbxInputEventHelpers_SigFunc_Axis Parms{};

	Parms.Val = std::move(Val);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxInput.GbxInputEventHelpers.SigFunc_Button_PressPulse
// (Final, Native, Public)
// Parameters:
// float                                   NextPulseDelay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxInputEventHelpers::SigFunc_Button_PressPulse(float NextPulseDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxInputEventHelpers", "SigFunc_Button_PressPulse");

	Params::GbxInputEventHelpers_SigFunc_Button_PressPulse Parms{};

	Parms.NextPulseDelay = NextPulseDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

