#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_HW_COV_Yellowcake_2

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_HW_COV_Yellowcake_2.LightProjectile_HW_COV_Yellowcake_2_C.OnLifetimeExpired
// 0x0230 (0x0230 - 0x0000)
struct LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     ProjectileDirections;                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue1;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00F0(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired) == 0x000010, "Wrong alignment on LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired) == 0x000230, "Wrong size on LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, ProjectileDirections) == 0x000008, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::ProjectileDirections' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetDataTableValue_OutValue) == 0x000018, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetDataTableValue_ReturnValue) == 0x00001C, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000020, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, Temp_int_Array_Index_Variable) == 0x000034, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Array_Get_Item) == 0x000040, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_BreakTransform_Location) == 0x000070, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetDataTableValue_OutValue1) == 0x0000C0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetDataTableValue_ReturnValue1) == 0x0000C4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetSource_ReturnValue) == 0x0000C8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetInstigator_ReturnValue) == 0x0000D8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000E0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, CallFunc_GetSource_ReturnValue1) == 0x0000E8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::CallFunc_GetSource_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000F0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnLifetimeExpired::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function LightProjectile_HW_COV_Yellowcake_2.LightProjectile_HW_COV_Yellowcake_2_C.OnDamage
// 0x0330 (0x0330 - 0x0000)
struct LightProjectile_HW_COV_Yellowcake_2_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     ProjectileDirections;                              // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0130(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x018C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01F0(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage) == 0x000010, "Wrong alignment on LightProjectile_HW_COV_Yellowcake_2_C_OnDamage");
static_assert(sizeof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage) == 0x000330, "Wrong size on LightProjectile_HW_COV_Yellowcake_2_C_OnDamage");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, ProjectileDirections) == 0x0000A0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::ProjectileDirections' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x0000B0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x0000B4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B5, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B6, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000B8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000BC, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000C0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000CC, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000D8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000114, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000118, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000124, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000130, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, Temp_int_Array_Index_Variable) == 0x000144, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, Temp_int_Loop_Counter_Variable) == 0x000148, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Array_Get_Item) == 0x000150, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakTransform_Location) == 0x000180, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakTransform_Rotation) == 0x00018C, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_BreakTransform_Scale) == 0x000198, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0001A4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetForwardVector_ReturnValue) == 0x0001A8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001B4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Add_IntInt_ReturnValue) == 0x0001C0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetDataTableValue_OutValue1) == 0x0001D0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue1) == 0x0001D4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x0001D8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001E0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001E4, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, CallFunc_GetSource_ReturnValue) == 0x0001E8, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HW_COV_Yellowcake_2_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001F0, "Member 'LightProjectile_HW_COV_Yellowcake_2_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

