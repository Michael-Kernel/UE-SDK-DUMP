#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_AR_VLA

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_AR_VLA.BPAnim_AR_VLA_C.ExecuteUbergraph_BPAnim_AR_VLA
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewMode;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA) == 0x000004, "Wrong alignment on BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA");
static_assert(sizeof(BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA) == 0x000008, "Wrong size on BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA");
static_assert(offsetof(BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA, EntryPoint) == 0x000000, "Member 'BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA, K2Node_Event_NewMode) == 0x000004, "Member 'BPAnim_AR_VLA_C_ExecuteUbergraph_BPAnim_AR_VLA::K2Node_Event_NewMode' has a wrong offset!");

// Function BPAnim_AR_VLA.BPAnim_AR_VLA_C.BlueprintSwitchedMode
// 0x0004 (0x0004 - 0x0000)
struct BPAnim_AR_VLA_C_BlueprintSwitchedMode final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_AR_VLA_C_BlueprintSwitchedMode) == 0x000004, "Wrong alignment on BPAnim_AR_VLA_C_BlueprintSwitchedMode");
static_assert(sizeof(BPAnim_AR_VLA_C_BlueprintSwitchedMode) == 0x000004, "Wrong size on BPAnim_AR_VLA_C_BlueprintSwitchedMode");
static_assert(offsetof(BPAnim_AR_VLA_C_BlueprintSwitchedMode, NewMode) == 0x000000, "Member 'BPAnim_AR_VLA_C_BlueprintSwitchedMode::NewMode' has a wrong offset!");

// Function BPAnim_AR_VLA.BPAnim_AR_VLA_C.UpdateForegripPose
// 0x000A (0x000A - 0x0000)
struct BPAnim_AR_VLA_C_UpdateForegripPose final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue5;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_AR_VLA_C_UpdateForegripPose) == 0x000001, "Wrong alignment on BPAnim_AR_VLA_C_UpdateForegripPose");
static_assert(sizeof(BPAnim_AR_VLA_C_UpdateForegripPose) == 0x00000A, "Wrong size on BPAnim_AR_VLA_C_UpdateForegripPose");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000003, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000004, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x000005, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_BooleanAND_ReturnValue1) == 0x000007, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_EqualEqual_ByteByte_ReturnValue5) == 0x000008, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_EqualEqual_ByteByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateForegripPose, CallFunc_BooleanAND_ReturnValue2) == 0x000009, "Member 'BPAnim_AR_VLA_C_UpdateForegripPose::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BPAnim_AR_VLA.BPAnim_AR_VLA_C.UpdateBarrelPose
// 0x0048 (0x0048 - 0x0000)
struct BPAnim_AR_VLA_C_UpdateBarrelPose final
{
public:
	uint8                                         ModeType;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentUseMode;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable2;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable3;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_AR_VLA_C_UpdateBarrelPose) == 0x000008, "Wrong alignment on BPAnim_AR_VLA_C_UpdateBarrelPose");
static_assert(sizeof(BPAnim_AR_VLA_C_UpdateBarrelPose) == 0x000048, "Wrong size on BPAnim_AR_VLA_C_UpdateBarrelPose");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, ModeType) == 0x000000, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::ModeType' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CurrentUseMode) == 0x000004, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CurrentUseMode' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, Temp_byte_Variable) == 0x000008, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, Temp_object_Variable) == 0x000010, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, Temp_object_Variable1) == 0x000018, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, Temp_object_Variable2) == 0x000020, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, Temp_object_Variable3) == 0x000028, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, K2Node_Select_Default) == 0x000038, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000040, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000041, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000042, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_BooleanAND_ReturnValue1) == 0x000043, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_AR_VLA_C_UpdateBarrelPose, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000044, "Member 'BPAnim_AR_VLA_C_UpdateBarrelPose::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

}

