#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimeManagement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TimeManagement.TimeManagementBlueprintLibrary.Conv_FrameRateToSeconds
// 0x000C (0x000C - 0x0000)
struct TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds final
{
public:
	struct FFrameRate                             InFrameRate;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds) == 0x000004, "Wrong alignment on TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds");
static_assert(sizeof(TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds) == 0x00000C, "Wrong size on TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds, InFrameRate) == 0x000000, "Member 'TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds::InFrameRate' has a wrong offset!");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds, ReturnValue) == 0x000008, "Member 'TimeManagementBlueprintLibrary_Conv_FrameRateToSeconds::ReturnValue' has a wrong offset!");

// Function TimeManagement.TimeManagementBlueprintLibrary.Conv_QualifiedFrameTimeToSeconds
// 0x0014 (0x0014 - 0x0000)
struct TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds final
{
public:
	struct FQualifiedFrameTime                    InFrameTime;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds) == 0x000004, "Wrong alignment on TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds");
static_assert(sizeof(TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds) == 0x000014, "Wrong size on TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds, InFrameTime) == 0x000000, "Member 'TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds::InFrameTime' has a wrong offset!");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds, ReturnValue) == 0x000010, "Member 'TimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds::ReturnValue' has a wrong offset!");

// Function TimeManagement.TimeManagementBlueprintLibrary.Conv_TimecodeToString
// 0x0028 (0x0028 - 0x0000)
struct TimeManagementBlueprintLibrary_Conv_TimecodeToString final
{
public:
	struct FTimecode                              InTimecode;                                        // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceSignDisplay;                                 // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeManagementBlueprintLibrary_Conv_TimecodeToString) == 0x000008, "Wrong alignment on TimeManagementBlueprintLibrary_Conv_TimecodeToString");
static_assert(sizeof(TimeManagementBlueprintLibrary_Conv_TimecodeToString) == 0x000028, "Wrong size on TimeManagementBlueprintLibrary_Conv_TimecodeToString");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_TimecodeToString, InTimecode) == 0x000000, "Member 'TimeManagementBlueprintLibrary_Conv_TimecodeToString::InTimecode' has a wrong offset!");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_TimecodeToString, bForceSignDisplay) == 0x000014, "Member 'TimeManagementBlueprintLibrary_Conv_TimecodeToString::bForceSignDisplay' has a wrong offset!");
static_assert(offsetof(TimeManagementBlueprintLibrary_Conv_TimecodeToString, ReturnValue) == 0x000018, "Member 'TimeManagementBlueprintLibrary_Conv_TimecodeToString::ReturnValue' has a wrong offset!");

// Function TimeManagement.TimeManagementBlueprintLibrary.GetTimecode
// 0x0014 (0x0014 - 0x0000)
struct TimeManagementBlueprintLibrary_GetTimecode final
{
public:
	struct FTimecode                              ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeManagementBlueprintLibrary_GetTimecode) == 0x000004, "Wrong alignment on TimeManagementBlueprintLibrary_GetTimecode");
static_assert(sizeof(TimeManagementBlueprintLibrary_GetTimecode) == 0x000014, "Wrong size on TimeManagementBlueprintLibrary_GetTimecode");
static_assert(offsetof(TimeManagementBlueprintLibrary_GetTimecode, ReturnValue) == 0x000000, "Member 'TimeManagementBlueprintLibrary_GetTimecode::ReturnValue' has a wrong offset!");

// Function TimeManagement.TimeManagementBlueprintLibrary.Multiply_SecondsFrameRate
// 0x0014 (0x0014 - 0x0000)
struct TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate final
{
public:
	float                                         TimeInSeconds;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             FrameRate;                                         // 0x0004(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameTime                             ReturnValue;                                       // 0x000C(0x0008)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate) == 0x000004, "Wrong alignment on TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate");
static_assert(sizeof(TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate) == 0x000014, "Wrong size on TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate");
static_assert(offsetof(TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate, TimeInSeconds) == 0x000000, "Member 'TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate::TimeInSeconds' has a wrong offset!");
static_assert(offsetof(TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate, FrameRate) == 0x000004, "Member 'TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate::FrameRate' has a wrong offset!");
static_assert(offsetof(TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate, ReturnValue) == 0x00000C, "Member 'TimeManagementBlueprintLibrary_Multiply_SecondsFrameRate::ReturnValue' has a wrong offset!");

}

