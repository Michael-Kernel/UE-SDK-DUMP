#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TOR_PS_UnkemptHarold

#include "Basic.hpp"


namespace SDK::Params
{

// Function LightProjectile_TOR_PS_UnkemptHarold.LightProjectile_TOR_PS_UnkemptHarold_C.SplitSide
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetFiringPatternID_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide) == 0x000008, "Wrong alignment on LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide");
static_assert(sizeof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide) == 0x000010, "Wrong size on LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide, Projectile) == 0x000000, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide, CallFunc_GetFiringPatternID_ReturnValue) == 0x000008, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide::CallFunc_GetFiringPatternID_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00000A, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitSide::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function LightProjectile_TOR_PS_UnkemptHarold.LightProjectile_TOR_PS_UnkemptHarold_C.SplitMid
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetFiringPatternID_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid) == 0x000008, "Wrong alignment on LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid");
static_assert(sizeof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid) == 0x000010, "Wrong size on LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid, Projectile) == 0x000000, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid, CallFunc_GetFiringPatternID_ReturnValue) == 0x000008, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid::CallFunc_GetFiringPatternID_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'LightProjectile_TOR_PS_UnkemptHarold_C_SplitMid::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

