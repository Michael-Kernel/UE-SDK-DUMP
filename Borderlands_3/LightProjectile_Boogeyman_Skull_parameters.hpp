#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Boogeyman_Skull

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_Boogeyman_Skull.LightProjectile_Boogeyman_Skull_C.HomeIn
// 0x0018 (0x0018 - 0x0000)
struct LightProjectile_Boogeyman_Skull_C_HomeIn final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetTarget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_Boogeyman_Skull_C_HomeIn) == 0x000008, "Wrong alignment on LightProjectile_Boogeyman_Skull_C_HomeIn");
static_assert(sizeof(LightProjectile_Boogeyman_Skull_C_HomeIn) == 0x000018, "Wrong size on LightProjectile_Boogeyman_Skull_C_HomeIn");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_HomeIn, Projectile) == 0x000000, "Member 'LightProjectile_Boogeyman_Skull_C_HomeIn::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_HomeIn, CallFunc_GetTarget_ReturnValue) == 0x000008, "Member 'LightProjectile_Boogeyman_Skull_C_HomeIn::CallFunc_GetTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_HomeIn, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'LightProjectile_Boogeyman_Skull_C_HomeIn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LightProjectile_Boogeyman_Skull.LightProjectile_Boogeyman_Skull_C.OnDamage
// 0x0370 (0x0370 - 0x0000)
struct LightProjectile_Boogeyman_Skull_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnChance;                                       // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FanRot;                                            // 0x00A0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                FanLoc;                                            // 0x00AC(0x000C)(Edit, BlueprintVisible, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightProjectile*                       Proj;                                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0164(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0xF];                                      // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0200(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x020C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0218(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0228(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_Boogeyman_Skull_C_OnDamage) == 0x000010, "Wrong alignment on LightProjectile_Boogeyman_Skull_C_OnDamage");
static_assert(sizeof(LightProjectile_Boogeyman_Skull_C_OnDamage) == 0x000370, "Wrong size on LightProjectile_Boogeyman_Skull_C_OnDamage");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, SpawnChance) == 0x00009C, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::SpawnChance' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, FanRot) == 0x0000A0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::FanRot' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, FanLoc) == 0x0000AC, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::FanLoc' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, Target) == 0x0000B8, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::Target' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, Proj) == 0x0000C0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::Proj' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C8, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C9, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000CC, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000D0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000D4, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000EC, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F8, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x00012C, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000130, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x00013C, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_GetForwardVector_ReturnValue) == 0x000148, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000154, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_GetModifierValue_ReturnValue) == 0x000160, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000164, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000170, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000174, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000178, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue1) == 0x00018C, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x000198, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x0001A0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0001B0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x0001B8, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x0001C0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_Array_Get_Item) == 0x0001D0, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakTransform_Location) == 0x000200, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakTransform_Rotation) == 0x00020C, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, CallFunc_BreakTransform_Scale) == 0x000218, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_Boogeyman_Skull_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000228, "Member 'LightProjectile_Boogeyman_Skull_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

