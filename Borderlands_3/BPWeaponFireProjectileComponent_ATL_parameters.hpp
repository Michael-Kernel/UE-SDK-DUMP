#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeaponFireProjectileComponent_ATL

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPWeaponFireProjectileComponent_ATL.BPWeaponFireProjectileComponent_ATL_C.ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL
// 0x0030 (0x0030 - 0x0000)
struct BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeap_ATL_BaseWeapon_C*               K2Node_DynamicCast_AsBPWeap_ATL_Base_Weapon;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL) == 0x000008, "Wrong alignment on BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL");
static_assert(sizeof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL) == 0x000030, "Wrong size on BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL, EntryPoint) == 0x000000, "Member 'BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL, K2Node_DynamicCast_AsBPWeap_ATL_Base_Weapon) == 0x000020, "Member 'BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL::K2Node_DynamicCast_AsBPWeap_ATL_Base_Weapon' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPWeaponFireProjectileComponent_ATL_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_ATL::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPWeaponFireProjectileComponent_ATL.BPWeaponFireProjectileComponent_ATL_C.GetLockedTarget
// 0x0050 (0x0050 - 0x0000)
struct BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAttributeFloat                     CallFunc_MakeGbxAttributeFloat_ReturnValue;        // 0x0010(0x000C)(HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     CallFunc_MakeGbxAttributeFloat_ReturnValue1;       // 0x0024(0x000C)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget) == 0x000008, "Wrong alignment on BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget");
static_assert(sizeof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget) == 0x000050, "Wrong size on BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, ReturnValue) == 0x000000, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_MakeGbxAttributeFloat_ReturnValue) == 0x000010, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_MakeGbxAttributeFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_GetValueOfAttribute_ReturnValue) == 0x00001C, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_MakeGbxAttributeFloat_ReturnValue1) == 0x000024, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_MakeGbxAttributeFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_RandomInteger_ReturnValue) == 0x000034, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000038, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_Array_Get_Item) == 0x000040, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BPWeaponFireProjectileComponent_ATL_C_GetLockedTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

