#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Enemy_Ger_SlagtoothBadass

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Challenge_Enemy_Ger_SlagtoothBadass.Challenge_Enemy_Ger_SlagtoothBadass_C.CheckKillCondition
// 0x0088 (0x0088 - 0x0000)
struct Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    DeathDetails;                                      // 0x0008(0x0068)(BlueprintVisible, Parm, OutParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayTagContainerComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition) == 0x000008, "Wrong alignment on Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition");
static_assert(sizeof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition) == 0x000088, "Wrong size on Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition, DamageReceiver) == 0x000000, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition::DamageReceiver' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition, DeathDetails) == 0x000008, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition::DeathDetails' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition, CallFunc_GetComponentByClass_ReturnValue) == 0x000078, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition, CallFunc_HasAllTags_ReturnValue) == 0x000080, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_CheckKillCondition::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");

// Function Challenge_Enemy_Ger_SlagtoothBadass.Challenge_Enemy_Ger_SlagtoothBadass_C.OnInitChallengeInstance
// 0x0028 (0x0028 - 0x0000)
struct Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UDamageCauserComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance");
static_assert(sizeof(Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance) == 0x000028, "Wrong size on Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'Challenge_Enemy_Ger_SlagtoothBadass_C_OnInitChallengeInstance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

}

