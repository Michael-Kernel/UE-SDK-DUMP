#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionImageMonitor

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_MissionImageMonitorStates_structs.hpp"
#include "Struct_HelperMonitorSetup_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_MissionImageMonitor.IO_MissionImageMonitor_C
// 0x0098 (0x06A0 - 0x0608)
class AIO_MissionImageMonitor_C final : public AMission_InteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MonitorStaticMesh;                                 // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_MissionImageMonitorStates                MonitorStates;                                     // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MonitorMesh;                                       // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialOverrideIndex;                             // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Image1;                                            // 0x0638(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Image2;                                            // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Image3;                                            // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Image4;                                            // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Image5;                                            // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DefaultImage;                                      // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_HelperMonitorSetup>     SecondaryMeshes;                                   // 0x0668(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UGbxCondition*                          Cond_MonitorStates_NewEnumerator1;                 // 0x0678(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_MonitorStates_NewEnumerator2;                 // 0x0680(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_MonitorStates_NewEnumerator3;                 // 0x0688(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_MonitorStates_NewEnumerator4;                 // 0x0690(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_MonitorStates_NewEnumerator5;                 // 0x0698(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void OverrideSecondaryMonitors();
	void SetupMonitorMesh(class UMaterialInstance* MaterialToUse);
	void UserConstructionScript();
	void __UserState_MonitorStates_0(bool bFromLoad);
	void __UserState_MonitorStates_1(bool bFromLoad);
	void __UserState_MonitorStates_2(bool bFromLoad);
	void __UserState_MonitorStates_3(bool bFromLoad);
	void __UserState_MonitorStates_4(bool bFromLoad);
	void __UserState_MonitorStates_5(bool bFromLoad);
	void SetMonitorState(Enum_MissionImageMonitorStates State);
	void ExecuteUbergraph_IO_MissionImageMonitor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_MissionImageMonitor_C">();
	}
	static class AIO_MissionImageMonitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_MissionImageMonitor_C>();
	}
};
static_assert(alignof(AIO_MissionImageMonitor_C) == 0x000008, "Wrong alignment on AIO_MissionImageMonitor_C");
static_assert(sizeof(AIO_MissionImageMonitor_C) == 0x0006A0, "Wrong size on AIO_MissionImageMonitor_C");
static_assert(offsetof(AIO_MissionImageMonitor_C, UberGraphFrame) == 0x000608, "Member 'AIO_MissionImageMonitor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, MonitorStaticMesh) == 0x000610, "Member 'AIO_MissionImageMonitor_C::MonitorStaticMesh' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, DefaultSceneRoot) == 0x000618, "Member 'AIO_MissionImageMonitor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, MonitorStates) == 0x000620, "Member 'AIO_MissionImageMonitor_C::MonitorStates' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, MonitorMesh) == 0x000628, "Member 'AIO_MissionImageMonitor_C::MonitorMesh' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, MaterialOverrideIndex) == 0x000630, "Member 'AIO_MissionImageMonitor_C::MaterialOverrideIndex' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Image1) == 0x000638, "Member 'AIO_MissionImageMonitor_C::Image1' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Image2) == 0x000640, "Member 'AIO_MissionImageMonitor_C::Image2' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Image3) == 0x000648, "Member 'AIO_MissionImageMonitor_C::Image3' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Image4) == 0x000650, "Member 'AIO_MissionImageMonitor_C::Image4' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Image5) == 0x000658, "Member 'AIO_MissionImageMonitor_C::Image5' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, DefaultImage) == 0x000660, "Member 'AIO_MissionImageMonitor_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, SecondaryMeshes) == 0x000668, "Member 'AIO_MissionImageMonitor_C::SecondaryMeshes' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Cond_MonitorStates_NewEnumerator1) == 0x000678, "Member 'AIO_MissionImageMonitor_C::Cond_MonitorStates_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Cond_MonitorStates_NewEnumerator2) == 0x000680, "Member 'AIO_MissionImageMonitor_C::Cond_MonitorStates_NewEnumerator2' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Cond_MonitorStates_NewEnumerator3) == 0x000688, "Member 'AIO_MissionImageMonitor_C::Cond_MonitorStates_NewEnumerator3' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Cond_MonitorStates_NewEnumerator4) == 0x000690, "Member 'AIO_MissionImageMonitor_C::Cond_MonitorStates_NewEnumerator4' has a wrong offset!");
static_assert(offsetof(AIO_MissionImageMonitor_C, Cond_MonitorStates_NewEnumerator5) == 0x000698, "Member 'AIO_MissionImageMonitor_C::Cond_MonitorStates_NewEnumerator5' has a wrong offset!");

}

