#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CatchARide_Console_Proxy

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CatchARide_Console_Proxy.BP_CatchARide_Console_Proxy_C
// 0x0060 (0x0550 - 0x04F0)
class ABP_CatchARide_Console_Proxy_C final : public ACatchARideProxy
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               AntenaGlow;                                        // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CatchARide_Console_V3;                          // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               NearbyPlayerFX_Deactivate;                         // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               NearbyPlayerFX_StartAndLoop;                       // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MatInstanceScreen;                                 // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandleIN;                                     // 0x0528(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           TimerHandleLightScreen;                            // 0x0530(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         EmissiveIntensity;                                 // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandleOUT;                                    // 0x0540(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bNearbyFXActive;                                   // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void TurnScreenOn();
	void TurnScreenOff();
	void OnTurnedOn();
	void OnTurnedOff();
	void OnOwningPlayerStoppedInteraction();
	void OnOwningPlayerStartedInteraction();
	void OnInteractionPossible();
	void OnInteractionNotPossible();
	void LightUpScreen();
	void AfterFlickerOUT();
	void AfterFlickerIN();
	void ExecuteUbergraph_BP_CatchARide_Console_Proxy(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CatchARide_Console_Proxy_C">();
	}
	static class ABP_CatchARide_Console_Proxy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CatchARide_Console_Proxy_C>();
	}
};
static_assert(alignof(ABP_CatchARide_Console_Proxy_C) == 0x000008, "Wrong alignment on ABP_CatchARide_Console_Proxy_C");
static_assert(sizeof(ABP_CatchARide_Console_Proxy_C) == 0x000550, "Wrong size on ABP_CatchARide_Console_Proxy_C");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, UberGraphFrame) == 0x0004F0, "Member 'ABP_CatchARide_Console_Proxy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, AntenaGlow) == 0x0004F8, "Member 'ABP_CatchARide_Console_Proxy_C::AntenaGlow' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, SM_CatchARide_Console_V3) == 0x000500, "Member 'ABP_CatchARide_Console_Proxy_C::SM_CatchARide_Console_V3' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, NearbyPlayerFX_Deactivate) == 0x000508, "Member 'ABP_CatchARide_Console_Proxy_C::NearbyPlayerFX_Deactivate' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, NearbyPlayerFX_StartAndLoop) == 0x000510, "Member 'ABP_CatchARide_Console_Proxy_C::NearbyPlayerFX_StartAndLoop' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, DefaultSceneRoot) == 0x000518, "Member 'ABP_CatchARide_Console_Proxy_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, MatInstanceScreen) == 0x000520, "Member 'ABP_CatchARide_Console_Proxy_C::MatInstanceScreen' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, TimerHandleIN) == 0x000528, "Member 'ABP_CatchARide_Console_Proxy_C::TimerHandleIN' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, TimerHandleLightScreen) == 0x000530, "Member 'ABP_CatchARide_Console_Proxy_C::TimerHandleLightScreen' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, EmissiveIntensity) == 0x000538, "Member 'ABP_CatchARide_Console_Proxy_C::EmissiveIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, TimerHandleOUT) == 0x000540, "Member 'ABP_CatchARide_Console_Proxy_C::TimerHandleOUT' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_Proxy_C, bNearbyFXActive) == 0x000548, "Member 'ABP_CatchARide_Console_Proxy_C::bNearbyFXActive' has a wrong offset!");

}

