#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Boogeyman

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Boogeyman.Ability_Boogeyman_C
// 0x0110 (0x0208 - 0x00F8)
class UAbility_Boogeyman_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class AOakWeapon*                             BaseWeapon;                                        // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_WarlordAmmoRegen; // 0x0108(0x0028)()
	struct FEnvQueryParams                        Query;                                             // 0x0130(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class AActor*                                 Target;                                            // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FanLoc;                                            // 0x01F0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FanRot;                                            // 0x01FC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Ability_Boogeyman(int32 EntryPoint);
	void OnActivated();
	void OnCausedDeath_Event(class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void WeaponFired();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Boogeyman_C">();
	}
	static class UAbility_Boogeyman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Boogeyman_C>();
	}
};
static_assert(alignof(UAbility_Boogeyman_C) == 0x000008, "Wrong alignment on UAbility_Boogeyman_C");
static_assert(sizeof(UAbility_Boogeyman_C) == 0x000208, "Wrong size on UAbility_Boogeyman_C");
static_assert(offsetof(UAbility_Boogeyman_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Boogeyman_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Boogeyman_C, BaseWeapon) == 0x000100, "Member 'UAbility_Boogeyman_C::BaseWeapon' has a wrong offset!");
static_assert(offsetof(UAbility_Boogeyman_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_WarlordAmmoRegen) == 0x000108, "Member 'UAbility_Boogeyman_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_WarlordAmmoRegen' has a wrong offset!");
static_assert(offsetof(UAbility_Boogeyman_C, Query) == 0x000130, "Member 'UAbility_Boogeyman_C::Query' has a wrong offset!");
static_assert(offsetof(UAbility_Boogeyman_C, Target) == 0x0001E8, "Member 'UAbility_Boogeyman_C::Target' has a wrong offset!");
static_assert(offsetof(UAbility_Boogeyman_C, FanLoc) == 0x0001F0, "Member 'UAbility_Boogeyman_C::FanLoc' has a wrong offset!");
static_assert(offsetof(UAbility_Boogeyman_C, FanRot) == 0x0001FC, "Member 'UAbility_Boogeyman_C::FanRot' has a wrong offset!");

}

