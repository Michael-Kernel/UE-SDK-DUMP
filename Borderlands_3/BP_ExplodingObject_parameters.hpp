#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplodingObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Enum_ExplodingObjectDamage_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_IO_Combat_Barrel_structs.hpp"


namespace SDK::Params
{

// Function BP_ExplodingObject.BP_ExplodingObject_C.ExecuteUbergraph_BP_ExplodingObject
// 0x03C0 (0x03C0 - 0x0000)
struct BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0038(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue1;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_ThrowVector;                          // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Force;                                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_RotatorForSpin;                       // 0x00E0(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_FuseSpeedScale;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_AdditiveVector;                       // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PhysicsOn_;                           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue3;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue4;                // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue2;            // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_107[0x1];                                      // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0108(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UDamageComponent*                       K2Node_ComponentBoundEvent_DamageReceiver;         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Damage;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_ComponentBoundEvent_DamageType;             // 0x01A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_ComponentBoundEvent_DamageSource;           // 0x01B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_InstigatedBy;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 K2Node_ComponentBoundEvent_Details;                // 0x01C8(0x0058)(ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue3;            // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue4;            // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable1;                             // 0x0268(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue2;                // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADroppedInventoryItemPickup*>    CallFunc_SpawnLoot_AllDroppedPickups;              // 0x0300(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0310(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	class AElementalPuddle*                       CallFunc_SpawnElementalPuddle_ReturnValue;         // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue5;                // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue5;            // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x2];                                      // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0360(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x036C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_WakingComponent;        // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName1;              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_SleepingComponent;      // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName;               // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enabled;                              // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject) == 0x000010, "Wrong alignment on BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject");
static_assert(sizeof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject) == 0x0003C0, "Wrong size on BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, EntryPoint) == 0x000000, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_ByteByte_ReturnValue) == 0x000004, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, Temp_bool_Has_Been_Initd_Variable) == 0x000007, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_HasAuthority_ReturnValue1) == 0x000008, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_HitComponent) == 0x000010, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_OtherActor) == 0x000018, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_OtherComp) == 0x000020, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000028, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_Hit) == 0x000038, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_VSize_ReturnValue) == 0x0000C8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_ByteByte_ReturnValue1) == 0x0000CC, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CD, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_ThrowVector) == 0x0000D0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_ThrowVector' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_Force) == 0x0000DC, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_RotatorForSpin) == 0x0000E0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_RotatorForSpin' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_FuseSpeedScale) == 0x0000EC, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_FuseSpeedScale' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_AdditiveVector) == 0x0000F0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_AdditiveVector' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_PhysicsOn_) == 0x0000FC, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_PhysicsOn_' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x0000FD, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_HasAuthority_ReturnValue2) == 0x0000FE, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_UserStateEvent_bFromLoad3) == 0x0000FF, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_UserStateEvent_bFromLoad2) == 0x000100, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_UserStateEvent_bFromLoad1) == 0x000101, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_UserStateEvent_bFromLoad) == 0x000102, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_HasAuthority_ReturnValue3) == 0x000103, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_HasAuthority_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Not_PreBool_ReturnValue) == 0x000104, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_HasAuthority_ReturnValue4) == 0x000105, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_HasAuthority_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_ByteByte_ReturnValue2) == 0x000106, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, Temp_struct_Variable) == 0x000108, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_DamageReceiver) == 0x000198, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_Damage) == 0x0001A0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_DamageType) == 0x0001A8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_DamageSource) == 0x0001B0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_InstigatedBy) == 0x0001B8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_DamageCauser) == 0x0001C0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_Details) == 0x0001C8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_Details' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x000220, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_IsValid_ReturnValue) == 0x000228, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_ByteByte_ReturnValue3) == 0x000229, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_GetObjectName_ReturnValue) == 0x000230, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Conv_StringToName_ReturnValue) == 0x000240, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_GetObjectName_ReturnValue1) == 0x000248, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_ByteByte_ReturnValue4) == 0x000258, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Conv_StringToName_ReturnValue1) == 0x000260, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, Temp_struct_Variable1) == 0x000268, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_IsValidClass_ReturnValue) == 0x0002F8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_IsValidClass_ReturnValue1) == 0x0002F9, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_IsValidClass_ReturnValue2) == 0x0002FA, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_IsValidClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_IsValid_ReturnValue1) == 0x0002FB, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_SpawnLoot_AllDroppedPickups) == 0x000300, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_SpawnLoot_AllDroppedPickups' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000310, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_MakeTransform_ReturnValue) == 0x000320, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_SpawnElementalPuddle_ReturnValue) == 0x000350, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_SpawnElementalPuddle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_HasAuthority_ReturnValue5) == 0x000358, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_HasAuthority_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_ByteByte_ReturnValue5) == 0x000359, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_ByteByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_RandomFloatInRange_ReturnValue) == 0x00035C, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_MakeRotator_ReturnValue) == 0x000360, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x00036C, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_WakingComponent) == 0x000378, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_WakingComponent' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_BoneName1) == 0x000380, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_BoneName1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_SleepingComponent) == 0x000388, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_SleepingComponent' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_ComponentBoundEvent_BoneName) == 0x000390, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_ComponentBoundEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Array_Length_ReturnValue) == 0x000398, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Array_Length_ReturnValue1) == 0x00039C, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Subtract_IntInt_ReturnValue) == 0x0003A0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Greater_IntInt_ReturnValue) == 0x0003A4, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0003A8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_Array_Get_Item) == 0x0003B0, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, CallFunc_SetStaticMesh_ReturnValue) == 0x0003B8, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject, K2Node_Event_Enabled) == 0x0003B9, "Member 'BP_ExplodingObject_C_ExecuteUbergraph_BP_ExplodingObject::K2Node_Event_Enabled' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BPI_SetNavPainterEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C_BPI_SetNavPainterEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_BPI_SetNavPainterEnabled) == 0x000001, "Wrong alignment on BP_ExplodingObject_C_BPI_SetNavPainterEnabled");
static_assert(sizeof(BP_ExplodingObject_C_BPI_SetNavPainterEnabled) == 0x000001, "Wrong size on BP_ExplodingObject_C_BPI_SetNavPainterEnabled");
static_assert(offsetof(BP_ExplodingObject_C_BPI_SetNavPainterEnabled, Enabled) == 0x000000, "Member 'BP_ExplodingObject_C_BPI_SetNavPainterEnabled::Enabled' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject
// 0x0010 (0x0010 - 0x0000)
struct BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject final
{
public:
	class UPrimitiveComponent*                    SleepingComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject");
static_assert(sizeof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject) == 0x000010, "Wrong size on BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject, SleepingComponent) == 0x000000, "Member 'BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject::SleepingComponent' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject, BoneName) == 0x000008, "Member 'BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_3_ComponentSleepSignature__DelegateSignature_BP_ExplodingObject::BoneName' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject
// 0x0010 (0x0010 - 0x0000)
struct BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject final
{
public:
	class UPrimitiveComponent*                    WakingComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject");
static_assert(sizeof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject) == 0x000010, "Wrong size on BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject, WakingComponent) == 0x000000, "Member 'BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject::WakingComponent' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject, BoneName) == 0x000008, "Member 'BP_ExplodingObject_C_BndEvt__SM_ExplodingObject_K2Node_ComponentBoundEvent_0_ComponentWakeSignature__DelegateSignature_BP_ExplodingObject::BoneName' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject
// 0x0088 (0x0088 - 0x0000)
struct BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType_0;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0030(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject");
static_assert(sizeof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject) == 0x000088, "Wrong size on BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, DamageReceiver) == 0x000000, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, Damage) == 0x000008, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::Damage' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, DamageType_0) == 0x000010, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::DamageType_0' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, DamageSource) == 0x000018, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::DamageSource' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, InstigatedBy) == 0x000020, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, DamageCauser) == 0x000028, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject, Details) == 0x000030, "Member 'BP_ExplodingObject_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_ExplodingObject::Details' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.__UserState_ExplodingObjectState_3
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C___UserState_ExplodingObjectState_3 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C___UserState_ExplodingObjectState_3) == 0x000001, "Wrong alignment on BP_ExplodingObject_C___UserState_ExplodingObjectState_3");
static_assert(sizeof(BP_ExplodingObject_C___UserState_ExplodingObjectState_3) == 0x000001, "Wrong size on BP_ExplodingObject_C___UserState_ExplodingObjectState_3");
static_assert(offsetof(BP_ExplodingObject_C___UserState_ExplodingObjectState_3, bFromLoad) == 0x000000, "Member 'BP_ExplodingObject_C___UserState_ExplodingObjectState_3::bFromLoad' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.__UserState_ExplodingObjectState_2
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C___UserState_ExplodingObjectState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C___UserState_ExplodingObjectState_2) == 0x000001, "Wrong alignment on BP_ExplodingObject_C___UserState_ExplodingObjectState_2");
static_assert(sizeof(BP_ExplodingObject_C___UserState_ExplodingObjectState_2) == 0x000001, "Wrong size on BP_ExplodingObject_C___UserState_ExplodingObjectState_2");
static_assert(offsetof(BP_ExplodingObject_C___UserState_ExplodingObjectState_2, bFromLoad) == 0x000000, "Member 'BP_ExplodingObject_C___UserState_ExplodingObjectState_2::bFromLoad' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.__UserState_ExplodingObjectState_1
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C___UserState_ExplodingObjectState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C___UserState_ExplodingObjectState_1) == 0x000001, "Wrong alignment on BP_ExplodingObject_C___UserState_ExplodingObjectState_1");
static_assert(sizeof(BP_ExplodingObject_C___UserState_ExplodingObjectState_1) == 0x000001, "Wrong size on BP_ExplodingObject_C___UserState_ExplodingObjectState_1");
static_assert(offsetof(BP_ExplodingObject_C___UserState_ExplodingObjectState_1, bFromLoad) == 0x000000, "Member 'BP_ExplodingObject_C___UserState_ExplodingObjectState_1::bFromLoad' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.__UserState_ExplodingObjectState_0
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C___UserState_ExplodingObjectState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C___UserState_ExplodingObjectState_0) == 0x000001, "Wrong alignment on BP_ExplodingObject_C___UserState_ExplodingObjectState_0");
static_assert(sizeof(BP_ExplodingObject_C___UserState_ExplodingObjectState_0) == 0x000001, "Wrong size on BP_ExplodingObject_C___UserState_ExplodingObjectState_0");
static_assert(offsetof(BP_ExplodingObject_C___UserState_ExplodingObjectState_0, bFromLoad) == 0x000000, "Member 'BP_ExplodingObject_C___UserState_ExplodingObjectState_0::bFromLoad' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BPI_SetSimulatePhysics
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C_BPI_SetSimulatePhysics final
{
public:
	bool                                          PhysicsOn_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_BPI_SetSimulatePhysics) == 0x000001, "Wrong alignment on BP_ExplodingObject_C_BPI_SetSimulatePhysics");
static_assert(sizeof(BP_ExplodingObject_C_BPI_SetSimulatePhysics) == 0x000001, "Wrong size on BP_ExplodingObject_C_BPI_SetSimulatePhysics");
static_assert(offsetof(BP_ExplodingObject_C_BPI_SetSimulatePhysics, PhysicsOn_) == 0x000000, "Member 'BP_ExplodingObject_C_BPI_SetSimulatePhysics::PhysicsOn_' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BPI_ImpulseThrow
// 0x002C (0x002C - 0x0000)
struct BP_ExplodingObject_C_BPI_ImpulseThrow final
{
public:
	struct FVector                                ThrowVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatorForSpin;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         FuseSpeedScale;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdditiveVector;                                    // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_BPI_ImpulseThrow) == 0x000004, "Wrong alignment on BP_ExplodingObject_C_BPI_ImpulseThrow");
static_assert(sizeof(BP_ExplodingObject_C_BPI_ImpulseThrow) == 0x00002C, "Wrong size on BP_ExplodingObject_C_BPI_ImpulseThrow");
static_assert(offsetof(BP_ExplodingObject_C_BPI_ImpulseThrow, ThrowVector) == 0x000000, "Member 'BP_ExplodingObject_C_BPI_ImpulseThrow::ThrowVector' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BPI_ImpulseThrow, Force) == 0x00000C, "Member 'BP_ExplodingObject_C_BPI_ImpulseThrow::Force' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BPI_ImpulseThrow, RotatorForSpin) == 0x000010, "Member 'BP_ExplodingObject_C_BPI_ImpulseThrow::RotatorForSpin' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BPI_ImpulseThrow, FuseSpeedScale) == 0x00001C, "Member 'BP_ExplodingObject_C_BPI_ImpulseThrow::FuseSpeedScale' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BPI_ImpulseThrow, AdditiveVector) == 0x000020, "Member 'BP_ExplodingObject_C_BPI_ImpulseThrow::AdditiveVector' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal");
static_assert(sizeof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal) == 0x0000B8, "Wrong size on BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal, HitComponent) == 0x000000, "Member 'BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal, OtherActor) == 0x000008, "Member 'BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal, OtherComp) == 0x000010, "Member 'BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal, NormalImpulse) == 0x000018, "Member 'BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal, Hit) == 0x000028, "Member 'BP_ExplodingObject_C_BndEvt__SM_Barrel_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature_IO_Combat_Barrel_Universal::Hit' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct BP_ExplodingObject_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_ExplodingObject_C_UserConstructionScript");
static_assert(sizeof(BP_ExplodingObject_C_UserConstructionScript) == 0x00000C, "Wrong size on BP_ExplodingObject_C_UserConstructionScript");
static_assert(offsetof(BP_ExplodingObject_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_ExplodingObject_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_UserConstructionScript, CallFunc_And_IntInt_ReturnValue) == 0x000004, "Member 'BP_ExplodingObject_C_UserConstructionScript::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_ExplodingObject_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.Setup_RandomizeDamageType
// 0x00F8 (0x00F8 - 0x0000)
struct BP_ExplodingObject_C_Setup_RandomizeDamageType final
{
public:
	TMap<int32, uint8>                            MyBitmaskLookup;                                   // 0x0000(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         MyTestResult;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 MyTest;                                            // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	Enum_ExplodingObjectDamage                    MyDamageType;                                      // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_ExplodingObjectDamage>            MyDamageTypes;                                     // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<Enum_IO_Combat_Barrel>                 MyBarrelOptions;                                   // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TMap<int32, uint8>                            K2Node_MakeVariable_MakeVariableOutput;            // 0x0090(0x0050)(ZeroConstructor)
	uint8                                         CallFunc_Bitmask_RandomEnum_RandomEnum;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDA_ExplodingObjectPresentation_C*      CallFunc_Map_Find_Value;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_Setup_RandomizeDamageType) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_Setup_RandomizeDamageType");
static_assert(sizeof(BP_ExplodingObject_C_Setup_RandomizeDamageType) == 0x0000F8, "Wrong size on BP_ExplodingObject_C_Setup_RandomizeDamageType");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, MyBitmaskLookup) == 0x000000, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::MyBitmaskLookup' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, MyTestResult) == 0x000050, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::MyTestResult' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, MyTest) == 0x000058, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::MyTest' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, MyDamageType) == 0x000068, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::MyDamageType' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, MyDamageTypes) == 0x000070, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::MyDamageTypes' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, MyBarrelOptions) == 0x000080, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::MyBarrelOptions' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, K2Node_MakeVariable_MakeVariableOutput) == 0x000090, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, CallFunc_Bitmask_RandomEnum_RandomEnum) == 0x0000E0, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::CallFunc_Bitmask_RandomEnum_RandomEnum' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, CallFunc_GetValidValue_ReturnValue) == 0x0000E1, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_RandomizeDamageType, CallFunc_BooleanAND_ReturnValue) == 0x0000F2, "Member 'BP_ExplodingObject_C_Setup_RandomizeDamageType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.Setup_ExplodingObject
// 0x0020 (0x0020 - 0x0000)
struct BP_ExplodingObject_C_Setup_ExplodingObject final
{
public:
	class UDA_ExplodingObjectPresentation_C*      NewPresentation;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMI;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_Setup_ExplodingObject) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_Setup_ExplodingObject");
static_assert(sizeof(BP_ExplodingObject_C_Setup_ExplodingObject) == 0x000020, "Wrong size on BP_ExplodingObject_C_Setup_ExplodingObject");
static_assert(offsetof(BP_ExplodingObject_C_Setup_ExplodingObject, NewPresentation) == 0x000000, "Member 'BP_ExplodingObject_C_Setup_ExplodingObject::NewPresentation' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_ExplodingObject, DynamicMI) == 0x000008, "Member 'BP_ExplodingObject_C_Setup_ExplodingObject::DynamicMI' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_ExplodingObject, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_ExplodingObject_C_Setup_ExplodingObject::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Setup_ExplodingObject, CallFunc_SetStaticMesh_ReturnValue) == 0x000018, "Member 'BP_ExplodingObject_C_Setup_ExplodingObject::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.ThrowExplodingObject
// 0x004C (0x004C - 0x0000)
struct BP_ExplodingObject_C_ThrowExplodingObject final
{
public:
	struct FVector                                ThrowVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatorForSpin;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                OptionalAdditiveVector;                            // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_ThrowExplodingObject) == 0x000004, "Wrong alignment on BP_ExplodingObject_C_ThrowExplodingObject");
static_assert(sizeof(BP_ExplodingObject_C_ThrowExplodingObject) == 0x00004C, "Wrong size on BP_ExplodingObject_C_ThrowExplodingObject");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, ThrowVector) == 0x000000, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::ThrowVector' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, Force) == 0x00000C, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::Force' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, RotatorForSpin) == 0x000010, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::RotatorForSpin' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, OptionalAdditiveVector) == 0x00001C, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::OptionalAdditiveVector' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_ThrowExplodingObject, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_ExplodingObject_C_ThrowExplodingObject::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.OnRep_DamageType
// 0x0018 (0x0018 - 0x0000)
struct BP_ExplodingObject_C_OnRep_DamageType final
{
public:
	class UDA_ExplodingObjectPresentation_C*      CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Setup_ExplodingObject_DynamicMI;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_OnRep_DamageType) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_OnRep_DamageType");
static_assert(sizeof(BP_ExplodingObject_C_OnRep_DamageType) == 0x000018, "Wrong size on BP_ExplodingObject_C_OnRep_DamageType");
static_assert(offsetof(BP_ExplodingObject_C_OnRep_DamageType, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_ExplodingObject_C_OnRep_DamageType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_OnRep_DamageType, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BP_ExplodingObject_C_OnRep_DamageType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_OnRep_DamageType, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_ExplodingObject_C_OnRep_DamageType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_OnRep_DamageType, CallFunc_Setup_ExplodingObject_DynamicMI) == 0x000010, "Member 'BP_ExplodingObject_C_OnRep_DamageType::CallFunc_Setup_ExplodingObject_DynamicMI' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.VisualState_FuseStart
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ExplodingObject_C_VisualState_FuseStart final
{
public:
	struct FHitResult                             Temp_struct_Variable;                              // 0x0000(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0098(0x0018)()
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_VisualState_FuseStart) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_VisualState_FuseStart");
static_assert(sizeof(BP_ExplodingObject_C_VisualState_FuseStart) == 0x0000C8, "Wrong size on BP_ExplodingObject_C_VisualState_FuseStart");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStart, Temp_struct_Variable) == 0x000000, "Member 'BP_ExplodingObject_C_VisualState_FuseStart::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStart, CallFunc_IsValidClass_ReturnValue) == 0x000090, "Member 'BP_ExplodingObject_C_VisualState_FuseStart::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStart, CallFunc_PostAttachedEvent_ReturnValue) == 0x000098, "Member 'BP_ExplodingObject_C_VisualState_FuseStart::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStart, CallFunc_GetObjectName_ReturnValue) == 0x0000B0, "Member 'BP_ExplodingObject_C_VisualState_FuseStart::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStart, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C0, "Member 'BP_ExplodingObject_C_VisualState_FuseStart::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.VisualState_FuseStop
// 0x0028 (0x0028 - 0x0000)
struct BP_ExplodingObject_C_VisualState_FuseStop final
{
public:
	class UWwiseAudioComponent*                   CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_IsAudioPlaying_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_VisualState_FuseStop) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_VisualState_FuseStop");
static_assert(sizeof(BP_ExplodingObject_C_VisualState_FuseStop) == 0x000028, "Wrong size on BP_ExplodingObject_C_VisualState_FuseStop");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStop, CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue) == 0x000000, "Member 'BP_ExplodingObject_C_VisualState_FuseStop::CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStop, CallFunc_PostWwiseEvent_ReturnValue) == 0x000008, "Member 'BP_ExplodingObject_C_VisualState_FuseStop::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_FuseStop, CallFunc_IsAudioPlaying_ReturnValue) == 0x000020, "Member 'BP_ExplodingObject_C_VisualState_FuseStop::CallFunc_IsAudioPlaying_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.Get_DamageType
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C_Get_DamageType final
{
public:
	Enum_ExplodingObjectDamage                    DamageType_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_Get_DamageType) == 0x000001, "Wrong alignment on BP_ExplodingObject_C_Get_DamageType");
static_assert(sizeof(BP_ExplodingObject_C_Get_DamageType) == 0x000001, "Wrong size on BP_ExplodingObject_C_Get_DamageType");
static_assert(offsetof(BP_ExplodingObject_C_Get_DamageType, DamageType_0) == 0x000000, "Member 'BP_ExplodingObject_C_Get_DamageType::DamageType_0' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.VisualState_ExplodedStart
// 0x0028 (0x0028 - 0x0000)
struct BP_ExplodingObject_C_VisualState_ExplodedStart final
{
public:
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UMaterialInstance*                      CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplodingObject_C_VisualState_ExplodedStart) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_VisualState_ExplodedStart");
static_assert(sizeof(BP_ExplodingObject_C_VisualState_ExplodedStart) == 0x000028, "Wrong size on BP_ExplodingObject_C_VisualState_ExplodedStart");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_ExplodedStart, Temp_struct_Variable) == 0x000000, "Member 'BP_ExplodingObject_C_VisualState_ExplodedStart::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_ExplodedStart, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_ExplodingObject_C_VisualState_ExplodedStart::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_ExplodedStart, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_ExplodingObject_C_VisualState_ExplodedStart::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_VisualState_ExplodedStart, CallFunc_K2Play_ReturnValue) == 0x000020, "Member 'BP_ExplodingObject_C_VisualState_ExplodedStart::CallFunc_K2Play_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.Damaged
// 0x0020 (0x0020 - 0x0000)
struct BP_ExplodingObject_C_Damaged final
{
public:
	const class UGbxDamageType*                   DamageType_0;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue1;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentHealth_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_Damaged) == 0x000008, "Wrong alignment on BP_ExplodingObject_C_Damaged");
static_assert(sizeof(BP_ExplodingObject_C_Damaged) == 0x000020, "Wrong size on BP_ExplodingObject_C_Damaged");
static_assert(offsetof(BP_ExplodingObject_C_Damaged, DamageType_0) == 0x000000, "Member 'BP_ExplodingObject_C_Damaged::DamageType_0' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Damaged, DamageSource) == 0x000008, "Member 'BP_ExplodingObject_C_Damaged::DamageSource' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Damaged, CallFunc_Greater_ByteByte_ReturnValue) == 0x000010, "Member 'BP_ExplodingObject_C_Damaged::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Damaged, CallFunc_Greater_ByteByte_ReturnValue1) == 0x000011, "Member 'BP_ExplodingObject_C_Damaged::CallFunc_Greater_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Damaged, CallFunc_GetCurrentHealth_ReturnValue) == 0x000014, "Member 'BP_ExplodingObject_C_Damaged::CallFunc_GetCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplodingObject_C_Damaged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_ExplodingObject_C_Damaged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ExplodingObject.BP_ExplodingObject_C.SetSimulatePhysics
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplodingObject_C_SetSimulatePhysics final
{
public:
	bool                                          bNewSimulate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplodingObject_C_SetSimulatePhysics) == 0x000001, "Wrong alignment on BP_ExplodingObject_C_SetSimulatePhysics");
static_assert(sizeof(BP_ExplodingObject_C_SetSimulatePhysics) == 0x000001, "Wrong size on BP_ExplodingObject_C_SetSimulatePhysics");
static_assert(offsetof(BP_ExplodingObject_C_SetSimulatePhysics, bNewSimulate) == 0x000000, "Member 'BP_ExplodingObject_C_SetSimulatePhysics::bNewSimulate' has a wrong offset!");

}

