#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_IO_Combat_Barrel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_SetSimulatePhysics
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics final
{
public:
	bool                                          PhysicsOn_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics) == 0x000001, "Wrong alignment on BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics");
static_assert(sizeof(BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics) == 0x000001, "Wrong size on BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics, PhysicsOn_) == 0x000000, "Member 'BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics::PhysicsOn_' has a wrong offset!");

// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_ImpulseThrow
// 0x002C (0x002C - 0x0000)
struct BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow final
{
public:
	struct FVector                                ThrowVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatorForSpin;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         FuseSpeedScale;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdditiveVector;                                    // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow) == 0x000004, "Wrong alignment on BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow");
static_assert(sizeof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow) == 0x00002C, "Wrong size on BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow, ThrowVector) == 0x000000, "Member 'BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow::ThrowVector' has a wrong offset!");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow, Force) == 0x00000C, "Member 'BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow::Force' has a wrong offset!");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow, RotatorForSpin) == 0x000010, "Member 'BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow::RotatorForSpin' has a wrong offset!");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow, FuseSpeedScale) == 0x00001C, "Member 'BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow::FuseSpeedScale' has a wrong offset!");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow, AdditiveVector) == 0x000020, "Member 'BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow::AdditiveVector' has a wrong offset!");

// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_SetNavPainterEnabled
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled) == 0x000001, "Wrong alignment on BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled");
static_assert(sizeof(BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled) == 0x000001, "Wrong size on BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled");
static_assert(offsetof(BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled, Enabled) == 0x000000, "Member 'BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled::Enabled' has a wrong offset!");

}

