#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Weapon_FabricatorKill

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Challenge_Weapon_FabricatorKill.Challenge_Weapon_FabricatorKill_C
// 0x0010 (0x0270 - 0x0260)
class UChallenge_Weapon_FabricatorKill_C final : public UOakChallenge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class UObject*                                FabricatorDmgSource;                               // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Challenge_Weapon_FabricatorKill(int32 EntryPoint);
	void OnInitChallengeInstance(class UChallengesComponent* OwningChallenges, class AGbxCharacter* AssociatedCharacter);
	void CheckKillCondition(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Challenge_Weapon_FabricatorKill_C">();
	}
	static class UChallenge_Weapon_FabricatorKill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallenge_Weapon_FabricatorKill_C>();
	}
};
static_assert(alignof(UChallenge_Weapon_FabricatorKill_C) == 0x000008, "Wrong alignment on UChallenge_Weapon_FabricatorKill_C");
static_assert(sizeof(UChallenge_Weapon_FabricatorKill_C) == 0x000270, "Wrong size on UChallenge_Weapon_FabricatorKill_C");
static_assert(offsetof(UChallenge_Weapon_FabricatorKill_C, UberGraphFrame) == 0x000260, "Member 'UChallenge_Weapon_FabricatorKill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallenge_Weapon_FabricatorKill_C, FabricatorDmgSource) == 0x000268, "Member 'UChallenge_Weapon_FabricatorKill_C::FabricatorDmgSource' has a wrong offset!");

}

