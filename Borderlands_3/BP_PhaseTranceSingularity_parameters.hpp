#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhaseTranceSingularity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "WwiseAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_PhaseTranceSingularity.BP_PhaseTranceSingularity_C.ExecuteUbergraph_BP_PhaseTranceSingularity
// 0x01F0 (0x01F0 - 0x0000)
struct BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0008(0x0018)()
	float                                         CallFunc_GetSingularityDuration_Res;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSingularityInitializationInfo         K2Node_Copy_ReturnValue;                           // 0x0028(0x00C0)()
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetIgnoredActors_Res;                     // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_Event_bForced;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSingularityInitializationInfo         K2Node_SetFieldsInStruct_StructOut;                // 0x0108(0x00C0)()
	class USingularityComponent*                  CallFunc_CreateSingularity_ReturnValue;            // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSingularityDuration_Res1;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01E8(0x0008)(NoDestructor)
};
static_assert(alignof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity) == 0x000008, "Wrong alignment on BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity");
static_assert(sizeof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity) == 0x0001F0, "Wrong size on BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, EntryPoint) == 0x000000, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_PostAttachedEvent_ReturnValue) == 0x000008, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_GetSingularityDuration_Res) == 0x000020, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_GetSingularityDuration_Res' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, K2Node_Copy_ReturnValue) == 0x000028, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_FMin_ReturnValue) == 0x0000E8, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_GetIgnoredActors_Res) == 0x0000F0, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_GetIgnoredActors_Res' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, K2Node_Event_bForced) == 0x000100, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::K2Node_Event_bForced' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, K2Node_SetFieldsInStruct_StructOut) == 0x000108, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_CreateSingularity_ReturnValue) == 0x0001C8, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_CreateSingularity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_GetSingularityDuration_Res1) == 0x0001D4, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_GetSingularityDuration_Res1' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, K2Node_CreateDelegate_OutputDelegate) == 0x0001D8, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001E8, "Member 'BP_PhaseTranceSingularity_C_ExecuteUbergraph_BP_PhaseTranceSingularity::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_PhaseTranceSingularity.BP_PhaseTranceSingularity_C.OnShutdownRequested
// 0x0001 (0x0001 - 0x0000)
struct BP_PhaseTranceSingularity_C_OnShutdownRequested final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PhaseTranceSingularity_C_OnShutdownRequested) == 0x000001, "Wrong alignment on BP_PhaseTranceSingularity_C_OnShutdownRequested");
static_assert(sizeof(BP_PhaseTranceSingularity_C_OnShutdownRequested) == 0x000001, "Wrong size on BP_PhaseTranceSingularity_C_OnShutdownRequested");
static_assert(offsetof(BP_PhaseTranceSingularity_C_OnShutdownRequested, bForced) == 0x000000, "Member 'BP_PhaseTranceSingularity_C_OnShutdownRequested::bForced' has a wrong offset!");

// Function BP_PhaseTranceSingularity.BP_PhaseTranceSingularity_C.GetSingularityDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_PhaseTranceSingularity_C_GetSingularityDuration final
{
public:
	float                                         Res;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PhaseTranceSingularity_C_GetSingularityDuration) == 0x000004, "Wrong alignment on BP_PhaseTranceSingularity_C_GetSingularityDuration");
static_assert(sizeof(BP_PhaseTranceSingularity_C_GetSingularityDuration) == 0x000004, "Wrong size on BP_PhaseTranceSingularity_C_GetSingularityDuration");
static_assert(offsetof(BP_PhaseTranceSingularity_C_GetSingularityDuration, Res) == 0x000000, "Member 'BP_PhaseTranceSingularity_C_GetSingularityDuration::Res' has a wrong offset!");

// Function BP_PhaseTranceSingularity.BP_PhaseTranceSingularity_C.GetIgnoredActors
// 0x0028 (0x0028 - 0x0000)
struct BP_PhaseTranceSingularity_C_GetIgnoredActors final
{
public:
	TArray<class AActor*>                         Res;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_PhaseTranceSingularity_C_GetIgnoredActors) == 0x000008, "Wrong alignment on BP_PhaseTranceSingularity_C_GetIgnoredActors");
static_assert(sizeof(BP_PhaseTranceSingularity_C_GetIgnoredActors) == 0x000028, "Wrong size on BP_PhaseTranceSingularity_C_GetIgnoredActors");
static_assert(offsetof(BP_PhaseTranceSingularity_C_GetIgnoredActors, Res) == 0x000000, "Member 'BP_PhaseTranceSingularity_C_GetIgnoredActors::Res' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_GetIgnoredActors, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_PhaseTranceSingularity_C_GetIgnoredActors::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PhaseTranceSingularity_C_GetIgnoredActors, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_PhaseTranceSingularity_C_GetIgnoredActors::K2Node_MakeArray_Array' has a wrong offset!");

}

