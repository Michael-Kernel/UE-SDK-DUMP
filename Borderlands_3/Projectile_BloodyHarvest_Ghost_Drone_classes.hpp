#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_BloodyHarvest_Ghost_Drone

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_BloodyHarvest_Ghost_Drone.Projectile_BloodyHarvest_Ghost_Drone_C
// 0x00E0 (0x0810 - 0x0730)
class AProjectile_BloodyHarvest_Ghost_Drone_C : public AOakDroneProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0730(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       PawnSphere;                                        // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMinimapIconComponent*               OakMinimapIcon;                                    // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGameplayTagContainerComponent*         GameplayTagContainer;                              // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakTriggerComponent*                   OakTrigger;                                        // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_OakAttributeComponent_C*            BP_OakAttributeComponent;                          // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       Muzzle;                                            // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       SnapZoom;                                          // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceInstantSpawn;                                 // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HomingDelay;                                       // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReadyForLifetimeCleanup;                          // 0x0788(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle;                                       // 0x0790(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         FiringDelay;                                       // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          NewPlayerTarget;                                   // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasKilledByDamage;                                // 0x07A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SecondWindDamageCausers;                           // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UParticleSystem*                        StartSpawnFX_Drone;                                // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EndSpawnFX_Drone;                                  // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         ExplosionData_Drone;                               // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  HealthMultiplier_Drone;                            // 0x07D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Ghost_MaxRadius;                                   // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LoadedAmmo;                                        // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReadyForSpawnCleanup;                             // 0x07F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           RetargetingTimer;                                  // 0x0800(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         WeaponDamage;                                      // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Projectile_BloodyHarvest_Ghost_Drone(int32 EntryPoint);
	void ResetShooting();
	void CheckPerceivableByAI();
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_DroneProj_TED_TenGallon(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void BeginReloading();
	void BeginBadassChargeAndDie();
	void TargetOnDied_Unbind();
	void SkullTarget_OnDied(class AActor* DamageReceiver, class AActor* DamageCauser);
	void TargetOnDied_Bind();
	void OnExplode();
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_Projectile_BloodyHarvest_Ghost(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser);
	void OnHitWorld(const struct FHitResult& Hit);
	void OnHitDamagableObject(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void DoEndSpawnPresentation(bool ForceInstantSpawn_);
	void UserConstructionScript();
	void InitGhostBadass();
	void DoStartSpawnPresentation(bool ForceInstantSpawn_);
	void DoSpawnInPresentation();
	void SetDroneMovementTypeWithTargets(EOakDroneMovementMode NewMovementMode);
	void SpawnLootBadass();
	void TrySecondWindBadass();
	void IncrementStats(bool* Out);
	void FireWeapon();
	void StopFiring(bool NoReload);
	void StartFiring();
	void TryFindNextValidTarget(class AOakCharacter* Source_Player, class AOakCharacter** NewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_BloodyHarvest_Ghost_Drone_C">();
	}
	static class AProjectile_BloodyHarvest_Ghost_Drone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_BloodyHarvest_Ghost_Drone_C>();
	}
};
static_assert(alignof(AProjectile_BloodyHarvest_Ghost_Drone_C) == 0x000008, "Wrong alignment on AProjectile_BloodyHarvest_Ghost_Drone_C");
static_assert(sizeof(AProjectile_BloodyHarvest_Ghost_Drone_C) == 0x000810, "Wrong size on AProjectile_BloodyHarvest_Ghost_Drone_C");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, UberGraphFrame) == 0x000730, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, PawnSphere) == 0x000738, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::PawnSphere' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, OakMinimapIcon) == 0x000740, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::OakMinimapIcon' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, GameplayTagContainer) == 0x000748, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, OakTrigger) == 0x000750, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::OakTrigger' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, BP_OakAttributeComponent) == 0x000758, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::BP_OakAttributeComponent' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, WwiseAudio) == 0x000760, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, Muzzle) == 0x000768, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::Muzzle' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, SnapZoom) == 0x000770, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::SnapZoom' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, ParticleSystem) == 0x000778, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, ForceInstantSpawn) == 0x000780, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::ForceInstantSpawn' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, HomingDelay) == 0x000784, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::HomingDelay' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, bReadyForLifetimeCleanup) == 0x000788, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::bReadyForLifetimeCleanup' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, TimerHandle) == 0x000790, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, FiringDelay) == 0x000798, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::FiringDelay' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, NewPlayerTarget) == 0x0007A0, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::NewPlayerTarget' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, bWasKilledByDamage) == 0x0007A8, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::bWasKilledByDamage' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, SecondWindDamageCausers) == 0x0007B0, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::SecondWindDamageCausers' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, StartSpawnFX_Drone) == 0x0007C0, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::StartSpawnFX_Drone' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, EndSpawnFX_Drone) == 0x0007C8, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::EndSpawnFX_Drone' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, ExplosionData_Drone) == 0x0007D0, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::ExplosionData_Drone' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, HealthMultiplier_Drone) == 0x0007D8, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::HealthMultiplier_Drone' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, Ghost_MaxRadius) == 0x0007F0, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::Ghost_MaxRadius' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, LoadedAmmo) == 0x0007F4, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::LoadedAmmo' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, bReadyForSpawnCleanup) == 0x0007F8, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::bReadyForSpawnCleanup' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, RetargetingTimer) == 0x000800, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::RetargetingTimer' has a wrong offset!");
static_assert(offsetof(AProjectile_BloodyHarvest_Ghost_Drone_C, WeaponDamage) == 0x000808, "Member 'AProjectile_BloodyHarvest_Ghost_Drone_C::WeaponDamage' has a wrong offset!");

}

