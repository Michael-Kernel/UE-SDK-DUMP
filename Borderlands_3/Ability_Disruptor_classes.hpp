#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Disruptor

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Disruptor.Ability_Disruptor_C
// 0x0068 (0x0160 - 0x00F8)
class UAbility_Disruptor_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD; // 0x0100(0x0028)()
	struct FGameplayTagContainer                  ExclusionTags;                                     // 0x0128(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 Target;                                            // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectDuration;                                    // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          Player;                                            // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Disruptor(int32 EntryPoint);
	void WeaponFired(class AWeapon* EventWeapon);
	void OnDeactivated();
	void RemoveCDM();
	void OnCausedDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnActivated();
	void OnCausedDeath_Event(class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Disruptor_C">();
	}
	static class UAbility_Disruptor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Disruptor_C>();
	}
};
static_assert(alignof(UAbility_Disruptor_C) == 0x000008, "Wrong alignment on UAbility_Disruptor_C");
static_assert(sizeof(UAbility_Disruptor_C) == 0x000160, "Wrong size on UAbility_Disruptor_C");
static_assert(offsetof(UAbility_Disruptor_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Disruptor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Disruptor_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD) == 0x000100, "Member 'UAbility_Disruptor_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD' has a wrong offset!");
static_assert(offsetof(UAbility_Disruptor_C, ExclusionTags) == 0x000128, "Member 'UAbility_Disruptor_C::ExclusionTags' has a wrong offset!");
static_assert(offsetof(UAbility_Disruptor_C, Target) == 0x000148, "Member 'UAbility_Disruptor_C::Target' has a wrong offset!");
static_assert(offsetof(UAbility_Disruptor_C, EffectDuration) == 0x000150, "Member 'UAbility_Disruptor_C::EffectDuration' has a wrong offset!");
static_assert(offsetof(UAbility_Disruptor_C, Player) == 0x000158, "Member 'UAbility_Disruptor_C::Player' has a wrong offset!");

}

