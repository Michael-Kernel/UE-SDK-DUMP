#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Destructible

#include "Basic.hpp"

#include "BPI_Destructible_classes.hpp"
#include "BPI_Destructible_parameters.hpp"


namespace SDK
{

// Function BPI_Destructible.BPI_Destructible_C.BPI_SetFracturable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fracturable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Destructible_C::BPI_SetFracturable(bool Fracturable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Destructible_C", "BPI_SetFracturable");

	Params::BPI_Destructible_C_BPI_SetFracturable Parms{};

	Parms.Fracturable = Fracturable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Destructible.BPI_Destructible_C.BPI_SkipToDestroyedState
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Destructible_C::BPI_SkipToDestroyedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Destructible_C", "BPI_SkipToDestroyedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Destructible.BPI_Destructible_C.BPI_ScriptedTotalDestruction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Destructible_C::BPI_ScriptedTotalDestruction(float DamageRadius, float ImpulseStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Destructible_C", "BPI_ScriptedTotalDestruction");

	Params::BPI_Destructible_C_BPI_ScriptedTotalDestruction Parms{};

	Parms.DamageRadius = DamageRadius;
	Parms.ImpulseStrength = ImpulseStrength;

	UObject::ProcessEvent(Func, &Parms);
}

}

