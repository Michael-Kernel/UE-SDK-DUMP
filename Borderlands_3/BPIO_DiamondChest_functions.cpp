#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPIO_DiamondChest

#include "Basic.hpp"

#include "BPIO_DiamondChest_classes.hpp"
#include "BPIO_DiamondChest_parameters.hpp"


namespace SDK
{

// Function BPIO_DiamondChest.BPIO_DiamondChest_C.ExecuteUbergraph_BPIO_DiamondChest
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::ExecuteUbergraph_BPIO_DiamondChest(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "ExecuteUbergraph_BPIO_DiamondChest");

	Params::BPIO_DiamondChest_C_ExecuteUbergraph_BPIO_DiamondChest Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.SyncClientTimers
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ServerTimeRemaining                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::SyncClientTimers(float ServerTimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "SyncClientTimers");

	Params::BPIO_DiamondChest_C_SyncClientTimers Parms{};

	Parms.ServerTimeRemaining = ServerTimeRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.ActivateTimer
// (BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::ActivateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "ActivateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.UpdateTimerEvents
// (BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::UpdateTimerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "UpdateTimerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.DetachDiamond
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::DetachDiamond(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "DetachDiamond");

	Params::BPIO_DiamondChest_C_DetachDiamond Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.FlashProgressBarsEvent
// (BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::FlashProgressBarsEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "FlashProgressBarsEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_6
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_6(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_6");

	Params::BPIO_DiamondChest_C___UserState_ChestState_6 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__RoomTutorialOverlap_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPIO_DiamondChest_C::BndEvt__RoomTutorialOverlap_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__RoomTutorialOverlap_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest");

	Params::BPIO_DiamondChest_C_BndEvt__RoomTutorialOverlap_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__DiamondRoomReminder_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPIO_DiamondChest_C::BndEvt__DiamondRoomReminder_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__DiamondRoomReminder_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest");

	Params::BPIO_DiamondChest_C_BndEvt__DiamondRoomReminder_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__Loot_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey
// (BlueprintEvent)
// Parameters:
// class ADroppedInventoryItemPickup*      Pickup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           PickedUpBy                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::BndEvt__Loot_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey(class ADroppedInventoryItemPickup* Pickup, class AActor* PickedUpBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__Loot_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey");

	Params::BPIO_DiamondChest_C_BndEvt__Loot_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey Parms{};

	Parms.Pickup = Pickup;
	Parms.PickedUpBy = PickedUpBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__Loot_K2Node_ComponentBoundEvent_1_PickupAttachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey
// (BlueprintEvent)
// Parameters:
// class ADroppedInventoryItemPickup*      Pickup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::BndEvt__Loot_K2Node_ComponentBoundEvent_1_PickupAttachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey(class ADroppedInventoryItemPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__Loot_K2Node_ComponentBoundEvent_1_PickupAttachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey");

	Params::BPIO_DiamondChest_C_BndEvt__Loot_K2Node_ComponentBoundEvent_1_PickupAttachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey Parms{};

	Parms.Pickup = Pickup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_5
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_5(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_5");

	Params::BPIO_DiamondChest_C___UserState_ChestState_5 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_4
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_4(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_4");

	Params::BPIO_DiamondChest_C___UserState_ChestState_4 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPIO_DiamondChest_V2
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPIO_DiamondChest_V2(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPIO_DiamondChest_V2");

	Params::BPIO_DiamondChest_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPIO_DiamondChest_V2 Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__DeactivationOverlap_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::BndEvt__DeactivationOverlap_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__DeactivationOverlap_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2");

	Params::BPIO_DiamondChest_C_BndEvt__DeactivationOverlap_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_2
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_2(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_2");

	Params::BPIO_DiamondChest_C___UserState_ChestState_2 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_3
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_3(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_3");

	Params::BPIO_DiamondChest_C___UserState_ChestState_3 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_0
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_0(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_0");

	Params::BPIO_DiamondChest_C___UserState_ChestState_0 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.__UserState_ChestState_1
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::__UserState_ChestState_1(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "__UserState_ChestState_1");

	Params::BPIO_DiamondChest_C___UserState_ChestState_1 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.BndEvt__ProximityOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPIO_DiamondChest_C::BndEvt__ProximityOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "BndEvt__ProximityOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2");

	Params::BPIO_DiamondChest_C_BndEvt__ProximityOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.FlashProgressBars__UpdateFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::FlashProgressBars__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "FlashProgressBars__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.FlashProgressBars__FinishedFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::FlashProgressBars__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "FlashProgressBars__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.Lighting Vents Walls Closing__UpdateFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::Lighting_Vents_Walls_Closing__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "Lighting Vents Walls Closing__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.Lighting Vents Walls Closing__FinishedFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::Lighting_Vents_Walls_Closing__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "Lighting Vents Walls Closing__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.Lighting Spotlight__UpdateFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::Lighting_Spotlight__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "Lighting Spotlight__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.Lighting Spotlight__FinishedFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::Lighting_Spotlight__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "Lighting Spotlight__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.Lighting Vents__UpdateFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::Lighting_Vents__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "Lighting Vents__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.Lighting Vents__FinishedFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::Lighting_Vents__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "Lighting Vents__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.TimerTimeline__UpdateFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::TimerTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "TimerTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.TimerTimeline__FinishedFunc
// (BlueprintEvent)

void ABPIO_DiamondChest_C::TimerTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "TimerTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.ChangeWallState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_DiamondChestWallStates             NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::ChangeWallState(Enum_DiamondChestWallStates NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "ChangeWallState");

	Params::BPIO_DiamondChest_C_ChangeWallState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.DetachLootFromOpenWalls
// (Public, BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::DetachLootFromOpenWalls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "DetachLootFromOpenWalls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.DeactivateUsableFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::DeactivateUsableFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "DeactivateUsableFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.UpdateWallPresentation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RawTimerTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::UpdateWallPresentation(float RawTimerTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "UpdateWallPresentation");

	Params::BPIO_DiamondChest_C_UpdateWallPresentation Parms{};

	Parms.RawTimerTime = RawTimerTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.ToggleSteamJets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::ToggleSteamJets(bool Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "ToggleSteamJets");

	Params::BPIO_DiamondChest_C_ToggleSteamJets Parms{};

	Parms.Activate = Activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.SetLightIntensities
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class ALight*, float>              Lights                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::SetLightIntensities(const TMap<class ALight*, float>& Lights, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "SetLightIntensities");

	Params::BPIO_DiamondChest_C_SetLightIntensities Parms{};

	Parms.Lights = std::move(Lights);
	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.TurnOffVentLights
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::TurnOffVentLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "TurnOffVentLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.CheckWallStatesToRestart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllWallsClosed                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPIO_DiamondChest_C::CheckWallStatesToRestart(bool* AllWallsClosed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "CheckWallStatesToRestart");

	Params::BPIO_DiamondChest_C_CheckWallStatesToRestart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllWallsClosed != nullptr)
		*AllWallsClosed = Parms.AllWallsClosed;
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.CheckPlayerLvReq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayerMeetsLvReq                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AOakCharacter*                    OakCharacter                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::CheckPlayerLvReq(class AActor* Actor, bool* PlayerMeetsLvReq, class AOakCharacter** OakCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "CheckPlayerLvReq");

	Params::BPIO_DiamondChest_C_CheckPlayerLvReq Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerMeetsLvReq != nullptr)
		*PlayerMeetsLvReq = Parms.PlayerMeetsLvReq;

	if (OakCharacter != nullptr)
		*OakCharacter = Parms.OakCharacter;
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.GetWallTimers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UParticleSystemComponent*         ShieldWallTimer                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent*         GunWallTimerL                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent*         GunWallTimerR                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent*         GrenadeWallTimer                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::GetWallTimers(class UParticleSystemComponent** ShieldWallTimer, class UParticleSystemComponent** GunWallTimerL, class UParticleSystemComponent** GunWallTimerR, class UParticleSystemComponent** GrenadeWallTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "GetWallTimers");

	Params::BPIO_DiamondChest_C_GetWallTimers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShieldWallTimer != nullptr)
		*ShieldWallTimer = Parms.ShieldWallTimer;

	if (GunWallTimerL != nullptr)
		*GunWallTimerL = Parms.GunWallTimerL;

	if (GunWallTimerR != nullptr)
		*GunWallTimerR = Parms.GunWallTimerR;

	if (GrenadeWallTimer != nullptr)
		*GrenadeWallTimer = Parms.GrenadeWallTimer;
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.GetWallProgressBars
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceDynamic*         ShieldWallProgressBar                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         GunWallProgressBar                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         GrenadeWallProgressBar                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPIO_DiamondChest_C::GetWallProgressBars(class UMaterialInstanceDynamic** ShieldWallProgressBar, class UMaterialInstanceDynamic** GunWallProgressBar, class UMaterialInstanceDynamic** GrenadeWallProgressBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "GetWallProgressBars");

	Params::BPIO_DiamondChest_C_GetWallProgressBars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShieldWallProgressBar != nullptr)
		*ShieldWallProgressBar = Parms.ShieldWallProgressBar;

	if (GunWallProgressBar != nullptr)
		*GunWallProgressBar = Parms.GunWallProgressBar;

	if (GrenadeWallProgressBar != nullptr)
		*GrenadeWallProgressBar = Parms.GrenadeWallProgressBar;
}


// Function BPIO_DiamondChest.BPIO_DiamondChest_C.OnRep_MusicStates
// (BlueprintCallable, BlueprintEvent)

void ABPIO_DiamondChest_C::OnRep_MusicStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPIO_DiamondChest_C", "OnRep_MusicStates");

	UObject::ProcessEvent(Func, nullptr);
}

}

