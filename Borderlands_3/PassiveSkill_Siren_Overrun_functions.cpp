#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkill_Siren_Overrun

#include "Basic.hpp"

#include "PassiveSkill_Siren_Overrun_classes.hpp"
#include "PassiveSkill_Siren_Overrun_parameters.hpp"


namespace SDK
{

// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.ExecuteUbergraph_PassiveSkill_Siren_Overrun
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkill_Siren_Overrun_C::ExecuteUbergraph_PassiveSkill_Siren_Overrun(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "ExecuteUbergraph_PassiveSkill_Siren_Overrun");

	Params::PassiveSkill_Siren_Overrun_C_ExecuteUbergraph_PassiveSkill_Siren_Overrun Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.BlitzOnPerformMelee
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerMeleeData*                 MeleeData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           MeleeTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkill_Siren_Overrun_C::BlitzOnPerformMelee(class UPlayerMeleeData* MeleeData, bool bSuccess, class AActor* MeleeTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "BlitzOnPerformMelee");

	Params::PassiveSkill_Siren_Overrun_C_BlitzOnPerformMelee Parms{};

	Parms.MeleeData = MeleeData;
	Parms.bSuccess = bSuccess;
	Parms.MeleeTarget = MeleeTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UPassiveSkill_Siren_Overrun_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.BlitzCausedDeath
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamageComponent*                 Damaged                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDeathDetails              Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UPassiveSkill_Siren_Overrun_C::BlitzCausedDeath(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "BlitzCausedDeath");

	Params::PassiveSkill_Siren_Overrun_C_BlitzCausedDeath Parms{};

	Parms.Damaged = Damaged;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.CalculateAbilityState
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGbxAbilityState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EGbxAbilityState UPassiveSkill_Siren_Overrun_C::CalculateAbilityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "CalculateAbilityState");

	Params::PassiveSkill_Siren_Overrun_C_CalculateAbilityState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.ResetOverrunCooldown
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkill_Siren_Overrun_C::ResetOverrunCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "ResetOverrunCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.OnBlitzStarted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPassiveSkill_Siren_Overrun_C::OnBlitzStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "OnBlitzStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkill_Siren_Overrun.PassiveSkill_Siren_Overrun_C.GetFallbackBlitzLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Res                                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkill_Siren_Overrun_C::GetFallbackBlitzLocation(struct FVector* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkill_Siren_Overrun_C", "GetFallbackBlitzLocation");

	Params::PassiveSkill_Siren_Overrun_C_GetFallbackBlitzLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = std::move(Parms.Res);
}

}

