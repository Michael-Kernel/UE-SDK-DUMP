#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Weapon_TOR_HW_Plague

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Proj_Weapon_BaseProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_Weapon_TOR_HW_Plague.Proj_Weapon_TOR_HW_Plague_C
// 0x00F8 (0x0888 - 0x0790)
class AProj_Weapon_TOR_HW_Plague_C final : public AProj_Weapon_BaseProjectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Proj_Weapon_TOR_HW_Plague_C;        // 0x0790(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               TracerTrailFX;                                     // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        HomingQuery;                                       // 0x07A0(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class AActor*                                 HomingTarget;                                      // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LightProjectile;                                   // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         FireID;                                            // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_869[0x3];                                      // 0x0869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EndLocation;                                       // 0x086C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FiringInterval;                                    // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplatData*                             SplatData;                                         // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Proj_Weapon_TOR_HW_Plague(int32 EntryPoint);
	void OnExplode();
	void InitSwarm();
	void TargetFound();
	void FindHomingTarget(float Delay);
	struct FVector GenerateEndLocation();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_Weapon_TOR_HW_Plague_C">();
	}
	static class AProj_Weapon_TOR_HW_Plague_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_Weapon_TOR_HW_Plague_C>();
	}
};
static_assert(alignof(AProj_Weapon_TOR_HW_Plague_C) == 0x000008, "Wrong alignment on AProj_Weapon_TOR_HW_Plague_C");
static_assert(sizeof(AProj_Weapon_TOR_HW_Plague_C) == 0x000888, "Wrong size on AProj_Weapon_TOR_HW_Plague_C");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, UberGraphFrame_Proj_Weapon_TOR_HW_Plague_C) == 0x000790, "Member 'AProj_Weapon_TOR_HW_Plague_C::UberGraphFrame_Proj_Weapon_TOR_HW_Plague_C' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, TracerTrailFX) == 0x000798, "Member 'AProj_Weapon_TOR_HW_Plague_C::TracerTrailFX' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, HomingQuery) == 0x0007A0, "Member 'AProj_Weapon_TOR_HW_Plague_C::HomingQuery' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, HomingTarget) == 0x000858, "Member 'AProj_Weapon_TOR_HW_Plague_C::HomingTarget' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, LightProjectile) == 0x000860, "Member 'AProj_Weapon_TOR_HW_Plague_C::LightProjectile' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, FireID) == 0x000868, "Member 'AProj_Weapon_TOR_HW_Plague_C::FireID' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, EndLocation) == 0x00086C, "Member 'AProj_Weapon_TOR_HW_Plague_C::EndLocation' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, FiringInterval) == 0x000878, "Member 'AProj_Weapon_TOR_HW_Plague_C::FiringInterval' has a wrong offset!");
static_assert(offsetof(AProj_Weapon_TOR_HW_Plague_C, SplatData) == 0x000880, "Member 'AProj_Weapon_TOR_HW_Plague_C::SplatData' has a wrong offset!");

}

