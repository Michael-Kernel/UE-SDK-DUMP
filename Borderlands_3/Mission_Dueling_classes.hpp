#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_Dueling

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_OakMission_classes.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_Dueling.Mission_Dueling_C
// 0x0138 (0x0648 - 0x0510)
class UMission_Dueling_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_Dueling_C;                  // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UMissionObjectiveSet*                   SET_FollowDueler_ObjSetVar;                        // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_FollowDueler_ObjVar;                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_ShootingRange_ObjSetVar;                       // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_ShootingRange_ObjVar;                          // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_FindArmor_ObjSetVar;                           // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_FindArmor_ObjVar;                              // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_AttachArmor_ObjSetVar;                         // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_AttachArmor_ObjVar;                            // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_CallOutOpponent_ObjSetVar;                     // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_CallOutOpponent_ObjVar;                        // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_GivePrepTalk_ObjSetVar;                        // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_GivePrepTalk_ObjVar;                           // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_PickupBucket_ObjSetVar;                        // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_PickupBucket_ObjVar;                           // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_PlaceBucket_ObjSetVar;                         // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_PlaceBucket_ObjVar;                            // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_RingBell_ObjSetVar;                            // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_RingBell_ObjVar;                               // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_ReviveDueler_ObjSetVar;                        // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_ReviveDueler_ObjVar;                           // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJINVIS_Destructible01_ObjVar;                    // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJINVIS_Destructible02_ObjVar;                    // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJINVIS_Destructible03_ObjVar;                    // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJINVIS_Destructible04_ObjVar;                    // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJINVIS_Destructible05_ObjVar;                    // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_InvestigateFight_ObjSetVar;                    // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_InvestigateFight_ObjVar;                       // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_HelpUpNPC_ObjSetVar;                           // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_HelpUpNPC_ObjVar;                              // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_BreakTable_ObjVar;                             // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_TurnIn_ObjSetVar;                              // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_TurnIn_ObjVar;                                 // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_EncourageDueler_ObjSetVar;                     // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_EncourageDueler_ObjVar;                        // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_FindSign_ObjVar;                               // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_FindManholeCover_ObjVar;                       // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_FindDartboard_ObjVar;                          // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_INV_WilliamDead_ObjVar;                        // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mission_Dueling(int32 EntryPoint);
	void OBJ_INV_WilliamDead(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void PlayDuelersShitTalking(class UObject* Context);
	void HelpSlimUpNags(class UObject* Context);
	void TriggerDrunkWilliamLiveVO(class UObject* Context);
	void OBJ_FindDartboard(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OBJ_FindManholeCover(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OBJ_FindSign(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_EncourageDueler(class UObject* Context);
	void SET_EncourageDueler(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_EncourageDueler(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Advance_EncourageDueler(class UObject* Context);
	void Update_TurnIn(class UObject* Context);
	void Obj_TurnIn(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_TurnIn(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Update_HelpUpNPC(class UObject* Context);
	void Update_BreakTable(class UObject* Context);
	void OBJ_BreakTable(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_InvestigateFight(class UObject* Context);
	void OBJ_HelpUpNPC(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_HelpUpNPC(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_InvestigateFight(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_InvestigateFight(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Update_ReviveDueler(class UObject* Context);
	void AdvanceTo_ReviveDueler(class UObject* Context);
	void Update_RingBell(class UObject* Context);
	void Update_GivePrepTalk(class UObject* Context);
	void Update_CallOutOpponent(class UObject* Context);
	void Update_AttachArmor(class UObject* Context);
	void Update_PlaceBucket(class UObject* Context);
	void Update_Destructible05(class UObject* Context);
	void OBJINVIS_Destructible05(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_Destructible04(class UObject* Context);
	void OBJINVIS_Destructible04(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_Destructible03(class UObject* Context);
	void OBJINVIS_Destructible03(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_Destructible02(class UObject* Context);
	void OBJINVIS_Destructible02(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_Destructible01(class UObject* Context);
	void OBJINVIS_Destructible01(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_ShootingRange(class UObject* Context);
	void Update_FollowDueler(class UObject* Context);
	void OBJ_ReviveDueler(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_ReviveDueler(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_RingBell(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_RingBell(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_PlaceBucket(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_PlaceBucket(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_PickupBucket(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_PickupBucket(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_GivePrepTalk(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_GivePrepTalk(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_CallOutOpponent(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_CallOutOpponent(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_AttachArmor(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_AttachArmor(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_FindArmor(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_FindArmor(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_ShootingRange(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_ShootingRange(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_FollowDueler(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_FollowDueler(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OnDialogSequenceFinished_33();
	void OnDialogSequenceFinished_34();
	void OnDialogSequenceFinished_35();
	void OnDialogSequenceFinished_36();
	void OnDialogSequenceFinished_37();
	void OnDialogSequenceFinished_38();
	void OnDialogSequenceFinished_39();
	void OnDialogSequenceFinished_40();
	void OnDialogSequenceFinished_41();
	void OnDialogSequenceFinished_42();
	void OnDialogSequenceFinished_43();
	void OnDialogSequenceFinished_44();
	void OnDialogSequenceFinished_45();
	void OnDialogSequenceFinished_46();
	void OnDialogSequenceFinished_47();
	void OnDialogSequenceFinished_48();
	void OnDialogSequenceFinished_49();
	void OnDialogSequenceFinished_50();
	void OnDialogSequenceFinished_51();
	void OnDialogSequenceFinished_52();
	void OnDialogSequenceFinished_53();
	void OnDialogSequenceFinished_54();
	void OnDialogSequenceFinished_55();
	void OnDialogSequenceFinished_56();
	void OnDialogSequenceFinished_57();
	void OnDialogSequenceFinished_58();
	void OnDialogSequenceFinished_59();
	void OnDialogSequenceFinished_60();
	void OnDialogSequenceFinished_61();
	void OnDialogSequenceFinished_62();
	void OnDialogSequenceFinished_63();
	void OnDialogSequenceFinished_64();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_Dueling_C">();
	}
	static class UMission_Dueling_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_Dueling_C>();
	}
};
static_assert(alignof(UMission_Dueling_C) == 0x000008, "Wrong alignment on UMission_Dueling_C");
static_assert(sizeof(UMission_Dueling_C) == 0x000648, "Wrong size on UMission_Dueling_C");
static_assert(offsetof(UMission_Dueling_C, UberGraphFrame_Mission_Dueling_C) == 0x000510, "Member 'UMission_Dueling_C::UberGraphFrame_Mission_Dueling_C' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_FollowDueler_ObjSetVar) == 0x000518, "Member 'UMission_Dueling_C::SET_FollowDueler_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_FollowDueler_ObjVar) == 0x000520, "Member 'UMission_Dueling_C::OBJ_FollowDueler_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_ShootingRange_ObjSetVar) == 0x000528, "Member 'UMission_Dueling_C::SET_ShootingRange_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_ShootingRange_ObjVar) == 0x000530, "Member 'UMission_Dueling_C::OBJ_ShootingRange_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_FindArmor_ObjSetVar) == 0x000538, "Member 'UMission_Dueling_C::SET_FindArmor_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_FindArmor_ObjVar) == 0x000540, "Member 'UMission_Dueling_C::OBJ_FindArmor_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_AttachArmor_ObjSetVar) == 0x000548, "Member 'UMission_Dueling_C::SET_AttachArmor_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_AttachArmor_ObjVar) == 0x000550, "Member 'UMission_Dueling_C::OBJ_AttachArmor_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_CallOutOpponent_ObjSetVar) == 0x000558, "Member 'UMission_Dueling_C::SET_CallOutOpponent_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_CallOutOpponent_ObjVar) == 0x000560, "Member 'UMission_Dueling_C::OBJ_CallOutOpponent_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_GivePrepTalk_ObjSetVar) == 0x000568, "Member 'UMission_Dueling_C::SET_GivePrepTalk_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_GivePrepTalk_ObjVar) == 0x000570, "Member 'UMission_Dueling_C::OBJ_GivePrepTalk_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_PickupBucket_ObjSetVar) == 0x000578, "Member 'UMission_Dueling_C::SET_PickupBucket_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_PickupBucket_ObjVar) == 0x000580, "Member 'UMission_Dueling_C::OBJ_PickupBucket_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_PlaceBucket_ObjSetVar) == 0x000588, "Member 'UMission_Dueling_C::SET_PlaceBucket_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_PlaceBucket_ObjVar) == 0x000590, "Member 'UMission_Dueling_C::OBJ_PlaceBucket_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_RingBell_ObjSetVar) == 0x000598, "Member 'UMission_Dueling_C::SET_RingBell_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_RingBell_ObjVar) == 0x0005A0, "Member 'UMission_Dueling_C::OBJ_RingBell_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_ReviveDueler_ObjSetVar) == 0x0005A8, "Member 'UMission_Dueling_C::SET_ReviveDueler_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_ReviveDueler_ObjVar) == 0x0005B0, "Member 'UMission_Dueling_C::OBJ_ReviveDueler_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJINVIS_Destructible01_ObjVar) == 0x0005B8, "Member 'UMission_Dueling_C::OBJINVIS_Destructible01_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJINVIS_Destructible02_ObjVar) == 0x0005C0, "Member 'UMission_Dueling_C::OBJINVIS_Destructible02_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJINVIS_Destructible03_ObjVar) == 0x0005C8, "Member 'UMission_Dueling_C::OBJINVIS_Destructible03_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJINVIS_Destructible04_ObjVar) == 0x0005D0, "Member 'UMission_Dueling_C::OBJINVIS_Destructible04_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJINVIS_Destructible05_ObjVar) == 0x0005D8, "Member 'UMission_Dueling_C::OBJINVIS_Destructible05_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_InvestigateFight_ObjSetVar) == 0x0005E0, "Member 'UMission_Dueling_C::SET_InvestigateFight_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_InvestigateFight_ObjVar) == 0x0005E8, "Member 'UMission_Dueling_C::OBJ_InvestigateFight_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_HelpUpNPC_ObjSetVar) == 0x0005F0, "Member 'UMission_Dueling_C::SET_HelpUpNPC_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_HelpUpNPC_ObjVar) == 0x0005F8, "Member 'UMission_Dueling_C::OBJ_HelpUpNPC_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_BreakTable_ObjVar) == 0x000600, "Member 'UMission_Dueling_C::OBJ_BreakTable_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, Set_TurnIn_ObjSetVar) == 0x000608, "Member 'UMission_Dueling_C::Set_TurnIn_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, Obj_TurnIn_ObjVar) == 0x000610, "Member 'UMission_Dueling_C::Obj_TurnIn_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, SET_EncourageDueler_ObjSetVar) == 0x000618, "Member 'UMission_Dueling_C::SET_EncourageDueler_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_EncourageDueler_ObjVar) == 0x000620, "Member 'UMission_Dueling_C::OBJ_EncourageDueler_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_FindSign_ObjVar) == 0x000628, "Member 'UMission_Dueling_C::OBJ_FindSign_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_FindManholeCover_ObjVar) == 0x000630, "Member 'UMission_Dueling_C::OBJ_FindManholeCover_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_FindDartboard_ObjVar) == 0x000638, "Member 'UMission_Dueling_C::OBJ_FindDartboard_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_Dueling_C, OBJ_INV_WilliamDead_ObjVar) == 0x000640, "Member 'UMission_Dueling_C::OBJ_INV_WilliamDead_ObjVar' has a wrong offset!");

}

