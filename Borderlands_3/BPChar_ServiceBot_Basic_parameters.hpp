#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_ServiceBot_Basic

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPChar_ServiceBot_Basic.BPChar_ServiceBot_Basic_C.ExecuteUbergraph_BPChar_ServiceBot_Basic
// 0x00F8 (0x00F8 - 0x0000)
struct BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0010(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FDamageReactionEventSummary            K2Node_Event_DamageEventSummary1;                  // 0x0038(0x0060)(NoDestructor, ContainsInstancedReference)
	struct FDamageReactionEventSummary            K2Node_Event_DamageEventSummary;                   // 0x0098(0x0060)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic) == 0x000008, "Wrong alignment on BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic");
static_assert(sizeof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic) == 0x0000F8, "Wrong size on BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic, EntryPoint) == 0x000000, "Member 'BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic, CallFunc_PostEventAtLocation_ReturnValue) == 0x000010, "Member 'BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic, K2Node_Event_DamageEventSummary1) == 0x000038, "Member 'BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic::K2Node_Event_DamageEventSummary1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic, K2Node_Event_DamageEventSummary) == 0x000098, "Member 'BPChar_ServiceBot_Basic_C_ExecuteUbergraph_BPChar_ServiceBot_Basic::K2Node_Event_DamageEventSummary' has a wrong offset!");

// Function BPChar_ServiceBot_Basic.BPChar_ServiceBot_Basic_C.LeftArmDestroyed
// 0x0060 (0x0060 - 0x0000)
struct BPChar_ServiceBot_Basic_C_LeftArmDestroyed final
{
public:
	struct FDamageReactionEventSummary            DamageEventSummary;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_ServiceBot_Basic_C_LeftArmDestroyed) == 0x000008, "Wrong alignment on BPChar_ServiceBot_Basic_C_LeftArmDestroyed");
static_assert(sizeof(BPChar_ServiceBot_Basic_C_LeftArmDestroyed) == 0x000060, "Wrong size on BPChar_ServiceBot_Basic_C_LeftArmDestroyed");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_LeftArmDestroyed, DamageEventSummary) == 0x000000, "Member 'BPChar_ServiceBot_Basic_C_LeftArmDestroyed::DamageEventSummary' has a wrong offset!");

// Function BPChar_ServiceBot_Basic.BPChar_ServiceBot_Basic_C.RightArmDestroyed
// 0x0060 (0x0060 - 0x0000)
struct BPChar_ServiceBot_Basic_C_RightArmDestroyed final
{
public:
	struct FDamageReactionEventSummary            DamageEventSummary;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_ServiceBot_Basic_C_RightArmDestroyed) == 0x000008, "Wrong alignment on BPChar_ServiceBot_Basic_C_RightArmDestroyed");
static_assert(sizeof(BPChar_ServiceBot_Basic_C_RightArmDestroyed) == 0x000060, "Wrong size on BPChar_ServiceBot_Basic_C_RightArmDestroyed");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_RightArmDestroyed, DamageEventSummary) == 0x000000, "Member 'BPChar_ServiceBot_Basic_C_RightArmDestroyed::DamageEventSummary' has a wrong offset!");

// Function BPChar_ServiceBot_Basic.BPChar_ServiceBot_Basic_C.QueryDominantPieces
// 0x0006 (0x0006 - 0x0000)
struct BPChar_ServiceBot_Basic_C_QueryDominantPieces final
{
public:
	bool                                          RightArmDominant_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftArmDominant_0;                                 // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HeadDominant_0;                                    // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueryDominantPieces_RightArmDominant;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueryDominantPieces_LeftArmDominant;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueryDominantPieces_HeadDominant;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_Basic_C_QueryDominantPieces) == 0x000001, "Wrong alignment on BPChar_ServiceBot_Basic_C_QueryDominantPieces");
static_assert(sizeof(BPChar_ServiceBot_Basic_C_QueryDominantPieces) == 0x000006, "Wrong size on BPChar_ServiceBot_Basic_C_QueryDominantPieces");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_QueryDominantPieces, RightArmDominant_0) == 0x000000, "Member 'BPChar_ServiceBot_Basic_C_QueryDominantPieces::RightArmDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_QueryDominantPieces, LeftArmDominant_0) == 0x000001, "Member 'BPChar_ServiceBot_Basic_C_QueryDominantPieces::LeftArmDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_QueryDominantPieces, HeadDominant_0) == 0x000002, "Member 'BPChar_ServiceBot_Basic_C_QueryDominantPieces::HeadDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_QueryDominantPieces, CallFunc_QueryDominantPieces_RightArmDominant) == 0x000003, "Member 'BPChar_ServiceBot_Basic_C_QueryDominantPieces::CallFunc_QueryDominantPieces_RightArmDominant' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_QueryDominantPieces, CallFunc_QueryDominantPieces_LeftArmDominant) == 0x000004, "Member 'BPChar_ServiceBot_Basic_C_QueryDominantPieces::CallFunc_QueryDominantPieces_LeftArmDominant' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_QueryDominantPieces, CallFunc_QueryDominantPieces_HeadDominant) == 0x000005, "Member 'BPChar_ServiceBot_Basic_C_QueryDominantPieces::CallFunc_QueryDominantPieces_HeadDominant' has a wrong offset!");

// Function BPChar_ServiceBot_Basic.BPChar_ServiceBot_Basic_C.IsLootWeaponEquipped
// 0x0002 (0x0002 - 0x0000)
struct BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped final
{
public:
	bool                                          EquippedRight;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EquippedLeft;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped) == 0x000001, "Wrong alignment on BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped");
static_assert(sizeof(BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped) == 0x000002, "Wrong size on BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped, EquippedRight) == 0x000000, "Member 'BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped::EquippedRight' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped, EquippedLeft) == 0x000001, "Member 'BPChar_ServiceBot_Basic_C_IsLootWeaponEquipped::EquippedLeft' has a wrong offset!");

}

