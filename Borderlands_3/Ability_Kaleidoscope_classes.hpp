#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Kaleidoscope

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Kaleidoscope.Ability_Kaleidoscope_C
// 0x0070 (0x0168 - 0x00F8)
class UAbility_Kaleidoscope_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Omniloader; // 0x0100(0x0028)()
	class UOakDamageCauserComponent*              OakDamageCauser;                                   // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityResourceController_WeaponShotModifier RsrcCntrlr_OakAbilityResourceController_WeaponShotModifier_Ability_PrivateEye; // 0x0130(0x0028)()
	class AOakCharacter*                          Oak_Character;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponShotModifier*                    ActiveShotMod;                                     // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Kaleidoscope(int32 EntryPoint);
	void NotifySwitchedMode_Event();
	void NotifyZoomedOut_Event();
	void NotifyZoomedIn_Event(uint8 Level);
	void OnPaused();
	void OnUnregistered();
	void OnDeactivated();
	void OnActivated();
	void RefillOtherWeapon(class AOakCharacter* Character, class UInventorySlotData* InventorySlot, class AWeapon* EquippedWeapon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Kaleidoscope_C">();
	}
	static class UAbility_Kaleidoscope_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Kaleidoscope_C>();
	}
};
static_assert(alignof(UAbility_Kaleidoscope_C) == 0x000008, "Wrong alignment on UAbility_Kaleidoscope_C");
static_assert(sizeof(UAbility_Kaleidoscope_C) == 0x000168, "Wrong size on UAbility_Kaleidoscope_C");
static_assert(offsetof(UAbility_Kaleidoscope_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Kaleidoscope_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Kaleidoscope_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Omniloader) == 0x000100, "Member 'UAbility_Kaleidoscope_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Omniloader' has a wrong offset!");
static_assert(offsetof(UAbility_Kaleidoscope_C, OakDamageCauser) == 0x000128, "Member 'UAbility_Kaleidoscope_C::OakDamageCauser' has a wrong offset!");
static_assert(offsetof(UAbility_Kaleidoscope_C, RsrcCntrlr_OakAbilityResourceController_WeaponShotModifier_Ability_PrivateEye) == 0x000130, "Member 'UAbility_Kaleidoscope_C::RsrcCntrlr_OakAbilityResourceController_WeaponShotModifier_Ability_PrivateEye' has a wrong offset!");
static_assert(offsetof(UAbility_Kaleidoscope_C, Oak_Character) == 0x000158, "Member 'UAbility_Kaleidoscope_C::Oak_Character' has a wrong offset!");
static_assert(offsetof(UAbility_Kaleidoscope_C, ActiveShotMod) == 0x000160, "Member 'UAbility_Kaleidoscope_C::ActiveShotMod' has a wrong offset!");

}

