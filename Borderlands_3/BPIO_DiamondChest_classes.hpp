#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPIO_DiamondChest

#include "Basic.hpp"

#include "Enum_DiamondChestWallStates_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_DChest_MusicStates_structs.hpp"
#include "Enum_DiamondChestStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPIO_DiamondChest.BPIO_DiamondChest_C
// 0x02E8 (0x0838 - 0x0550)
class ABPIO_DiamondChest_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UOakDialogComponent*                    OakDialog;                                         // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   DefaultAudioComponent;                             // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Wwise_Component_Steam_Shutdown;                    // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Wwise_Component_Sparkles;                          // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RoomTutorialOverlap;                               // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DiamondCrate_LegendaryAttract;                  // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DiamondCrate_Room_CeilingRays;                  // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DiamondCrate_Room_FloorVapor_DiamondDust;       // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DiamondCrate_FloorRays;                         // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DiamondCrate_Room_LaserShapes;                  // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DiamondRoomReminder;                               // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UseOverlap;                                        // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUsableComponent*                       Usable;                                            // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Usable_FX_Deactivate;                              // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Usable_FX_StartAndLoop;                            // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DeactivationEndOverlap;                            // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ActivationOverlap;                                 // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavMeshPainterComponent*            GbxNavMeshPainter;                                 // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URegionBalanceStateComponent*           RegionBalanceState;                                // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakLootableComponent*                  Loot;                                              // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavBoxComponent*                    GbxNavBox;                                         // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Chest;                                             // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FlashProgressBars_Alpha_081D188846EEA36AE4500F948346672B; // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FlashProgressBars__Direction_081D188846EEA36AE4500F948346672B; // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FlashProgressBars;                                 // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lighting_Vents_Walls_Closing_Alpha_6DA16F33485DA50A82AE34B697A39F24; // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Lighting_Vents_Walls_Closing__Direction_6DA16F33485DA50A82AE34B697A39F24; // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Lighting_Vents_Walls_Closing;                      // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lighting_Spotlight_Alpha_73560ED14B481877A56AD684FB6DBF98; // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Lighting_Spotlight__Direction_73560ED14B481877A56AD684FB6DBF98; // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62D[0x3];                                      // 0x062D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Lighting_Spotlight;                                // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lighting_Vents_Alpha_B33B07C745AEB83DF10F559219CF7701; // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Lighting_Vents__Direction_B33B07C745AEB83DF10F559219CF7701; // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Lighting_Vents;                                    // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimerTimeline_Percent_40A2835E45FA79317DB4808FDF6BD4F4; // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TimerTimeline__Direction_40A2835E45FA79317DB4808FDF6BD4F4; // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D[0x3];                                      // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TimerTimeline;                                     // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim_Closing;                                      // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim_Closed_Idle;                                  // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim_Opening;                                      // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            DiamondKey_UserCont;                               // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          DiamondKey_UserChar;                               // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OverlappingChars;                                  // 0x0680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	Enum_DiamondChestStates                       ChestState;                                        // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnChestLootDelay;                               // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChestLootDetachDelay;                              // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPIO_DiamondChestWall_C*               ShieldWall;                                        // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPIO_DiamondChestWall_C*               GunWall;                                           // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPIO_DiamondChestWall_C*               GrenadeWall;                                       // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WallLootDetachDelay;                               // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_Open_Idle;                                    // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeRemaining;                                     // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimerDuration;                                     // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class ALight*, float>                    Lighting_Vents_0;                                  // 0x06D0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	float                                         VentsToggleDuration;                               // 0x0720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ALight*, float>                    Lighting_Spotlight_0;                              // 0x0728(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	float                                         SpotlightToggleDuration;                           // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AEmitter*>                       SteamJets;                                         // 0x0780(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TMap<class APostProcessVolume*, float>        PostProcessRef;                                    // 0x0790(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	bool                                          EnableKeyReminderTutorialMessage;                  // 0x07E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x3];                                      // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinPlayerLevReq;                                   // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakPlayerController*>           CharsWhoSawTutMessage;                             // 0x07E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         TimeRemainingBeforeWarning;                        // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_DChest_MusicStates                       MusicState;                                        // 0x07FC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FXTimeToDisplay;                                   // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_ChestState_NewEnumerator1;                    // 0x0808(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_ChestState_NewEnumerator10;                   // 0x0810(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_ChestState_NewEnumerator9;                    // 0x0818(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_ChestState_NewEnumerator12;                   // 0x0820(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_ChestState_NewEnumerator13;                   // 0x0828(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_ChestState_NewEnumerator14;                   // 0x0830(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPIO_DiamondChest(int32 EntryPoint);
	void SyncClientTimers(float ServerTimeRemaining);
	void ActivateTimer();
	void UpdateTimerEvents();
	void DetachDiamond(float Delay);
	void FlashProgressBarsEvent();
	void __UserState_ChestState_6(bool bFromLoad);
	void BndEvt__RoomTutorialOverlap_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__DiamondRoomReminder_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Loot_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey(class ADroppedInventoryItemPickup* Pickup, class AActor* PickedUpBy);
	void BndEvt__Loot_K2Node_ComponentBoundEvent_1_PickupAttachedDelegate__DelegateSignature_BPIO_Lootable_Global_GoldenKey(class ADroppedInventoryItemPickup* Pickup);
	void __UserState_ChestState_5(bool bFromLoad);
	void __UserState_ChestState_4(bool bFromLoad);
	void BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPIO_DiamondChest_V2(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void BndEvt__DeactivationOverlap_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void __UserState_ChestState_2(bool bFromLoad);
	void __UserState_ChestState_3(bool bFromLoad);
	void __UserState_ChestState_0(bool bFromLoad);
	void __UserState_ChestState_1(bool bFromLoad);
	void BndEvt__ProximityOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPIO_DiamondChest_V2(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void FlashProgressBars__UpdateFunc();
	void FlashProgressBars__FinishedFunc();
	void Lighting_Vents_Walls_Closing__UpdateFunc();
	void Lighting_Vents_Walls_Closing__FinishedFunc();
	void Lighting_Spotlight__UpdateFunc();
	void Lighting_Spotlight__FinishedFunc();
	void Lighting_Vents__UpdateFunc();
	void Lighting_Vents__FinishedFunc();
	void TimerTimeline__UpdateFunc();
	void TimerTimeline__FinishedFunc();
	void UserConstructionScript();
	void ChangeWallState(Enum_DiamondChestWallStates NewState);
	void DetachLootFromOpenWalls();
	void DeactivateUsableFX();
	void UpdateWallPresentation(float RawTimerTime);
	void ToggleSteamJets(bool Activate);
	void SetLightIntensities(const TMap<class ALight*, float>& Lights, float Alpha);
	void TurnOffVentLights();
	void CheckWallStatesToRestart(bool* AllWallsClosed);
	void CheckPlayerLvReq(class AActor* Actor, bool* PlayerMeetsLvReq, class AOakCharacter** OakCharacter);
	void GetWallTimers(class UParticleSystemComponent** ShieldWallTimer, class UParticleSystemComponent** GunWallTimerL, class UParticleSystemComponent** GunWallTimerR, class UParticleSystemComponent** GrenadeWallTimer);
	void GetWallProgressBars(class UMaterialInstanceDynamic** ShieldWallProgressBar, class UMaterialInstanceDynamic** GunWallProgressBar, class UMaterialInstanceDynamic** GrenadeWallProgressBar);
	void OnRep_MusicStates();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPIO_DiamondChest_C">();
	}
	static class ABPIO_DiamondChest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPIO_DiamondChest_C>();
	}
};
static_assert(alignof(ABPIO_DiamondChest_C) == 0x000008, "Wrong alignment on ABPIO_DiamondChest_C");
static_assert(sizeof(ABPIO_DiamondChest_C) == 0x000838, "Wrong size on ABPIO_DiamondChest_C");
static_assert(offsetof(ABPIO_DiamondChest_C, UberGraphFrame) == 0x000550, "Member 'ABPIO_DiamondChest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, OakDialog) == 0x000558, "Member 'ABPIO_DiamondChest_C::OakDialog' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, DefaultAudioComponent) == 0x000560, "Member 'ABPIO_DiamondChest_C::DefaultAudioComponent' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Wwise_Component_Steam_Shutdown) == 0x000568, "Member 'ABPIO_DiamondChest_C::Wwise_Component_Steam_Shutdown' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Wwise_Component_Sparkles) == 0x000570, "Member 'ABPIO_DiamondChest_C::Wwise_Component_Sparkles' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, RoomTutorialOverlap) == 0x000578, "Member 'ABPIO_DiamondChest_C::RoomTutorialOverlap' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, PS_DiamondCrate_LegendaryAttract) == 0x000580, "Member 'ABPIO_DiamondChest_C::PS_DiamondCrate_LegendaryAttract' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, PS_DiamondCrate_Room_CeilingRays) == 0x000588, "Member 'ABPIO_DiamondChest_C::PS_DiamondCrate_Room_CeilingRays' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, PS_DiamondCrate_Room_FloorVapor_DiamondDust) == 0x000590, "Member 'ABPIO_DiamondChest_C::PS_DiamondCrate_Room_FloorVapor_DiamondDust' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, PS_DiamondCrate_FloorRays) == 0x000598, "Member 'ABPIO_DiamondChest_C::PS_DiamondCrate_FloorRays' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, PS_DiamondCrate_Room_LaserShapes) == 0x0005A0, "Member 'ABPIO_DiamondChest_C::PS_DiamondCrate_Room_LaserShapes' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, DiamondRoomReminder) == 0x0005A8, "Member 'ABPIO_DiamondChest_C::DiamondRoomReminder' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, UseOverlap) == 0x0005B0, "Member 'ABPIO_DiamondChest_C::UseOverlap' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Usable) == 0x0005B8, "Member 'ABPIO_DiamondChest_C::Usable' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Usable_FX_Deactivate) == 0x0005C0, "Member 'ABPIO_DiamondChest_C::Usable_FX_Deactivate' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Usable_FX_StartAndLoop) == 0x0005C8, "Member 'ABPIO_DiamondChest_C::Usable_FX_StartAndLoop' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, DeactivationEndOverlap) == 0x0005D0, "Member 'ABPIO_DiamondChest_C::DeactivationEndOverlap' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, ActivationOverlap) == 0x0005D8, "Member 'ABPIO_DiamondChest_C::ActivationOverlap' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, GbxNavMeshPainter) == 0x0005E0, "Member 'ABPIO_DiamondChest_C::GbxNavMeshPainter' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, RegionBalanceState) == 0x0005E8, "Member 'ABPIO_DiamondChest_C::RegionBalanceState' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Loot) == 0x0005F0, "Member 'ABPIO_DiamondChest_C::Loot' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, GbxNavBox) == 0x0005F8, "Member 'ABPIO_DiamondChest_C::GbxNavBox' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Chest) == 0x000600, "Member 'ABPIO_DiamondChest_C::Chest' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, FlashProgressBars_Alpha_081D188846EEA36AE4500F948346672B) == 0x000608, "Member 'ABPIO_DiamondChest_C::FlashProgressBars_Alpha_081D188846EEA36AE4500F948346672B' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, FlashProgressBars__Direction_081D188846EEA36AE4500F948346672B) == 0x00060C, "Member 'ABPIO_DiamondChest_C::FlashProgressBars__Direction_081D188846EEA36AE4500F948346672B' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, FlashProgressBars) == 0x000610, "Member 'ABPIO_DiamondChest_C::FlashProgressBars' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents_Walls_Closing_Alpha_6DA16F33485DA50A82AE34B697A39F24) == 0x000618, "Member 'ABPIO_DiamondChest_C::Lighting_Vents_Walls_Closing_Alpha_6DA16F33485DA50A82AE34B697A39F24' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents_Walls_Closing__Direction_6DA16F33485DA50A82AE34B697A39F24) == 0x00061C, "Member 'ABPIO_DiamondChest_C::Lighting_Vents_Walls_Closing__Direction_6DA16F33485DA50A82AE34B697A39F24' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents_Walls_Closing) == 0x000620, "Member 'ABPIO_DiamondChest_C::Lighting_Vents_Walls_Closing' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Spotlight_Alpha_73560ED14B481877A56AD684FB6DBF98) == 0x000628, "Member 'ABPIO_DiamondChest_C::Lighting_Spotlight_Alpha_73560ED14B481877A56AD684FB6DBF98' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Spotlight__Direction_73560ED14B481877A56AD684FB6DBF98) == 0x00062C, "Member 'ABPIO_DiamondChest_C::Lighting_Spotlight__Direction_73560ED14B481877A56AD684FB6DBF98' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Spotlight) == 0x000630, "Member 'ABPIO_DiamondChest_C::Lighting_Spotlight' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents_Alpha_B33B07C745AEB83DF10F559219CF7701) == 0x000638, "Member 'ABPIO_DiamondChest_C::Lighting_Vents_Alpha_B33B07C745AEB83DF10F559219CF7701' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents__Direction_B33B07C745AEB83DF10F559219CF7701) == 0x00063C, "Member 'ABPIO_DiamondChest_C::Lighting_Vents__Direction_B33B07C745AEB83DF10F559219CF7701' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents) == 0x000640, "Member 'ABPIO_DiamondChest_C::Lighting_Vents' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, TimerTimeline_Percent_40A2835E45FA79317DB4808FDF6BD4F4) == 0x000648, "Member 'ABPIO_DiamondChest_C::TimerTimeline_Percent_40A2835E45FA79317DB4808FDF6BD4F4' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, TimerTimeline__Direction_40A2835E45FA79317DB4808FDF6BD4F4) == 0x00064C, "Member 'ABPIO_DiamondChest_C::TimerTimeline__Direction_40A2835E45FA79317DB4808FDF6BD4F4' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, TimerTimeline) == 0x000650, "Member 'ABPIO_DiamondChest_C::TimerTimeline' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Anim_Closing) == 0x000658, "Member 'ABPIO_DiamondChest_C::Anim_Closing' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Anim_Closed_Idle) == 0x000660, "Member 'ABPIO_DiamondChest_C::Anim_Closed_Idle' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Anim_Opening) == 0x000668, "Member 'ABPIO_DiamondChest_C::Anim_Opening' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, DiamondKey_UserCont) == 0x000670, "Member 'ABPIO_DiamondChest_C::DiamondKey_UserCont' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, DiamondKey_UserChar) == 0x000678, "Member 'ABPIO_DiamondChest_C::DiamondKey_UserChar' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, OverlappingChars) == 0x000680, "Member 'ABPIO_DiamondChest_C::OverlappingChars' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, ChestState) == 0x000690, "Member 'ABPIO_DiamondChest_C::ChestState' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, SpawnChestLootDelay) == 0x000694, "Member 'ABPIO_DiamondChest_C::SpawnChestLootDelay' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, ChestLootDetachDelay) == 0x000698, "Member 'ABPIO_DiamondChest_C::ChestLootDetachDelay' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, ShieldWall) == 0x0006A0, "Member 'ABPIO_DiamondChest_C::ShieldWall' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, GunWall) == 0x0006A8, "Member 'ABPIO_DiamondChest_C::GunWall' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, GrenadeWall) == 0x0006B0, "Member 'ABPIO_DiamondChest_C::GrenadeWall' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, WallLootDetachDelay) == 0x0006B8, "Member 'ABPIO_DiamondChest_C::WallLootDetachDelay' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Anim_Open_Idle) == 0x0006C0, "Member 'ABPIO_DiamondChest_C::Anim_Open_Idle' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, TimeRemaining) == 0x0006C8, "Member 'ABPIO_DiamondChest_C::TimeRemaining' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, TimerDuration) == 0x0006CC, "Member 'ABPIO_DiamondChest_C::TimerDuration' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Vents_0) == 0x0006D0, "Member 'ABPIO_DiamondChest_C::Lighting_Vents_0' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, VentsToggleDuration) == 0x000720, "Member 'ABPIO_DiamondChest_C::VentsToggleDuration' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Lighting_Spotlight_0) == 0x000728, "Member 'ABPIO_DiamondChest_C::Lighting_Spotlight_0' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, SpotlightToggleDuration) == 0x000778, "Member 'ABPIO_DiamondChest_C::SpotlightToggleDuration' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, SteamJets) == 0x000780, "Member 'ABPIO_DiamondChest_C::SteamJets' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, PostProcessRef) == 0x000790, "Member 'ABPIO_DiamondChest_C::PostProcessRef' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, EnableKeyReminderTutorialMessage) == 0x0007E0, "Member 'ABPIO_DiamondChest_C::EnableKeyReminderTutorialMessage' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, MinPlayerLevReq) == 0x0007E4, "Member 'ABPIO_DiamondChest_C::MinPlayerLevReq' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, CharsWhoSawTutMessage) == 0x0007E8, "Member 'ABPIO_DiamondChest_C::CharsWhoSawTutMessage' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, TimeRemainingBeforeWarning) == 0x0007F8, "Member 'ABPIO_DiamondChest_C::TimeRemainingBeforeWarning' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, MusicState) == 0x0007FC, "Member 'ABPIO_DiamondChest_C::MusicState' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, FXTimeToDisplay) == 0x000800, "Member 'ABPIO_DiamondChest_C::FXTimeToDisplay' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Cond_ChestState_NewEnumerator1) == 0x000808, "Member 'ABPIO_DiamondChest_C::Cond_ChestState_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Cond_ChestState_NewEnumerator10) == 0x000810, "Member 'ABPIO_DiamondChest_C::Cond_ChestState_NewEnumerator10' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Cond_ChestState_NewEnumerator9) == 0x000818, "Member 'ABPIO_DiamondChest_C::Cond_ChestState_NewEnumerator9' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Cond_ChestState_NewEnumerator12) == 0x000820, "Member 'ABPIO_DiamondChest_C::Cond_ChestState_NewEnumerator12' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Cond_ChestState_NewEnumerator13) == 0x000828, "Member 'ABPIO_DiamondChest_C::Cond_ChestState_NewEnumerator13' has a wrong offset!");
static_assert(offsetof(ABPIO_DiamondChest_C, Cond_ChestState_NewEnumerator14) == 0x000830, "Member 'ABPIO_DiamondChest_C::Cond_ChestState_NewEnumerator14' has a wrong offset!");

}

