#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFistOverMatterActor

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.ExecuteUbergraph_BPFistOverMatterActor
// 0x0468 (0x0468 - 0x0000)
struct BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     Temp_byte_Variable1;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable5;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable6;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable7;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable8;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable9;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Result1;                        // 0x0060(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             Temp_struct_Variable;                              // 0x00F0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_CustomEvent_Result;                         // 0x0180(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x021C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0228(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0234(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0240(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0284(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)> K2Node_CreateDelegate_OutputDelegate;              // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x02B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x02C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFindGroundVectorLocations_Start;       // 0x02D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFindGroundVectorLocations_ENd;         // 0x02DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x02F0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FHitResult& Result)>    K2Node_CreateDelegate_OutputDelegate2;             // 0x0300(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0320(0x0008)(NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue1;         // 0x0328(0x0008)(NoDestructor)
	TDelegate<void(struct FHitResult& Result)>    K2Node_CreateDelegate_OutputDelegate4;             // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTraceAsyncRequest                  K2Node_MakeStruct_GbxTraceAsyncRequest;            // 0x0348(0x00B0)(ContainsInstancedReference)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x03F8(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue1;         // 0x0410(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue2;         // 0x0428(0x0018)()
	EPhaseTranceElementalType                     CallFunc_GetPhaseTranceElementType_ReturnValue;    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_GetPhaseTranceElementType_ReturnValue1;   // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select1_Default;                            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue1;      // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor) == 0x000008, "Wrong alignment on BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor");
static_assert(sizeof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor) == 0x000468, "Wrong size on BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, EntryPoint) == 0x000000, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_byte_Variable) == 0x000004, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable) == 0x000008, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable1) == 0x000010, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable2) == 0x000018, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable3) == 0x000020, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable4) == 0x000028, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_byte_Variable1) == 0x000030, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable5) == 0x000038, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable6) == 0x000040, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable7) == 0x000048, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable8) == 0x000050, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_object_Variable9) == 0x000058, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_object_Variable9' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CustomEvent_Result1) == 0x000060, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, Temp_struct_Variable) == 0x0000F0, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CustomEvent_Result) == 0x000180, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_bBlockingHit) == 0x000210, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x000211, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_Time) == 0x000214, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_Distance) == 0x000218, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_Location) == 0x00021C, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_ImpactPoint) == 0x000228, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_Normal) == 0x000234, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_ImpactNormal) == 0x000240, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_PhysMat) == 0x000250, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_HitActor) == 0x000258, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_HitComponent) == 0x000260, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_HitBoneName) == 0x000268, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_HitItem) == 0x000270, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_FaceIndex) == 0x000274, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_BreakHitResult_TraceEnd) == 0x000284, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_IsValid_ReturnValue) == 0x000290, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CreateDelegate_OutputDelegate) == 0x000298, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CustomEvent_EventName) == 0x0002A8, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CustomEvent_EmitterTime) == 0x0002B0, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CustomEvent_Location) == 0x0002B4, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CustomEvent_Velocity) == 0x0002C0, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002CC, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_GetFindGroundVectorLocations_Start) == 0x0002D0, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_GetFindGroundVectorLocations_Start' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_GetFindGroundVectorLocations_ENd) == 0x0002DC, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_GetFindGroundVectorLocations_ENd' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_HasAuthority_ReturnValue) == 0x0002E8, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CreateDelegate_OutputDelegate1) == 0x0002F0, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CreateDelegate_OutputDelegate2) == 0x000300, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CreateDelegate_OutputDelegate3) == 0x000310, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000320, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_K2_SetTimerDelegate_ReturnValue1) == 0x000328, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_K2_SetTimerDelegate_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_CreateDelegate_OutputDelegate4) == 0x000330, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_Event_EndPlayReason) == 0x000340, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_MakeStruct_GbxTraceAsyncRequest) == 0x000348, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_MakeStruct_GbxTraceAsyncRequest' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_PostEventAtLocation_ReturnValue) == 0x0003F8, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_PostEventAtLocation_ReturnValue1) == 0x000410, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_PostEventAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_PostEventAtLocation_ReturnValue2) == 0x000428, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_PostEventAtLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_GetPhaseTranceElementType_ReturnValue) == 0x000440, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_GetPhaseTranceElementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_GetPhaseTranceElementType_ReturnValue1) == 0x000441, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_GetPhaseTranceElementType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_Select_Default) == 0x000448, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, K2Node_Select1_Default) == 0x000450, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000458, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor, CallFunc_SpawnEmitterAtLocation_ReturnValue1) == 0x000460, "Member 'BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor::CallFunc_SpawnEmitterAtLocation_ReturnValue1' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BPFistOverMatterActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFistOverMatterActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BPFistOverMatterActor_C_ReceiveEndPlay");
static_assert(sizeof(BPFistOverMatterActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BPFistOverMatterActor_C_ReceiveEndPlay");
static_assert(offsetof(BPFistOverMatterActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BPFistOverMatterActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.WebSlamParticleSystemEvent
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) BPFistOverMatterActor_C_WebSlamParticleSystemEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFistOverMatterActor_C_WebSlamParticleSystemEvent) == 0x000008, "Wrong alignment on BPFistOverMatterActor_C_WebSlamParticleSystemEvent");
static_assert(sizeof(BPFistOverMatterActor_C_WebSlamParticleSystemEvent) == 0x000028, "Wrong size on BPFistOverMatterActor_C_WebSlamParticleSystemEvent");
static_assert(offsetof(BPFistOverMatterActor_C_WebSlamParticleSystemEvent, EventName) == 0x000000, "Member 'BPFistOverMatterActor_C_WebSlamParticleSystemEvent::EventName' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_WebSlamParticleSystemEvent, EmitterTime) == 0x000008, "Member 'BPFistOverMatterActor_C_WebSlamParticleSystemEvent::EmitterTime' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_WebSlamParticleSystemEvent, Location) == 0x00000C, "Member 'BPFistOverMatterActor_C_WebSlamParticleSystemEvent::Location' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_WebSlamParticleSystemEvent, Velocity) == 0x000018, "Member 'BPFistOverMatterActor_C_WebSlamParticleSystemEvent::Velocity' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9
// 0x0090 (0x0090 - 0x0000)
struct BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9 final
{
public:
	struct FHitResult                             Result;                                            // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9) == 0x000008, "Wrong alignment on BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9");
static_assert(sizeof(BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9) == 0x000090, "Wrong size on BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9");
static_assert(offsetof(BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9, Result) == 0x000000, "Member 'BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9::Result' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9
// 0x0090 (0x0090 - 0x0000)
struct BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9 final
{
public:
	struct FHitResult                             Result;                                            // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9) == 0x000008, "Wrong alignment on BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9");
static_assert(sizeof(BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9) == 0x000090, "Wrong size on BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9");
static_assert(offsetof(BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9, Result) == 0x000000, "Member 'BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9::Result' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GetfindGroundVectorLocations
// 0x0048 (0x0048 - 0x0000)
struct BPFistOverMatterActor_C_GetfindGroundVectorLocations final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFistOverMatterActor_C_GetfindGroundVectorLocations) == 0x000004, "Wrong alignment on BPFistOverMatterActor_C_GetfindGroundVectorLocations");
static_assert(sizeof(BPFistOverMatterActor_C_GetfindGroundVectorLocations) == 0x000048, "Wrong size on BPFistOverMatterActor_C_GetfindGroundVectorLocations");
static_assert(offsetof(BPFistOverMatterActor_C_GetfindGroundVectorLocations, Start) == 0x000000, "Member 'BPFistOverMatterActor_C_GetfindGroundVectorLocations::Start' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_GetfindGroundVectorLocations, End) == 0x00000C, "Member 'BPFistOverMatterActor_C_GetfindGroundVectorLocations::End' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_GetfindGroundVectorLocations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BPFistOverMatterActor_C_GetfindGroundVectorLocations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_GetfindGroundVectorLocations, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'BPFistOverMatterActor_C_GetfindGroundVectorLocations::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_GetfindGroundVectorLocations, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BPFistOverMatterActor_C_GetfindGroundVectorLocations::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_GetfindGroundVectorLocations, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BPFistOverMatterActor_C_GetfindGroundVectorLocations::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.DoSlamDamage
// 0x0128 (0x0128 - 0x0000)
struct BPFistOverMatterActor_C_DoSlamDamage final
{
public:
	struct FVector                                SlamLocation_;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x000C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  SlamRadius;                                        // 0x0018(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0030(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhaseTranceElementalType                     CallFunc_BreakPhaseTranceElementData_ElementType;  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_BreakPhaseTranceElementData_DamageType;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceElementData_DamageCoefficientData; // 0x00D0(0x0038)(NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculatePhaseTranceDamage_Res;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFistOverMatterActor_C_DoSlamDamage) == 0x000008, "Wrong alignment on BPFistOverMatterActor_C_DoSlamDamage");
static_assert(sizeof(BPFistOverMatterActor_C_DoSlamDamage) == 0x000128, "Wrong size on BPFistOverMatterActor_C_DoSlamDamage");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, SlamLocation_) == 0x000000, "Member 'BPFistOverMatterActor_C_DoSlamDamage::SlamLocation_' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, Loc) == 0x00000C, "Member 'BPFistOverMatterActor_C_DoSlamDamage::Loc' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, SlamRadius) == 0x000018, "Member 'BPFistOverMatterActor_C_DoSlamDamage::SlamRadius' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, Temp_struct_Variable) == 0x000030, "Member 'BPFistOverMatterActor_C_DoSlamDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_BreakPhaseTranceElementData_ElementType) == 0x0000C0, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_BreakPhaseTranceElementData_ElementType' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_BreakPhaseTranceElementData_DamageType) == 0x0000C8, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_BreakPhaseTranceElementData_DamageType' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_BreakPhaseTranceElementData_DamageCoefficientData) == 0x0000D0, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_BreakPhaseTranceElementData_DamageCoefficientData' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000114, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_CalculatePhaseTranceDamage_Res) == 0x000120, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_CalculatePhaseTranceDamage_Res' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_DoSlamDamage, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000124, "Member 'BPFistOverMatterActor_C_DoSlamDamage::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.PerformFeedback
// 0x0028 (0x0028 - 0x0000)
struct BPFistOverMatterActor_C_PerformFeedback final
{
public:
	struct FRangedDistanceOverrides               K2Node_MakeStruct_RangedDistanceOverrides;         // 0x0000(0x000C)(NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFistOverMatterActor_C_PerformFeedback) == 0x000008, "Wrong alignment on BPFistOverMatterActor_C_PerformFeedback");
static_assert(sizeof(BPFistOverMatterActor_C_PerformFeedback) == 0x000028, "Wrong size on BPFistOverMatterActor_C_PerformFeedback");
static_assert(offsetof(BPFistOverMatterActor_C_PerformFeedback, K2Node_MakeStruct_RangedDistanceOverrides) == 0x000000, "Member 'BPFistOverMatterActor_C_PerformFeedback::K2Node_MakeStruct_RangedDistanceOverrides' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_PerformFeedback, CallFunc_GetAbilityOwner_ReturnValue) == 0x000010, "Member 'BPFistOverMatterActor_C_PerformFeedback::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_PerformFeedback, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000018, "Member 'BPFistOverMatterActor_C_PerformFeedback::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_PerformFeedback, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPFistOverMatterActor_C_PerformFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GetMaxTime
// 0x0008 (0x0008 - 0x0000)
struct BPFistOverMatterActor_C_GetMaxTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFistOverMatterActor_C_GetMaxTime) == 0x000004, "Wrong alignment on BPFistOverMatterActor_C_GetMaxTime");
static_assert(sizeof(BPFistOverMatterActor_C_GetMaxTime) == 0x000008, "Wrong size on BPFistOverMatterActor_C_GetMaxTime");
static_assert(offsetof(BPFistOverMatterActor_C_GetMaxTime, ReturnValue) == 0x000000, "Member 'BPFistOverMatterActor_C_GetMaxTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFistOverMatterActor_C_GetMaxTime, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000004, "Member 'BPFistOverMatterActor_C_GetMaxTime::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");

}

