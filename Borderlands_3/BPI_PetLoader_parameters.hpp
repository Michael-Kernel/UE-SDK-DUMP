#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PetLoader

#include "Basic.hpp"

#include "Enum_PetLoader_Variations_structs.hpp"
#include "Enum_PetLoader_ProjectedIcons_structs.hpp"


namespace SDK::Params
{

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_SetProjectedIcon
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_SetProjectedIcon final
{
public:
	Enum_PetLoader_ProjectedIcons                 Icon;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_SetProjectedIcon) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_SetProjectedIcon");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_SetProjectedIcon) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_SetProjectedIcon");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_SetProjectedIcon, Icon) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_SetProjectedIcon::Icon' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoaderRPG_isMissileBarrageDone
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone final
{
public:
	bool                                          IsDone_;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone");
static_assert(sizeof(BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone");
static_assert(offsetof(BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone, IsDone_) == 0x000000, "Member 'BPI_PetLoader_C_PetLoaderRPG_isMissileBarrageDone::IsDone_' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_StopSpawningSurveyor
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_StopSpawningSurveyor final
{
public:
	bool                                          FinishedWithSuccess;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_StopSpawningSurveyor) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_StopSpawningSurveyor");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_StopSpawningSurveyor) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_StopSpawningSurveyor");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_StopSpawningSurveyor, FinishedWithSuccess) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_StopSpawningSurveyor::FinishedWithSuccess' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_isSpawningSurveyor
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_isSpawningSurveyor final
{
public:
	bool                                          IsSpawningSurveyor;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_isSpawningSurveyor) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_isSpawningSurveyor");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_isSpawningSurveyor) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_isSpawningSurveyor");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_isSpawningSurveyor, IsSpawningSurveyor) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_isSpawningSurveyor::IsSpawningSurveyor' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_ToggleHandGrip
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_ToggleHandGrip final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_ToggleHandGrip) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_ToggleHandGrip");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_ToggleHandGrip) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_ToggleHandGrip");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_ToggleHandGrip, IsActive) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_ToggleHandGrip::IsActive' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_IsUnboxSpawning
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_IsUnboxSpawning final
{
public:
	bool                                          IsUnboxing;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_IsUnboxSpawning) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_IsUnboxSpawning");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_IsUnboxSpawning) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_IsUnboxSpawning");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_IsUnboxSpawning, IsUnboxing) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_IsUnboxSpawning::IsUnboxing' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_SetImmuneToPhaselock
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock final
{
public:
	bool                                          bIsImmune;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock, bIsImmune) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_SetImmuneToPhaselock::bIsImmune' has a wrong offset!");

// Function BPI_PetLoader.BPI_PetLoader_C.PetLoader_GetType
// 0x0001 (0x0001 - 0x0000)
struct BPI_PetLoader_C_PetLoader_GetType final
{
public:
	Enum_PetLoader_Variations                     LoaderType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PetLoader_C_PetLoader_GetType) == 0x000001, "Wrong alignment on BPI_PetLoader_C_PetLoader_GetType");
static_assert(sizeof(BPI_PetLoader_C_PetLoader_GetType) == 0x000001, "Wrong size on BPI_PetLoader_C_PetLoader_GetType");
static_assert(offsetof(BPI_PetLoader_C_PetLoader_GetType, LoaderType) == 0x000000, "Member 'BPI_PetLoader_C_PetLoader_GetType::LoaderType' has a wrong offset!");

}

