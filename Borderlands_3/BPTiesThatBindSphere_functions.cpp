#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPTiesThatBindSphere

#include "Basic.hpp"

#include "BPTiesThatBindSphere_classes.hpp"
#include "BPTiesThatBindSphere_parameters.hpp"


namespace SDK
{

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.ExecuteUbergraph_BPTiesThatBindSphere
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPTiesThatBindSphere_C::ExecuteUbergraph_BPTiesThatBindSphere(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "ExecuteUbergraph_BPTiesThatBindSphere");

	Params::BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.ApplySapRefund
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   RawAccumulateDamage                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPTiesThatBindSphere_C::ApplySapRefund(float RawAccumulateDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "ApplySapRefund");

	Params::BPTiesThatBindSphere_C_ApplySapRefund Parms{};

	Parms.RawAccumulateDamage = RawAccumulateDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.OnGraspedTargetDied
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPTiesThatBindSphere_C::OnGraspedTargetDied(class AActor* DamageReceiver, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "OnGraspedTargetDied");

	Params::BPTiesThatBindSphere_C_OnGraspedTargetDied Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.OnWebTargetAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPTiesThatBindSphere_C::OnWebTargetAdded(class AOakCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "OnWebTargetAdded");

	Params::BPTiesThatBindSphere_C_OnWebTargetAdded Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPTiesThatBindSphere_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPTiesThatBindSphere_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetSharedDamageData
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    LinkedTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UDamageSource>        DamageSourceClass                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FOakPhaseWebSphere_SharedDamageDataSharedDamageData                                       (Parm, OutParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABPTiesThatBindSphere_C::GetSharedDamageData(class AOakCharacter* LinkedTarget, float Damage, TSubclassOf<class UDamageSource> DamageSourceClass, struct FOakPhaseWebSphere_SharedDamageData* SharedDamageData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "GetSharedDamageData");

	Params::BPTiesThatBindSphere_C_GetSharedDamageData Parms{};

	Parms.LinkedTarget = LinkedTarget;
	Parms.Damage = Damage;
	Parms.DamageSourceClass = DamageSourceClass;

	UObject::ProcessEvent(Func, &Parms);

	if (SharedDamageData != nullptr)
		*SharedDamageData = std::move(Parms.SharedDamageData);

	return Parms.ReturnValue;
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetMaxTime
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABPTiesThatBindSphere_C::GetMaxTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "GetMaxTime");

	Params::BPTiesThatBindSphere_C_GetMaxTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetBeamSystem
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UParticleSystem*                  Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPTiesThatBindSphere_C::GetBeamSystem(class UParticleSystem** Res) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "GetBeamSystem");

	Params::BPTiesThatBindSphere_C_GetBeamSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetBeamDataForLinkedTarget
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AOakCharacter*                    LinkedTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOakPhaseWebSphereBeamData       OutBeamData                                            (Parm, OutParm, NoDestructor, ContainsInstancedReference)

void ABPTiesThatBindSphere_C::GetBeamDataForLinkedTarget(class AOakCharacter* LinkedTarget, struct FOakPhaseWebSphereBeamData* OutBeamData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "GetBeamDataForLinkedTarget");

	Params::BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget Parms{};

	Parms.LinkedTarget = LinkedTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (OutBeamData != nullptr)
		*OutBeamData = std::move(Parms.OutBeamData);
}


// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetBeamSourceSceneComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  Res                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPTiesThatBindSphere_C::GetBeamSourceSceneComponent(class USceneComponent** Res) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPTiesThatBindSphere_C", "GetBeamSourceSceneComponent");

	Params::BPTiesThatBindSphere_C_GetBeamSourceSceneComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}

}

