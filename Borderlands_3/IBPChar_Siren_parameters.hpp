#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IBPChar_Siren

#include "Basic.hpp"

#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function IBPChar_Siren.IBPChar_Siren_C.GetPhaseTranceAbility
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Siren_C_GetPhaseTranceAbility final
{
public:
	class UOakActionAbility_PhaseTrance*          Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_GetPhaseTranceAbility) == 0x000008, "Wrong alignment on IBPChar_Siren_C_GetPhaseTranceAbility");
static_assert(sizeof(IBPChar_Siren_C_GetPhaseTranceAbility) == 0x000008, "Wrong size on IBPChar_Siren_C_GetPhaseTranceAbility");
static_assert(offsetof(IBPChar_Siren_C_GetPhaseTranceAbility, Res) == 0x000000, "Member 'IBPChar_Siren_C_GetPhaseTranceAbility::Res' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.GetSirenArmsReference
// 0x0010 (0x0010 - 0x0000)
struct IBPChar_Siren_C_GetSirenArmsReference final
{
public:
	class UGbxSkeletalMeshComponent*              Skel_Mesh_3rd;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Skel_Mesh_1st;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_GetSirenArmsReference) == 0x000008, "Wrong alignment on IBPChar_Siren_C_GetSirenArmsReference");
static_assert(sizeof(IBPChar_Siren_C_GetSirenArmsReference) == 0x000010, "Wrong size on IBPChar_Siren_C_GetSirenArmsReference");
static_assert(offsetof(IBPChar_Siren_C_GetSirenArmsReference, Skel_Mesh_3rd) == 0x000000, "Member 'IBPChar_Siren_C_GetSirenArmsReference::Skel_Mesh_3rd' has a wrong offset!");
static_assert(offsetof(IBPChar_Siren_C_GetSirenArmsReference, Skel_Mesh_1st) == 0x000008, "Member 'IBPChar_Siren_C_GetSirenArmsReference::Skel_Mesh_1st' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.GetPhaseCastProjectileComponents
// 0x0018 (0x0018 - 0x0000)
struct IBPChar_Siren_C_GetPhaseCastProjectileComponents final
{
public:
	class USkeletalMeshComponent*                 Body;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Head;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GhostArms;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_GetPhaseCastProjectileComponents) == 0x000008, "Wrong alignment on IBPChar_Siren_C_GetPhaseCastProjectileComponents");
static_assert(sizeof(IBPChar_Siren_C_GetPhaseCastProjectileComponents) == 0x000018, "Wrong size on IBPChar_Siren_C_GetPhaseCastProjectileComponents");
static_assert(offsetof(IBPChar_Siren_C_GetPhaseCastProjectileComponents, Body) == 0x000000, "Member 'IBPChar_Siren_C_GetPhaseCastProjectileComponents::Body' has a wrong offset!");
static_assert(offsetof(IBPChar_Siren_C_GetPhaseCastProjectileComponents, Head) == 0x000008, "Member 'IBPChar_Siren_C_GetPhaseCastProjectileComponents::Head' has a wrong offset!");
static_assert(offsetof(IBPChar_Siren_C_GetPhaseCastProjectileComponents, GhostArms) == 0x000010, "Member 'IBPChar_Siren_C_GetPhaseCastProjectileComponents::GhostArms' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.Play3rdPersonArmFade
// 0x0002 (0x0002 - 0x0000)
struct IBPChar_Siren_C_Play3rdPersonArmFade final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bVisible;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Siren_C_Play3rdPersonArmFade) == 0x000001, "Wrong alignment on IBPChar_Siren_C_Play3rdPersonArmFade");
static_assert(sizeof(IBPChar_Siren_C_Play3rdPersonArmFade) == 0x000002, "Wrong size on IBPChar_Siren_C_Play3rdPersonArmFade");
static_assert(offsetof(IBPChar_Siren_C_Play3rdPersonArmFade, bInstant) == 0x000000, "Member 'IBPChar_Siren_C_Play3rdPersonArmFade::bInstant' has a wrong offset!");
static_assert(offsetof(IBPChar_Siren_C_Play3rdPersonArmFade, bVisible) == 0x000001, "Member 'IBPChar_Siren_C_Play3rdPersonArmFade::bVisible' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.SetArmsMaterial
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Siren_C_SetArmsMaterial final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_SetArmsMaterial) == 0x000008, "Wrong alignment on IBPChar_Siren_C_SetArmsMaterial");
static_assert(sizeof(IBPChar_Siren_C_SetArmsMaterial) == 0x000008, "Wrong size on IBPChar_Siren_C_SetArmsMaterial");
static_assert(offsetof(IBPChar_Siren_C_SetArmsMaterial, Material) == 0x000000, "Member 'IBPChar_Siren_C_SetArmsMaterial::Material' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.PlayTattooFade
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Siren_C_PlayTattooFade final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Siren_C_PlayTattooFade) == 0x000001, "Wrong alignment on IBPChar_Siren_C_PlayTattooFade");
static_assert(sizeof(IBPChar_Siren_C_PlayTattooFade) == 0x000001, "Wrong size on IBPChar_Siren_C_PlayTattooFade");
static_assert(offsetof(IBPChar_Siren_C_PlayTattooFade, bVisible) == 0x000000, "Member 'IBPChar_Siren_C_PlayTattooFade::bVisible' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.SetArmsElement
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Siren_C_SetArmsElement final
{
public:
	EPhaseTranceElementalType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_SetArmsElement) == 0x000001, "Wrong alignment on IBPChar_Siren_C_SetArmsElement");
static_assert(sizeof(IBPChar_Siren_C_SetArmsElement) == 0x000001, "Wrong size on IBPChar_Siren_C_SetArmsElement");
static_assert(offsetof(IBPChar_Siren_C_SetArmsElement, Type) == 0x000000, "Member 'IBPChar_Siren_C_SetArmsElement::Type' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.GetSirenGhostArmsComponent
// 0x0010 (0x0010 - 0x0000)
struct IBPChar_Siren_C_GetSirenGhostArmsComponent final
{
public:
	class UGbxSkeletalMeshComponent*              Threerd_Person_Mesh;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Onest_Person_Mesh;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_GetSirenGhostArmsComponent) == 0x000008, "Wrong alignment on IBPChar_Siren_C_GetSirenGhostArmsComponent");
static_assert(sizeof(IBPChar_Siren_C_GetSirenGhostArmsComponent) == 0x000010, "Wrong size on IBPChar_Siren_C_GetSirenGhostArmsComponent");
static_assert(offsetof(IBPChar_Siren_C_GetSirenGhostArmsComponent, Threerd_Person_Mesh) == 0x000000, "Member 'IBPChar_Siren_C_GetSirenGhostArmsComponent::Threerd_Person_Mesh' has a wrong offset!");
static_assert(offsetof(IBPChar_Siren_C_GetSirenGhostArmsComponent, Onest_Person_Mesh) == 0x000008, "Member 'IBPChar_Siren_C_GetSirenGhostArmsComponent::Onest_Person_Mesh' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.SirenHasAscendantSkill
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Siren_C_SirenHasAscendantSkill final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Siren_C_SirenHasAscendantSkill) == 0x000001, "Wrong alignment on IBPChar_Siren_C_SirenHasAscendantSkill");
static_assert(sizeof(IBPChar_Siren_C_SirenHasAscendantSkill) == 0x000001, "Wrong size on IBPChar_Siren_C_SirenHasAscendantSkill");
static_assert(offsetof(IBPChar_Siren_C_SirenHasAscendantSkill, Res) == 0x000000, "Member 'IBPChar_Siren_C_SirenHasAscendantSkill::Res' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.GetStillnessOfMindControlledMove
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Siren_C_GetStillnessOfMindControlledMove final
{
public:
	class UClass*                                 Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_GetStillnessOfMindControlledMove) == 0x000008, "Wrong alignment on IBPChar_Siren_C_GetStillnessOfMindControlledMove");
static_assert(sizeof(IBPChar_Siren_C_GetStillnessOfMindControlledMove) == 0x000008, "Wrong size on IBPChar_Siren_C_GetStillnessOfMindControlledMove");
static_assert(offsetof(IBPChar_Siren_C_GetStillnessOfMindControlledMove, Res) == 0x000000, "Member 'IBPChar_Siren_C_GetStillnessOfMindControlledMove::Res' has a wrong offset!");

// Function IBPChar_Siren.IBPChar_Siren_C.GetSoulSapProjectile
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Siren_C_GetSoulSapProjectile final
{
public:
	class UClass*                                 Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Siren_C_GetSoulSapProjectile) == 0x000008, "Wrong alignment on IBPChar_Siren_C_GetSoulSapProjectile");
static_assert(sizeof(IBPChar_Siren_C_GetSoulSapProjectile) == 0x000008, "Wrong size on IBPChar_Siren_C_GetSoulSapProjectile");
static_assert(offsetof(IBPChar_Siren_C_GetSoulSapProjectile, Res) == 0x000000, "Member 'IBPChar_Siren_C_GetSoulSapProjectile::Res' has a wrong offset!");

}

