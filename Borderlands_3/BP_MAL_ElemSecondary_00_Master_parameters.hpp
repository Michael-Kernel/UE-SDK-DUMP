#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MAL_ElemSecondary_00_Master

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MAL_ElemSecondary_00_Master.BP_MAL_ElemSecondary_00_Master_C.K2_GetFriendlyDescription
// 0x0010 (0x0010 - 0x0000)
struct BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription) == 0x000008, "Wrong alignment on BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription");
static_assert(sizeof(BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription) == 0x000010, "Wrong size on BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription");
static_assert(offsetof(BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription, ReturnValue) == 0x000000, "Member 'BP_MAL_ElemSecondary_00_Master_C_K2_GetFriendlyDescription::ReturnValue' has a wrong offset!");

// Function BP_MAL_ElemSecondary_00_Master.BP_MAL_ElemSecondary_00_Master_C.K2_OnApplyAspect
// 0x0028 (0x0028 - 0x0000)
struct BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect final
{
public:
	class AActor*                                 InventoryActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInventoryBalanceStateComponent*  InventoryBalanceState;                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPWeapInterface_MAL_C> K2Node_DynamicCast_AsBPWeap_Interface_MAL;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect) == 0x000008, "Wrong alignment on BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect");
static_assert(sizeof(BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect) == 0x000028, "Wrong size on BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect");
static_assert(offsetof(BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect, InventoryActor) == 0x000000, "Member 'BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect::InventoryActor' has a wrong offset!");
static_assert(offsetof(BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect, InventoryBalanceState) == 0x000008, "Member 'BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect::InventoryBalanceState' has a wrong offset!");
static_assert(offsetof(BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect, K2Node_DynamicCast_AsBPWeap_Interface_MAL) == 0x000010, "Member 'BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect::K2Node_DynamicCast_AsBPWeap_Interface_MAL' has a wrong offset!");
static_assert(offsetof(BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MAL_ElemSecondary_00_Master_C_K2_OnApplyAspect::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

