#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Challenge_CharacterSpecific

#include "Basic.hpp"

#include "BP_Challenge_CharacterSpecific_classes.hpp"
#include "BP_Challenge_CharacterSpecific_parameters.hpp"


namespace SDK
{

// Function BP_Challenge_CharacterSpecific.BP_Challenge_CharacterSpecific_C.ExecuteUbergraph_BP_Challenge_CharacterSpecific
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Challenge_CharacterSpecific_C::ExecuteUbergraph_BP_Challenge_CharacterSpecific(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Challenge_CharacterSpecific_C", "ExecuteUbergraph_BP_Challenge_CharacterSpecific");

	Params::BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Challenge_CharacterSpecific.BP_Challenge_CharacterSpecific_C.OnInitChallengeInstance
// (Event, Public, BlueprintEvent)
// Parameters:
// class UChallengesComponent*             OwningChallenges                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGbxCharacter*                    AssociatedCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Challenge_CharacterSpecific_C::OnInitChallengeInstance(class UChallengesComponent* OwningChallenges, class AGbxCharacter* AssociatedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Challenge_CharacterSpecific_C", "OnInitChallengeInstance");

	Params::BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance Parms{};

	Parms.OwningChallenges = OwningChallenges;
	Parms.AssociatedCharacter = AssociatedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Challenge_CharacterSpecific.BP_Challenge_CharacterSpecific_C.SetBinds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BindSet                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Challenge_CharacterSpecific_C::SetBinds(class AOakCharacter* Character, bool* BindSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Challenge_CharacterSpecific_C", "SetBinds");

	Params::BP_Challenge_CharacterSpecific_C_SetBinds Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (BindSet != nullptr)
		*BindSet = Parms.BindSet;
}

}

