#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_All_Passive_TerrorProjectilesPerShot

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_All_Passive_TerrorProjectilesPerShot.Ability_All_Passive_TerrorProjectilesPerShot_C
// 0x0090 (0x0188 - 0x00F8)
class UAbility_All_Passive_TerrorProjectilesPerShot_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class ABPChar_Player_C*                       Player;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_All_Passive_TerrorProjectilesPerShot; // 0x0108(0x0028)()
	struct FAttributeEffectData                   AttEffect_AddedProjectilesPerShot;                 // 0x0130(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGbxAttributeModifierHandle            AttEffectHandle_AddedProjPerShot;                  // 0x0178(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Ability_All_Passive_TerrorProjectilesPerShot(int32 EntryPoint);
	void AddProjectilePerShot(class AWeapon* InWeapon);
	void GetFiringComponent(class AWeapon* InWeapon, class UWeaponFireProjectileComponent** FireComponent);
	void OnActivated();
	void WeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void WeaponUsed(class AWeapon* EventWeapon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_All_Passive_TerrorProjectilesPerShot_C">();
	}
	static class UAbility_All_Passive_TerrorProjectilesPerShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_All_Passive_TerrorProjectilesPerShot_C>();
	}
};
static_assert(alignof(UAbility_All_Passive_TerrorProjectilesPerShot_C) == 0x000008, "Wrong alignment on UAbility_All_Passive_TerrorProjectilesPerShot_C");
static_assert(sizeof(UAbility_All_Passive_TerrorProjectilesPerShot_C) == 0x000188, "Wrong size on UAbility_All_Passive_TerrorProjectilesPerShot_C");
static_assert(offsetof(UAbility_All_Passive_TerrorProjectilesPerShot_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_All_Passive_TerrorProjectilesPerShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorProjectilesPerShot_C, Player) == 0x000100, "Member 'UAbility_All_Passive_TerrorProjectilesPerShot_C::Player' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorProjectilesPerShot_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_All_Passive_TerrorProjectilesPerShot) == 0x000108, "Member 'UAbility_All_Passive_TerrorProjectilesPerShot_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_All_Passive_TerrorProjectilesPerShot' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorProjectilesPerShot_C, AttEffect_AddedProjectilesPerShot) == 0x000130, "Member 'UAbility_All_Passive_TerrorProjectilesPerShot_C::AttEffect_AddedProjectilesPerShot' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorProjectilesPerShot_C, AttEffectHandle_AddedProjPerShot) == 0x000178, "Member 'UAbility_All_Passive_TerrorProjectilesPerShot_C::AttEffectHandle_AddedProjPerShot' has a wrong offset!");

}

