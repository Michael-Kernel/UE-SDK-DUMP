#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_SM_Dahl

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_SM_Dahl.BPAnim_SM_Dahl_C.ExecuteUbergraph_BPAnim_SM_Dahl
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewMode;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl) == 0x000004, "Wrong alignment on BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl");
static_assert(sizeof(BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl) == 0x000008, "Wrong size on BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl");
static_assert(offsetof(BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl, EntryPoint) == 0x000000, "Member 'BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl, K2Node_Event_NewMode) == 0x000004, "Member 'BPAnim_SM_Dahl_C_ExecuteUbergraph_BPAnim_SM_Dahl::K2Node_Event_NewMode' has a wrong offset!");

// Function BPAnim_SM_Dahl.BPAnim_SM_Dahl_C.BlueprintSwitchedMode
// 0x0004 (0x0004 - 0x0000)
struct BPAnim_SM_Dahl_C_BlueprintSwitchedMode final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SM_Dahl_C_BlueprintSwitchedMode) == 0x000004, "Wrong alignment on BPAnim_SM_Dahl_C_BlueprintSwitchedMode");
static_assert(sizeof(BPAnim_SM_Dahl_C_BlueprintSwitchedMode) == 0x000004, "Wrong size on BPAnim_SM_Dahl_C_BlueprintSwitchedMode");
static_assert(offsetof(BPAnim_SM_Dahl_C_BlueprintSwitchedMode, NewMode) == 0x000000, "Member 'BPAnim_SM_Dahl_C_BlueprintSwitchedMode::NewMode' has a wrong offset!");

// Function BPAnim_SM_Dahl.BPAnim_SM_Dahl_C.UpdateScopeAnim
// 0x0038 (0x0038 - 0x0000)
struct BPAnim_SM_Dahl_C_UpdateScopeAnim final
{
public:
	uint8                                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SM_Dahl_C_UpdateScopeAnim) == 0x000008, "Wrong alignment on BPAnim_SM_Dahl_C_UpdateScopeAnim");
static_assert(sizeof(BPAnim_SM_Dahl_C_UpdateScopeAnim) == 0x000038, "Wrong size on BPAnim_SM_Dahl_C_UpdateScopeAnim");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, Temp_byte_Variable) == 0x000000, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, Temp_object_Variable) == 0x000008, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, Temp_object_Variable1) == 0x000010, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, Temp_object_Variable2) == 0x000018, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, Temp_object_Variable3) == 0x000020, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SM_Dahl_C_UpdateScopeAnim, K2Node_Select_Default) == 0x000030, "Member 'BPAnim_SM_Dahl_C_UpdateScopeAnim::K2Node_Select_Default' has a wrong offset!");

}

