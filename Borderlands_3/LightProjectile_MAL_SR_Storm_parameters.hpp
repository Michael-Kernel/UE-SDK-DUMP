#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_MAL_SR_Storm

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_MAL_SR_Storm.LightProjectile_MAL_SR_Storm_v2_C.OnImpact
// 0x07A0 (0x07A0 - 0x0000)
struct LightProjectile_MAL_SR_Storm_v2_C_OnImpact final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x01A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x01B0(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue1;        // 0x01E8(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0234(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0240(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x024C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x0290(0x0230)(ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item1;                          // 0x04D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0500(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x050C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0518(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0530(0x0030)(IsPlainOldData, NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest1;      // 0x0560(0x0230)(ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SpawnActorAsync_ReturnValue1;             // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x079C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact) == 0x000010, "Wrong alignment on LightProjectile_MAL_SR_Storm_v2_C_OnImpact");
static_assert(sizeof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact) == 0x0007A0, "Wrong size on LightProjectile_MAL_SR_Storm_v2_C_OnImpact");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, Projectile) == 0x000000, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, Hit) == 0x000008, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_bBlockingHit1) == 0x000118, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000119, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Time1) == 0x00011C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Distance1) == 0x000120, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Location1) == 0x000124, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_ImpactPoint1) == 0x000130, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_Normal1) == 0x00013C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_ImpactNormal1) == 0x000148, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_PhysMat1) == 0x000158, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitActor1) == 0x000160, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitComponent1) == 0x000168, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitBoneName1) == 0x000170, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_HitItem1) == 0x000178, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_FaceIndex1) == 0x00017C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_TraceStart1) == 0x000180, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakHitResult_TraceEnd1) == 0x00018C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Add_VectorVector_ReturnValue) == 0x000198, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Add_VectorVector_ReturnValue1) == 0x0001A4, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x0001B0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_GetSource_ReturnValue) == 0x0001C0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_GetInstigator_ReturnValue) == 0x0001D0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, Temp_int_Loop_Counter_Variable) == 0x0001D8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Add_IntInt_ReturnValue) == 0x0001DC, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, Temp_int_Array_Index_Variable) == 0x0001E0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001E4, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_GeneratePointsOnCone_ReturnValue1) == 0x0001E8, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_GeneratePointsOnCone_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Array_Get_Item) == 0x000200, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Array_Length_ReturnValue1) == 0x000230, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakTransform_Location) == 0x000234, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakTransform_Rotation) == 0x000240, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakTransform_Scale) == 0x00024C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Less_IntInt_ReturnValue) == 0x000258, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_MakeTransform_ReturnValue) == 0x000260, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x000290, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, Temp_int_Array_Index_Variable1) == 0x0004C0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_SpawnActorAsync_ReturnValue) == 0x0004C4, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Array_Get_Item1) == 0x0004D0, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakTransform_Location1) == 0x000500, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakTransform_Rotation1) == 0x00050C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_BreakTransform_Scale1) == 0x000518, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, Temp_int_Loop_Counter_Variable1) == 0x000524, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_MakeTransform_ReturnValue1) == 0x000530, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, K2Node_MakeStruct_GbxSpawnActorAsyncRequest1) == 0x000560, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::K2Node_MakeStruct_GbxSpawnActorAsyncRequest1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Less_IntInt_ReturnValue1) == 0x000790, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_SpawnActorAsync_ReturnValue1) == 0x000794, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_SpawnActorAsync_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_Add_IntInt_ReturnValue1) == 0x000798, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_MAL_SR_Storm_v2_C_OnImpact, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00079C, "Member 'LightProjectile_MAL_SR_Storm_v2_C_OnImpact::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

}

