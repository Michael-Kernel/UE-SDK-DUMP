#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerQuarters

#include "Basic.hpp"

#include "Enum_PlayerQuarters_RoomPreviewSelection_structs.hpp"
#include "Enum_Door_State_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_States_DoorLocked_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerQuarters.BP_PlayerQuarters_C
// 0x00B0 (0x0628 - 0x0578)
class ABP_PlayerQuarters_C final : public ACrewQuartersRoom
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0578(0x0008)(Transient, DuplicateTransient)
	class UGbxAreaComponent*                      GbxArea;                                           // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                BP_PlayerQuarterActor_Operative;                   // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                BP_PlayerQuarterActor_BeastMaster;                 // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                BP_PlayerQuarterActor_Gunner;                      // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                BP_PlayerQuarterActor_Siren;                       // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMissionObserverComponent*              MissionObserver;                                   // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                BP_PlayerQuartersDoor;                             // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightPulse_Intensity_3B27A74D421BC0E52FB0FFA398A10F25; // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightPulse__Direction_3B27A74D421BC0E52FB0FFA398A10F25; // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightPulse;                                        // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WarningLightIntensity;                             // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   PlayerQuarters_Opening;                            // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   PlayerQuarters_Closing;                            // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          FullyLoaded;                                       // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Preview;                                           // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_PlayerQuarters_RoomPreviewSelection      PreviewRoom;                                       // 0x05FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PlayerDoor;                                        // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   PlayerQuarters_DoorOpened;                         // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OwnerAssigned;                                     // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADynamicRoomBase*                       RoomReference;                                     // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetDoorFeedbackState(Enum_States_DoorLocked* FeedbackState);
	void GetDoorState(Enum_Door_State* DoorState);
	void GetDoorLockedState(bool* Locked);
	void GetDoorInteractiveState(bool* Interactive);
	void ClosePlayersQuarters();
	void OpenPlayersQuarters();
	void RoomWarning_Stop();
	void RoomWarning_Start();
	void UserConstructionScript();
	void LightPulse__FinishedFunc();
	void LightPulse__UpdateFunc();
	void SetDoorState(Enum_Door_State DoorState);
	void SetDoorLockedState(bool Locked_);
	void SetDoorInteractiveState(bool Interactive_);
	void SetDoorFeedbackState(Enum_States_DoorLocked FeedbackState);
	void Room_FullyLoaded(class ADynamicRoomBase* RoomReference_0);
	void Room_CountdownBegin(float CountdownTime);
	void Room_Unloaded(class ADynamicRoomBase* RoomReference_0);
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_0_MissionObserverMissionsInitialized__DelegateSignature_BP_PlayerQuarters();
	void RoomOwnerAssigned(class ADynamicRoomBase* RoomReference_0);
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_1_MissionObserverMissionObjectiveUpdate__DelegateSignature_BP_PlayerQuarters(const struct FMissionObjectiveReference& Objective, EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MissionDoorOpenComplete();
	void MissionDoorOpening();
	void ExecuteUbergraph_BP_PlayerQuarters(int32 EntryPoint);
	void PlayerQuarters_DoorOpened__DelegateSignature();
	void PlayerQuarters_Closing__DelegateSignature();
	void PlayerQuarters_Opening__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerQuarters_C">();
	}
	static class ABP_PlayerQuarters_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerQuarters_C>();
	}
};
static_assert(alignof(ABP_PlayerQuarters_C) == 0x000008, "Wrong alignment on ABP_PlayerQuarters_C");
static_assert(sizeof(ABP_PlayerQuarters_C) == 0x000628, "Wrong size on ABP_PlayerQuarters_C");
static_assert(offsetof(ABP_PlayerQuarters_C, UberGraphFrame) == 0x000578, "Member 'ABP_PlayerQuarters_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, GbxArea) == 0x000580, "Member 'ABP_PlayerQuarters_C::GbxArea' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, BP_PlayerQuarterActor_Operative) == 0x000588, "Member 'ABP_PlayerQuarters_C::BP_PlayerQuarterActor_Operative' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, BP_PlayerQuarterActor_BeastMaster) == 0x000590, "Member 'ABP_PlayerQuarters_C::BP_PlayerQuarterActor_BeastMaster' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, BP_PlayerQuarterActor_Gunner) == 0x000598, "Member 'ABP_PlayerQuarters_C::BP_PlayerQuarterActor_Gunner' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, BP_PlayerQuarterActor_Siren) == 0x0005A0, "Member 'ABP_PlayerQuarters_C::BP_PlayerQuarterActor_Siren' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, MissionObserver) == 0x0005A8, "Member 'ABP_PlayerQuarters_C::MissionObserver' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, PointLight) == 0x0005B0, "Member 'ABP_PlayerQuarters_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, BP_PlayerQuartersDoor) == 0x0005B8, "Member 'ABP_PlayerQuarters_C::BP_PlayerQuartersDoor' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, LightPulse_Intensity_3B27A74D421BC0E52FB0FFA398A10F25) == 0x0005C0, "Member 'ABP_PlayerQuarters_C::LightPulse_Intensity_3B27A74D421BC0E52FB0FFA398A10F25' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, LightPulse__Direction_3B27A74D421BC0E52FB0FFA398A10F25) == 0x0005C4, "Member 'ABP_PlayerQuarters_C::LightPulse__Direction_3B27A74D421BC0E52FB0FFA398A10F25' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, LightPulse) == 0x0005C8, "Member 'ABP_PlayerQuarters_C::LightPulse' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, WarningLightIntensity) == 0x0005D0, "Member 'ABP_PlayerQuarters_C::WarningLightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, PlayerQuarters_Opening) == 0x0005D8, "Member 'ABP_PlayerQuarters_C::PlayerQuarters_Opening' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, PlayerQuarters_Closing) == 0x0005E8, "Member 'ABP_PlayerQuarters_C::PlayerQuarters_Closing' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, FullyLoaded) == 0x0005F8, "Member 'ABP_PlayerQuarters_C::FullyLoaded' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, Preview) == 0x0005F9, "Member 'ABP_PlayerQuarters_C::Preview' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, PreviewRoom) == 0x0005FA, "Member 'ABP_PlayerQuarters_C::PreviewRoom' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, PlayerDoor) == 0x000600, "Member 'ABP_PlayerQuarters_C::PlayerDoor' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, PlayerQuarters_DoorOpened) == 0x000608, "Member 'ABP_PlayerQuarters_C::PlayerQuarters_DoorOpened' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, OwnerAssigned) == 0x000618, "Member 'ABP_PlayerQuarters_C::OwnerAssigned' has a wrong offset!");
static_assert(offsetof(ABP_PlayerQuarters_C, RoomReference) == 0x000620, "Member 'ABP_PlayerQuarters_C::RoomReference' has a wrong offset!");

}

