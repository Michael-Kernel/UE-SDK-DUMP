#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CatchARide_Console

#include "Basic.hpp"

#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnNewBodyEquipped
// 0x0008 (0x0008 - 0x0000)
struct BP_CatchARide_Console_C_OnNewBodyEquipped final
{
public:
	class UOakCARVehicleData*                     VehicleData;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CatchARide_Console_C_OnNewBodyEquipped) == 0x000008, "Wrong alignment on BP_CatchARide_Console_C_OnNewBodyEquipped");
static_assert(sizeof(BP_CatchARide_Console_C_OnNewBodyEquipped) == 0x000008, "Wrong size on BP_CatchARide_Console_C_OnNewBodyEquipped");
static_assert(offsetof(BP_CatchARide_Console_C_OnNewBodyEquipped, VehicleData) == 0x000000, "Member 'BP_CatchARide_Console_C_OnNewBodyEquipped::VehicleData' has a wrong offset!");

// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnNewPartEquipped
// 0x0010 (0x0010 - 0x0000)
struct BP_CatchARide_Console_C_OnNewPartEquipped final
{
public:
	ECARPartType                                  PartType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakCARVehiclePartData*                 PartData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CatchARide_Console_C_OnNewPartEquipped) == 0x000008, "Wrong alignment on BP_CatchARide_Console_C_OnNewPartEquipped");
static_assert(sizeof(BP_CatchARide_Console_C_OnNewPartEquipped) == 0x000010, "Wrong size on BP_CatchARide_Console_C_OnNewPartEquipped");
static_assert(offsetof(BP_CatchARide_Console_C_OnNewPartEquipped, PartType) == 0x000000, "Member 'BP_CatchARide_Console_C_OnNewPartEquipped::PartType' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_OnNewPartEquipped, PartData) == 0x000008, "Member 'BP_CatchARide_Console_C_OnNewPartEquipped::PartData' has a wrong offset!");

// Function BP_CatchARide_Console.BP_CatchARide_Console_C.BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console
// 0x0010 (0x0010 - 0x0000)
struct BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console) == 0x000008, "Wrong alignment on BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console");
static_assert(sizeof(BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console) == 0x000010, "Wrong size on BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console");
static_assert(offsetof(BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console, UserController) == 0x000000, "Member 'BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console::UserController' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console, UsedComponent) == 0x000008, "Member 'BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console::UsedComponent' has a wrong offset!");

// Function BP_CatchARide_Console.BP_CatchARide_Console_C.ExecuteUbergraph_BP_CatchARide_Console
// 0x01E0 (0x01E0 - 0x0000)
struct BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakCARVehicleData*                     K2Node_Event_VehicleData;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECARPartType                                  K2Node_Event_PartType;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakCARVehiclePartData*                 K2Node_Event_PartData;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVehicleSpawnerComponent*               CallFunc_GetVehicleSpawnerComponent_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMissionVehicleCanBeSpawn_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakCARMenuVehicleConfig               CallFunc_GetVehicleLoadoutAtIndex_OutLoadout;      // 0x0050(0x0188)()
	bool                                          CallFunc_GetVehicleLoadoutAtIndex_ReturnValue;     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console) == 0x000008, "Wrong alignment on BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console");
static_assert(sizeof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console) == 0x0001E0, "Wrong size on BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, EntryPoint) == 0x000000, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_Event_VehicleData) == 0x000008, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_Event_VehicleData' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_Event_PartType) == 0x000010, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_Event_PartType' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_Event_PartData) == 0x000018, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_Event_PartData' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_ComponentBoundEvent_UserController) == 0x000020, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_ComponentBoundEvent_UsedComponent) == 0x000028, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000030, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, CallFunc_GetVehicleSpawnerComponent_ReturnValue) == 0x000040, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::CallFunc_GetVehicleSpawnerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, CallFunc_IsMissionVehicleCanBeSpawn_ReturnValue) == 0x000048, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::CallFunc_IsMissionVehicleCanBeSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, CallFunc_GetVehicleLoadoutAtIndex_OutLoadout) == 0x000050, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::CallFunc_GetVehicleLoadoutAtIndex_OutLoadout' has a wrong offset!");
static_assert(offsetof(BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console, CallFunc_GetVehicleLoadoutAtIndex_ReturnValue) == 0x0001D8, "Member 'BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console::CallFunc_GetVehicleLoadoutAtIndex_ReturnValue' has a wrong offset!");

}

