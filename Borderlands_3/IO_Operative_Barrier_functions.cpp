#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Operative_Barrier

#include "Basic.hpp"

#include "IO_Operative_Barrier_classes.hpp"
#include "IO_Operative_Barrier_parameters.hpp"


namespace SDK
{

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ExecuteUbergraph_IO_Operative_Barrier
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::ExecuteUbergraph_IO_Operative_Barrier(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "ExecuteUbergraph_IO_Operative_Barrier");

	Params::IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.DigistructOut
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::DigistructOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "DigistructOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ApplyDeterrenceFieldToEnemy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::ApplyDeterrenceFieldToEnemy(class AActor* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "ApplyDeterrenceFieldToEnemy");

	Params::IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnStartState_ShuttingDown
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnStartState_ShuttingDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnStartState_ShuttingDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnTurbochargedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbIsTurbocharged                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_Barrier_C::OnTurbochargedStateChanged(bool InbIsTurbocharged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnTurbochargedStateChanged");

	Params::IO_Operative_Barrier_C_OnTurbochargedStateChanged Parms{};

	Parms.InbIsTurbocharged = InbIsTurbocharged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.StartNextBarrierState
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::StartNextBarrierState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "StartNextBarrierState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.UpdateFX
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::UpdateFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "UpdateFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupBarrierMods
// (Event, Protected, BlueprintEvent)

void AIO_Operative_Barrier_C::SetupBarrierMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupBarrierMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.HandleBarrierStateChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOperativeBarrierState                  OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOperativeBarrierState                  NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::HandleBarrierStateChange(EOperativeBarrierState OldState, EOperativeBarrierState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "HandleBarrierStateChange");

	Params::IO_Operative_Barrier_C_HandleBarrierStateChange Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AIO_Operative_Barrier_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnEndState_Deployed
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnEndState_Deployed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnEndState_Deployed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnStartState_Deployed
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnStartState_Deployed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnStartState_Deployed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.UpdateFX_OnDeployed
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::UpdateFX_OnDeployed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "UpdateFX_OnDeployed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnEndState_Activating
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnEndState_Activating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnEndState_Activating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnEndState_Carried
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnEndState_Carried()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnEndState_Carried");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnStartState_Carried
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnStartState_Carried()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnStartState_Carried");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.UpdateFX_OnCarried
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::UpdateFX_OnCarried()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "UpdateFX_OnCarried");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.TurboTimeline__UpdateFunc
// (BlueprintEvent)

void AIO_Operative_Barrier_C::TurboTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "TurboTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.TurboTimeline__FinishedFunc
// (BlueprintEvent)

void AIO_Operative_Barrier_C::TurboTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "TurboTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetBarrierHoldScalar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_Barrier_C::SetBarrierHoldScalar(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetBarrierHoldScalar");

	Params::IO_Operative_Barrier_C_SetBarrierHoldScalar Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupDeterrenceField
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::SetupDeterrenceField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupDeterrenceField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupChargedRelay
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::SetupChargedRelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupChargedRelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupElectromagneticTherapy
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::SetupElectromagneticTherapy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupElectromagneticTherapy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupModMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Val                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::SetupModMaterial(class FName ParamName, float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupModMaterial");

	Params::IO_Operative_Barrier_C_SetupModMaterial Parms{};

	Parms.ParamName = ParamName;
	Parms.Val = Val;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ConfigureTemplates
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::ConfigureTemplates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "ConfigureTemplates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.TryActivateSystem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent*         Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::TryActivateSystem(class UParticleSystemComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "TryActivateSystem");

	Params::IO_Operative_Barrier_C_TryActivateSystem Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupStressTest
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::SetupStressTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupStressTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.GetDamageRTPCValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::GetDamageRTPCValue(float* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "GetDamageRTPCValue");

	Params::IO_Operative_Barrier_C_GetDamageRTPCValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupMultiModBarrierFX
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::SetupMultiModBarrierFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupMultiModBarrierFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupPhysicsAssetOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPhysicsAsset*                    InAssetOverride                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::SetupPhysicsAssetOverride(class UPhysicsAsset* InAssetOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetupPhysicsAssetOverride");

	Params::IO_Operative_Barrier_C_SetupPhysicsAssetOverride Parms{};

	Parms.InAssetOverride = InAssetOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.IsShuttingDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_Barrier_C::IsShuttingDown(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "IsShuttingDown");

	Params::IO_Operative_Barrier_C_IsShuttingDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.AttachToPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::AttachToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "AttachToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.DetachFromPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::DetachFromPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "DetachFromPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnStateTransitionBegin
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnStateTransitionBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnStateTransitionBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnStateTransitionEnd
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_Barrier_C::OnStateTransitionEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "OnStateTransitionEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetBarrierHidden
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_Barrier_C::SetBarrierHidden(bool bIsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "SetBarrierHidden");

	Params::IO_Operative_Barrier_C_SetBarrierHidden Parms{};

	Parms.bIsHidden = bIsHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_Barrier.IO_Operative_Barrier_C.GetDeterrenceFieldDamageForCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AOakCharacter*                    Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Val                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_Barrier_C::GetDeterrenceFieldDamageForCharacter(class AOakCharacter* Enemy, float* Val) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_Barrier_C", "GetDeterrenceFieldDamageForCharacter");

	Params::IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);

	if (Val != nullptr)
		*Val = Parms.Val;
}

}

