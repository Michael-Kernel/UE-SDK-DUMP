#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Hardpoint_GrenadeLauncher

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "WeaponType_Hardpoints_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_Hardpoint_GrenadeLauncher.Weapon_Hardpoint_GrenadeLauncher_C
// 0x0260 (0x0CE8 - 0x0A88)
class AWeapon_Hardpoint_GrenadeLauncher_C final : public AWeaponType_Hardpoints_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_Hardpoint_GrenadeLauncher_C; // 0x0A88(0x0008)(Transient, DuplicateTransient)
	class UBPWeaponFireProjectile_Gunner_GrenadeLauncher_C* BPWeaponFireProjectile_Gunner_GrenadeLauncher;     // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponSingleFeedReloadComponent*       WeaponSingleFeedReload;                            // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponHeatComponent*                   WeaponHeat;                                        // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakWeaponAudioProviderComponent*       OakWeaponAudioProvider;                            // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStatusEffectManagerComponent*          StatusEffectManager;                               // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponRecoilPatternComponent*          WeaponRecoilPattern;                               // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FAttributeEffectData                   AttEffect_MaxLoadedAmmo_Mod1;                      // 0x0AC0(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   AttEffect_CurrentAmmo_Mod1;                        // 0x0B08(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   AttEffect_MaxLoadedAmmo_Mod2;                      // 0x0B50(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   AttEffect_CurrentAmmo_Mod2;                        // 0x0B98(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   AttEffect_ReloadSpeed_Mod3;                        // 0x0BE0(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         FXHeatAmount;                                      // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2C[0x4];                                      // 0x0C2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HeatDecrementTimer;                                // 0x0C30(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UMaterialInstanceDynamic*               HeatMati;                                          // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HeatMati1P;                                        // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Material1stP;                                      // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeEffectData                   AttEffect_SingleFeedIncrement;                     // 0x0C50(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   AttEffect_FireRate_MusicalChairs;                  // 0x0C98(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         NCounter2;                                         // 0x0CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReadyForSingularityGrenade;                       // 0x0CE4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Weapon_Hardpoint_GrenadeLauncher(int32 EntryPoint);
	void BndEvt__BPWeaponFireProjectile_Gunner_GrenadeLauncher_K2Node_ComponentBoundEvent_1_WeaponUsedEvent__DelegateSignature_Weapon_Hardpoint_GrenadeLauncher();
	void K2_Initialize1P();
	void K2_InitializeMod();
	void NotifyPlayerLeaving();
	void RegisterMuzzleFX();
	void ApplyMod3AttributeEffects();
	void InitializeHardPointIronCub();
	void K2_Initialize();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_Hardpoint_GrenadeLauncher_C">();
	}
	static class AWeapon_Hardpoint_GrenadeLauncher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_Hardpoint_GrenadeLauncher_C>();
	}
};
static_assert(alignof(AWeapon_Hardpoint_GrenadeLauncher_C) == 0x000008, "Wrong alignment on AWeapon_Hardpoint_GrenadeLauncher_C");
static_assert(sizeof(AWeapon_Hardpoint_GrenadeLauncher_C) == 0x000CE8, "Wrong size on AWeapon_Hardpoint_GrenadeLauncher_C");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, UberGraphFrame_Weapon_Hardpoint_GrenadeLauncher_C) == 0x000A88, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::UberGraphFrame_Weapon_Hardpoint_GrenadeLauncher_C' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, BPWeaponFireProjectile_Gunner_GrenadeLauncher) == 0x000A90, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::BPWeaponFireProjectile_Gunner_GrenadeLauncher' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, WeaponSingleFeedReload) == 0x000A98, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::WeaponSingleFeedReload' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, WeaponHeat) == 0x000AA0, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::WeaponHeat' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, OakWeaponAudioProvider) == 0x000AA8, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::OakWeaponAudioProvider' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, StatusEffectManager) == 0x000AB0, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::StatusEffectManager' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, WeaponRecoilPattern) == 0x000AB8, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::WeaponRecoilPattern' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_MaxLoadedAmmo_Mod1) == 0x000AC0, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_MaxLoadedAmmo_Mod1' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_CurrentAmmo_Mod1) == 0x000B08, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_CurrentAmmo_Mod1' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_MaxLoadedAmmo_Mod2) == 0x000B50, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_MaxLoadedAmmo_Mod2' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_CurrentAmmo_Mod2) == 0x000B98, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_CurrentAmmo_Mod2' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_ReloadSpeed_Mod3) == 0x000BE0, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_ReloadSpeed_Mod3' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, FXHeatAmount) == 0x000C28, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::FXHeatAmount' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, HeatDecrementTimer) == 0x000C30, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::HeatDecrementTimer' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, HeatMati) == 0x000C38, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::HeatMati' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, HeatMati1P) == 0x000C40, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::HeatMati1P' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, Material1stP) == 0x000C48, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::Material1stP' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_SingleFeedIncrement) == 0x000C50, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_SingleFeedIncrement' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, AttEffect_FireRate_MusicalChairs) == 0x000C98, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::AttEffect_FireRate_MusicalChairs' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, NCounter2) == 0x000CE0, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::NCounter2' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_GrenadeLauncher_C, bReadyForSingularityGrenade) == 0x000CE4, "Member 'AWeapon_Hardpoint_GrenadeLauncher_C::bReadyForSingularityGrenade' has a wrong offset!");

}

