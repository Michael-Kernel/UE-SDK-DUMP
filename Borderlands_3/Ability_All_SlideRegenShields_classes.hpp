#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_All_SlideRegenShields

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_All_SlideRegenShields.Ability_All_SlideRegenShields_C
// 0x0048 (0x0140 - 0x00F8)
class UAbility_All_SlideRegenShields_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class AOakCharacter*                          OakChar;                                           // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_All_TriggerWhileSliding; // 0x0108(0x0028)()
	struct FTimerHandle                           EnergyTimer;                                       // 0x0130(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Energy;                                            // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyInterval;                                    // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_All_SlideRegenShields(int32 EntryPoint);
	void BuildEnergy();
	void OnActivated();
	void OnDeactivated();
	void ReleaseEnergy();
	void SlideEnd(const struct FSlideEndedDetails& Details);
	void SlideStart();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_All_SlideRegenShields_C">();
	}
	static class UAbility_All_SlideRegenShields_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_All_SlideRegenShields_C>();
	}
};
static_assert(alignof(UAbility_All_SlideRegenShields_C) == 0x000008, "Wrong alignment on UAbility_All_SlideRegenShields_C");
static_assert(sizeof(UAbility_All_SlideRegenShields_C) == 0x000140, "Wrong size on UAbility_All_SlideRegenShields_C");
static_assert(offsetof(UAbility_All_SlideRegenShields_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_All_SlideRegenShields_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_All_SlideRegenShields_C, OakChar) == 0x000100, "Member 'UAbility_All_SlideRegenShields_C::OakChar' has a wrong offset!");
static_assert(offsetof(UAbility_All_SlideRegenShields_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_All_TriggerWhileSliding) == 0x000108, "Member 'UAbility_All_SlideRegenShields_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_All_TriggerWhileSliding' has a wrong offset!");
static_assert(offsetof(UAbility_All_SlideRegenShields_C, EnergyTimer) == 0x000130, "Member 'UAbility_All_SlideRegenShields_C::EnergyTimer' has a wrong offset!");
static_assert(offsetof(UAbility_All_SlideRegenShields_C, Energy) == 0x000138, "Member 'UAbility_All_SlideRegenShields_C::Energy' has a wrong offset!");
static_assert(offsetof(UAbility_All_SlideRegenShields_C, EnergyInterval) == 0x00013C, "Member 'UAbility_All_SlideRegenShields_C::EnergyInterval' has a wrong offset!");

}

