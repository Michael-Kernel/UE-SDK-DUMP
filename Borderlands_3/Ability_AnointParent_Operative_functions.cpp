#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_AnointParent_Operative

#include "Basic.hpp"

#include "Ability_AnointParent_Operative_classes.hpp"
#include "Ability_AnointParent_Operative_parameters.hpp"


namespace SDK
{

// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.ExecuteUbergraph_Ability_AnointParent_Operative
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_AnointParent_Operative_C::ExecuteUbergraph_Ability_AnointParent_Operative(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "ExecuteUbergraph_Ability_AnointParent_Operative");

	Params::Ability_AnointParent_Operative_C_ExecuteUbergraph_Ability_AnointParent_Operative Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.BindOperativeEvents
// (BlueprintCallable, BlueprintEvent)

void UAbility_AnointParent_Operative_C::BindOperativeEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "BindOperativeEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UAbility_AnointParent_Operative_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointBarrierStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointBarrierStart(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointBarrierStart");

	Params::Ability_AnointParent_Operative_C_AnointBarrierStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointBarrierEnded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointBarrierEnded(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointBarrierEnded");

	Params::Ability_AnointParent_Operative_C_AnointBarrierEnded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointCloneStarted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointCloneStarted(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointCloneStarted");

	Params::Ability_AnointParent_Operative_C_AnointCloneStarted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointCloneEnded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointCloneEnded(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointCloneEnded");

	Params::Ability_AnointParent_Operative_C_AnointCloneEnded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointSNTRYStarted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointSNTRYStarted(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointSNTRYStarted");

	Params::Ability_AnointParent_Operative_C_AnointSNTRYStarted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointSNTRYEnded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointSNTRYEnded(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointSNTRYEnded");

	Params::Ability_AnointParent_Operative_C_AnointSNTRYEnded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointCannonActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointCannonActivated(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointCannonActivated");

	Params::Ability_AnointParent_Operative_C_AnointCannonActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointCloneSwappedPlaces
// (Public, BlueprintCallable, BlueprintEvent)

void UAbility_AnointParent_Operative_C::AnointCloneSwappedPlaces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointCloneSwappedPlaces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointOperativeActionSkillStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOperativeGadgets                       ActionSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_AnointParent_Operative_C::AnointOperativeActionSkillStart(EOperativeGadgets ActionSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointOperativeActionSkillStart");

	Params::Ability_AnointParent_Operative_C_AnointOperativeActionSkillStart Parms{};

	Parms.ActionSkill = ActionSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointOperativeActionSkillEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOperativeGadgets                       ActionSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_AnointParent_Operative_C::AnointOperativeActionSkillEnd(EOperativeGadgets ActionSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointOperativeActionSkillEnd");

	Params::Ability_AnointParent_Operative_C_AnointOperativeActionSkillEnd Parms{};

	Parms.ActionSkill = ActionSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_AnointParent_Operative.Ability_AnointParent_Operative_C.AnointOperativeIsActionAbilityActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ActionSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_AnointParent_Operative_C::AnointOperativeIsActionAbilityActive(class UClass* ActionSkill, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_AnointParent_Operative_C", "AnointOperativeIsActionAbilityActive");

	Params::Ability_AnointParent_Operative_C_AnointOperativeIsActionAbilityActive Parms{};

	Parms.ActionSkill = ActionSkill;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}

}

