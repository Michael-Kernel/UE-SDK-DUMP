#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitReactionLayer_AdjustForHitPhysicalShield

#include "Basic.hpp"

#include "GbxGameSystemCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HitReactionLayer_AdjustForHitPhysicalShield.HitReactionLayer_AdjustForHitPhysicalShield_C
// 0x0000 (0x0030 - 0x0030)
class UHitReactionLayer_AdjustForHitPhysicalShield_C final : public UHitReactionLayer_Blueprint
{
public:
	class UHitReactionTag* EvaluateTag(class UDamageComponent* Receiver, class UDamageCauserComponent* Causer, float DamageAmount, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class UHitRegionData* HitRegion, float Force, class UHitReactionTag* PreviousTag) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HitReactionLayer_AdjustForHitPhysicalShield_C">();
	}
	static class UHitReactionLayer_AdjustForHitPhysicalShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitReactionLayer_AdjustForHitPhysicalShield_C>();
	}
};
static_assert(alignof(UHitReactionLayer_AdjustForHitPhysicalShield_C) == 0x000008, "Wrong alignment on UHitReactionLayer_AdjustForHitPhysicalShield_C");
static_assert(sizeof(UHitReactionLayer_AdjustForHitPhysicalShield_C) == 0x000030, "Wrong size on UHitReactionLayer_AdjustForHitPhysicalShield_C");

}

