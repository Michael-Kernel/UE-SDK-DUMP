#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_WhiskeyTangoFoxtrotIED

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"


namespace SDK::Params
{

// Function Proj_WhiskeyTangoFoxtrotIED.Proj_WhiskeyTangoFoxtrotIED_C.ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED
// 0x01F8 (0x01F8 - 0x0000)
struct Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0008(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0030(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00C0(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0150(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_ComponentBoundEvent_TouchingActor;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsPlayer;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_ComponentTouched;       // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED) == 0x000008, "Wrong alignment on Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED");
static_assert(sizeof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED) == 0x0001F8, "Wrong size on Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, EntryPoint) == 0x000000, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, CallFunc_PostEventAtLocation_ReturnValue) == 0x000008, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, K2Node_Event_Hit1) == 0x000030, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, K2Node_Event_Hit) == 0x0000C0, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, Temp_struct_Variable) == 0x000150, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, K2Node_ComponentBoundEvent_TouchingActor) == 0x0001E0, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::K2Node_ComponentBoundEvent_TouchingActor' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, K2Node_ComponentBoundEvent_bIsPlayer) == 0x0001E8, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::K2Node_ComponentBoundEvent_bIsPlayer' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED, K2Node_ComponentBoundEvent_ComponentTouched) == 0x0001F0, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_ExecuteUbergraph_Proj_WhiskeyTangoFoxtrotIED::K2Node_ComponentBoundEvent_ComponentTouched' has a wrong offset!");

// Function Proj_WhiskeyTangoFoxtrotIED.Proj_WhiskeyTangoFoxtrotIED_C.BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED
// 0x0018 (0x0018 - 0x0000)
struct Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED final
{
public:
	class AActor*                                 TouchingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayer;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        ComponentTouched;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED) == 0x000008, "Wrong alignment on Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED");
static_assert(sizeof(Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED) == 0x000018, "Wrong size on Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED, TouchingActor) == 0x000000, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED::TouchingActor' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED, bIsPlayer) == 0x000008, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED::bIsPlayer' has a wrong offset!");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED, ComponentTouched) == 0x000010, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_BndEvt__ProximityTrigger_K2Node_ComponentBoundEvent_2_OakTouchedTriggerDelegate__DelegateSignature_Proj_WhiskeyTangoFoxtrotIED::ComponentTouched' has a wrong offset!");

// Function Proj_WhiskeyTangoFoxtrotIED.Proj_WhiskeyTangoFoxtrotIED_C.OnHitEnemy
// 0x0090 (0x0090 - 0x0000)
struct Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy) == 0x000008, "Wrong alignment on Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy");
static_assert(sizeof(Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy) == 0x000090, "Wrong size on Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy, Hit) == 0x000000, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_OnHitEnemy::Hit' has a wrong offset!");

// Function Proj_WhiskeyTangoFoxtrotIED.Proj_WhiskeyTangoFoxtrotIED_C.OnHitWorld
// 0x0090 (0x0090 - 0x0000)
struct Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld) == 0x000008, "Wrong alignment on Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld");
static_assert(sizeof(Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld) == 0x000090, "Wrong size on Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld");
static_assert(offsetof(Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld, Hit) == 0x000000, "Member 'Proj_WhiskeyTangoFoxtrotIED_C_OnHitWorld::Hit' has a wrong offset!");

}

