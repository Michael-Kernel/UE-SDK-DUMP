#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_MAL_SR

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_MAL_SR.BPAnim_MAL_SR_C.ExecuteUbergraph_BPAnim_MAL_SR
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewMode;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR) == 0x000004, "Wrong alignment on BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR");
static_assert(sizeof(BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR) == 0x000008, "Wrong size on BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR");
static_assert(offsetof(BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR, EntryPoint) == 0x000000, "Member 'BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR, K2Node_Event_NewMode) == 0x000004, "Member 'BPAnim_MAL_SR_C_ExecuteUbergraph_BPAnim_MAL_SR::K2Node_Event_NewMode' has a wrong offset!");

// Function BPAnim_MAL_SR.BPAnim_MAL_SR_C.BlueprintSwitchedMode
// 0x0004 (0x0004 - 0x0000)
struct BPAnim_MAL_SR_C_BlueprintSwitchedMode final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_MAL_SR_C_BlueprintSwitchedMode) == 0x000004, "Wrong alignment on BPAnim_MAL_SR_C_BlueprintSwitchedMode");
static_assert(sizeof(BPAnim_MAL_SR_C_BlueprintSwitchedMode) == 0x000004, "Wrong size on BPAnim_MAL_SR_C_BlueprintSwitchedMode");
static_assert(offsetof(BPAnim_MAL_SR_C_BlueprintSwitchedMode, NewMode) == 0x000000, "Member 'BPAnim_MAL_SR_C_BlueprintSwitchedMode::NewMode' has a wrong offset!");

// Function BPAnim_MAL_SR.BPAnim_MAL_SR_C.UpdateIdleAnim
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_MAL_SR_C_UpdateIdleAnim final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_MAL_SR_C_UpdateIdleAnim) == 0x000004, "Wrong alignment on BPAnim_MAL_SR_C_UpdateIdleAnim");
static_assert(sizeof(BPAnim_MAL_SR_C_UpdateIdleAnim) == 0x000008, "Wrong size on BPAnim_MAL_SR_C_UpdateIdleAnim");
static_assert(offsetof(BPAnim_MAL_SR_C_UpdateIdleAnim, A) == 0x000000, "Member 'BPAnim_MAL_SR_C_UpdateIdleAnim::A' has a wrong offset!");
static_assert(offsetof(BPAnim_MAL_SR_C_UpdateIdleAnim, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BPAnim_MAL_SR_C_UpdateIdleAnim::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

