#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_NogBadass_DroneLaserWire

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.ExecuteUbergraph_Proj_NogBadass_DroneLaserWire
// 0x0370 (0x0370 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OptionalYOffset;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       K2Node_ComponentBoundEvent_DamageReceiver;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Damage;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_ComponentBoundEvent_DamageType;             // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_ComponentBoundEvent_DamageSource;           // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_InstigatedBy;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 K2Node_ComponentBoundEvent_Details;                // 0x0068(0x0058)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x00E0(0x0028)(NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0110(0x0028)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0180(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyChild;                              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             K2Node_Event_ElementType;                          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakAIBalancedProjectile*               K2Node_DynamicCast_AsOak_AIBalanced_Projectile;    // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0234(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue1;     // 0x0244(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue2;     // 0x0254(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue3;     // 0x0264(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue4;     // 0x0274(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_TrialBoss_C>      K2Node_DynamicCast_AsBPI_Trial_Boss;               // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOakElementalType                             CallFunc_GetElement_CurrentElement;                // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x02A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x02B0(0x0018)()
	struct FVector                                K2Node_Select_Default;                             // 0x02C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable1;                             // 0x02E0(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire) == 0x000370, "Wrong size on Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, EntryPoint) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_HasAuthority_ReturnValue) == 0x000006, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, Temp_struct_Variable) == 0x000008, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_HasAuthority_ReturnValue1) == 0x000014, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_MyTarget) == 0x000018, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_OptionalYOffset) == 0x000020, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_OptionalYOffset' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000030, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_DamageReceiver) == 0x000038, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_Damage) == 0x000040, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_Damage' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_DamageType) == 0x000048, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_DamageSource) == 0x000050, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_InstigatedBy) == 0x000058, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_DamageCauser) == 0x000060, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_ComponentBoundEvent_Details) == 0x000068, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_ComponentBoundEvent_Details' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_EndPlayReason) == 0x0000C8, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000CC, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_MakeStruct_LightBeamAttachment) == 0x0000E0, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000108, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_MakeStruct_LightBeamAttachment1) == 0x000110, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_IsValid_ReturnValue1) == 0x000138, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_MyComp) == 0x000140, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_Other) == 0x000148, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_OtherComp) == 0x000150, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_bSelfMoved) == 0x000158, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_HitLocation) == 0x00015C, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_HitNormal) == 0x000168, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_NormalImpulse) == 0x000174, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_Hit) == 0x000180, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_IsValid_ReturnValue2) == 0x000210, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_MyChild) == 0x000218, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_MyChild' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_ElementType) == 0x000220, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_ElementType' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_DynamicCast_AsOak_AIBalanced_Projectile) == 0x000228, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_DynamicCast_AsOak_AIBalanced_Projectile' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_SwitchEnum_CmpSuccess) == 0x000231, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000234, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetVectorParameterValue_ReturnValue1) == 0x000244, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetVectorParameterValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetVectorParameterValue_ReturnValue2) == 0x000254, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetVectorParameterValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetVectorParameterValue_ReturnValue3) == 0x000264, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetVectorParameterValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetVectorParameterValue_ReturnValue4) == 0x000274, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetVectorParameterValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetOwner_ReturnValue1) == 0x000288, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_DynamicCast_AsBPI_Trial_Boss) == 0x000290, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_DynamicCast_AsBPI_Trial_Boss' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_DynamicCast_bSuccess1) == 0x0002A0, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetElement_CurrentElement) == 0x0002A1, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetElement_CurrentElement' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, Temp_bool_Variable) == 0x0002A2, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x0002A4, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_PostEventAtLocation_ReturnValue) == 0x0002B0, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Select_Default) == 0x0002C8, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, K2Node_Event_DeltaSeconds) == 0x0002D4, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, CallFunc_GetMaxSpeed_ReturnValue) == 0x0002D8, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire, Temp_struct_Variable1) == 0x0002E0, "Member 'Proj_NogBadass_DroneLaserWire_C_ExecuteUbergraph_Proj_NogBadass_DroneLaserWire::Temp_struct_Variable1' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_ReceiveTick) == 0x000004, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_ReceiveTick");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_ReceiveTick) == 0x000004, "Wrong size on Proj_NogBadass_DroneLaserWire_C_ReceiveTick");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.InitializeElement
// 0x0001 (0x0001 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_InitializeElement final
{
public:
	EOakElementalType                             ElementType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_InitializeElement) == 0x000001, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_InitializeElement");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_InitializeElement) == 0x000001, "Wrong size on Proj_NogBadass_DroneLaserWire_C_InitializeElement");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_InitializeElement, ElementType) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_InitializeElement::ElementType' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.NogBadass_Projectiles_LaserWireSetChild
// 0x0008 (0x0008 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild final
{
public:
	class AActor*                                 MyChild;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild) == 0x000008, "Wrong size on Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild, MyChild) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_LaserWireSetChild::MyChild' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_ReceiveHit");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit) == 0x0000D0, "Wrong size on Proj_NogBadass_DroneLaserWire_C_ReceiveHit");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, MyComp) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, Other) == 0x000008, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, HitNormal) == 0x000028, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveHit, Hit) == 0x000040, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveHit::Hit' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay) == 0x000001, "Wrong size on Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone
// 0x0088 (0x0088 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0030(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone) == 0x000088, "Wrong size on Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, DamageReceiver) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::DamageReceiver' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, Damage) == 0x000008, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::Damage' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, DamageType) == 0x000010, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::DamageType' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, DamageSource) == 0x000018, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::DamageSource' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, InstigatedBy) == 0x000020, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, DamageCauser) == 0x000028, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::DamageCauser' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone, Details) == 0x000030, "Member 'Proj_NogBadass_DroneLaserWire_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_Drone::Details' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.NogBadass_Projectiles_BombLaunch
// 0x0010 (0x0010 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OptionalYOffset;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch) == 0x000010, "Wrong size on Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch, MyTarget) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch::MyTarget' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch, OptionalYOffset) == 0x000008, "Member 'Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_BombLaunch::OptionalYOffset' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_UserConstructionScript) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_UserConstructionScript");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_UserConstructionScript) == 0x000008, "Wrong size on Proj_NogBadass_DroneLaserWire_C_UserConstructionScript");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.UpdateHomingOffset
// 0x0180 (0x0180 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset final
{
public:
	bool                                          LeftSide;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0058(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetActorSocket_ReturnValue;               // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x00BC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X2;                           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset) == 0x000010, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset) == 0x000180, "Wrong size on Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, LeftSide) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::LeftSide' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, Temp_bool_Variable) == 0x000001, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, Temp_float_Variable) == 0x000004, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, Temp_float_Variable1) == 0x000008, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakTransform_Location) == 0x00004C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakTransform_Rotation) == 0x000058, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakTransform_Scale) == 0x000064, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_X) == 0x000070, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_Y) == 0x000074, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_Z) == 0x000078, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_GetActorSocket_ReturnValue) == 0x000080, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_GetActorSocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakTransform_Location1) == 0x0000B0, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakTransform_Rotation1) == 0x0000BC, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakTransform_Scale1) == 0x0000C8, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000D4, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_X1) == 0x0000EC, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_Y1) == 0x0000F0, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_Z1) == 0x0000F4, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, K2Node_Select_Default) == 0x000104, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000108, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_IsValid_ReturnValue) == 0x000114, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_X2) == 0x000118, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_Y2) == 0x00011C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_BreakVector_Z2) == 0x000120, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_MakeVector_ReturnValue1) == 0x000124, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000130, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00013C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000148, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000154, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset, CallFunc_Add_VectorVector_ReturnValue1) == 0x00016C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateHomingOffset::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.UpdateMaxSpeed
// 0x00C8 (0x00C8 - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed final
{
public:
	class AActor*                                 OtherDrone;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OtherDroneHomingLocation;                          // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NogBadass_Projectiles_C> K2Node_DynamicCast_AsBPI_Nog_Badass_Projectiles;   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NogBadass_Projectiles_GetHomingTargetLocation_Location; // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_NogBadass_Projectiles_C> K2Node_DynamicCast_AsBPI_Nog_Badass_Projectiles1;  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NogBadass_Projectiles_GetHomingTargetLocation_Location1; // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed) == 0x000008, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed) == 0x0000C8, "Wrong size on Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, OtherDrone) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::OtherDrone' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, OtherDroneHomingLocation) == 0x000008, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::OtherDroneHomingLocation' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, Temp_bool_Variable) == 0x000014, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, Temp_bool_Variable1) == 0x000015, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000024, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x00003C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_VSize_ReturnValue1) == 0x00004C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000058, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, K2Node_DynamicCast_AsBPI_Nog_Badass_Projectiles) == 0x000060, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::K2Node_DynamicCast_AsBPI_Nog_Badass_Projectiles' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_NogBadass_Projectiles_GetHomingTargetLocation_Location) == 0x000074, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_NogBadass_Projectiles_GetHomingTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, K2Node_Select_Default) == 0x000080, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_NormalizeToRange_ReturnValue) == 0x000084, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_NormalizeToRange_ReturnValue1) == 0x000088, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_NormalizeToRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_FClamp_ReturnValue) == 0x00008C, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_FClamp_ReturnValue1) == 0x000090, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Lerp_ReturnValue) == 0x000094, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, K2Node_DynamicCast_AsBPI_Nog_Badass_Projectiles1) == 0x000098, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::K2Node_DynamicCast_AsBPI_Nog_Badass_Projectiles1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, K2Node_DynamicCast_bSuccess1) == 0x0000A8, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_IsValid_ReturnValue1) == 0x0000A9, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_NogBadass_Projectiles_GetHomingTargetLocation_Location1) == 0x0000AC, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_NogBadass_Projectiles_GetHomingTargetLocation_Location1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B8, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000BC, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed, K2Node_Select1_Default) == 0x0000C0, "Member 'Proj_NogBadass_DroneLaserWire_C_UpdateMaxSpeed::K2Node_Select1_Default' has a wrong offset!");

// Function Proj_NogBadass_DroneLaserWire.Proj_NogBadass_DroneLaserWire_C.NogBadass_Projectiles_GetHomingTargetLocation
// 0x000C (0x000C - 0x0000)
struct Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation) == 0x000004, "Wrong alignment on Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation");
static_assert(sizeof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation) == 0x00000C, "Wrong size on Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation");
static_assert(offsetof(Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation, Location) == 0x000000, "Member 'Proj_NogBadass_DroneLaserWire_C_NogBadass_Projectiles_GetHomingTargetLocation::Location' has a wrong offset!");

}

