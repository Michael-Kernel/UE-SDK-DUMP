#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_Global_Sliding

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C
// 0x0048 (0x08F0 - 0x08A8)
class UControlledMove_Global_Sliding_C final : public UOakControlledMove
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08A8(0x0008)(Transient, DuplicateTransient)
	class APlayerController*                      PlayerController;                                  // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x08B8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideTime;                                         // 0x08C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideOffLedgeMaxDuration;                          // 0x08C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ArtifactSlideDamageType;                           // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPChar_Player_C*                       BPChar_Player;                                     // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideDistance;                                     // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E4[0x4];                                      // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DamageScaleCurve;                                  // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ControlledMove_Global_Sliding(int32 EntryPoint);
	void OnServerStop(bool bInterrupted);
	void OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnServerStart(float MoveDuration, class AActor* TargetActor, class AActor* Instigator);
	void OnHitDamageable(class AActor* HitActor, const struct FVector& HitNormal);
	void MovementChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void SlideDuration();
	void OnHitWorld(class AActor* HitActor, const struct FVector& HitNormal);
	void OnHitTargetable(class AActor* HitActor, const struct FVector& HitNormal);
	void OnStop(bool bInterrupted);
	void OnStart(float MoveDuration, class AActor* TargetActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ControlledMove_Global_Sliding_C">();
	}
	static class UControlledMove_Global_Sliding_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlledMove_Global_Sliding_C>();
	}
};
static_assert(alignof(UControlledMove_Global_Sliding_C) == 0x000008, "Wrong alignment on UControlledMove_Global_Sliding_C");
static_assert(sizeof(UControlledMove_Global_Sliding_C) == 0x0008F0, "Wrong size on UControlledMove_Global_Sliding_C");
static_assert(offsetof(UControlledMove_Global_Sliding_C, UberGraphFrame) == 0x0008A8, "Member 'UControlledMove_Global_Sliding_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, PlayerController) == 0x0008B0, "Member 'UControlledMove_Global_Sliding_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, StartLocation) == 0x0008B8, "Member 'UControlledMove_Global_Sliding_C::StartLocation' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, SlideTime) == 0x0008C4, "Member 'UControlledMove_Global_Sliding_C::SlideTime' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, SlideOffLedgeMaxDuration) == 0x0008C8, "Member 'UControlledMove_Global_Sliding_C::SlideOffLedgeMaxDuration' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, ArtifactSlideDamageType) == 0x0008D0, "Member 'UControlledMove_Global_Sliding_C::ArtifactSlideDamageType' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, BPChar_Player) == 0x0008D8, "Member 'UControlledMove_Global_Sliding_C::BPChar_Player' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, SlideDistance) == 0x0008E0, "Member 'UControlledMove_Global_Sliding_C::SlideDistance' has a wrong offset!");
static_assert(offsetof(UControlledMove_Global_Sliding_C, DamageScaleCurve) == 0x0008E8, "Member 'UControlledMove_Global_Sliding_C::DamageScaleCurve' has a wrong offset!");

}

