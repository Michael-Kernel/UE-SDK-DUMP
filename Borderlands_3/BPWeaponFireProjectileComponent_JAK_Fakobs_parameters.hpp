#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeaponFireProjectileComponent_JAK_Fakobs

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPWeaponFireProjectileComponent_JAK_Fakobs.BPWeaponFireProjectileComponent_JAK_Fakobs_C.ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs
// 0x0028 (0x0028 - 0x0000)
struct BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_InputChannel;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(uint8 InputChannel)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs) == 0x000008, "Wrong alignment on BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs");
static_assert(sizeof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs) == 0x000028, "Wrong size on BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs");
static_assert(offsetof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs, EntryPoint) == 0x000000, "Member 'BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs, K2Node_CustomEvent_InputChannel) == 0x000004, "Member 'BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs::K2Node_CustomEvent_InputChannel' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs, CallFunc_GetWeapon_ReturnValue) == 0x000020, "Member 'BPWeaponFireProjectileComponent_JAK_Fakobs_C_ExecuteUbergraph_BPWeaponFireProjectileComponent_JAK_Fakobs::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");

// Function BPWeaponFireProjectileComponent_JAK_Fakobs.BPWeaponFireProjectileComponent_JAK_Fakobs_C.UsedWeapon
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon final
{
public:
	uint8                                         InputChannel;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon) == 0x000001, "Wrong alignment on BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon");
static_assert(sizeof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon) == 0x000001, "Wrong size on BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon");
static_assert(offsetof(BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon, InputChannel) == 0x000000, "Member 'BPWeaponFireProjectileComponent_JAK_Fakobs_C_UsedWeapon::InputChannel' has a wrong offset!");

}

