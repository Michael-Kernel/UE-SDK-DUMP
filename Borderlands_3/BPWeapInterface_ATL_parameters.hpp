#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeapInterface_ATL

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPWeapInterface_ATL.BPWeapInterface_ATL_C.SetEmissiveData
// 0x0060 (0x0060 - 0x0000)
struct BPWeapInterface_ATL_C_SetEmissiveData final
{
public:
	struct FLinearColor                           BaseColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MarkerBaseColor;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MarkerHighlightColor;                              // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HomingOverrideBase;                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewParamHomingOverrideHighlight;                   // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeapInterface_ATL_C_SetEmissiveData) == 0x000004, "Wrong alignment on BPWeapInterface_ATL_C_SetEmissiveData");
static_assert(sizeof(BPWeapInterface_ATL_C_SetEmissiveData) == 0x000060, "Wrong size on BPWeapInterface_ATL_C_SetEmissiveData");
static_assert(offsetof(BPWeapInterface_ATL_C_SetEmissiveData, BaseColor) == 0x000000, "Member 'BPWeapInterface_ATL_C_SetEmissiveData::BaseColor' has a wrong offset!");
static_assert(offsetof(BPWeapInterface_ATL_C_SetEmissiveData, HighlightColor) == 0x000010, "Member 'BPWeapInterface_ATL_C_SetEmissiveData::HighlightColor' has a wrong offset!");
static_assert(offsetof(BPWeapInterface_ATL_C_SetEmissiveData, MarkerBaseColor) == 0x000020, "Member 'BPWeapInterface_ATL_C_SetEmissiveData::MarkerBaseColor' has a wrong offset!");
static_assert(offsetof(BPWeapInterface_ATL_C_SetEmissiveData, MarkerHighlightColor) == 0x000030, "Member 'BPWeapInterface_ATL_C_SetEmissiveData::MarkerHighlightColor' has a wrong offset!");
static_assert(offsetof(BPWeapInterface_ATL_C_SetEmissiveData, HomingOverrideBase) == 0x000040, "Member 'BPWeapInterface_ATL_C_SetEmissiveData::HomingOverrideBase' has a wrong offset!");
static_assert(offsetof(BPWeapInterface_ATL_C_SetEmissiveData, NewParamHomingOverrideHighlight) == 0x000050, "Member 'BPWeapInterface_ATL_C_SetEmissiveData::NewParamHomingOverrideHighlight' has a wrong offset!");

}

