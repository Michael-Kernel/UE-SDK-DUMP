#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Nog

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "BPChar_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Nog.BPChar_Nog_C
// 0x0260 (0x25F0 - 0x2390)
#pragma pack(push, 0x1)
class alignas(0x10) ABPChar_Nog_C : public ABPChar_Enemy_C
{
public:
	uint8                                         Pad_2381[0x7];                                     // 0x2381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Nog_C;                       // 0x2388(0x0008)(Transient, DuplicateTransient)
	class UGbxSkeletalMeshComponent*              DroneBoard;                                        // 0x2390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DroneTrail;                                     // 0x2398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_DroneTrail;                                 // 0x23A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakNogDroneContainerComponent*         DroneMesh;                                         // 0x23A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_NogDrone_L;                                     // 0x23B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_NogDrone_R;                                     // 0x23B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DroneHandR_DigistructOut;                       // 0x23C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DroneHandR_DigistructIn;                        // 0x23C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DroneHandL_DigistructOut;                       // 0x23D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_DroneHandL_DigistructIn;                        // 0x23D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_DroneHandR;                                 // 0x23E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_DroneHandL;                                 // 0x23E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Audio_Attack_Component;                            // 0x23F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Audio_Default_Component;                           // 0x23F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFoleyMainComponent*                    FoleyMain;                                         // 0x2400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_HandTrail;                                      // 0x2408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule_BackPack;                                  // 0x2410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentMedic;                                      // 0x2418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        DroneDeathFX;                                      // 0x2420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DroneOrder_DeployAll;                              // 0x2428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 DroneOrder_DeployHalf;                             // 0x2438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class AActor*>                         MultiDroneTargets;                                 // 0x2448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FEnvQueryParams                        DroneAttackMultiTargets;                           // 0x2458(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class AActor*                                 MostRecentAttacker;                                // 0x2510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DroneHealthPctOfNog;                               // 0x2518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251C[0x4];                                     // 0x251C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnvQueryParams                        NogBuffQueryService;                               // 0x2520(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AActor*>                         BuffTargets;                                       // 0x25D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BPChar_Nog(int32 EntryPoint);
	void BndEvt__StatusEffectManagerComponent_K2Node_ComponentBoundEvent_3_CryoFreezeEvent__DelegateSignature_BPChar_Nog();
	void InterruptBuffDrone();
	void NogCleanupOnDeath();
	void Enemy_OnPhaseLockStart();
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_2_TakeAnyPipelineDamageDelegate__DelegateSignature_BPChar_Nog(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_HitReactionPlayedDelegate__DelegateSignature_BPChar_NogNinja_UNIX1520527054(class AActor* DamageReceiver, class AActor* DamageCauser, class UHitReactionTag* Tag);
	void HoverboardDestroyed(class AActor* DamageCauser, bool PlayHitReaction);
	void ResetHoverboardDestroyedEvent();
	void BndEvt__Stance_K2Node_ComponentBoundEvent_1_StanceChangedEvent__DelegateSignature_BPChar_Nog(const struct FStanceChangedEventArgs& Args);
	void DamageEventDroneMesh(const struct FDamageReactionEventSummary& Damage);
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Nog(class AActor* DamageReceiver, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void Nog_DroneThrow_Launch(class AActor* MyTarget, bool IsHandL);
	void Nog_DroneThrow_Interrupt(bool IsHandL);
	void Nog_DroneThrow_InHand(bool IsHandL);
	void Nog_DeployLaserWire(int32 WhichWave, class AActor* MyTarget);
	void Nog_BuildMultiTargetAttackList();
	void Nog_BuffDrone_NotifyDestroyed(const struct FDataTableRowHandle& NogBuff);
	void Nog_SpawnBuffDrone(const struct FDataTableRowHandle& NogBuff, bool FromDroneMesh);
	void DamageNogBackpack(const struct FDamageReactionEventSummary& Damage);
	void Nog_ToggleStaticDroneBoard(bool EnableStaticBoard);
	void Nog_SetImmuneToVehicleImpact(bool Enable);
	void Nog_MindControlled(float Duration);
	void HT_InformIntentToHeal(class AActor* HealingSource);
	void HT_BeginReceiveHealing(class AActor* HealingSource);
	void HT_EndReceiveHealing(class AActor* HealingSource);
	void Nog_BuffDrone_SpecialBuff_Ended();
	void Nog_BuffDrone_SpecialBuff_Began();
	void Nog_BuffDrone_Detached(class AActor* BuffDrone);
	void Nog_BuffDrone_Attached(class AActor* BuffDrone);
	void GbxAsyncRequest_Spawned_90D8F20D472FC5E10A00AEB4BB8BCB8A(class AActor* Actor, int32 InstanceIndex);
	void GbxAsyncRequest_Spawned_AC7A20C543BCB0CE0F32E294ED47D060(class AActor* Actor, int32 InstanceIndex);
	void Success_180AD9934CBB8443AA3B0588D11775F6(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor);
	void Failure_180AD9934CBB8443AA3B0588D11775F6(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor);
	void GbxAsyncRequest_Spawned_151BD4A747574FF1DDF8B7BAACD69189(class AActor* Actor, int32 InstanceIndex);
	void Success_E07CDB30471284E5ED4C7DB08D1FA7EF(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor);
	void Failure_E07CDB30471284E5ED4C7DB08D1FA7EF(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor);
	void OnEnd_914D29634E40E124EDE4E293E40DEDBF(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_914D29634E40E124EDE4E293E40DEDBF();
	void OnEnd_92A054E44CB635705337C9A4C0439269(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_92A054E44CB635705337C9A4C0439269();
	void UserConstructionScript();
	void GetLaserWireSpawnTransform(int32 WhichWave, struct FTransform* SpawnTransformL, struct FTransform* SpawnTransformR);
	void SetNogCanBeFrozen(bool CanBeFrozen);
	void InitFXTrailParams();
	void EvalNumBuffDronesToSpawn(class FName BuffName, const struct FStruct_NogBuff& NogBuff, TArray<class AActor*>& BuffTargets_0, int32* NumToBuff);
	void EvalBuffDroneTransform(int32 Index_0, bool FromDroneMesh, struct FTransform* DroneTransform);
	void Nog_MultiTargetAttack_GetTarget(int32 TargetIndex, class AActor* OptionalDefaultTarget, class AActor** MyTarget);
	void Nog_GetDroneContainer(class UOakNogDroneContainerComponent** DroneContainer);
	void Nog_GetDroneHealthPctOfNog(float* HealthPctOfNog);
	void Nog_GetDroneMaterial(class UMaterialInterface** DroneMaterial);
	void Nog_GetMultiTargetAttackList(TArray<class AActor*>* TargetList);
	void Nog_BuffDrone_GetAttachSocket(class FName* Socket, struct FTransform* SocketTransform, class USceneComponent** SocketComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Nog_C">();
	}
	static class ABPChar_Nog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Nog_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABPChar_Nog_C) == 0x000010, "Wrong alignment on ABPChar_Nog_C");
static_assert(sizeof(ABPChar_Nog_C) == 0x0025F0, "Wrong size on ABPChar_Nog_C");
static_assert(offsetof(ABPChar_Nog_C, UberGraphFrame_BPChar_Nog_C) == 0x002388, "Member 'ABPChar_Nog_C::UberGraphFrame_BPChar_Nog_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneBoard) == 0x002390, "Member 'ABPChar_Nog_C::DroneBoard' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, PS_DroneTrail) == 0x002398, "Member 'ABPChar_Nog_C::PS_DroneTrail' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, Switch_DroneTrail) == 0x0023A0, "Member 'ABPChar_Nog_C::Switch_DroneTrail' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneMesh) == 0x0023A8, "Member 'ABPChar_Nog_C::DroneMesh' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, SM_NogDrone_L) == 0x0023B0, "Member 'ABPChar_Nog_C::SM_NogDrone_L' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, SM_NogDrone_R) == 0x0023B8, "Member 'ABPChar_Nog_C::SM_NogDrone_R' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, PS_DroneHandR_DigistructOut) == 0x0023C0, "Member 'ABPChar_Nog_C::PS_DroneHandR_DigistructOut' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, PS_DroneHandR_DigistructIn) == 0x0023C8, "Member 'ABPChar_Nog_C::PS_DroneHandR_DigistructIn' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, PS_DroneHandL_DigistructOut) == 0x0023D0, "Member 'ABPChar_Nog_C::PS_DroneHandL_DigistructOut' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, PS_DroneHandL_DigistructIn) == 0x0023D8, "Member 'ABPChar_Nog_C::PS_DroneHandL_DigistructIn' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, Switch_DroneHandR) == 0x0023E0, "Member 'ABPChar_Nog_C::Switch_DroneHandR' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, Switch_DroneHandL) == 0x0023E8, "Member 'ABPChar_Nog_C::Switch_DroneHandL' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, Audio_Attack_Component) == 0x0023F0, "Member 'ABPChar_Nog_C::Audio_Attack_Component' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, Audio_Default_Component) == 0x0023F8, "Member 'ABPChar_Nog_C::Audio_Default_Component' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, FoleyMain) == 0x002400, "Member 'ABPChar_Nog_C::FoleyMain' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, PS_HandTrail) == 0x002408, "Member 'ABPChar_Nog_C::PS_HandTrail' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, Capsule_BackPack) == 0x002410, "Member 'ABPChar_Nog_C::Capsule_BackPack' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, CurrentMedic) == 0x002418, "Member 'ABPChar_Nog_C::CurrentMedic' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneDeathFX) == 0x002420, "Member 'ABPChar_Nog_C::DroneDeathFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneOrder_DeployAll) == 0x002428, "Member 'ABPChar_Nog_C::DroneOrder_DeployAll' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneOrder_DeployHalf) == 0x002438, "Member 'ABPChar_Nog_C::DroneOrder_DeployHalf' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, MultiDroneTargets) == 0x002448, "Member 'ABPChar_Nog_C::MultiDroneTargets' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneAttackMultiTargets) == 0x002458, "Member 'ABPChar_Nog_C::DroneAttackMultiTargets' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, MostRecentAttacker) == 0x002510, "Member 'ABPChar_Nog_C::MostRecentAttacker' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, DroneHealthPctOfNog) == 0x002518, "Member 'ABPChar_Nog_C::DroneHealthPctOfNog' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, NogBuffQueryService) == 0x002520, "Member 'ABPChar_Nog_C::NogBuffQueryService' has a wrong offset!");
static_assert(offsetof(ABPChar_Nog_C, BuffTargets) == 0x0025D8, "Member 'ABPChar_Nog_C::BuffTargets' has a wrong offset!");

}

