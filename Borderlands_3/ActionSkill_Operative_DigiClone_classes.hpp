#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionSkill_Operative_DigiClone

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActionSkill_Operative_DigiClone.ActionSkill_Operative_DigiClone_C
// 0x0188 (0x0588 - 0x0400)
class UActionSkill_Operative_DigiClone_C final : public UOakActionAbility_Digiclone
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(Transient, DuplicateTransient)
	bool                                          PanicButtonTriggered;                              // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllowJustAcceptItProjectile;                       // 0x0409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSpawnedDigiclone;                                 // 0x040A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B[0x1];                                      // 0x040B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JustAcceptItStoredDamage;                          // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        CloneExitLocationDeafultParams;                    // 0x0410(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FEnvQueryParams                        CloneExitLocationPass1Params;                      // 0x04C8(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         NovaRadius;                                        // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NovaCryoMultiplier;                                // 0x0584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ActionSkill_Operative_DigiClone(int32 EntryPoint);
	void OnCloneSwapFailed();
	void OnPlayerSwapFailed();
	void OnCloneSwapSucceeded();
	void StartSeperationAnxietyNova(const struct FVector& Loc);
	void OnPlayerSwapSucceeded();
	void OnPlayerSwapStarted();
	void OnCloneSwapStarted();
	void Just_Accept_It_Timer_Done();
	void NotifyPanicButtonTriggered();
	void CancelDetonateClone();
	void BeginDetonateClone();
	void OnCorsicanDamage(float Damage, class APawn* DamageSource);
	void ReleaseDigiclone(class AOakCharacter* Digiclone);
	void SwapPlaces(ECloneSwapReason Reason);
	void OnStartActionAbility();
	void Corsican(float Damage, class APawn* DamageSource);
	void Add_Swap_Places_Modifier();
	void StartDistractionPrinciple();
	class AOakCharacter* SpawnNewDigiclone(const struct FVector& Location);
	bool TryJustAcceptRefund(float Damage, const struct FVector& HitLocation, const struct FVector& HitDirection);
	void DoBurst();
	void GetDigicloneClass(int32 GrenadeSpawnCost, class UClass** Res);
	void GetDigiCloneGrenadeSpawnCost(int32* Res);
	void PayDigiCloneSpawnCost(int32 GrenadeSpawnCost);
	void PlayDigiCloneSpawnFX(class ABPChar_DigiClone_Base_C* NewClone);
	void GetQueryParamsForCloneSwapLocationAttempt(int32 Attempt, struct FEnvQueryParams* Params_0, class AActor** QueryContext);
	void Is_DigiClone_Active(bool* Return);
	void GetDigiCloneReference(class AActor** Digiclone);

	float GetCooldownRestartPercent() const;
	bool ShouldAbortActivation(uint8* OutAbortCode) const;
	bool ShouldStopAbilityOnPawnSlotComponentAttach() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActionSkill_Operative_DigiClone_C">();
	}
	static class UActionSkill_Operative_DigiClone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionSkill_Operative_DigiClone_C>();
	}
};
static_assert(alignof(UActionSkill_Operative_DigiClone_C) == 0x000008, "Wrong alignment on UActionSkill_Operative_DigiClone_C");
static_assert(sizeof(UActionSkill_Operative_DigiClone_C) == 0x000588, "Wrong size on UActionSkill_Operative_DigiClone_C");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, UberGraphFrame) == 0x000400, "Member 'UActionSkill_Operative_DigiClone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, PanicButtonTriggered) == 0x000408, "Member 'UActionSkill_Operative_DigiClone_C::PanicButtonTriggered' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, AllowJustAcceptItProjectile) == 0x000409, "Member 'UActionSkill_Operative_DigiClone_C::AllowJustAcceptItProjectile' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, bSpawnedDigiclone) == 0x00040A, "Member 'UActionSkill_Operative_DigiClone_C::bSpawnedDigiclone' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, JustAcceptItStoredDamage) == 0x00040C, "Member 'UActionSkill_Operative_DigiClone_C::JustAcceptItStoredDamage' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, CloneExitLocationDeafultParams) == 0x000410, "Member 'UActionSkill_Operative_DigiClone_C::CloneExitLocationDeafultParams' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, CloneExitLocationPass1Params) == 0x0004C8, "Member 'UActionSkill_Operative_DigiClone_C::CloneExitLocationPass1Params' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, NovaRadius) == 0x000580, "Member 'UActionSkill_Operative_DigiClone_C::NovaRadius' has a wrong offset!");
static_assert(offsetof(UActionSkill_Operative_DigiClone_C, NovaCryoMultiplier) == 0x000584, "Member 'UActionSkill_Operative_DigiClone_C::NovaCryoMultiplier' has a wrong offset!");

}

