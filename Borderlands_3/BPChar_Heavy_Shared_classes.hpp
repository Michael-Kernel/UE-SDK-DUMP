#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Heavy_Shared

#include "Basic.hpp"

#include "Enum_Heavy_WeaponSocket_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BPChar_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Heavy_Shared.BPChar_Heavy_Shared_C
// 0x0410 (0x27A0 - 0x2390)
#pragma pack(push, 0x1)
class alignas(0x10) ABPChar_Heavy_Shared_C : public ABPChar_Enemy_C
{
public:
	uint8                                         Pad_2381[0x7];                                     // 0x2381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Heavy_Shared_C;              // 0x2388(0x0008)(Transient, DuplicateTransient)
	class UCapsuleComponent*                      CollisionPawnOnly;                                 // 0x2390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_CollisionPawnOnly;                          // 0x2398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionGunR;                                     // 0x23A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionGunL;                                     // 0x23A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionBackpack;                                 // 0x23B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_CollisionGunR;                              // 0x23B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_CollisionGunL;                              // 0x23C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_CollisionBackpack;                          // 0x23C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FistChargeR;                                    // 0x23D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_FistGlow_R;                                 // 0x23D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FistChargeL;                                    // 0x23E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_FistGlow_L;                                 // 0x23E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_EyeGlow;                                        // 0x23F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_VisorFX;                                    // 0x23F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BackpackAmbient;                                // 0x2400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponChargeR;                                  // 0x2408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_WeaponFX_R;                                 // 0x2410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponChargeL;                                  // 0x2418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_WeaponFX_L;                                 // 0x2420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BackpackDamageCritical;                         // 0x2428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BackpackDamageHeavy;                            // 0x2430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BackpackDamageLight;                            // 0x2438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_BackpackFX;                                 // 0x2440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFoleyMainComponent*                    FoleyMain;                                         // 0x2448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   DefaultAudioComponent;                             // 0x2450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BeamStreamL;                                       // 0x2458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentLaunchSocket;                               // 0x2460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBackpackDamageLightEnabled;                       // 0x2468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBackpackDamageHeavyEnabled;                       // 0x2469(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_246A[0x6];                                     // 0x246A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameResourcePoolReference             ShieldPool;                                        // 0x2470(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	class UClass*                                 BackpackExplosionDamage;                           // 0x2488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        QueryFriendliesInBackpackRange;                    // 0x2490(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AActor*>                         BackpackExplosionNearbyFriendlies;                 // 0x2548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         BombDamageAreaDuration;                            // 0x2558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageDebugColor;                                  // 0x255C(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256C[0x4];                                     // 0x256C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ElementalObstructionIO;                            // 0x2570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BombTargetOffset;                                  // 0x2578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastProjectile_Speed;                             // 0x257C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastProjectile_Distance;                          // 0x2580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastProjectile_DistanceMax;                       // 0x2584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastProjectile_DistanceMin;                       // 0x2588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlastProjectile_NumProjectiles;                    // 0x258C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BackpackKiller;                                    // 0x2590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentMedic;                                      // 0x2598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       AttachedParticles;                                 // 0x25A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        BackpackDamageTransitionFX;                        // 0x25B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BackpackExplosionThresholdReached;                 // 0x25B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BackpackExplosionTriggered;                        // 0x25B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BA[0x2];                                     // 0x25BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FX_Glow_Color;                                     // 0x25BC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IceWallDistToTargetPct;                            // 0x25C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25CC[0x4];                                     // 0x25CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BeamStreamR;                                       // 0x25D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_ElementalThrower_R_Start;                    // 0x25D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_ElementalThrower_R_Stop;                     // 0x25E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Backpack_Dmg_Stage1;                         // 0x25E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Backpack_Dmg_Stage2;                         // 0x25F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Leap_Jets_Start;                             // 0x25F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 ElementalThrower_Playback_R;                       // 0x2600(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FWwisePlaybackInstance                 ElementalThrower_Playback_L;                       // 0x2618(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWwiseEvent*                            Wwise_Bomb_PwrUp;                                  // 0x2630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Leap_Jets_Stop;                              // 0x2638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_ElementalThrower_L_Start;                    // 0x2640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_ElementalThrower_L_Stop;                     // 0x2648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplatData*                             SplatBackpackExplosion;                            // 0x2650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        QueryGroundPoundLines;                             // 0x2658(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FVector>                        QueryGroundPoundLocs;                              // 0x2710(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                 LightProjectileBlast;                              // 0x2720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             ElementalMode;                                     // 0x2728(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShouldDetachBackpackOnDeath;                       // 0x2729(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_272A[0x6];                                     // 0x272A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BeamStream_Navigation;                             // 0x2730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastBigBombChargeLoc;                              // 0x2738(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingPhaselocked;                                // 0x2744(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2745[0x3];                                     // 0x2745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 HitReact_BackpackDeath;                            // 0x2748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingNavBeamAudio;                             // 0x2750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          BackpackExplosionEnableEarlyDeath;                 // 0x2751(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2752[0x6];                                     // 0x2752(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWwiseEvent*                            Wwise_Thrower_PwrUp;                               // 0x2758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Aura_Lp_Start;                               // 0x2760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Aura_Lp_Stop;                                // 0x2768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   GameplayTagsImmuneToActions;                       // 0x2770(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         BlastProjectile_AnglePct;                          // 0x2780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BackpackDeathShouldGib;                            // 0x2784(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2785[0x3];                                     // 0x2785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageJumpImpact;                                  // 0x2788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Proj_Backpack;                                     // 0x2790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPChar_Heavy_Shared(int32 EntryPoint);
	void BndEvt__StatusEffectManagerComponent_K2Node_ComponentBoundEvent_0_CryoFreezeEvent__DelegateSignature_BPChar_Heavy_Shared();
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864181(class AActor* DamageReceiver, class AActor* DamageCauser);
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864171(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser);
	void Enemy_OnPhaseLockStop();
	void Enemy_OnPhaseLockStart();
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared(class AActor* DamageReceiver, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void Heavy_FistChargeFX(bool IsLeftHand, bool Enable);
	void Wwise_FireBeam_PwrUp();
	void Heavy_WeaponChargeFX(bool IsLeftHand, bool Enable);
	void Heavy_BombLaunch(class AActor* MyTarget, bool IsLeftHand, EOakElementalType OverrideElementType);
	void Heavy_BlastWave(class AActor* AttackTarget);
	void Heavy_BlastShot(class AActor* ProjectileTarget, class FName WeaponSocket);
	void Wwise_BlastPump_PwrUp();
	void VisorFXGlow();
	void Heavy_StompImpact();
	void Heavy_FaceMedic();
	void HT_EndReceiveHealing(class AActor* HealingSource);
	void HT_BeginReceiveHealing(class AActor* HealingSource);
	void HT_InformIntentToHeal(class AActor* HealingSource);
	void ReplicatedBackpackExplosion();
	void BackpackDamageHeavyAUDIO();
	void BackpackDamageLightAUDIO();
	void Backpack_Death_Audio();
	void BackpackDamaged(const struct FDamageReactionEventSummary& Damage);
	void DetachBackpack();
	void BackpackDamageLight(const struct FDamageReactionEventSummary& Damage);
	void BackpackDamageHeavy(const struct FDamageReactionEventSummary& Damage);
	void BackpackDeath(const struct FDamageReactionEventSummary& Damage);
	void Heavy_BackpackExplosion_TriggerExplosion();
	void Heavy_BackpackExplosion_TriggerDeath();
	void Heavy_BackpackDeathBegan(class AActor* DamageCauser);
	void BackpackDamageTransition(bool DoStagger, class AActor* DamageCauser);
	void BackpackDeathOnCryoFrozen();
	void Heavy_BackpackExplosion_TriggerFriendlyDodge();
	void Update_Muzzle_Beam_Audio(bool Enable, bool Is_Left_Hand);
	void Update_NavBeam_Audio(bool bEnable);
	void FireBeamAudio(bool Enable, bool IsNavAnim, Enum_Heavy_WeaponSocket WeaponSocket);
	void Heavy_FireBeam_Start(Enum_Heavy_WeaponSocket WeaponSocket, bool IsNavAnim);
	void Heavy_FireBeam_Stop(bool IsNavAnim);
	void HeavyLoot_FleeBeam(bool Start);
	void Heavy_TargetChanged(class AActor* TargetActor);
	void Heavy_Powerhouse_LaunchPole(class AActor* MyTarget, bool IsLeftHand);
	void Heavy_GroundPoundTrail(class AActor* MyTarget, class FName OptionalStartingSocket, int32 TotalImpactsAlongPath, float Duration, class UClass* OptionalDamageAlongPath, class UClass* OptionalDamageAtTargetLocation, class UParticleSystem* PathFX, class UParticleSystem* TargetFX, float PathFXStartScale, float PathFXEndScale);
	void Heavy_BackpackExplosion_TriggerExplosion_PostDeath(const struct FVector& ExplosionLocation, class AActor* DamageCauser);
	void Nog_BuffDrone_SpecialBuff_Ended();
	void Nog_BuffDrone_SpecialBuff_Began();
	void Nog_BuffDrone_Detached(class AActor* BuffDrone);
	void Nog_BuffDrone_Attached(class AActor* BuffDrone);
	void Success_8A149E6243903ABCB1A27CBD959D1F3A(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor);
	void Failure_8A149E6243903ABCB1A27CBD959D1F3A(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor);
	void UserConstructionScript();
	void CleanupOnDeath();
	void FlatDistanceToTarget(class AActor* Actor1, bool SubtractActor1Bounds, class AActor* Actor2, bool SubtractActor2Bounds, float* Distance);
	void CalculateBlastWaveHorizontalArcOffset(class AActor* MyTarget, float StartingXOffset, float EndXOffset, int32 CurrentInstance, int32 TotalInstances, struct FVector* TargetOffset);
	void CalculateBlastWaveHorizontalSputterOffset(float* MaxPrediction, struct FVector* TargetOffset);
	void Heavy_ElementalTrap_Spawn(class AActor** Obstruction1, class AActor** Obstruction2);
	void Heavy_WasBackpackExplosionThresholdTriggered(bool* ThresholdReached);
	void Heavy_GetMaxHealth(float* MaxHealth);
	void Heavy_GetElementalMode(EOakElementalType* ElementalMode_0);
	void Nog_BuffDrone_GetAttachSocket(class FName* Socket, struct FTransform* SocketTransform, class USceneComponent** SocketComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Heavy_Shared_C">();
	}
	static class ABPChar_Heavy_Shared_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Heavy_Shared_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABPChar_Heavy_Shared_C) == 0x000010, "Wrong alignment on ABPChar_Heavy_Shared_C");
static_assert(sizeof(ABPChar_Heavy_Shared_C) == 0x0027A0, "Wrong size on ABPChar_Heavy_Shared_C");
static_assert(offsetof(ABPChar_Heavy_Shared_C, UberGraphFrame_BPChar_Heavy_Shared_C) == 0x002388, "Member 'ABPChar_Heavy_Shared_C::UberGraphFrame_BPChar_Heavy_Shared_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, CollisionPawnOnly) == 0x002390, "Member 'ABPChar_Heavy_Shared_C::CollisionPawnOnly' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_CollisionPawnOnly) == 0x002398, "Member 'ABPChar_Heavy_Shared_C::Switch_CollisionPawnOnly' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, CollisionGunR) == 0x0023A0, "Member 'ABPChar_Heavy_Shared_C::CollisionGunR' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, CollisionGunL) == 0x0023A8, "Member 'ABPChar_Heavy_Shared_C::CollisionGunL' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, CollisionBackpack) == 0x0023B0, "Member 'ABPChar_Heavy_Shared_C::CollisionBackpack' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_CollisionGunR) == 0x0023B8, "Member 'ABPChar_Heavy_Shared_C::Switch_CollisionGunR' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_CollisionGunL) == 0x0023C0, "Member 'ABPChar_Heavy_Shared_C::Switch_CollisionGunL' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_CollisionBackpack) == 0x0023C8, "Member 'ABPChar_Heavy_Shared_C::Switch_CollisionBackpack' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_FistChargeR) == 0x0023D0, "Member 'ABPChar_Heavy_Shared_C::PS_FistChargeR' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_FistGlow_R) == 0x0023D8, "Member 'ABPChar_Heavy_Shared_C::Switch_FistGlow_R' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_FistChargeL) == 0x0023E0, "Member 'ABPChar_Heavy_Shared_C::PS_FistChargeL' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_FistGlow_L) == 0x0023E8, "Member 'ABPChar_Heavy_Shared_C::Switch_FistGlow_L' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_EyeGlow) == 0x0023F0, "Member 'ABPChar_Heavy_Shared_C::PS_EyeGlow' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_VisorFX) == 0x0023F8, "Member 'ABPChar_Heavy_Shared_C::Switch_VisorFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_BackpackAmbient) == 0x002400, "Member 'ABPChar_Heavy_Shared_C::PS_BackpackAmbient' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_WeaponChargeR) == 0x002408, "Member 'ABPChar_Heavy_Shared_C::PS_WeaponChargeR' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_WeaponFX_R) == 0x002410, "Member 'ABPChar_Heavy_Shared_C::Switch_WeaponFX_R' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_WeaponChargeL) == 0x002418, "Member 'ABPChar_Heavy_Shared_C::PS_WeaponChargeL' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_WeaponFX_L) == 0x002420, "Member 'ABPChar_Heavy_Shared_C::Switch_WeaponFX_L' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_BackpackDamageCritical) == 0x002428, "Member 'ABPChar_Heavy_Shared_C::PS_BackpackDamageCritical' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_BackpackDamageHeavy) == 0x002430, "Member 'ABPChar_Heavy_Shared_C::PS_BackpackDamageHeavy' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, PS_BackpackDamageLight) == 0x002438, "Member 'ABPChar_Heavy_Shared_C::PS_BackpackDamageLight' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Switch_BackpackFX) == 0x002440, "Member 'ABPChar_Heavy_Shared_C::Switch_BackpackFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, FoleyMain) == 0x002448, "Member 'ABPChar_Heavy_Shared_C::FoleyMain' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, DefaultAudioComponent) == 0x002450, "Member 'ABPChar_Heavy_Shared_C::DefaultAudioComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BeamStreamL) == 0x002458, "Member 'ABPChar_Heavy_Shared_C::BeamStreamL' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, CurrentLaunchSocket) == 0x002460, "Member 'ABPChar_Heavy_Shared_C::CurrentLaunchSocket' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, bBackpackDamageLightEnabled) == 0x002468, "Member 'ABPChar_Heavy_Shared_C::bBackpackDamageLightEnabled' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, bBackpackDamageHeavyEnabled) == 0x002469, "Member 'ABPChar_Heavy_Shared_C::bBackpackDamageHeavyEnabled' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, ShieldPool) == 0x002470, "Member 'ABPChar_Heavy_Shared_C::ShieldPool' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackExplosionDamage) == 0x002488, "Member 'ABPChar_Heavy_Shared_C::BackpackExplosionDamage' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, QueryFriendliesInBackpackRange) == 0x002490, "Member 'ABPChar_Heavy_Shared_C::QueryFriendliesInBackpackRange' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackExplosionNearbyFriendlies) == 0x002548, "Member 'ABPChar_Heavy_Shared_C::BackpackExplosionNearbyFriendlies' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BombDamageAreaDuration) == 0x002558, "Member 'ABPChar_Heavy_Shared_C::BombDamageAreaDuration' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, DamageDebugColor) == 0x00255C, "Member 'ABPChar_Heavy_Shared_C::DamageDebugColor' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, ElementalObstructionIO) == 0x002570, "Member 'ABPChar_Heavy_Shared_C::ElementalObstructionIO' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BombTargetOffset) == 0x002578, "Member 'ABPChar_Heavy_Shared_C::BombTargetOffset' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BlastProjectile_Speed) == 0x00257C, "Member 'ABPChar_Heavy_Shared_C::BlastProjectile_Speed' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BlastProjectile_Distance) == 0x002580, "Member 'ABPChar_Heavy_Shared_C::BlastProjectile_Distance' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BlastProjectile_DistanceMax) == 0x002584, "Member 'ABPChar_Heavy_Shared_C::BlastProjectile_DistanceMax' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BlastProjectile_DistanceMin) == 0x002588, "Member 'ABPChar_Heavy_Shared_C::BlastProjectile_DistanceMin' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BlastProjectile_NumProjectiles) == 0x00258C, "Member 'ABPChar_Heavy_Shared_C::BlastProjectile_NumProjectiles' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackKiller) == 0x002590, "Member 'ABPChar_Heavy_Shared_C::BackpackKiller' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, CurrentMedic) == 0x002598, "Member 'ABPChar_Heavy_Shared_C::CurrentMedic' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, AttachedParticles) == 0x0025A0, "Member 'ABPChar_Heavy_Shared_C::AttachedParticles' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackDamageTransitionFX) == 0x0025B0, "Member 'ABPChar_Heavy_Shared_C::BackpackDamageTransitionFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackExplosionThresholdReached) == 0x0025B8, "Member 'ABPChar_Heavy_Shared_C::BackpackExplosionThresholdReached' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackExplosionTriggered) == 0x0025B9, "Member 'ABPChar_Heavy_Shared_C::BackpackExplosionTriggered' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, FX_Glow_Color) == 0x0025BC, "Member 'ABPChar_Heavy_Shared_C::FX_Glow_Color' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, IceWallDistToTargetPct) == 0x0025C8, "Member 'ABPChar_Heavy_Shared_C::IceWallDistToTargetPct' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BeamStreamR) == 0x0025D0, "Member 'ABPChar_Heavy_Shared_C::BeamStreamR' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_ElementalThrower_R_Start) == 0x0025D8, "Member 'ABPChar_Heavy_Shared_C::Wwise_ElementalThrower_R_Start' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_ElementalThrower_R_Stop) == 0x0025E0, "Member 'ABPChar_Heavy_Shared_C::Wwise_ElementalThrower_R_Stop' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Backpack_Dmg_Stage1) == 0x0025E8, "Member 'ABPChar_Heavy_Shared_C::Wwise_Backpack_Dmg_Stage1' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Backpack_Dmg_Stage2) == 0x0025F0, "Member 'ABPChar_Heavy_Shared_C::Wwise_Backpack_Dmg_Stage2' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Leap_Jets_Start) == 0x0025F8, "Member 'ABPChar_Heavy_Shared_C::Wwise_Leap_Jets_Start' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, ElementalThrower_Playback_R) == 0x002600, "Member 'ABPChar_Heavy_Shared_C::ElementalThrower_Playback_R' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, ElementalThrower_Playback_L) == 0x002618, "Member 'ABPChar_Heavy_Shared_C::ElementalThrower_Playback_L' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Bomb_PwrUp) == 0x002630, "Member 'ABPChar_Heavy_Shared_C::Wwise_Bomb_PwrUp' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Leap_Jets_Stop) == 0x002638, "Member 'ABPChar_Heavy_Shared_C::Wwise_Leap_Jets_Stop' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_ElementalThrower_L_Start) == 0x002640, "Member 'ABPChar_Heavy_Shared_C::Wwise_ElementalThrower_L_Start' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_ElementalThrower_L_Stop) == 0x002648, "Member 'ABPChar_Heavy_Shared_C::Wwise_ElementalThrower_L_Stop' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, SplatBackpackExplosion) == 0x002650, "Member 'ABPChar_Heavy_Shared_C::SplatBackpackExplosion' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, QueryGroundPoundLines) == 0x002658, "Member 'ABPChar_Heavy_Shared_C::QueryGroundPoundLines' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, QueryGroundPoundLocs) == 0x002710, "Member 'ABPChar_Heavy_Shared_C::QueryGroundPoundLocs' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, LightProjectileBlast) == 0x002720, "Member 'ABPChar_Heavy_Shared_C::LightProjectileBlast' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, ElementalMode) == 0x002728, "Member 'ABPChar_Heavy_Shared_C::ElementalMode' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, ShouldDetachBackpackOnDeath) == 0x002729, "Member 'ABPChar_Heavy_Shared_C::ShouldDetachBackpackOnDeath' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BeamStream_Navigation) == 0x002730, "Member 'ABPChar_Heavy_Shared_C::BeamStream_Navigation' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, LastBigBombChargeLoc) == 0x002738, "Member 'ABPChar_Heavy_Shared_C::LastBigBombChargeLoc' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, IsBeingPhaselocked) == 0x002744, "Member 'ABPChar_Heavy_Shared_C::IsBeingPhaselocked' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, HitReact_BackpackDeath) == 0x002748, "Member 'ABPChar_Heavy_Shared_C::HitReact_BackpackDeath' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, IsPlayingNavBeamAudio) == 0x002750, "Member 'ABPChar_Heavy_Shared_C::IsPlayingNavBeamAudio' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackExplosionEnableEarlyDeath) == 0x002751, "Member 'ABPChar_Heavy_Shared_C::BackpackExplosionEnableEarlyDeath' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Thrower_PwrUp) == 0x002758, "Member 'ABPChar_Heavy_Shared_C::Wwise_Thrower_PwrUp' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Aura_Lp_Start) == 0x002760, "Member 'ABPChar_Heavy_Shared_C::Wwise_Aura_Lp_Start' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Wwise_Aura_Lp_Stop) == 0x002768, "Member 'ABPChar_Heavy_Shared_C::Wwise_Aura_Lp_Stop' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, GameplayTagsImmuneToActions) == 0x002770, "Member 'ABPChar_Heavy_Shared_C::GameplayTagsImmuneToActions' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BlastProjectile_AnglePct) == 0x002780, "Member 'ABPChar_Heavy_Shared_C::BlastProjectile_AnglePct' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, BackpackDeathShouldGib) == 0x002784, "Member 'ABPChar_Heavy_Shared_C::BackpackDeathShouldGib' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, DamageJumpImpact) == 0x002788, "Member 'ABPChar_Heavy_Shared_C::DamageJumpImpact' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Shared_C, Proj_Backpack) == 0x002790, "Member 'ABPChar_Heavy_Shared_C::Proj_Backpack' has a wrong offset!");

}

