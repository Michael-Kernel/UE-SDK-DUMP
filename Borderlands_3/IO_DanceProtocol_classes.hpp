#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_DanceProtocol

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Enum_DanceProtocol_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "EFloatTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_DanceProtocol.IO_DanceProtocol_C
// 0x00E0 (0x0630 - 0x0550)
class AIO_DanceProtocol_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   FX_DiscoLight;                                     // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_Disco;                                          // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_DanceProtocol                            UserStateEnum;                                     // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIO_Switch_GenericButton_V1_C*          Switch;                                            // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   StopDance;                                         // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AOakSpawnPoint*                         ClaptrapSpawner;                                   // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakSpawner*                            GFSpawner;                                         // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   LoveDance;                                         // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   DanceVar01;                                        // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   DanceVar02;                                        // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   DanceVar03;                                        // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   DanceVar04;                                        // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EndedBySong;                                       // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Claptrap_Girlfriend_C*          GF;                                                // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPChar_Claptrap_C*                     Claptrap;                                          // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_UserStateEnum_NewEnumerator1;                 // 0x0620(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_UserStateEnum_NewEnumerator2;                 // 0x0628(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void OnAnimEnd_2AC3AA4F4BB5323642E585BC50A1464A();
	void OnEnd_2AC3AA4F4BB5323642E585BC50A1464A(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_89D5EA23466748B9EC6789887BC2123C();
	void OnEnd_89D5EA23466748B9EC6789887BC2123C(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_16AFF9DB4A2697E8511AFFB8DB0637AD();
	void OnEnd_16AFF9DB4A2697E8511AFFB8DB0637AD(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_FBABFD904F08202BAA7C4DB54E32838D();
	void OnEnd_FBABFD904F08202BAA7C4DB54E32838D(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_9F709803469B9A2B4F69D5AD17A32689();
	void OnEnd_9F709803469B9A2B4F69D5AD17A32689(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_8FBAF9F84B0B3A5E1822BAAF1DB5BA0C();
	void OnEnd_8FBAF9F84B0B3A5E1822BAAF1DB5BA0C(EGbxActionEndState EndState, class AActor* Actor);
	void __UserState_UserStateEnum_0(bool bFromLoad);
	void BndEvt__Switch_K2Node_ComponentBoundEvent_1_On_SwitchOn__DelegateSignature_IO_DanceProtocol(class AActor* LastActorToUseSwitch);
	void BndEvt__Switch_K2Node_ComponentBoundEvent_2_On_SwitchOff__DelegateSignature_IO_DanceProtocol(class AActor* LastActorToUseSwitch);
	void __UserState_UserStateEnum_1(bool bFromLoad);
	void EndofSong();
	void __UserState_UserStateEnum_2(bool bFromLoad);
	void ReceiveBeginPlay();
	void GFSpawned(class ASpawner* Spawner, class AActor* Actor);
	void ClaptrapSpawned(class ASpawnPoint* SpawnPoint, class AActor* Actor);
	void ExecuteUbergraph_IO_DanceProtocol(int32 EntryPoint);
	void DanceVar04__DelegateSignature();
	void DanceVar03__DelegateSignature();
	void DanceVar02__DelegateSignature();
	void DanceVar01__DelegateSignature();
	void LoveDance__DelegateSignature();
	void StopDance__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_DanceProtocol_C">();
	}
	static class AIO_DanceProtocol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_DanceProtocol_C>();
	}
};
static_assert(alignof(AIO_DanceProtocol_C) == 0x000008, "Wrong alignment on AIO_DanceProtocol_C");
static_assert(sizeof(AIO_DanceProtocol_C) == 0x000630, "Wrong size on AIO_DanceProtocol_C");
static_assert(offsetof(AIO_DanceProtocol_C, UberGraphFrame) == 0x000550, "Member 'AIO_DanceProtocol_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, Sphere) == 0x000558, "Member 'AIO_DanceProtocol_C::Sphere' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, FX_DiscoLight) == 0x000560, "Member 'AIO_DanceProtocol_C::FX_DiscoLight' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, FX_Disco) == 0x000568, "Member 'AIO_DanceProtocol_C::FX_Disco' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, WwiseAudio) == 0x000570, "Member 'AIO_DanceProtocol_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, Scene) == 0x000578, "Member 'AIO_DanceProtocol_C::Scene' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, DefaultSceneRoot) == 0x000580, "Member 'AIO_DanceProtocol_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, UserStateEnum) == 0x000588, "Member 'AIO_DanceProtocol_C::UserStateEnum' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, Switch) == 0x000590, "Member 'AIO_DanceProtocol_C::Switch' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, StopDance) == 0x000598, "Member 'AIO_DanceProtocol_C::StopDance' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, ClaptrapSpawner) == 0x0005A8, "Member 'AIO_DanceProtocol_C::ClaptrapSpawner' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, GFSpawner) == 0x0005B0, "Member 'AIO_DanceProtocol_C::GFSpawner' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, LoveDance) == 0x0005B8, "Member 'AIO_DanceProtocol_C::LoveDance' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, DanceVar01) == 0x0005C8, "Member 'AIO_DanceProtocol_C::DanceVar01' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, DanceVar02) == 0x0005D8, "Member 'AIO_DanceProtocol_C::DanceVar02' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, DanceVar03) == 0x0005E8, "Member 'AIO_DanceProtocol_C::DanceVar03' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, DanceVar04) == 0x0005F8, "Member 'AIO_DanceProtocol_C::DanceVar04' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, EndedBySong) == 0x000608, "Member 'AIO_DanceProtocol_C::EndedBySong' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, GF) == 0x000610, "Member 'AIO_DanceProtocol_C::GF' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, Claptrap) == 0x000618, "Member 'AIO_DanceProtocol_C::Claptrap' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, Cond_UserStateEnum_NewEnumerator1) == 0x000620, "Member 'AIO_DanceProtocol_C::Cond_UserStateEnum_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_DanceProtocol_C, Cond_UserStateEnum_NewEnumerator2) == 0x000628, "Member 'AIO_DanceProtocol_C::Cond_UserStateEnum_NewEnumerator2' has a wrong offset!");

}

