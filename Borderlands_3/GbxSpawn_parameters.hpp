#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxSpawn

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxSpawn_structs.hpp"


namespace SDK::Params
{

// Function GbxSpawn.Spawner.OnSpawningComplete
// 0x0008 (0x0008 - 0x0000)
struct Spawner_OnSpawningComplete final
{
public:
	class ASpawner*                               Spawner;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_OnSpawningComplete) == 0x000008, "Wrong alignment on Spawner_OnSpawningComplete");
static_assert(sizeof(Spawner_OnSpawningComplete) == 0x000008, "Wrong size on Spawner_OnSpawningComplete");
static_assert(offsetof(Spawner_OnSpawningComplete, Spawner) == 0x000000, "Member 'Spawner_OnSpawningComplete::Spawner' has a wrong offset!");

// Function GbxSpawn.Spawner.OverrideSpawnerStyle
// 0x0008 (0x0008 - 0x0000)
struct Spawner_OverrideSpawnerStyle final
{
public:
	class USpawnerStyle*                          NewSpawnerStyle;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_OverrideSpawnerStyle) == 0x000008, "Wrong alignment on Spawner_OverrideSpawnerStyle");
static_assert(sizeof(Spawner_OverrideSpawnerStyle) == 0x000008, "Wrong size on Spawner_OverrideSpawnerStyle");
static_assert(offsetof(Spawner_OverrideSpawnerStyle, NewSpawnerStyle) == 0x000000, "Member 'Spawner_OverrideSpawnerStyle::NewSpawnerStyle' has a wrong offset!");

// Function GbxSpawn.Spawner.SetAlwaysActive
// 0x0001 (0x0001 - 0x0000)
struct Spawner_SetAlwaysActive final
{
public:
	bool                                          bInAlwaysActive;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_SetAlwaysActive) == 0x000001, "Wrong alignment on Spawner_SetAlwaysActive");
static_assert(sizeof(Spawner_SetAlwaysActive) == 0x000001, "Wrong size on Spawner_SetAlwaysActive");
static_assert(offsetof(Spawner_SetAlwaysActive, bInAlwaysActive) == 0x000000, "Member 'Spawner_SetAlwaysActive::bInAlwaysActive' has a wrong offset!");

// Function GbxSpawn.Spawner.SetTeam
// 0x0008 (0x0008 - 0x0000)
struct Spawner_SetTeam final
{
public:
	class UTeam*                                  NewTeam;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_SetTeam) == 0x000008, "Wrong alignment on Spawner_SetTeam");
static_assert(sizeof(Spawner_SetTeam) == 0x000008, "Wrong size on Spawner_SetTeam");
static_assert(offsetof(Spawner_SetTeam, NewTeam) == 0x000000, "Member 'Spawner_SetTeam::NewTeam' has a wrong offset!");

// Function GbxSpawn.Spawner.SetTeamOverride
// 0x0008 (0x0008 - 0x0000)
struct Spawner_SetTeamOverride final
{
public:
	class UTeam*                                  OverrideTeam;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_SetTeamOverride) == 0x000008, "Wrong alignment on Spawner_SetTeamOverride");
static_assert(sizeof(Spawner_SetTeamOverride) == 0x000008, "Wrong size on Spawner_SetTeamOverride");
static_assert(offsetof(Spawner_SetTeamOverride, OverrideTeam) == 0x000000, "Member 'Spawner_SetTeamOverride::OverrideTeam' has a wrong offset!");

// Function GbxSpawn.Spawner.AreAllDead
// 0x0002 (0x0002 - 0x0000)
struct Spawner_AreAllDead final
{
public:
	bool                                          bIncludeExternal;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_AreAllDead) == 0x000001, "Wrong alignment on Spawner_AreAllDead");
static_assert(sizeof(Spawner_AreAllDead) == 0x000002, "Wrong size on Spawner_AreAllDead");
static_assert(offsetof(Spawner_AreAllDead, bIncludeExternal) == 0x000000, "Member 'Spawner_AreAllDead::bIncludeExternal' has a wrong offset!");
static_assert(offsetof(Spawner_AreAllDead, ReturnValue) == 0x000001, "Member 'Spawner_AreAllDead::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.GetNumAliveActors
// 0x0008 (0x0008 - 0x0000)
struct Spawner_GetNumAliveActors final
{
public:
	bool                                          bIncludeExternal;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_GetNumAliveActors) == 0x000004, "Wrong alignment on Spawner_GetNumAliveActors");
static_assert(sizeof(Spawner_GetNumAliveActors) == 0x000008, "Wrong size on Spawner_GetNumAliveActors");
static_assert(offsetof(Spawner_GetNumAliveActors, bIncludeExternal) == 0x000000, "Member 'Spawner_GetNumAliveActors::bIncludeExternal' has a wrong offset!");
static_assert(offsetof(Spawner_GetNumAliveActors, ReturnValue) == 0x000004, "Member 'Spawner_GetNumAliveActors::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.GetSpawnerComponent
// 0x0008 (0x0008 - 0x0000)
struct Spawner_GetSpawnerComponent final
{
public:
	class USpawnerComponent*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_GetSpawnerComponent) == 0x000008, "Wrong alignment on Spawner_GetSpawnerComponent");
static_assert(sizeof(Spawner_GetSpawnerComponent) == 0x000008, "Wrong size on Spawner_GetSpawnerComponent");
static_assert(offsetof(Spawner_GetSpawnerComponent, ReturnValue) == 0x000000, "Member 'Spawner_GetSpawnerComponent::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.GetSpawnerLinkComponent
// 0x0008 (0x0008 - 0x0000)
struct Spawner_GetSpawnerLinkComponent final
{
public:
	class USpawnerLinkComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_GetSpawnerLinkComponent) == 0x000008, "Wrong alignment on Spawner_GetSpawnerLinkComponent");
static_assert(sizeof(Spawner_GetSpawnerLinkComponent) == 0x000008, "Wrong size on Spawner_GetSpawnerLinkComponent");
static_assert(offsetof(Spawner_GetSpawnerLinkComponent, ReturnValue) == 0x000000, "Member 'Spawner_GetSpawnerLinkComponent::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.GetSpawnerTeamComponent
// 0x0008 (0x0008 - 0x0000)
struct Spawner_GetSpawnerTeamComponent final
{
public:
	class USpawnerTeamComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_GetSpawnerTeamComponent) == 0x000008, "Wrong alignment on Spawner_GetSpawnerTeamComponent");
static_assert(sizeof(Spawner_GetSpawnerTeamComponent) == 0x000008, "Wrong size on Spawner_GetSpawnerTeamComponent");
static_assert(offsetof(Spawner_GetSpawnerTeamComponent, ReturnValue) == 0x000000, "Member 'Spawner_GetSpawnerTeamComponent::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.GetSpawnPointComponent
// 0x0008 (0x0008 - 0x0000)
struct Spawner_GetSpawnPointComponent final
{
public:
	class USpawnPointComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_GetSpawnPointComponent) == 0x000008, "Wrong alignment on Spawner_GetSpawnPointComponent");
static_assert(sizeof(Spawner_GetSpawnPointComponent) == 0x000008, "Wrong size on Spawner_GetSpawnPointComponent");
static_assert(offsetof(Spawner_GetSpawnPointComponent, ReturnValue) == 0x000000, "Member 'Spawner_GetSpawnPointComponent::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.IsFinishedSpawning
// 0x0001 (0x0001 - 0x0000)
struct Spawner_IsFinishedSpawning final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_IsFinishedSpawning) == 0x000001, "Wrong alignment on Spawner_IsFinishedSpawning");
static_assert(sizeof(Spawner_IsFinishedSpawning) == 0x000001, "Wrong size on Spawner_IsFinishedSpawning");
static_assert(offsetof(Spawner_IsFinishedSpawning, ReturnValue) == 0x000000, "Member 'Spawner_IsFinishedSpawning::ReturnValue' has a wrong offset!");

// Function GbxSpawn.Spawner.IsSpawnerEnabled
// 0x0001 (0x0001 - 0x0000)
struct Spawner_IsSpawnerEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spawner_IsSpawnerEnabled) == 0x000001, "Wrong alignment on Spawner_IsSpawnerEnabled");
static_assert(sizeof(Spawner_IsSpawnerEnabled) == 0x000001, "Wrong size on Spawner_IsSpawnerEnabled");
static_assert(offsetof(Spawner_IsSpawnerEnabled, ReturnValue) == 0x000000, "Member 'Spawner_IsSpawnerEnabled::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetAliveActors
// 0x0010 (0x0010 - 0x0000)
struct SpawnerComponent_GetAliveActors final
{
public:
	TArray<class AActor*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetAliveActors) == 0x000008, "Wrong alignment on SpawnerComponent_GetAliveActors");
static_assert(sizeof(SpawnerComponent_GetAliveActors) == 0x000010, "Wrong size on SpawnerComponent_GetAliveActors");
static_assert(offsetof(SpawnerComponent_GetAliveActors, ReturnValue) == 0x000000, "Member 'SpawnerComponent_GetAliveActors::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.OverrideSpawnerStyle
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_OverrideSpawnerStyle final
{
public:
	class USpawnerStyle*                          NewSpawnerStyle;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_OverrideSpawnerStyle) == 0x000008, "Wrong alignment on SpawnerComponent_OverrideSpawnerStyle");
static_assert(sizeof(SpawnerComponent_OverrideSpawnerStyle) == 0x000008, "Wrong size on SpawnerComponent_OverrideSpawnerStyle");
static_assert(offsetof(SpawnerComponent_OverrideSpawnerStyle, NewSpawnerStyle) == 0x000000, "Member 'SpawnerComponent_OverrideSpawnerStyle::NewSpawnerStyle' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.SetSpawnOptions
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_SetSpawnOptions final
{
public:
	class USpawnOptionData*                       NewSpawnOptions;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_SetSpawnOptions) == 0x000008, "Wrong alignment on SpawnerComponent_SetSpawnOptions");
static_assert(sizeof(SpawnerComponent_SetSpawnOptions) == 0x000008, "Wrong size on SpawnerComponent_SetSpawnOptions");
static_assert(offsetof(SpawnerComponent_SetSpawnOptions, NewSpawnOptions) == 0x000000, "Member 'SpawnerComponent_SetSpawnOptions::NewSpawnOptions' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.SetTeam
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_SetTeam final
{
public:
	class UTeam*                                  NewTeam;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_SetTeam) == 0x000008, "Wrong alignment on SpawnerComponent_SetTeam");
static_assert(sizeof(SpawnerComponent_SetTeam) == 0x000008, "Wrong size on SpawnerComponent_SetTeam");
static_assert(offsetof(SpawnerComponent_SetTeam, NewTeam) == 0x000000, "Member 'SpawnerComponent_SetTeam::NewTeam' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.AreAllDead
// 0x0003 (0x0003 - 0x0000)
struct SpawnerComponent_AreAllDead final
{
public:
	bool                                          bIncludeExternal;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInGroup;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_AreAllDead) == 0x000001, "Wrong alignment on SpawnerComponent_AreAllDead");
static_assert(sizeof(SpawnerComponent_AreAllDead) == 0x000003, "Wrong size on SpawnerComponent_AreAllDead");
static_assert(offsetof(SpawnerComponent_AreAllDead, bIncludeExternal) == 0x000000, "Member 'SpawnerComponent_AreAllDead::bIncludeExternal' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_AreAllDead, bInGroup) == 0x000001, "Member 'SpawnerComponent_AreAllDead::bInGroup' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_AreAllDead, ReturnValue) == 0x000002, "Member 'SpawnerComponent_AreAllDead::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetNumAliveActors
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_GetNumAliveActors final
{
public:
	bool                                          bIncludeExternal;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInGroup;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetNumAliveActors) == 0x000004, "Wrong alignment on SpawnerComponent_GetNumAliveActors");
static_assert(sizeof(SpawnerComponent_GetNumAliveActors) == 0x000008, "Wrong size on SpawnerComponent_GetNumAliveActors");
static_assert(offsetof(SpawnerComponent_GetNumAliveActors, bIncludeExternal) == 0x000000, "Member 'SpawnerComponent_GetNumAliveActors::bIncludeExternal' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_GetNumAliveActors, bInGroup) == 0x000001, "Member 'SpawnerComponent_GetNumAliveActors::bInGroup' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_GetNumAliveActors, ReturnValue) == 0x000004, "Member 'SpawnerComponent_GetNumAliveActors::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetNumDeadActors
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_GetNumDeadActors final
{
public:
	bool                                          bIncludeExternal;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInGroup;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetNumDeadActors) == 0x000004, "Wrong alignment on SpawnerComponent_GetNumDeadActors");
static_assert(sizeof(SpawnerComponent_GetNumDeadActors) == 0x000008, "Wrong size on SpawnerComponent_GetNumDeadActors");
static_assert(offsetof(SpawnerComponent_GetNumDeadActors, bIncludeExternal) == 0x000000, "Member 'SpawnerComponent_GetNumDeadActors::bIncludeExternal' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_GetNumDeadActors, bInGroup) == 0x000001, "Member 'SpawnerComponent_GetNumDeadActors::bInGroup' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_GetNumDeadActors, ReturnValue) == 0x000004, "Member 'SpawnerComponent_GetNumDeadActors::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetNumSpawnedActors
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_GetNumSpawnedActors final
{
public:
	bool                                          bIncludeExternal;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInGroup;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetNumSpawnedActors) == 0x000004, "Wrong alignment on SpawnerComponent_GetNumSpawnedActors");
static_assert(sizeof(SpawnerComponent_GetNumSpawnedActors) == 0x000008, "Wrong size on SpawnerComponent_GetNumSpawnedActors");
static_assert(offsetof(SpawnerComponent_GetNumSpawnedActors, bIncludeExternal) == 0x000000, "Member 'SpawnerComponent_GetNumSpawnedActors::bIncludeExternal' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_GetNumSpawnedActors, bInGroup) == 0x000001, "Member 'SpawnerComponent_GetNumSpawnedActors::bInGroup' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_GetNumSpawnedActors, ReturnValue) == 0x000004, "Member 'SpawnerComponent_GetNumSpawnedActors::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetNumSuspendedActors
// 0x0004 (0x0004 - 0x0000)
struct SpawnerComponent_GetNumSuspendedActors final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetNumSuspendedActors) == 0x000004, "Wrong alignment on SpawnerComponent_GetNumSuspendedActors");
static_assert(sizeof(SpawnerComponent_GetNumSuspendedActors) == 0x000004, "Wrong size on SpawnerComponent_GetNumSuspendedActors");
static_assert(offsetof(SpawnerComponent_GetNumSuspendedActors, ReturnValue) == 0x000000, "Member 'SpawnerComponent_GetNumSuspendedActors::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetParentSpawner
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_GetParentSpawner final
{
public:
	class USpawnerComponent*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetParentSpawner) == 0x000008, "Wrong alignment on SpawnerComponent_GetParentSpawner");
static_assert(sizeof(SpawnerComponent_GetParentSpawner) == 0x000008, "Wrong size on SpawnerComponent_GetParentSpawner");
static_assert(offsetof(SpawnerComponent_GetParentSpawner, ReturnValue) == 0x000000, "Member 'SpawnerComponent_GetParentSpawner::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.GetSpawnOptions
// 0x0008 (0x0008 - 0x0000)
struct SpawnerComponent_GetSpawnOptions final
{
public:
	class USpawnOptionData*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_GetSpawnOptions) == 0x000008, "Wrong alignment on SpawnerComponent_GetSpawnOptions");
static_assert(sizeof(SpawnerComponent_GetSpawnOptions) == 0x000008, "Wrong size on SpawnerComponent_GetSpawnOptions");
static_assert(offsetof(SpawnerComponent_GetSpawnOptions, ReturnValue) == 0x000000, "Member 'SpawnerComponent_GetSpawnOptions::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.IsFinishedSpawning
// 0x0001 (0x0001 - 0x0000)
struct SpawnerComponent_IsFinishedSpawning final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerComponent_IsFinishedSpawning) == 0x000001, "Wrong alignment on SpawnerComponent_IsFinishedSpawning");
static_assert(sizeof(SpawnerComponent_IsFinishedSpawning) == 0x000001, "Wrong size on SpawnerComponent_IsFinishedSpawning");
static_assert(offsetof(SpawnerComponent_IsFinishedSpawning, ReturnValue) == 0x000000, "Member 'SpawnerComponent_IsFinishedSpawning::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerComponent.IsSpawnerStyleClassAllowed
// 0x0010 (0x0010 - 0x0000)
struct SpawnerComponent_IsSpawnerStyleClassAllowed final
{
public:
	const class UClass*                           SpawnerStyleClass;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerComponent_IsSpawnerStyleClassAllowed) == 0x000008, "Wrong alignment on SpawnerComponent_IsSpawnerStyleClassAllowed");
static_assert(sizeof(SpawnerComponent_IsSpawnerStyleClassAllowed) == 0x000010, "Wrong size on SpawnerComponent_IsSpawnerStyleClassAllowed");
static_assert(offsetof(SpawnerComponent_IsSpawnerStyleClassAllowed, SpawnerStyleClass) == 0x000000, "Member 'SpawnerComponent_IsSpawnerStyleClassAllowed::SpawnerStyleClass' has a wrong offset!");
static_assert(offsetof(SpawnerComponent_IsSpawnerStyleClassAllowed, ReturnValue) == 0x000008, "Member 'SpawnerComponent_IsSpawnerStyleClassAllowed::ReturnValue' has a wrong offset!");

// Function GbxSpawn.GbxAction_SpawnAnim.K2_GetSpawnPoint
// 0x0008 (0x0008 - 0x0000)
struct GbxAction_SpawnAnim_K2_GetSpawnPoint final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxAction_SpawnAnim_K2_GetSpawnPoint) == 0x000008, "Wrong alignment on GbxAction_SpawnAnim_K2_GetSpawnPoint");
static_assert(sizeof(GbxAction_SpawnAnim_K2_GetSpawnPoint) == 0x000008, "Wrong size on GbxAction_SpawnAnim_K2_GetSpawnPoint");
static_assert(offsetof(GbxAction_SpawnAnim_K2_GetSpawnPoint, ReturnValue) == 0x000000, "Member 'GbxAction_SpawnAnim_K2_GetSpawnPoint::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnPoint.SetSpawnStyleTag
// 0x0008 (0x0008 - 0x0000)
struct SpawnPoint_SetSpawnStyleTag final
{
public:
	struct FGameplayTag                           NewTag;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPoint_SetSpawnStyleTag) == 0x000008, "Wrong alignment on SpawnPoint_SetSpawnStyleTag");
static_assert(sizeof(SpawnPoint_SetSpawnStyleTag) == 0x000008, "Wrong size on SpawnPoint_SetSpawnStyleTag");
static_assert(offsetof(SpawnPoint_SetSpawnStyleTag, NewTag) == 0x000000, "Member 'SpawnPoint_SetSpawnStyleTag::NewTag' has a wrong offset!");

// Function GbxSpawn.SpawnPoint.GetSpawnStyleTag
// 0x0008 (0x0008 - 0x0000)
struct SpawnPoint_GetSpawnStyleTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPoint_GetSpawnStyleTag) == 0x000008, "Wrong alignment on SpawnPoint_GetSpawnStyleTag");
static_assert(sizeof(SpawnPoint_GetSpawnStyleTag) == 0x000008, "Wrong size on SpawnPoint_GetSpawnStyleTag");
static_assert(offsetof(SpawnPoint_GetSpawnStyleTag, ReturnValue) == 0x000000, "Member 'SpawnPoint_GetSpawnStyleTag::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnDLCScript.OnActorDied
// 0x0010 (0x0010 - 0x0000)
struct SpawnDLCScript_OnActorDied final
{
public:
	class USpawnerComponent*                      SpawnerComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnDLCScript_OnActorDied) == 0x000008, "Wrong alignment on SpawnDLCScript_OnActorDied");
static_assert(sizeof(SpawnDLCScript_OnActorDied) == 0x000010, "Wrong size on SpawnDLCScript_OnActorDied");
static_assert(offsetof(SpawnDLCScript_OnActorDied, SpawnerComponent) == 0x000000, "Member 'SpawnDLCScript_OnActorDied::SpawnerComponent' has a wrong offset!");
static_assert(offsetof(SpawnDLCScript_OnActorDied, Actor) == 0x000008, "Member 'SpawnDLCScript_OnActorDied::Actor' has a wrong offset!");

// Function GbxSpawn.SpawnDLCScript.OnActorSpawned
// 0x0010 (0x0010 - 0x0000)
struct SpawnDLCScript_OnActorSpawned final
{
public:
	class USpawnerComponent*                      SpawnerComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnDLCScript_OnActorSpawned) == 0x000008, "Wrong alignment on SpawnDLCScript_OnActorSpawned");
static_assert(sizeof(SpawnDLCScript_OnActorSpawned) == 0x000010, "Wrong size on SpawnDLCScript_OnActorSpawned");
static_assert(offsetof(SpawnDLCScript_OnActorSpawned, SpawnerComponent) == 0x000000, "Member 'SpawnDLCScript_OnActorSpawned::SpawnerComponent' has a wrong offset!");
static_assert(offsetof(SpawnDLCScript_OnActorSpawned, Actor) == 0x000008, "Member 'SpawnDLCScript_OnActorSpawned::Actor' has a wrong offset!");

// Function GbxSpawn.SpawnDLCScript.OnAllDied
// 0x0008 (0x0008 - 0x0000)
struct SpawnDLCScript_OnAllDied final
{
public:
	class USpawnerComponent*                      SpawnerComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnDLCScript_OnAllDied) == 0x000008, "Wrong alignment on SpawnDLCScript_OnAllDied");
static_assert(sizeof(SpawnDLCScript_OnAllDied) == 0x000008, "Wrong size on SpawnDLCScript_OnAllDied");
static_assert(offsetof(SpawnDLCScript_OnAllDied, SpawnerComponent) == 0x000000, "Member 'SpawnDLCScript_OnAllDied::SpawnerComponent' has a wrong offset!");

// Function GbxSpawn.SpawnDLCScript.OnAllSpawned
// 0x0008 (0x0008 - 0x0000)
struct SpawnDLCScript_OnAllSpawned final
{
public:
	class USpawnerComponent*                      SpawnerComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnDLCScript_OnAllSpawned) == 0x000008, "Wrong alignment on SpawnDLCScript_OnAllSpawned");
static_assert(sizeof(SpawnDLCScript_OnAllSpawned) == 0x000008, "Wrong size on SpawnDLCScript_OnAllSpawned");
static_assert(offsetof(SpawnDLCScript_OnAllSpawned, SpawnerComponent) == 0x000000, "Member 'SpawnDLCScript_OnAllSpawned::SpawnerComponent' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.CancelSpawnActorWithOptionsAsyncRequest
// 0x0010 (0x0010 - 0x0000)
struct SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequestID;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest");
static_assert(sizeof(SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest) == 0x000010, "Wrong size on SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest");
static_assert(offsetof(SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest, WorldContext) == 0x000000, "Member 'SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest::WorldContext' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest, RequestID) == 0x000008, "Member 'SpawnerBlueprintLibrary_CancelSpawnActorWithOptionsAsyncRequest::RequestID' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.RemoveActorFromSpawnSystem
// 0x0008 (0x0008 - 0x0000)
struct SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem");
static_assert(sizeof(SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem) == 0x000008, "Wrong size on SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem");
static_assert(offsetof(SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem, Actor) == 0x000000, "Member 'SpawnerBlueprintLibrary_RemoveActorFromSpawnSystem::Actor' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.RestoreSuspendedActors
// 0x0008 (0x0008 - 0x0000)
struct SpawnerBlueprintLibrary_RestoreSuspendedActors final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerBlueprintLibrary_RestoreSuspendedActors) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_RestoreSuspendedActors");
static_assert(sizeof(SpawnerBlueprintLibrary_RestoreSuspendedActors) == 0x000008, "Wrong size on SpawnerBlueprintLibrary_RestoreSuspendedActors");
static_assert(offsetof(SpawnerBlueprintLibrary_RestoreSuspendedActors, WorldContextObject) == 0x000000, "Member 'SpawnerBlueprintLibrary_RestoreSuspendedActors::WorldContextObject' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.SetMaxSpawnCost
// 0x0010 (0x0010 - 0x0000)
struct SpawnerBlueprintLibrary_SetMaxSpawnCost final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewMaxSpawnCost;                                   // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerBlueprintLibrary_SetMaxSpawnCost) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_SetMaxSpawnCost");
static_assert(sizeof(SpawnerBlueprintLibrary_SetMaxSpawnCost) == 0x000010, "Wrong size on SpawnerBlueprintLibrary_SetMaxSpawnCost");
static_assert(offsetof(SpawnerBlueprintLibrary_SetMaxSpawnCost, WorldContextObject) == 0x000000, "Member 'SpawnerBlueprintLibrary_SetMaxSpawnCost::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SetMaxSpawnCost, NewMaxSpawnCost) == 0x000008, "Member 'SpawnerBlueprintLibrary_SetMaxSpawnCost::NewMaxSpawnCost' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.SpawnActorWithSpawner
// 0x0030 (0x0030 - 0x0000)
struct SpawnerBlueprintLibrary_SpawnActorWithSpawner final
{
public:
	class AActor*                                 Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USpawnFactory*                    Factory;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnPointComponent*                   SpawnPointComponent;                               // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnerComponent*                      SpawnerComponent;                                  // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Owner;                                             // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerBlueprintLibrary_SpawnActorWithSpawner) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_SpawnActorWithSpawner");
static_assert(sizeof(SpawnerBlueprintLibrary_SpawnActorWithSpawner) == 0x000030, "Wrong size on SpawnerBlueprintLibrary_SpawnActorWithSpawner");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawner, Context) == 0x000000, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawner::Context' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawner, Factory) == 0x000008, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawner::Factory' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawner, SpawnPointComponent) == 0x000010, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawner::SpawnPointComponent' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawner, SpawnerComponent) == 0x000018, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawner::SpawnerComponent' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawner, Owner) == 0x000020, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawner::Owner' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawner, ReturnValue) == 0x000028, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawner::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.SpawnActorWithSpawnOptions
// 0x0020 (0x0020 - 0x0000)
struct SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions final
{
public:
	class AActor*                                 Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                       SpawnOptions;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnPointComponent*                   SpawnPointComponent;                               // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions");
static_assert(sizeof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions) == 0x000020, "Wrong size on SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions, Context) == 0x000000, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions::Context' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions, SpawnOptions) == 0x000008, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions::SpawnOptions' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions, SpawnPointComponent) == 0x000010, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions::SpawnPointComponent' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions, ReturnValue) == 0x000018, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptions::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.SpawnActorWithSpawnOptionsAsync
// 0x0078 (0x0078 - 0x0000)
struct SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpawnManagerAsyncRequest              Request;                                           // 0x0008(0x0068)(Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync");
static_assert(sizeof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync) == 0x000078, "Wrong size on SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync, WorldContext) == 0x000000, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync::WorldContext' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync, Request) == 0x000008, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync::Request' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync, ReturnValue) == 0x000070, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsAsync::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.SpawnActorWithSpawnOptionsTransform
// 0x0050 (0x0050 - 0x0000)
struct SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform final
{
public:
	class AActor*                                 Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                       SpawnOptions;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0030)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform) == 0x000010, "Wrong alignment on SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform");
static_assert(sizeof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform) == 0x000050, "Wrong size on SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform, Context) == 0x000000, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform::Context' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform, SpawnOptions) == 0x000008, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform::SpawnOptions' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform, SpawnTransform) == 0x000010, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform::SpawnTransform' has a wrong offset!");
static_assert(offsetof(SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform, ReturnValue) == 0x000040, "Member 'SpawnerBlueprintLibrary_SpawnActorWithSpawnOptionsTransform::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerBlueprintLibrary.SuspendSpawnedActors
// 0x0008 (0x0008 - 0x0000)
struct SpawnerBlueprintLibrary_SuspendSpawnedActors final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnerBlueprintLibrary_SuspendSpawnedActors) == 0x000008, "Wrong alignment on SpawnerBlueprintLibrary_SuspendSpawnedActors");
static_assert(sizeof(SpawnerBlueprintLibrary_SuspendSpawnedActors) == 0x000008, "Wrong size on SpawnerBlueprintLibrary_SuspendSpawnedActors");
static_assert(offsetof(SpawnerBlueprintLibrary_SuspendSpawnedActors, WorldContextObject) == 0x000000, "Member 'SpawnerBlueprintLibrary_SuspendSpawnedActors::WorldContextObject' has a wrong offset!");

// Function GbxSpawn.SpawnerStyleFactory_Bunch.IsFactoryClassAllowed
// 0x0010 (0x0010 - 0x0000)
struct SpawnerStyleFactory_Bunch_IsFactoryClassAllowed final
{
public:
	const class UClass*                           FactoryClass;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerStyleFactory_Bunch_IsFactoryClassAllowed) == 0x000008, "Wrong alignment on SpawnerStyleFactory_Bunch_IsFactoryClassAllowed");
static_assert(sizeof(SpawnerStyleFactory_Bunch_IsFactoryClassAllowed) == 0x000010, "Wrong size on SpawnerStyleFactory_Bunch_IsFactoryClassAllowed");
static_assert(offsetof(SpawnerStyleFactory_Bunch_IsFactoryClassAllowed, FactoryClass) == 0x000000, "Member 'SpawnerStyleFactory_Bunch_IsFactoryClassAllowed::FactoryClass' has a wrong offset!");
static_assert(offsetof(SpawnerStyleFactory_Bunch_IsFactoryClassAllowed, ReturnValue) == 0x000008, "Member 'SpawnerStyleFactory_Bunch_IsFactoryClassAllowed::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerStyleFactory_Den.IsFactoryClassAllowed
// 0x0010 (0x0010 - 0x0000)
struct SpawnerStyleFactory_Den_IsFactoryClassAllowed final
{
public:
	const class UClass*                           FactoryClass;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerStyleFactory_Den_IsFactoryClassAllowed) == 0x000008, "Wrong alignment on SpawnerStyleFactory_Den_IsFactoryClassAllowed");
static_assert(sizeof(SpawnerStyleFactory_Den_IsFactoryClassAllowed) == 0x000010, "Wrong size on SpawnerStyleFactory_Den_IsFactoryClassAllowed");
static_assert(offsetof(SpawnerStyleFactory_Den_IsFactoryClassAllowed, FactoryClass) == 0x000000, "Member 'SpawnerStyleFactory_Den_IsFactoryClassAllowed::FactoryClass' has a wrong offset!");
static_assert(offsetof(SpawnerStyleFactory_Den_IsFactoryClassAllowed, ReturnValue) == 0x000008, "Member 'SpawnerStyleFactory_Den_IsFactoryClassAllowed::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnerStyleFactory_Single.IsFactoryClassAllowed
// 0x0010 (0x0010 - 0x0000)
struct SpawnerStyleFactory_Single_IsFactoryClassAllowed final
{
public:
	const class UClass*                           FactoryClass;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnerStyleFactory_Single_IsFactoryClassAllowed) == 0x000008, "Wrong alignment on SpawnerStyleFactory_Single_IsFactoryClassAllowed");
static_assert(sizeof(SpawnerStyleFactory_Single_IsFactoryClassAllowed) == 0x000010, "Wrong size on SpawnerStyleFactory_Single_IsFactoryClassAllowed");
static_assert(offsetof(SpawnerStyleFactory_Single_IsFactoryClassAllowed, FactoryClass) == 0x000000, "Member 'SpawnerStyleFactory_Single_IsFactoryClassAllowed::FactoryClass' has a wrong offset!");
static_assert(offsetof(SpawnerStyleFactory_Single_IsFactoryClassAllowed, ReturnValue) == 0x000008, "Member 'SpawnerStyleFactory_Single_IsFactoryClassAllowed::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnFactory_Generic.ShouldSkipActorProperty
// 0x0010 (0x0010 - 0x0000)
struct SpawnFactory_Generic_ShouldSkipActorProperty final
{
public:
	class UProperty*                              ActorProperty;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpawnFactory_Generic_ShouldSkipActorProperty) == 0x000008, "Wrong alignment on SpawnFactory_Generic_ShouldSkipActorProperty");
static_assert(sizeof(SpawnFactory_Generic_ShouldSkipActorProperty) == 0x000010, "Wrong size on SpawnFactory_Generic_ShouldSkipActorProperty");
static_assert(offsetof(SpawnFactory_Generic_ShouldSkipActorProperty, ActorProperty) == 0x000000, "Member 'SpawnFactory_Generic_ShouldSkipActorProperty::ActorProperty' has a wrong offset!");
static_assert(offsetof(SpawnFactory_Generic_ShouldSkipActorProperty, ReturnValue) == 0x000008, "Member 'SpawnFactory_Generic_ShouldSkipActorProperty::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnManager.ActorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct SpawnManager_ActorDestroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnManager_ActorDestroyed) == 0x000008, "Wrong alignment on SpawnManager_ActorDestroyed");
static_assert(sizeof(SpawnManager_ActorDestroyed) == 0x000008, "Wrong size on SpawnManager_ActorDestroyed");
static_assert(offsetof(SpawnManager_ActorDestroyed, Actor) == 0x000000, "Member 'SpawnManager_ActorDestroyed::Actor' has a wrong offset!");

// Function GbxSpawn.SpawnPointComponent.SetSpawnStyleTag
// 0x0008 (0x0008 - 0x0000)
struct SpawnPointComponent_SetSpawnStyleTag final
{
public:
	struct FGameplayTag                           NewTag;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPointComponent_SetSpawnStyleTag) == 0x000008, "Wrong alignment on SpawnPointComponent_SetSpawnStyleTag");
static_assert(sizeof(SpawnPointComponent_SetSpawnStyleTag) == 0x000008, "Wrong size on SpawnPointComponent_SetSpawnStyleTag");
static_assert(offsetof(SpawnPointComponent_SetSpawnStyleTag, NewTag) == 0x000000, "Member 'SpawnPointComponent_SetSpawnStyleTag::NewTag' has a wrong offset!");

// Function GbxSpawn.SpawnPointComponent.GetSpawnAITreeTag
// 0x0008 (0x0008 - 0x0000)
struct SpawnPointComponent_GetSpawnAITreeTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPointComponent_GetSpawnAITreeTag) == 0x000008, "Wrong alignment on SpawnPointComponent_GetSpawnAITreeTag");
static_assert(sizeof(SpawnPointComponent_GetSpawnAITreeTag) == 0x000008, "Wrong size on SpawnPointComponent_GetSpawnAITreeTag");
static_assert(offsetof(SpawnPointComponent_GetSpawnAITreeTag, ReturnValue) == 0x000000, "Member 'SpawnPointComponent_GetSpawnAITreeTag::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnPointComponent.GetSpawnStyleTag
// 0x0008 (0x0008 - 0x0000)
struct SpawnPointComponent_GetSpawnStyleTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPointComponent_GetSpawnStyleTag) == 0x000008, "Wrong alignment on SpawnPointComponent_GetSpawnStyleTag");
static_assert(sizeof(SpawnPointComponent_GetSpawnStyleTag) == 0x000008, "Wrong size on SpawnPointComponent_GetSpawnStyleTag");
static_assert(offsetof(SpawnPointComponent_GetSpawnStyleTag, ReturnValue) == 0x000000, "Member 'SpawnPointComponent_GetSpawnStyleTag::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnPointComponent.GetStretchyPoint
// 0x0030 (0x0030 - 0x0000)
struct SpawnPointComponent_GetStretchyPoint final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPointComponent_GetStretchyPoint) == 0x000010, "Wrong alignment on SpawnPointComponent_GetStretchyPoint");
static_assert(sizeof(SpawnPointComponent_GetStretchyPoint) == 0x000030, "Wrong size on SpawnPointComponent_GetStretchyPoint");
static_assert(offsetof(SpawnPointComponent_GetStretchyPoint, ReturnValue) == 0x000000, "Member 'SpawnPointComponent_GetStretchyPoint::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnPointComponent.HasSpawnAITreeTag
// 0x0001 (0x0001 - 0x0000)
struct SpawnPointComponent_HasSpawnAITreeTag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPointComponent_HasSpawnAITreeTag) == 0x000001, "Wrong alignment on SpawnPointComponent_HasSpawnAITreeTag");
static_assert(sizeof(SpawnPointComponent_HasSpawnAITreeTag) == 0x000001, "Wrong size on SpawnPointComponent_HasSpawnAITreeTag");
static_assert(offsetof(SpawnPointComponent_HasSpawnAITreeTag, ReturnValue) == 0x000000, "Member 'SpawnPointComponent_HasSpawnAITreeTag::ReturnValue' has a wrong offset!");

// Function GbxSpawn.SpawnPreviewComponent.OnCycleActor
// 0x0001 (0x0001 - 0x0000)
struct SpawnPreviewComponent_OnCycleActor final
{
public:
	ECycleDirection                               Direction;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpawnPreviewComponent_OnCycleActor) == 0x000001, "Wrong alignment on SpawnPreviewComponent_OnCycleActor");
static_assert(sizeof(SpawnPreviewComponent_OnCycleActor) == 0x000001, "Wrong size on SpawnPreviewComponent_OnCycleActor");
static_assert(offsetof(SpawnPreviewComponent_OnCycleActor, Direction) == 0x000000, "Member 'SpawnPreviewComponent_OnCycleActor::Direction' has a wrong offset!");

}

