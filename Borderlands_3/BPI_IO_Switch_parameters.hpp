#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_IO_Switch

#include "Basic.hpp"

#include "Enum_States_SwitchFeedback_structs.hpp"
#include "Enum_Switch_State_structs.hpp"


namespace SDK::Params
{

// Function BPI_IO_Switch.BPI_IO_Switch_C.SetSwitchState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_SetSwitchState final
{
public:
	Enum_Switch_State                             SwitchState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_IO_Switch_C_SetSwitchState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_SetSwitchState");
static_assert(sizeof(BPI_IO_Switch_C_SetSwitchState) == 0x000001, "Wrong size on BPI_IO_Switch_C_SetSwitchState");
static_assert(offsetof(BPI_IO_Switch_C_SetSwitchState, SwitchState) == 0x000000, "Member 'BPI_IO_Switch_C_SetSwitchState::SwitchState' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.SetSwitchLockedState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_SetSwitchLockedState final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_Switch_C_SetSwitchLockedState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_SetSwitchLockedState");
static_assert(sizeof(BPI_IO_Switch_C_SetSwitchLockedState) == 0x000001, "Wrong size on BPI_IO_Switch_C_SetSwitchLockedState");
static_assert(offsetof(BPI_IO_Switch_C_SetSwitchLockedState, Locked) == 0x000000, "Member 'BPI_IO_Switch_C_SetSwitchLockedState::Locked' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.SetSwitchInteractiveState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_SetSwitchInteractiveState final
{
public:
	bool                                          Interactive;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_Switch_C_SetSwitchInteractiveState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_SetSwitchInteractiveState");
static_assert(sizeof(BPI_IO_Switch_C_SetSwitchInteractiveState) == 0x000001, "Wrong size on BPI_IO_Switch_C_SetSwitchInteractiveState");
static_assert(offsetof(BPI_IO_Switch_C_SetSwitchInteractiveState, Interactive) == 0x000000, "Member 'BPI_IO_Switch_C_SetSwitchInteractiveState::Interactive' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.GetSwitchState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_GetSwitchState final
{
public:
	Enum_Switch_State                             SwitchState;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_IO_Switch_C_GetSwitchState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_GetSwitchState");
static_assert(sizeof(BPI_IO_Switch_C_GetSwitchState) == 0x000001, "Wrong size on BPI_IO_Switch_C_GetSwitchState");
static_assert(offsetof(BPI_IO_Switch_C_GetSwitchState, SwitchState) == 0x000000, "Member 'BPI_IO_Switch_C_GetSwitchState::SwitchState' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.GetSwitchLockedState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_GetSwitchLockedState final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_Switch_C_GetSwitchLockedState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_GetSwitchLockedState");
static_assert(sizeof(BPI_IO_Switch_C_GetSwitchLockedState) == 0x000001, "Wrong size on BPI_IO_Switch_C_GetSwitchLockedState");
static_assert(offsetof(BPI_IO_Switch_C_GetSwitchLockedState, Locked) == 0x000000, "Member 'BPI_IO_Switch_C_GetSwitchLockedState::Locked' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.GetSwitchInteractiveState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_GetSwitchInteractiveState final
{
public:
	bool                                          Interactive;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_Switch_C_GetSwitchInteractiveState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_GetSwitchInteractiveState");
static_assert(sizeof(BPI_IO_Switch_C_GetSwitchInteractiveState) == 0x000001, "Wrong size on BPI_IO_Switch_C_GetSwitchInteractiveState");
static_assert(offsetof(BPI_IO_Switch_C_GetSwitchInteractiveState, Interactive) == 0x000000, "Member 'BPI_IO_Switch_C_GetSwitchInteractiveState::Interactive' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.SetSwitchFeedbackState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_SetSwitchFeedbackState final
{
public:
	Enum_States_SwitchFeedback                    FeedbackState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_IO_Switch_C_SetSwitchFeedbackState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_SetSwitchFeedbackState");
static_assert(sizeof(BPI_IO_Switch_C_SetSwitchFeedbackState) == 0x000001, "Wrong size on BPI_IO_Switch_C_SetSwitchFeedbackState");
static_assert(offsetof(BPI_IO_Switch_C_SetSwitchFeedbackState, FeedbackState) == 0x000000, "Member 'BPI_IO_Switch_C_SetSwitchFeedbackState::FeedbackState' has a wrong offset!");

// Function BPI_IO_Switch.BPI_IO_Switch_C.GetSwitchFeedbackState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_Switch_C_GetSwitchFeedbackState final
{
public:
	Enum_States_SwitchFeedback                    FeedbackState;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_IO_Switch_C_GetSwitchFeedbackState) == 0x000001, "Wrong alignment on BPI_IO_Switch_C_GetSwitchFeedbackState");
static_assert(sizeof(BPI_IO_Switch_C_GetSwitchFeedbackState) == 0x000001, "Wrong size on BPI_IO_Switch_C_GetSwitchFeedbackState");
static_assert(offsetof(BPI_IO_Switch_C_GetSwitchFeedbackState, FeedbackState) == 0x000000, "Member 'BPI_IO_Switch_C_GetSwitchFeedbackState::FeedbackState' has a wrong offset!");

}

