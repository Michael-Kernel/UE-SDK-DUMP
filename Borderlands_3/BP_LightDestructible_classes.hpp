#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightDestructible

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightDestructible.BP_LightDestructible_C
// 0x0028 (0x0488 - 0x0460)
class ABP_LightDestructible_C : public ARigidBodyActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayforHiding;                                    // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Event;                                       // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCount;                                        // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void BndEvt__RigidBodyComponent_K2Node_ComponentBoundEvent_0_RigidBodyComponentImpulseAdded__DelegateSignature_PO_LightDestructible(const struct FVector& Impulse, const struct FVector& Location);
	void ExecuteUbergraph_BP_LightDestructible(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightDestructible_C">();
	}
	static class ABP_LightDestructible_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightDestructible_C>();
	}
};
static_assert(alignof(ABP_LightDestructible_C) == 0x000008, "Wrong alignment on ABP_LightDestructible_C");
static_assert(sizeof(ABP_LightDestructible_C) == 0x000488, "Wrong size on ABP_LightDestructible_C");
static_assert(offsetof(ABP_LightDestructible_C, UberGraphFrame) == 0x000460, "Member 'ABP_LightDestructible_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LightDestructible_C, ParticleSystem) == 0x000468, "Member 'ABP_LightDestructible_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_LightDestructible_C, LifeTime) == 0x000470, "Member 'ABP_LightDestructible_C::LifeTime' has a wrong offset!");
static_assert(offsetof(ABP_LightDestructible_C, DelayforHiding) == 0x000474, "Member 'ABP_LightDestructible_C::DelayforHiding' has a wrong offset!");
static_assert(offsetof(ABP_LightDestructible_C, Wwise_Event) == 0x000478, "Member 'ABP_LightDestructible_C::Wwise_Event' has a wrong offset!");
static_assert(offsetof(ABP_LightDestructible_C, Count) == 0x000480, "Member 'ABP_LightDestructible_C::Count' has a wrong offset!");
static_assert(offsetof(ABP_LightDestructible_C, TotalCount) == 0x000484, "Member 'ABP_LightDestructible_C::TotalCount' has a wrong offset!");

}

