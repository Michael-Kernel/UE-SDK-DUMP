#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MarcusFireDecal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EnumState_MarcusFireDecal_structs.hpp"
#include "MissionInteractiveObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_MarcusFireDecal.IO_MarcusFireDecal_C
// 0x0038 (0x0590 - 0x0558)
class AIO_MarcusFireDecal_C final : public AMissionInteractiveObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0558(0x0008)(Transient, DuplicateTransient)
	float                                         Timeline_0_NewTrack_0_DAEEA30E42F5B4B5CE3C0787FA530C7F; // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_DAEEA30E42F5B4B5CE3C0787FA530C7F; // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_565[0x3];                                      // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            Decal;                                             // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumState_MarcusFireDecal                     State;                                             // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_State_NewEnumerator1;                         // 0x0580(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_State_NewEnumerator2;                         // 0x0588(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void __UserState_State_0(bool bFromLoad);
	void __UserState_State_1(bool bFromLoad);
	void __UserState_State_2(bool bFromLoad);
	void ExecuteUbergraph_IO_MarcusFireDecal(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_MarcusFireDecal_C">();
	}
	static class AIO_MarcusFireDecal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_MarcusFireDecal_C>();
	}
};
static_assert(alignof(AIO_MarcusFireDecal_C) == 0x000008, "Wrong alignment on AIO_MarcusFireDecal_C");
static_assert(sizeof(AIO_MarcusFireDecal_C) == 0x000590, "Wrong size on AIO_MarcusFireDecal_C");
static_assert(offsetof(AIO_MarcusFireDecal_C, UberGraphFrame) == 0x000558, "Member 'AIO_MarcusFireDecal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, Timeline_0_NewTrack_0_DAEEA30E42F5B4B5CE3C0787FA530C7F) == 0x000560, "Member 'AIO_MarcusFireDecal_C::Timeline_0_NewTrack_0_DAEEA30E42F5B4B5CE3C0787FA530C7F' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, Timeline_0__Direction_DAEEA30E42F5B4B5CE3C0787FA530C7F) == 0x000564, "Member 'AIO_MarcusFireDecal_C::Timeline_0__Direction_DAEEA30E42F5B4B5CE3C0787FA530C7F' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, Timeline_0) == 0x000568, "Member 'AIO_MarcusFireDecal_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, Decal) == 0x000570, "Member 'AIO_MarcusFireDecal_C::Decal' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, State) == 0x000578, "Member 'AIO_MarcusFireDecal_C::State' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, Cond_State_NewEnumerator1) == 0x000580, "Member 'AIO_MarcusFireDecal_C::Cond_State_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_MarcusFireDecal_C, Cond_State_NewEnumerator2) == 0x000588, "Member 'AIO_MarcusFireDecal_C::Cond_State_NewEnumerator2' has a wrong offset!");

}

