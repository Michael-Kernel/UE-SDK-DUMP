#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_CommanderPlanetoid

#include "Basic.hpp"

#include "BP_InventoryAbility_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Artifact_CommanderPlanetoid.Ability_Artifact_CommanderPlanetoid_C
// 0x0058 (0x0178 - 0x0120)
class UAbility_Artifact_CommanderPlanetoid_C final : public UBP_InventoryAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Ability_Artifact_CommanderPlanetoid_C; // 0x0120(0x0008)(Transient, DuplicateTransient)
	struct FTimerHandle                           ElementalSwitchTimer;                              // 0x0128(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         ElementIndex;                                      // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakDamageCauserComponent*              DamageComponent;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ConditionalDamageModifier RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_Artifact_CommanderPlanet_0; // 0x0140(0x0028)()
	TArray<class UConditionalDamageModifier*>     Elements;                                          // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Ability_Artifact_CommanderPlanetoid(int32 EntryPoint);
	void OnActivated();
	void OnDeactivated();
	void SwitchElement();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Artifact_CommanderPlanetoid_C">();
	}
	static class UAbility_Artifact_CommanderPlanetoid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Artifact_CommanderPlanetoid_C>();
	}
};
static_assert(alignof(UAbility_Artifact_CommanderPlanetoid_C) == 0x000008, "Wrong alignment on UAbility_Artifact_CommanderPlanetoid_C");
static_assert(sizeof(UAbility_Artifact_CommanderPlanetoid_C) == 0x000178, "Wrong size on UAbility_Artifact_CommanderPlanetoid_C");
static_assert(offsetof(UAbility_Artifact_CommanderPlanetoid_C, UberGraphFrame_Ability_Artifact_CommanderPlanetoid_C) == 0x000120, "Member 'UAbility_Artifact_CommanderPlanetoid_C::UberGraphFrame_Ability_Artifact_CommanderPlanetoid_C' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_CommanderPlanetoid_C, ElementalSwitchTimer) == 0x000128, "Member 'UAbility_Artifact_CommanderPlanetoid_C::ElementalSwitchTimer' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_CommanderPlanetoid_C, ElementIndex) == 0x000130, "Member 'UAbility_Artifact_CommanderPlanetoid_C::ElementIndex' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_CommanderPlanetoid_C, DamageComponent) == 0x000138, "Member 'UAbility_Artifact_CommanderPlanetoid_C::DamageComponent' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_CommanderPlanetoid_C, RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_Artifact_CommanderPlanet_0) == 0x000140, "Member 'UAbility_Artifact_CommanderPlanetoid_C::RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_Artifact_CommanderPlanet_0' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_CommanderPlanetoid_C, Elements) == 0x000168, "Member 'UAbility_Artifact_CommanderPlanetoid_C::Elements' has a wrong offset!");

}

