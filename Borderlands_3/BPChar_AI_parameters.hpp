#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_AI

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_AIThrowAtStyle_structs.hpp"


namespace SDK::Params
{

// Function BPChar_AI.BPChar_AI_C.ExecuteUbergraph_BPChar_AI
// 0x0460 (0x0460 - 0x0000)
struct BPChar_AI_C_ExecuteUbergraph_BPChar_AI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_RequestNewMeleeWeapon3;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ThrowSpeed8;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercent2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TargetSocket2;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_TargetOffset2;                        // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_ThrowAngleOffset5;                    // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_MaxPrediction5;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewMeleeWeapon2;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist7;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ThrowSpeed7;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercent1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TargetSocket1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_TargetOffset1;                        // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_ThrowAngleOffset4;                    // 0x0054(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_MaxPrediction4;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewExplosive4;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesn_tExist;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_KillSelfOnDetonate;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_RequestNewExplosive3;                 // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_InstigatorOverride1;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewExplosive2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InstigatorOverride;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue1;         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling;         // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling1;        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue2;         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue3;         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling2;        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling;     // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue4;         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue5;         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling1;    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling2;    // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue6;         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue7;         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling3;    // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling4;    // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ActorToThrowAt2;                      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowSpeed6;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercentage5;                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ActorSocket2;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ActorOffset2;                         // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_ThrowAngleOffset3;                    // 0x01A4(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_MaxPrediction3;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewExplosive1;                 // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist6;                  // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_LocationToThrowAt2;                   // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowSpeed5;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercentage4;                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewExplosive;                  // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist5;                  // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue8;         // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue9;         // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling5;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling6;    // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ActorToThrowAt1;                      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowSpeed4;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercentage3;                // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ActorSocket1;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ActorOffset1;                         // 0x0228(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_ThrowAngleOffset2;                    // 0x0234(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_MaxPrediction2;                       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewMeleeWeapon1;               // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist4;                  // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_LocationToThrowAt1;                   // 0x0248(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowSpeed3;                          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercentage2;                // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewMeleeWeapon;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist3;                  // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue10;        // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue11;        // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling3;        // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling4;        // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B[0x5];                                      // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_NewMeleeWeaponClass;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue12;        // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_NewExplosiveClass;                    // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling5;        // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIExplosiveSpawningComponent_C*        CallFunc_GetComponentByClass_ReturnValue13;        // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_NewShieldClass;                       // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIExplosiveHandling_C> K2Node_DynamicCast_AsBPI_AIExplosive_Handling7;    // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ThrowSpeed2;                          // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercent;                    // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_TargetSocket;                         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_TargetOffset;                         // 0x0308(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_ThrowAngleOffset1;                    // 0x0314(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_MaxPrediction1;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewShield3;                    // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist2;                  // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326[0x2];                                      // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ActorToThrowAt;                       // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowSpeed1;                          // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercentage1;                // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ActorSocket;                          // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ActorOffset;                          // 0x0340(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_ThrowAngleOffset;                     // 0x034C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_MaxPrediction;                        // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewShield2;                    // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist1;                  // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_LocationToThrowAt;                    // 0x0360(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowSpeed;                           // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ThrowAnglePercentage;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestNewShield1;                    // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnIfDoesntExist;                   // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_RequestNewShield;                     // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377[0x1];                                      // 0x0377(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIShieldSpawningComponent_C*           CallFunc_GetComponentByClass_ReturnValue14;        // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIShieldSpawningComponent_C*           CallFunc_GetComponentByClass_ReturnValue15;        // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIShieldHandling_C> K2Node_DynamicCast_AsBPI_AIShield_Handling;        // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIShieldHandling_C> K2Node_DynamicCast_AsBPI_AIShield_Handling1;       // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3[0x5];                                      // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIShieldSpawningComponent_C*           CallFunc_GetComponentByClass_ReturnValue16;        // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIShieldSpawningComponent_C*           CallFunc_GetComponentByClass_ReturnValue17;        // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIShieldHandling_C> K2Node_DynamicCast_AsBPI_AIShield_Handling2;       // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIShieldHandling_C> K2Node_DynamicCast_AsBPI_AIShield_Handling3;       // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3[0x5];                                      // 0x03F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIShieldSpawningComponent_C*           CallFunc_GetComponentByClass_ReturnValue18;        // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIShieldSpawningComponent_C*           CallFunc_GetComponentByClass_ReturnValue19;        // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AIShieldHandling_C> K2Node_DynamicCast_AsBPI_AIShield_Handling4;       // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIShieldHandling_C> K2Node_DynamicCast_AsBPI_AIShield_Handling5;       // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_433[0x5];                                      // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakAIController*                       CallFunc_GetOakAIController_ReturnValue;           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue20;                    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakNavComponent*                       CallFunc_GetOakNavComponent_ReturnValue;           // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakAIActionComponent*                  CallFunc_GetOakAIActionComponent_ReturnValue;      // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue21;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue22;                    // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI) == 0x000008, "Wrong alignment on BPChar_AI_C_ExecuteUbergraph_BPChar_AI");
static_assert(sizeof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI) == 0x000460, "Wrong size on BPChar_AI_C_ExecuteUbergraph_BPChar_AI");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, EntryPoint) == 0x000000, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewMeleeWeapon3) == 0x000005, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewMeleeWeapon3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed8) == 0x000008, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed8' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercent2) == 0x00000C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercent2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_TargetSocket2) == 0x000010, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_TargetSocket2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_TargetOffset2) == 0x000018, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_TargetOffset2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAngleOffset5) == 0x000024, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAngleOffset5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_MaxPrediction5) == 0x000030, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_MaxPrediction5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewMeleeWeapon2) == 0x000034, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewMeleeWeapon2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist7) == 0x000035, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist7' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed7) == 0x000038, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed7' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercent1) == 0x00003C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercent1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_TargetSocket1) == 0x000040, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_TargetSocket1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_TargetOffset1) == 0x000048, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_TargetOffset1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAngleOffset4) == 0x000054, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAngleOffset4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_MaxPrediction4) == 0x000060, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_MaxPrediction4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewExplosive4) == 0x000064, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewExplosive4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesn_tExist) == 0x000065, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesn_tExist' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_KillSelfOnDetonate) == 0x000066, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_KillSelfOnDetonate' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewExplosive3) == 0x000067, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewExplosive3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_InstigatorOverride1) == 0x000068, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_InstigatorOverride1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewExplosive2) == 0x000070, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewExplosive2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_InstigatorOverride) == 0x000078, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_InstigatorOverride' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue1) == 0x000088, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIMelee_Handling) == 0x000090, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIMelee_Handling' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIMelee_Handling1) == 0x0000A8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIMelee_Handling1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess1) == 0x0000B8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue1) == 0x0000BA, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue2) == 0x0000C0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue3) == 0x0000C8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIMelee_Handling2) == 0x0000D0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIMelee_Handling2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess2) == 0x0000E0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling) == 0x0000E8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess3) == 0x0000F8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue2) == 0x0000F9, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue3) == 0x0000FA, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue4) == 0x000100, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue5) == 0x000108, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling1) == 0x000110, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess4) == 0x000120, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling2) == 0x000128, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess5) == 0x000138, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue4) == 0x000139, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue5) == 0x00013A, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue6) == 0x000140, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue7) == 0x000148, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling3) == 0x000150, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess6) == 0x000160, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling4) == 0x000168, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess7) == 0x000178, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue6) == 0x000179, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue7) == 0x00017A, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorToThrowAt2) == 0x000180, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorToThrowAt2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed6) == 0x000188, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed6' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercentage5) == 0x00018C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercentage5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorSocket2) == 0x000190, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorSocket2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorOffset2) == 0x000198, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorOffset2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAngleOffset3) == 0x0001A4, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAngleOffset3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_MaxPrediction3) == 0x0001B0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_MaxPrediction3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewExplosive1) == 0x0001B4, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewExplosive1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist6) == 0x0001B5, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist6' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_LocationToThrowAt2) == 0x0001B8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_LocationToThrowAt2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed5) == 0x0001C4, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercentage4) == 0x0001C8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercentage4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewExplosive) == 0x0001CC, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewExplosive' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist5) == 0x0001CD, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue8) == 0x0001D0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue9) == 0x0001D8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling5) == 0x0001E0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess8) == 0x0001F0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling6) == 0x0001F8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling6' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess9) == 0x000208, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue8) == 0x000209, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue9) == 0x00020A, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorToThrowAt1) == 0x000210, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorToThrowAt1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed4) == 0x000218, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercentage3) == 0x00021C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercentage3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorSocket1) == 0x000220, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorSocket1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorOffset1) == 0x000228, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorOffset1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAngleOffset2) == 0x000234, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAngleOffset2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_MaxPrediction2) == 0x000240, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_MaxPrediction2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewMeleeWeapon1) == 0x000244, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewMeleeWeapon1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist4) == 0x000245, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_LocationToThrowAt1) == 0x000248, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_LocationToThrowAt1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed3) == 0x000254, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercentage2) == 0x000258, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercentage2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewMeleeWeapon) == 0x00025C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewMeleeWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist3) == 0x00025D, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue10) == 0x000260, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue11) == 0x000268, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIMelee_Handling3) == 0x000270, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIMelee_Handling3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess10) == 0x000280, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIMelee_Handling4) == 0x000288, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIMelee_Handling4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess11) == 0x000298, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue10) == 0x000299, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue11) == 0x00029A, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_NewMeleeWeaponClass) == 0x0002A0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_NewMeleeWeaponClass' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue12) == 0x0002A8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_NewExplosiveClass) == 0x0002B0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_NewExplosiveClass' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIMelee_Handling5) == 0x0002B8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIMelee_Handling5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess12) == 0x0002C8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue12) == 0x0002C9, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue13) == 0x0002D0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_NewShieldClass) == 0x0002D8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_NewShieldClass' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIExplosive_Handling7) == 0x0002E0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIExplosive_Handling7' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess13) == 0x0002F0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue13) == 0x0002F1, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed2) == 0x0002F4, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercent) == 0x0002F8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercent' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_TargetSocket) == 0x000300, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_TargetSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_TargetOffset) == 0x000308, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_TargetOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAngleOffset1) == 0x000314, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAngleOffset1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_MaxPrediction1) == 0x000320, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_MaxPrediction1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewShield3) == 0x000324, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewShield3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist2) == 0x000325, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorToThrowAt) == 0x000328, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed1) == 0x000330, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercentage1) == 0x000334, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercentage1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorSocket) == 0x000338, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ActorOffset) == 0x000340, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ActorOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAngleOffset) == 0x00034C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_MaxPrediction) == 0x000358, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewShield2) == 0x00035C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewShield2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist1) == 0x00035D, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_LocationToThrowAt) == 0x000360, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_LocationToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowSpeed) == 0x00036C, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_ThrowAnglePercentage) == 0x000370, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewShield1) == 0x000374, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewShield1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_SpawnIfDoesntExist) == 0x000375, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_SpawnIfDoesntExist' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_Event_RequestNewShield) == 0x000376, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_Event_RequestNewShield' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue14) == 0x000378, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue15) == 0x000380, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIShield_Handling) == 0x000388, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIShield_Handling' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess14) == 0x000398, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIShield_Handling1) == 0x0003A0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIShield_Handling1' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess15) == 0x0003B0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue14) == 0x0003B1, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue15) == 0x0003B2, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue16) == 0x0003B8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue17) == 0x0003C0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIShield_Handling2) == 0x0003C8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIShield_Handling2' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess16) == 0x0003D8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIShield_Handling3) == 0x0003E0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIShield_Handling3' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess17) == 0x0003F0, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue16) == 0x0003F1, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue17) == 0x0003F2, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue18) == 0x0003F8, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetComponentByClass_ReturnValue19) == 0x000400, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetComponentByClass_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIShield_Handling4) == 0x000408, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIShield_Handling4' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess18) == 0x000418, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_AsBPI_AIShield_Handling5) == 0x000420, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_AsBPI_AIShield_Handling5' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, K2Node_DynamicCast_bSuccess19) == 0x000430, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue18) == 0x000431, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue19) == 0x000432, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetOakAIController_ReturnValue) == 0x000438, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetOakAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue20) == 0x000440, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000441, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetOakNavComponent_ReturnValue) == 0x000448, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetOakNavComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_GetOakAIActionComponent_ReturnValue) == 0x000450, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_GetOakAIActionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue21) == 0x000458, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_ExecuteUbergraph_BPChar_AI, CallFunc_IsValid_ReturnValue22) == 0x000459, "Member 'BPChar_AI_C_ExecuteUbergraph_BPChar_AI::CallFunc_IsValid_ReturnValue22' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIShield_Drop
// 0x0001 (0x0001 - 0x0000)
struct BPChar_AI_C_AIShield_Drop final
{
public:
	bool                                          RequestNewShield;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIShield_Drop) == 0x000001, "Wrong alignment on BPChar_AI_C_AIShield_Drop");
static_assert(sizeof(BPChar_AI_C_AIShield_Drop) == 0x000001, "Wrong size on BPChar_AI_C_AIShield_Drop");
static_assert(offsetof(BPChar_AI_C_AIShield_Drop, RequestNewShield) == 0x000000, "Member 'BPChar_AI_C_AIShield_Drop::RequestNewShield' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIShield_ThrowAtLocation
// 0x0018 (0x0018 - 0x0000)
struct BPChar_AI_C_AIShield_ThrowAtLocation final
{
public:
	struct FVector                                LocationToThrowAt;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowSpeed;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercentage;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewShield;                                  // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIShield_ThrowAtLocation) == 0x000004, "Wrong alignment on BPChar_AI_C_AIShield_ThrowAtLocation");
static_assert(sizeof(BPChar_AI_C_AIShield_ThrowAtLocation) == 0x000018, "Wrong size on BPChar_AI_C_AIShield_ThrowAtLocation");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtLocation, LocationToThrowAt) == 0x000000, "Member 'BPChar_AI_C_AIShield_ThrowAtLocation::LocationToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtLocation, ThrowSpeed) == 0x00000C, "Member 'BPChar_AI_C_AIShield_ThrowAtLocation::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtLocation, ThrowAnglePercentage) == 0x000010, "Member 'BPChar_AI_C_AIShield_ThrowAtLocation::ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtLocation, RequestNewShield) == 0x000014, "Member 'BPChar_AI_C_AIShield_ThrowAtLocation::RequestNewShield' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtLocation, SpawnIfDoesntExist) == 0x000015, "Member 'BPChar_AI_C_AIShield_ThrowAtLocation::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIShield_ThrowAtActor
// 0x0038 (0x0038 - 0x0000)
struct BPChar_AI_C_AIShield_ThrowAtActor final
{
public:
	class AActor*                                 ActorToThrowAt;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowSpeed;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercentage;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActorSocket;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorOffset;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ThrowAngleOffset;                                  // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         MaxPrediction;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewShield;                                  // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIShield_ThrowAtActor) == 0x000008, "Wrong alignment on BPChar_AI_C_AIShield_ThrowAtActor");
static_assert(sizeof(BPChar_AI_C_AIShield_ThrowAtActor) == 0x000038, "Wrong size on BPChar_AI_C_AIShield_ThrowAtActor");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, ActorToThrowAt) == 0x000000, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::ActorToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, ThrowSpeed) == 0x000008, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, ThrowAnglePercentage) == 0x00000C, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, ActorSocket) == 0x000010, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::ActorSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, ActorOffset) == 0x000018, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::ActorOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, ThrowAngleOffset) == 0x000024, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, MaxPrediction) == 0x000030, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, RequestNewShield) == 0x000034, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::RequestNewShield' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtActor, SpawnIfDoesntExist) == 0x000035, "Member 'BPChar_AI_C_AIShield_ThrowAtActor::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIShield_ThrowAtTarget
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) BPChar_AI_C_AIShield_ThrowAtTarget final
{
public:
	float                                         ThrowSpeed;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercent;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ThrowAngleOffset;                                  // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         MaxPrediction;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewShield;                                  // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIShield_ThrowAtTarget) == 0x000008, "Wrong alignment on BPChar_AI_C_AIShield_ThrowAtTarget");
static_assert(sizeof(BPChar_AI_C_AIShield_ThrowAtTarget) == 0x000030, "Wrong size on BPChar_AI_C_AIShield_ThrowAtTarget");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, ThrowSpeed) == 0x000000, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, ThrowAnglePercent) == 0x000004, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::ThrowAnglePercent' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, TargetSocket) == 0x000008, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::TargetSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, TargetOffset) == 0x000010, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::TargetOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, ThrowAngleOffset) == 0x00001C, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, MaxPrediction) == 0x000028, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, RequestNewShield) == 0x00002C, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::RequestNewShield' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIShield_ThrowAtTarget, SpawnIfDoesntExist) == 0x00002D, "Member 'BPChar_AI_C_AIShield_ThrowAtTarget::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIShield_SetNewShieldClass
// 0x0008 (0x0008 - 0x0000)
struct BPChar_AI_C_AIShield_SetNewShieldClass final
{
public:
	class UClass*                                 NewShieldClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIShield_SetNewShieldClass) == 0x000008, "Wrong alignment on BPChar_AI_C_AIShield_SetNewShieldClass");
static_assert(sizeof(BPChar_AI_C_AIShield_SetNewShieldClass) == 0x000008, "Wrong size on BPChar_AI_C_AIShield_SetNewShieldClass");
static_assert(offsetof(BPChar_AI_C_AIShield_SetNewShieldClass, NewShieldClass) == 0x000000, "Member 'BPChar_AI_C_AIShield_SetNewShieldClass::NewShieldClass' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIExplosive_SetNewExplosiveClass
// 0x0008 (0x0008 - 0x0000)
struct BPChar_AI_C_AIExplosive_SetNewExplosiveClass final
{
public:
	class UClass*                                 NewExplosiveClass;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIExplosive_SetNewExplosiveClass) == 0x000008, "Wrong alignment on BPChar_AI_C_AIExplosive_SetNewExplosiveClass");
static_assert(sizeof(BPChar_AI_C_AIExplosive_SetNewExplosiveClass) == 0x000008, "Wrong size on BPChar_AI_C_AIExplosive_SetNewExplosiveClass");
static_assert(offsetof(BPChar_AI_C_AIExplosive_SetNewExplosiveClass, NewExplosiveClass) == 0x000000, "Member 'BPChar_AI_C_AIExplosive_SetNewExplosiveClass::NewExplosiveClass' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIMelee_SetNewMeleeWeaponClass
// 0x0008 (0x0008 - 0x0000)
struct BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass final
{
public:
	class UClass*                                 NewMeleeWeaponClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass) == 0x000008, "Wrong alignment on BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass");
static_assert(sizeof(BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass) == 0x000008, "Wrong size on BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass");
static_assert(offsetof(BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass, NewMeleeWeaponClass) == 0x000000, "Member 'BPChar_AI_C_AIMelee_SetNewMeleeWeaponClass::NewMeleeWeaponClass' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIMelee_ThrowAtLocation
// 0x0018 (0x0018 - 0x0000)
struct BPChar_AI_C_AIMelee_ThrowAtLocation final
{
public:
	struct FVector                                LocationToThrowAt;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowSpeed;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercentage;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewMeleeWeapon;                             // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIMelee_ThrowAtLocation) == 0x000004, "Wrong alignment on BPChar_AI_C_AIMelee_ThrowAtLocation");
static_assert(sizeof(BPChar_AI_C_AIMelee_ThrowAtLocation) == 0x000018, "Wrong size on BPChar_AI_C_AIMelee_ThrowAtLocation");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtLocation, LocationToThrowAt) == 0x000000, "Member 'BPChar_AI_C_AIMelee_ThrowAtLocation::LocationToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtLocation, ThrowSpeed) == 0x00000C, "Member 'BPChar_AI_C_AIMelee_ThrowAtLocation::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtLocation, ThrowAnglePercentage) == 0x000010, "Member 'BPChar_AI_C_AIMelee_ThrowAtLocation::ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtLocation, RequestNewMeleeWeapon) == 0x000014, "Member 'BPChar_AI_C_AIMelee_ThrowAtLocation::RequestNewMeleeWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtLocation, SpawnIfDoesntExist) == 0x000015, "Member 'BPChar_AI_C_AIMelee_ThrowAtLocation::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIMelee_ThrowAtActor
// 0x0038 (0x0038 - 0x0000)
struct BPChar_AI_C_AIMelee_ThrowAtActor final
{
public:
	class AActor*                                 ActorToThrowAt;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowSpeed;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercentage;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActorSocket;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorOffset;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ThrowAngleOffset;                                  // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         MaxPrediction;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewMeleeWeapon;                             // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIMelee_ThrowAtActor) == 0x000008, "Wrong alignment on BPChar_AI_C_AIMelee_ThrowAtActor");
static_assert(sizeof(BPChar_AI_C_AIMelee_ThrowAtActor) == 0x000038, "Wrong size on BPChar_AI_C_AIMelee_ThrowAtActor");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, ActorToThrowAt) == 0x000000, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::ActorToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, ThrowSpeed) == 0x000008, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, ThrowAnglePercentage) == 0x00000C, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, ActorSocket) == 0x000010, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::ActorSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, ActorOffset) == 0x000018, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::ActorOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, ThrowAngleOffset) == 0x000024, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, MaxPrediction) == 0x000030, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, RequestNewMeleeWeapon) == 0x000034, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::RequestNewMeleeWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtActor, SpawnIfDoesntExist) == 0x000035, "Member 'BPChar_AI_C_AIMelee_ThrowAtActor::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIExplosive_ThrowAtLocation
// 0x0018 (0x0018 - 0x0000)
struct BPChar_AI_C_AIExplosive_ThrowAtLocation final
{
public:
	struct FVector                                LocationToThrowAt;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowSpeed;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercentage;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewExplosive;                               // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIExplosive_ThrowAtLocation) == 0x000004, "Wrong alignment on BPChar_AI_C_AIExplosive_ThrowAtLocation");
static_assert(sizeof(BPChar_AI_C_AIExplosive_ThrowAtLocation) == 0x000018, "Wrong size on BPChar_AI_C_AIExplosive_ThrowAtLocation");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtLocation, LocationToThrowAt) == 0x000000, "Member 'BPChar_AI_C_AIExplosive_ThrowAtLocation::LocationToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtLocation, ThrowSpeed) == 0x00000C, "Member 'BPChar_AI_C_AIExplosive_ThrowAtLocation::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtLocation, ThrowAnglePercentage) == 0x000010, "Member 'BPChar_AI_C_AIExplosive_ThrowAtLocation::ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtLocation, RequestNewExplosive) == 0x000014, "Member 'BPChar_AI_C_AIExplosive_ThrowAtLocation::RequestNewExplosive' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtLocation, SpawnIfDoesntExist) == 0x000015, "Member 'BPChar_AI_C_AIExplosive_ThrowAtLocation::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIExplosive_ThrowAtActor
// 0x0038 (0x0038 - 0x0000)
struct BPChar_AI_C_AIExplosive_ThrowAtActor final
{
public:
	class AActor*                                 ActorToThrowAt;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowSpeed;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercentage;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActorSocket;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorOffset;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ThrowAngleOffset;                                  // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         MaxPrediction;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewExplosive;                               // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIExplosive_ThrowAtActor) == 0x000008, "Wrong alignment on BPChar_AI_C_AIExplosive_ThrowAtActor");
static_assert(sizeof(BPChar_AI_C_AIExplosive_ThrowAtActor) == 0x000038, "Wrong size on BPChar_AI_C_AIExplosive_ThrowAtActor");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, ActorToThrowAt) == 0x000000, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::ActorToThrowAt' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, ThrowSpeed) == 0x000008, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, ThrowAnglePercentage) == 0x00000C, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::ThrowAnglePercentage' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, ActorSocket) == 0x000010, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::ActorSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, ActorOffset) == 0x000018, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::ActorOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, ThrowAngleOffset) == 0x000024, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, MaxPrediction) == 0x000030, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, RequestNewExplosive) == 0x000034, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::RequestNewExplosive' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtActor, SpawnIfDoesntExist) == 0x000035, "Member 'BPChar_AI_C_AIExplosive_ThrowAtActor::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIExplosive_Drop
// 0x0010 (0x0010 - 0x0000)
struct BPChar_AI_C_AIExplosive_Drop final
{
public:
	bool                                          RequestNewExplosive;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InstigatorOverride;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIExplosive_Drop) == 0x000008, "Wrong alignment on BPChar_AI_C_AIExplosive_Drop");
static_assert(sizeof(BPChar_AI_C_AIExplosive_Drop) == 0x000010, "Wrong size on BPChar_AI_C_AIExplosive_Drop");
static_assert(offsetof(BPChar_AI_C_AIExplosive_Drop, RequestNewExplosive) == 0x000000, "Member 'BPChar_AI_C_AIExplosive_Drop::RequestNewExplosive' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_Drop, InstigatorOverride) == 0x000008, "Member 'BPChar_AI_C_AIExplosive_Drop::InstigatorOverride' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIExplosive_Detonate
// 0x0010 (0x0010 - 0x0000)
struct BPChar_AI_C_AIExplosive_Detonate final
{
public:
	bool                                          KillSelfOnDetonate;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RequestNewExplosive;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InstigatorOverride;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIExplosive_Detonate) == 0x000008, "Wrong alignment on BPChar_AI_C_AIExplosive_Detonate");
static_assert(sizeof(BPChar_AI_C_AIExplosive_Detonate) == 0x000010, "Wrong size on BPChar_AI_C_AIExplosive_Detonate");
static_assert(offsetof(BPChar_AI_C_AIExplosive_Detonate, KillSelfOnDetonate) == 0x000000, "Member 'BPChar_AI_C_AIExplosive_Detonate::KillSelfOnDetonate' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_Detonate, RequestNewExplosive) == 0x000001, "Member 'BPChar_AI_C_AIExplosive_Detonate::RequestNewExplosive' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_Detonate, InstigatorOverride) == 0x000008, "Member 'BPChar_AI_C_AIExplosive_Detonate::InstigatorOverride' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIExplosive_ThrowAtTarget
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) BPChar_AI_C_AIExplosive_ThrowAtTarget final
{
public:
	float                                         ThrowSpeed;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercent;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ThrowAngleOffset;                                  // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         MaxPrediction;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewExplosive;                               // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesn_tExist;                               // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIExplosive_ThrowAtTarget) == 0x000008, "Wrong alignment on BPChar_AI_C_AIExplosive_ThrowAtTarget");
static_assert(sizeof(BPChar_AI_C_AIExplosive_ThrowAtTarget) == 0x000030, "Wrong size on BPChar_AI_C_AIExplosive_ThrowAtTarget");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, ThrowSpeed) == 0x000000, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, ThrowAnglePercent) == 0x000004, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::ThrowAnglePercent' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, TargetSocket) == 0x000008, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::TargetSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, TargetOffset) == 0x000010, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::TargetOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, ThrowAngleOffset) == 0x00001C, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, MaxPrediction) == 0x000028, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, RequestNewExplosive) == 0x00002C, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::RequestNewExplosive' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIExplosive_ThrowAtTarget, SpawnIfDoesn_tExist) == 0x00002D, "Member 'BPChar_AI_C_AIExplosive_ThrowAtTarget::SpawnIfDoesn_tExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIMelee_ThrowAtTarget
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) BPChar_AI_C_AIMelee_ThrowAtTarget final
{
public:
	float                                         ThrowSpeed;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowAnglePercent;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ThrowAngleOffset;                                  // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         MaxPrediction;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestNewMeleeWeapon;                             // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpawnIfDoesntExist;                                // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIMelee_ThrowAtTarget) == 0x000008, "Wrong alignment on BPChar_AI_C_AIMelee_ThrowAtTarget");
static_assert(sizeof(BPChar_AI_C_AIMelee_ThrowAtTarget) == 0x000030, "Wrong size on BPChar_AI_C_AIMelee_ThrowAtTarget");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, ThrowSpeed) == 0x000000, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, ThrowAnglePercent) == 0x000004, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::ThrowAnglePercent' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, TargetSocket) == 0x000008, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::TargetSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, TargetOffset) == 0x000010, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::TargetOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, ThrowAngleOffset) == 0x00001C, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::ThrowAngleOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, MaxPrediction) == 0x000028, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, RequestNewMeleeWeapon) == 0x00002C, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::RequestNewMeleeWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_ThrowAtTarget, SpawnIfDoesntExist) == 0x00002D, "Member 'BPChar_AI_C_AIMelee_ThrowAtTarget::SpawnIfDoesntExist' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIMelee_Drop
// 0x0001 (0x0001 - 0x0000)
struct BPChar_AI_C_AIMelee_Drop final
{
public:
	bool                                          RequestNewMeleeWeapon;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIMelee_Drop) == 0x000001, "Wrong alignment on BPChar_AI_C_AIMelee_Drop");
static_assert(sizeof(BPChar_AI_C_AIMelee_Drop) == 0x000001, "Wrong size on BPChar_AI_C_AIMelee_Drop");
static_assert(offsetof(BPChar_AI_C_AIMelee_Drop, RequestNewMeleeWeapon) == 0x000000, "Member 'BPChar_AI_C_AIMelee_Drop::RequestNewMeleeWeapon' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIMelee_GetElementalTypeFromMeleeWeapon
// 0x0030 (0x0030 - 0x0000)
struct BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon final
{
public:
	EOakElementalType                             MeleeWeaponElement;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIMeleeSpawningComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIMeleeHandling_C> K2Node_DynamicCast_AsBPI_AIMelee_Handling;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOakElementalType                             CallFunc_AIMelee_GetElementalTypeFromMeleeWeapon_MeleeWeaponElement; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon) == 0x000008, "Wrong alignment on BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon");
static_assert(sizeof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon) == 0x000030, "Wrong size on BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon");
static_assert(offsetof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon, MeleeWeaponElement) == 0x000000, "Member 'BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon::MeleeWeaponElement' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon, K2Node_DynamicCast_AsBPI_AIMelee_Handling) == 0x000018, "Member 'BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon::K2Node_DynamicCast_AsBPI_AIMelee_Handling' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon, CallFunc_AIMelee_GetElementalTypeFromMeleeWeapon_MeleeWeaponElement) == 0x000029, "Member 'BPChar_AI_C_AIMelee_GetElementalTypeFromMeleeWeapon::CallFunc_AIMelee_GetElementalTypeFromMeleeWeapon_MeleeWeaponElement' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_AttemptLerpToSocket
// 0x0020 (0x0020 - 0x0000)
struct BPChar_AI_C_AIStolenProj_AttemptLerpToSocket final
{
public:
	class FName                                   SocketToLerpTo;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpDuration;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LerpToSocket_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_AttemptLerpToSocket");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket) == 0x000020, "Wrong size on BPChar_AI_C_AIStolenProj_AttemptLerpToSocket");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket, SocketToLerpTo) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_AttemptLerpToSocket::SocketToLerpTo' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket, LerpDuration) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_AttemptLerpToSocket::LerpDuration' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket, Success) == 0x00000C, "Member 'BPChar_AI_C_AIStolenProj_AttemptLerpToSocket::Success' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_AttemptLerpToSocket::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_AttemptLerpToSocket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptLerpToSocket, CallFunc_LerpToSocket_ReturnValue) == 0x000019, "Member 'BPChar_AI_C_AIStolenProj_AttemptLerpToSocket::CallFunc_LerpToSocket_ReturnValue' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_AttemptReturnTo
// 0x0078 (0x0078 - 0x0000)
struct BPChar_AI_C_AIStolenProj_AttemptReturnTo final
{
public:
	Enum_AIThrowAtStyle                           ReturnTo;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPrediction;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnglePercent;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DirectionOffset;                                   // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                TargetOffset;                                      // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpecifiedActor;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIStolenProj_C>   K2Node_DynamicCast_AsBPI_AIStolen_Proj;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AIStolenProj_AttemptReturnTo_Success;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_AttemptReturnTo) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_AttemptReturnTo");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_AttemptReturnTo) == 0x000078, "Wrong size on BPChar_AI_C_AIStolenProj_AttemptReturnTo");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, ReturnTo) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::ReturnTo' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, TargetSocket) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::TargetSocket' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, MaxPrediction) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::MaxPrediction' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, Speed) == 0x000014, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::Speed' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, AnglePercent) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::AnglePercent' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, DirectionOffset) == 0x00001C, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::DirectionOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, TargetOffset) == 0x000028, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::TargetOffset' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, SpecifiedActor) == 0x000038, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::SpecifiedActor' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, WorldLocation) == 0x000040, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::WorldLocation' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, Success) == 0x00004C, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::Success' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, K2Node_DynamicCast_AsBPI_AIStolen_Proj) == 0x000060, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::K2Node_DynamicCast_AsBPI_AIStolen_Proj' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptReturnTo, CallFunc_AIStolenProj_AttemptReturnTo_Success) == 0x000071, "Member 'BPChar_AI_C_AIStolenProj_AttemptReturnTo::CallFunc_AIStolenProj_AttemptReturnTo_Success' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_AttemptAttach
// 0x0038 (0x0038 - 0x0000)
struct BPChar_AI_C_AIStolenProj_AttemptAttach final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIStolenProj_C>   K2Node_DynamicCast_AsBPI_AIStolen_Proj;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AIStolenProj_AttemptAttach_Success;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_AttemptAttach) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_AttemptAttach");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_AttemptAttach) == 0x000038, "Wrong size on BPChar_AI_C_AIStolenProj_AttemptAttach");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, SocketName) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::SocketName' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, Success) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::Success' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, K2Node_DynamicCast_AsBPI_AIStolen_Proj) == 0x000020, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::K2Node_DynamicCast_AsBPI_AIStolen_Proj' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptAttach, CallFunc_AIStolenProj_AttemptAttach_Success) == 0x000031, "Member 'BPChar_AI_C_AIStolenProj_AttemptAttach::CallFunc_AIStolenProj_AttemptAttach_Success' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_AttemptDestroy
// 0x0030 (0x0030 - 0x0000)
struct BPChar_AI_C_AIStolenProj_AttemptDestroy final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIStolenProj_C>   K2Node_DynamicCast_AsBPI_AIStolen_Proj;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AIStolenProj_AttemptDestroy_Success;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_AttemptDestroy) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_AttemptDestroy");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_AttemptDestroy) == 0x000030, "Wrong size on BPChar_AI_C_AIStolenProj_AttemptDestroy");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDestroy, Success) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_AttemptDestroy::Success' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDestroy, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_AttemptDestroy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDestroy, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_AttemptDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDestroy, K2Node_DynamicCast_AsBPI_AIStolen_Proj) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_AttemptDestroy::K2Node_DynamicCast_AsBPI_AIStolen_Proj' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDestroy, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPChar_AI_C_AIStolenProj_AttemptDestroy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDestroy, CallFunc_AIStolenProj_AttemptDestroy_Success) == 0x000029, "Member 'BPChar_AI_C_AIStolenProj_AttemptDestroy::CallFunc_AIStolenProj_AttemptDestroy_Success' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_AttemptDisarm
// 0x0030 (0x0030 - 0x0000)
struct BPChar_AI_C_AIStolenProj_AttemptDisarm final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIStolenProj_C>   K2Node_DynamicCast_AsBPI_AIStolen_Proj;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AIStolenProj_AttemptDisarm_Success;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_AttemptDisarm) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_AttemptDisarm");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_AttemptDisarm) == 0x000030, "Wrong size on BPChar_AI_C_AIStolenProj_AttemptDisarm");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDisarm, Success) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_AttemptDisarm::Success' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDisarm, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_AttemptDisarm::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDisarm, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_AttemptDisarm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDisarm, K2Node_DynamicCast_AsBPI_AIStolen_Proj) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_AttemptDisarm::K2Node_DynamicCast_AsBPI_AIStolen_Proj' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDisarm, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPChar_AI_C_AIStolenProj_AttemptDisarm::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDisarm, CallFunc_AIStolenProj_AttemptDisarm_Success) == 0x000029, "Member 'BPChar_AI_C_AIStolenProj_AttemptDisarm::CallFunc_AIStolenProj_AttemptDisarm_Success' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_GetElementalTypeFromStolenProjectile
// 0x0030 (0x0030 - 0x0000)
struct BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile final
{
public:
	EOakElementalType                             StolenProjectileElement;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIStolenProj_C>   K2Node_DynamicCast_AsBPI_AIStolen_Proj;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOakElementalType                             CallFunc_AIStolenProj_GetElementalTypeFromStolenProjectile_StolenProjectileElement; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile) == 0x000030, "Wrong size on BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile, StolenProjectileElement) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile::StolenProjectileElement' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile, K2Node_DynamicCast_AsBPI_AIStolen_Proj) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile::K2Node_DynamicCast_AsBPI_AIStolen_Proj' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile, CallFunc_AIStolenProj_GetElementalTypeFromStolenProjectile_StolenProjectileElement) == 0x000029, "Member 'BPChar_AI_C_AIStolenProj_GetElementalTypeFromStolenProjectile::CallFunc_AIStolenProj_GetElementalTypeFromStolenProjectile_StolenProjectileElement' has a wrong offset!");

// Function BPChar_AI.BPChar_AI_C.AIStolenProj_AttemptDetonate
// 0x0030 (0x0030 - 0x0000)
struct BPChar_AI_C_AIStolenProj_AttemptDetonate final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIStolenProjDetector_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AIStolenProj_C>   K2Node_DynamicCast_AsBPI_AIStolen_Proj;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AIStolenProj_AttemptDetonate_Success;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_AI_C_AIStolenProj_AttemptDetonate) == 0x000008, "Wrong alignment on BPChar_AI_C_AIStolenProj_AttemptDetonate");
static_assert(sizeof(BPChar_AI_C_AIStolenProj_AttemptDetonate) == 0x000030, "Wrong size on BPChar_AI_C_AIStolenProj_AttemptDetonate");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDetonate, Success) == 0x000000, "Member 'BPChar_AI_C_AIStolenProj_AttemptDetonate::Success' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDetonate, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPChar_AI_C_AIStolenProj_AttemptDetonate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDetonate, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPChar_AI_C_AIStolenProj_AttemptDetonate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDetonate, K2Node_DynamicCast_AsBPI_AIStolen_Proj) == 0x000018, "Member 'BPChar_AI_C_AIStolenProj_AttemptDetonate::K2Node_DynamicCast_AsBPI_AIStolen_Proj' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDetonate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPChar_AI_C_AIStolenProj_AttemptDetonate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_AI_C_AIStolenProj_AttemptDetonate, CallFunc_AIStolenProj_AttemptDetonate_Success) == 0x000029, "Member 'BPChar_AI_C_AIStolenProj_AttemptDetonate::CallFunc_AIStolenProj_AttemptDetonate_Success' has a wrong offset!");

}

