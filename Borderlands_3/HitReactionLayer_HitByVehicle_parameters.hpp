#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitReactionLayer_HitByVehicle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HitReactionLayer_HitByVehicle.HitReactionLayer_HitByVehicle_C.EvaluateTag
// 0x00F8 (0x00F8 - 0x0000)
struct HitReactionLayer_HitByVehicle_C_EvaluateTag final
{
public:
	class UDamageComponent*                       Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageAmount;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitRegionData*                         HitRegion;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitReactionTag*                        PreviousTag;                                       // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionTag*                        ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RagdollMinVelocityZ;                               // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LargeImpactForce;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallImpactForce;                                  // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageSource_Vehicle_C*          K2Node_DynamicCast_AsDamage_Source_Vehicle;        // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakVehicle*                            CallFunc_FindAssociatedOakVehicle_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakVehicle*                            K2Node_DynamicCast_AsOak_Vehicle;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCollisionDamageComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitReactionTagActive_ReturnValue;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHitReactionTagActive_ReturnValue1;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHitReactionTagActive_ReturnValue2;      // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIDodgeComponent*                      CallFunc_GetComponentByClass_ReturnValue1;         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitReactionLayer_HitByVehicle_C_EvaluateTag) == 0x000008, "Wrong alignment on HitReactionLayer_HitByVehicle_C_EvaluateTag");
static_assert(sizeof(HitReactionLayer_HitByVehicle_C_EvaluateTag) == 0x0000F8, "Wrong size on HitReactionLayer_HitByVehicle_C_EvaluateTag");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, Receiver) == 0x000000, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::Receiver' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, Causer) == 0x000008, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::Causer' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, DamageAmount) == 0x000010, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::DamageAmount' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, DamageType) == 0x000018, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::DamageType' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, DamageSource) == 0x000020, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::DamageSource' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, HitRegion) == 0x000028, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::HitRegion' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, Force) == 0x000030, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::Force' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, PreviousTag) == 0x000038, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::PreviousTag' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, ReturnValue) == 0x000040, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, RagdollMinVelocityZ) == 0x000048, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::RagdollMinVelocityZ' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, LargeImpactForce) == 0x00004C, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::LargeImpactForce' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, SmallImpactForce) == 0x000050, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::SmallImpactForce' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, K2Node_DynamicCast_AsDamage_Source_Vehicle) == 0x000058, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::K2Node_DynamicCast_AsDamage_Source_Vehicle' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_FindAssociatedOakVehicle_ReturnValue) == 0x000070, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_FindAssociatedOakVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, K2Node_DynamicCast_AsOak_Vehicle) == 0x000078, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::K2Node_DynamicCast_AsOak_Vehicle' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, K2Node_DynamicCast_bSuccess1) == 0x000080, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GetComponentByClass_ReturnValue) == 0x000088, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_IsValid_ReturnValue1) == 0x000090, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000094, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GetOwner_ReturnValue1) == 0x000098, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BuildString_Float_ReturnValue) == 0x0000A0, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BuildString_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_IsHitReactionTagActive_ReturnValue) == 0x0000B0, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_IsHitReactionTagActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_IsHitReactionTagActive_ReturnValue1) == 0x0000B1, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_IsHitReactionTagActive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_IsHitReactionTagActive_ReturnValue2) == 0x0000B2, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_IsHitReactionTagActive_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, K2Node_DynamicCast_AsOak_Character) == 0x0000B8, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, K2Node_DynamicCast_bSuccess2) == 0x0000C0, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BooleanOR_ReturnValue) == 0x0000C1, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GetVelocity_ReturnValue) == 0x0000C4, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BooleanOR_ReturnValue1) == 0x0000D0, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BreakVector_X) == 0x0000D4, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BreakVector_Z) == 0x0000DC, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_Abs_ReturnValue) == 0x0000E0, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GetComponentByClass_ReturnValue1) == 0x0000E8, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_IsValid_ReturnValue2) == 0x0000F0, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F1, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F2, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x0000F3, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000F4, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitReactionLayer_HitByVehicle_C_EvaluateTag, CallFunc_BooleanAND_ReturnValue) == 0x0000F5, "Member 'HitReactionLayer_HitByVehicle_C_EvaluateTag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

