#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShieldBoosterPickup_Pills_Upper

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShieldBoosterPickup_Pills_Upper.BP_ShieldBoosterPickup_Pills_Upper_C
// 0x0020 (0x0508 - 0x04E8)
class ABP_ShieldBoosterPickup_Pills_Upper_C : public AShieldChargeInventoryPickup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E8(0x0008)(Transient, DuplicateTransient)
	float                                         Ammo_Value;                                        // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Value;                                      // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   PickerUpper;                                       // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStatusEffectData*                      PillType;                                          // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ShieldBoosterPickup_Pills_Upper(int32 EntryPoint);
	void PickedUp(class AOakCharacter* PickupInstigator);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShieldBoosterPickup_Pills_Upper_C">();
	}
	static class ABP_ShieldBoosterPickup_Pills_Upper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShieldBoosterPickup_Pills_Upper_C>();
	}
};
static_assert(alignof(ABP_ShieldBoosterPickup_Pills_Upper_C) == 0x000008, "Wrong alignment on ABP_ShieldBoosterPickup_Pills_Upper_C");
static_assert(sizeof(ABP_ShieldBoosterPickup_Pills_Upper_C) == 0x000508, "Wrong size on ABP_ShieldBoosterPickup_Pills_Upper_C");
static_assert(offsetof(ABP_ShieldBoosterPickup_Pills_Upper_C, UberGraphFrame) == 0x0004E8, "Member 'ABP_ShieldBoosterPickup_Pills_Upper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShieldBoosterPickup_Pills_Upper_C, Ammo_Value) == 0x0004F0, "Member 'ABP_ShieldBoosterPickup_Pills_Upper_C::Ammo_Value' has a wrong offset!");
static_assert(offsetof(ABP_ShieldBoosterPickup_Pills_Upper_C, Shield_Value) == 0x0004F4, "Member 'ABP_ShieldBoosterPickup_Pills_Upper_C::Shield_Value' has a wrong offset!");
static_assert(offsetof(ABP_ShieldBoosterPickup_Pills_Upper_C, PickerUpper) == 0x0004F8, "Member 'ABP_ShieldBoosterPickup_Pills_Upper_C::PickerUpper' has a wrong offset!");
static_assert(offsetof(ABP_ShieldBoosterPickup_Pills_Upper_C, PillType) == 0x000500, "Member 'ABP_ShieldBoosterPickup_Pills_Upper_C::PillType' has a wrong offset!");

}

