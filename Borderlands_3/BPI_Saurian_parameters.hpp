#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Saurian

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_Saurian.BPI_Saurian_C.GetVariant
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BPI_Saurian_C_GetVariant final
{
public:
	class FName                                   Variant;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Saurian_C_GetVariant) == 0x000008, "Wrong alignment on BPI_Saurian_C_GetVariant");
static_assert(sizeof(BPI_Saurian_C_GetVariant) == 0x000008, "Wrong size on BPI_Saurian_C_GetVariant");
static_assert(offsetof(BPI_Saurian_C_GetVariant, Variant) == 0x000000, "Member 'BPI_Saurian_C_GetVariant::Variant' has a wrong offset!");

// Function BPI_Saurian.BPI_Saurian_C.SetCustomCritEnabled
// 0x0001 (0x0001 - 0x0000)
struct BPI_Saurian_C_SetCustomCritEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Saurian_C_SetCustomCritEnabled) == 0x000001, "Wrong alignment on BPI_Saurian_C_SetCustomCritEnabled");
static_assert(sizeof(BPI_Saurian_C_SetCustomCritEnabled) == 0x000001, "Wrong size on BPI_Saurian_C_SetCustomCritEnabled");
static_assert(offsetof(BPI_Saurian_C_SetCustomCritEnabled, Enabled) == 0x000000, "Member 'BPI_Saurian_C_SetCustomCritEnabled::Enabled' has a wrong offset!");

// Function BPI_Saurian.BPI_Saurian_C.TyrantFootstep
// 0x0001 (0x0001 - 0x0000)
struct BPI_Saurian_C_TyrantFootstep final
{
public:
	bool                                          IsLeft;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Saurian_C_TyrantFootstep) == 0x000001, "Wrong alignment on BPI_Saurian_C_TyrantFootstep");
static_assert(sizeof(BPI_Saurian_C_TyrantFootstep) == 0x000001, "Wrong size on BPI_Saurian_C_TyrantFootstep");
static_assert(offsetof(BPI_Saurian_C_TyrantFootstep, IsLeft) == 0x000000, "Member 'BPI_Saurian_C_TyrantFootstep::IsLeft' has a wrong offset!");

// Function BPI_Saurian.BPI_Saurian_C.SetSlaughterWeaponState
// 0x0001 (0x0001 - 0x0000)
struct BPI_Saurian_C_SetSlaughterWeaponState final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Saurian_C_SetSlaughterWeaponState) == 0x000001, "Wrong alignment on BPI_Saurian_C_SetSlaughterWeaponState");
static_assert(sizeof(BPI_Saurian_C_SetSlaughterWeaponState) == 0x000001, "Wrong size on BPI_Saurian_C_SetSlaughterWeaponState");
static_assert(offsetof(BPI_Saurian_C_SetSlaughterWeaponState, Active) == 0x000000, "Member 'BPI_Saurian_C_SetSlaughterWeaponState::Active' has a wrong offset!");

// Function BPI_Saurian.BPI_Saurian_C.SaurianTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct BPI_Saurian_C_SaurianTargetChanged final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Saurian_C_SaurianTargetChanged) == 0x000008, "Wrong alignment on BPI_Saurian_C_SaurianTargetChanged");
static_assert(sizeof(BPI_Saurian_C_SaurianTargetChanged) == 0x000008, "Wrong size on BPI_Saurian_C_SaurianTargetChanged");
static_assert(offsetof(BPI_Saurian_C_SaurianTargetChanged, TargetActor) == 0x000000, "Member 'BPI_Saurian_C_SaurianTargetChanged::TargetActor' has a wrong offset!");

}

