#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolumetricFog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_VolumetricFog.BP_VolumetricFog_C.Set Properties
// 0x0070 (0x0070 - 0x0000)
struct BP_VolumetricFog_C_Set_Properties final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select1_Default;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select2_Default;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x005C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumetricFog_C_Set_Properties) == 0x000008, "Wrong alignment on BP_VolumetricFog_C_Set_Properties");
static_assert(sizeof(BP_VolumetricFog_C_Set_Properties) == 0x000070, "Wrong size on BP_VolumetricFog_C_Set_Properties");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_bool_Variable) == 0x000000, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_float_Variable) == 0x000004, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_float_Variable1) == 0x000008, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_bool_Variable1) == 0x00000C, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_object_Variable) == 0x000010, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_object_Variable1) == 0x000018, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, Temp_bool_Variable2) == 0x000021, "Member 'BP_VolumetricFog_C_Set_Properties::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, K2Node_Select_Default) == 0x000024, "Member 'BP_VolumetricFog_C_Set_Properties::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_BreakColor_R) == 0x000028, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_BreakColor_G) == 0x00002C, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_BreakColor_B) == 0x000030, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_BreakColor_A) == 0x000034, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, K2Node_Select1_Default) == 0x000038, "Member 'BP_VolumetricFog_C_Set_Properties::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, K2Node_Select2_Default) == 0x000040, "Member 'BP_VolumetricFog_C_Set_Properties::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00005C, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricFog_C_Set_Properties, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_VolumetricFog_C_Set_Properties::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VolumetricFog.BP_VolumetricFog_C.ExecuteUbergraph_BP_VolumetricFog
// 0x0004 (0x0004 - 0x0000)
struct BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog) == 0x000004, "Wrong alignment on BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog");
static_assert(sizeof(BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog) == 0x000004, "Wrong size on BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog");
static_assert(offsetof(BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog, EntryPoint) == 0x000000, "Member 'BP_VolumetricFog_C_ExecuteUbergraph_BP_VolumetricFog::EntryPoint' has a wrong offset!");

}

