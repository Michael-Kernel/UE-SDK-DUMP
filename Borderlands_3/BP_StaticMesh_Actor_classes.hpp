#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StaticMesh_Actor

#include "Basic.hpp"

#include "Struct_MasterMaterial_BaseParams_Layer2_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_structs.hpp"
#include "Engine_classes.hpp"
#include "Struct_MasterMaterial_Colorize_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_Layer3_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_Layer4_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StaticMesh_Actor.BP_StaticMesh_Actor_C
// 0x0130 (0x0598 - 0x0468)
class ABP_StaticMesh_Actor_C : public AStaticMeshActor
{
public:
	float                                         Colorize_HueShift_RandomAmount;                    // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Colorize_HueShift_Amount;                          // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_MasterMaterial_BaseParams> MaterialParamsArray;                               // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          Randomize_On;                                      // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          Random_Seed;                                       // 0x0484(0x0008)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Materials_Array;                                   // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             Default_Materials_Array;                           // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         RandomFloatFromStream;                             // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomVectorFromStream;                            // 0x04B4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Primary_Color1;                              // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Primary_Color2;                              // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Secondary_Color1;                            // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Secondary_Color2;                            // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Tertiary_Color1;                             // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Tertiary_Color2;                             // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_MasterMaterial_Colorize> Colorize_Array;                                    // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          Is_Multi_Layer_Material;                           // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Multi_Layer_Number_of_Layers;                      // 0x0534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_MasterMaterial_BaseParams_Layer2> L2_MaterialParamsArray;                            // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FStruct_MasterMaterial_BaseParams_Layer3> L3_MaterialParamsArray;                            // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FStruct_MasterMaterial_BaseParams_Layer4> L4_MaterialParamsArray;                            // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          MacroOverlay_OverRideMaterial;                     // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           MacroOverlay_BaseColor_Multiply;                   // 0x056C(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_BaseColor_Strength;                   // 0x057C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_BaseColor_Desaturation;               // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_UVs_UOffset;                          // 0x0584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_UVs_VOffset;                          // 0x0588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_UVs_UTiling;                          // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_UVs_VTiling;                          // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MacroOverlay_UVs_Rotation;                         // 0x0594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Set_Per_Element_Macro_Overlay_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* DefaultMaterial, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Material_ID_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Per_Element_Layer_4_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* Default_Material_In, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Array_Index_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Per_Element_Layer_3_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* Default_Material_In, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Array_Index_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Per_Element_Layer_2_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* Default_Material_In, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Array_Index_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Level_ColorScheme();
	void Create_Dynamic_Material_Instance(class UMaterialInterface* Material_Instance_Interface, int32 Element_Index, class UStaticMeshComponent* Static_Mesh_Component, class UMaterialInstanceDynamic** Material_Instance_Dynamic, int32* Material_ID);
	void Set_Per_Element_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Material_ID_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Randomized_Colorization(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 MaterialID, class UMaterialInstanceDynamic* Default_Material, class UMaterialInstanceDynamic** Material_Instance_Dynamic_Out, int32* Material_ID_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Per_Instance_Master_Material_Parameters();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StaticMesh_Actor_C">();
	}
	static class ABP_StaticMesh_Actor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StaticMesh_Actor_C>();
	}
};
static_assert(alignof(ABP_StaticMesh_Actor_C) == 0x000008, "Wrong alignment on ABP_StaticMesh_Actor_C");
static_assert(sizeof(ABP_StaticMesh_Actor_C) == 0x000598, "Wrong size on ABP_StaticMesh_Actor_C");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Colorize_HueShift_RandomAmount) == 0x000468, "Member 'ABP_StaticMesh_Actor_C::Colorize_HueShift_RandomAmount' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Colorize_HueShift_Amount) == 0x00046C, "Member 'ABP_StaticMesh_Actor_C::Colorize_HueShift_Amount' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MaterialParamsArray) == 0x000470, "Member 'ABP_StaticMesh_Actor_C::MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Randomize_On) == 0x000480, "Member 'ABP_StaticMesh_Actor_C::Randomize_On' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Random_Seed) == 0x000484, "Member 'ABP_StaticMesh_Actor_C::Random_Seed' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Materials_Array) == 0x000490, "Member 'ABP_StaticMesh_Actor_C::Materials_Array' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Default_Materials_Array) == 0x0004A0, "Member 'ABP_StaticMesh_Actor_C::Default_Materials_Array' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, RandomFloatFromStream) == 0x0004B0, "Member 'ABP_StaticMesh_Actor_C::RandomFloatFromStream' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, RandomVectorFromStream) == 0x0004B4, "Member 'ABP_StaticMesh_Actor_C::RandomVectorFromStream' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Level_Primary_Color1) == 0x0004C0, "Member 'ABP_StaticMesh_Actor_C::Level_Primary_Color1' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Level_Primary_Color2) == 0x0004D0, "Member 'ABP_StaticMesh_Actor_C::Level_Primary_Color2' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Level_Secondary_Color1) == 0x0004E0, "Member 'ABP_StaticMesh_Actor_C::Level_Secondary_Color1' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Level_Secondary_Color2) == 0x0004F0, "Member 'ABP_StaticMesh_Actor_C::Level_Secondary_Color2' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Level_Tertiary_Color1) == 0x000500, "Member 'ABP_StaticMesh_Actor_C::Level_Tertiary_Color1' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Level_Tertiary_Color2) == 0x000510, "Member 'ABP_StaticMesh_Actor_C::Level_Tertiary_Color2' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Colorize_Array) == 0x000520, "Member 'ABP_StaticMesh_Actor_C::Colorize_Array' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Is_Multi_Layer_Material) == 0x000530, "Member 'ABP_StaticMesh_Actor_C::Is_Multi_Layer_Material' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, Multi_Layer_Number_of_Layers) == 0x000534, "Member 'ABP_StaticMesh_Actor_C::Multi_Layer_Number_of_Layers' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, L2_MaterialParamsArray) == 0x000538, "Member 'ABP_StaticMesh_Actor_C::L2_MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, L3_MaterialParamsArray) == 0x000548, "Member 'ABP_StaticMesh_Actor_C::L3_MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, L4_MaterialParamsArray) == 0x000558, "Member 'ABP_StaticMesh_Actor_C::L4_MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_OverRideMaterial) == 0x000568, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_OverRideMaterial' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_BaseColor_Multiply) == 0x00056C, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_BaseColor_Multiply' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_BaseColor_Strength) == 0x00057C, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_BaseColor_Strength' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_BaseColor_Desaturation) == 0x000580, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_BaseColor_Desaturation' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_UVs_UOffset) == 0x000584, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_UVs_UOffset' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_UVs_VOffset) == 0x000588, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_UVs_VOffset' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_UVs_UTiling) == 0x00058C, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_UVs_UTiling' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_UVs_VTiling) == 0x000590, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_UVs_VTiling' has a wrong offset!");
static_assert(offsetof(ABP_StaticMesh_Actor_C, MacroOverlay_UVs_Rotation) == 0x000594, "Member 'ABP_StaticMesh_Actor_C::MacroOverlay_UVs_Rotation' has a wrong offset!");

}

