#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_PetLoader_ShockOrb

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_PetLoader_ShockOrb_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_PetLoader_ShockOrb.Proj_PetLoader_ShockOrb_C
// 0x00C8 (0x07A8 - 0x06E0)
class AProj_PetLoader_ShockOrb_C final : public AOakProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ShootMeTarget;                                     // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakTriggerComponent*                   OakTrigger;                                        // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakDamageComponent*                    OakDamage;                                         // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileHomingComponent*             ProjectileHoming;                                  // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TracerTrailFX;                                     // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_PetLoader_ShockOrb                       OrbState;                                          // 0x0728(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PetTarget;                                         // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTargetableComponent*                   PetTargetingComponent;                             // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  LargeDamage;                                       // 0x0740(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  SmallDamage;                                       // 0x0758(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  LargeRadius;                                       // 0x0770(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  SmallRadius;                                       // 0x0788(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          AllowShotTrigger;                                  // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Proj_PetLoader_ShockOrb(int32 EntryPoint);
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_PetLoader_ShockOrb(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void SetAllowShotTrigger();
	void ShockOrb_OnTargetDied(class AActor* DamageReceiver, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void OnExplode();
	void Orb_LargeExplode();
	void BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_PetLoader_ShockOrb(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void Orb_Explode();
	void Orb_Idle();
	void Orb_Spawning();
	void UserConstructionScript();
	void OnRep_OrbState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_PetLoader_ShockOrb_C">();
	}
	static class AProj_PetLoader_ShockOrb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_PetLoader_ShockOrb_C>();
	}
};
static_assert(alignof(AProj_PetLoader_ShockOrb_C) == 0x000008, "Wrong alignment on AProj_PetLoader_ShockOrb_C");
static_assert(sizeof(AProj_PetLoader_ShockOrb_C) == 0x0007A8, "Wrong size on AProj_PetLoader_ShockOrb_C");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_PetLoader_ShockOrb_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, WwiseAudio) == 0x0006E8, "Member 'AProj_PetLoader_ShockOrb_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, ShootMeTarget) == 0x0006F0, "Member 'AProj_PetLoader_ShockOrb_C::ShootMeTarget' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, GbxProjectileMovement) == 0x0006F8, "Member 'AProj_PetLoader_ShockOrb_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, OakTrigger) == 0x000700, "Member 'AProj_PetLoader_ShockOrb_C::OakTrigger' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, OakDamage) == 0x000708, "Member 'AProj_PetLoader_ShockOrb_C::OakDamage' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, ProjectileHoming) == 0x000710, "Member 'AProj_PetLoader_ShockOrb_C::ProjectileHoming' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, Sphere) == 0x000718, "Member 'AProj_PetLoader_ShockOrb_C::Sphere' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, TracerTrailFX) == 0x000720, "Member 'AProj_PetLoader_ShockOrb_C::TracerTrailFX' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, OrbState) == 0x000728, "Member 'AProj_PetLoader_ShockOrb_C::OrbState' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, PetTarget) == 0x000730, "Member 'AProj_PetLoader_ShockOrb_C::PetTarget' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, PetTargetingComponent) == 0x000738, "Member 'AProj_PetLoader_ShockOrb_C::PetTargetingComponent' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, LargeDamage) == 0x000740, "Member 'AProj_PetLoader_ShockOrb_C::LargeDamage' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, SmallDamage) == 0x000758, "Member 'AProj_PetLoader_ShockOrb_C::SmallDamage' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, LargeRadius) == 0x000770, "Member 'AProj_PetLoader_ShockOrb_C::LargeRadius' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, SmallRadius) == 0x000788, "Member 'AProj_PetLoader_ShockOrb_C::SmallRadius' has a wrong offset!");
static_assert(offsetof(AProj_PetLoader_ShockOrb_C, AllowShotTrigger) == 0x0007A0, "Member 'AProj_PetLoader_ShockOrb_C::AllowShotTrigger' has a wrong offset!");

}

