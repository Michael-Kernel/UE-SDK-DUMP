#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_HeadCase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "BP_OakMission_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_HeadCase.Mission_HeadCase_C
// 0x00B8 (0x05C8 - 0x0510)
class UMission_HeadCase_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_HeadCase_C;                 // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UMissionObjectiveSet*                   Set_EnterVRWorld_ObjSetVar;                        // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_RescueNPC_ObjSetVar;                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_EnterVRWorld_ObjVar;                           // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_FindNPC_ObjVar;                                // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_KillTheInterrogator_ObjSetVar;                 // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_ExitTheSimulation_ObjSetVar;                   // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_HeadCase_TurnIn_ObjSetVar;                     // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_KillTheInterrogator_ObjVar;                    // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ExitTheSimulation_ObjVar;                      // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_TurnIn_ObjVar;                                 // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_PickUpTheHead_ObjSetVar;                       // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_PickUpTheHead_ObjVar;                          // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        ObjStatus_FindNPC;                                 // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjectiveSet*                   Set_PlugIn_ObjSetVar;                              // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_PlugIn_ObjVar;                                 // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CollectMemoryFragments_ObjVar;                 // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_MemFrag1_ObjVar;                               // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_MemFrag2_ObjVar;                               // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_MemFrag3_ObjVar;                               // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_MemFrag4_ObjVar;                               // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveStatus                       ObjStatus_OptionalObj;                             // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjCount_MemoryFrags;                              // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_HeadHider_ObjVar;                              // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mission_HeadCase(int32 EntryPoint);
	void Set_EnterVRWorld(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void _Obj_EnterVRWorld_Objective__PROXY();
	void Set_RescueNPC(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_EnterVRWorld(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_FindNPC(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_KillTheInterrogator(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_ExitTheSimulation(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_HeadCase_TurnIn(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_KillTheInterrogator(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_HeadHider(class UObject* Context);
	void Obj_HeadHider(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_EnterVRWorld_Objective__PROXY_0();
	void MissionKickoff();
	void Obj_ExitTheSimulation(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_CheckIfFinalFragment(class UObject* Context);
	void MCE_VRSwitch(class UObject* Context);
	void _Obj_MemFrag4_Objective__PROXY_11();
	void _Obj_MemFrag2_Objective__PROXY_10();
	void _Obj_MemFrag3_Objective__PROXY_9();
	void _Obj_MemFrag1_Objective__PROXY_8();
	void _Obj_MemFrag4_Objective__PROXY_7();
	void _Obj_MemFrag2_Objective__PROXY_6();
	void _Obj_MemFrag3_Objective__PROXY_5();
	void _Obj_MemFrag1_Objective__PROXY_4();
	void Obj_TurnIn(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_EnterVRWorld(class UObject* Context);
	void MCE_Update_FindNPC(class UObject* Context);
	void MCE_Update_ExitTheSimulation(class UObject* Context);
	void MCE_Update_TurnIn(class UObject* Context);
	void Obj_MemFrag4(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_MemFrag3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_MemFrag2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_MemFrag1(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_CollectMemoryFragments_Objective__PROXY_3();
	void _Obj_CollectMemoryFragments_Objective__PROXY_2();
	void MCE_Update_CollectMemoryFragments(class UObject* Context);
	void Obj_CollectMemoryFragments(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_PlugIn(class UObject* Context);
	void Obj_PlugIn(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_PlugIn(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void _Obj_EnterVRWorld_Objective__PROXY_1();
	void MCE_Update_PickUpTheHead(class UObject* Context);
	void Obj_PickUpTheHead(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_PickUpTheHead(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void MCE_Update_KillTheInterrogator(class UObject* Context);
	void OnDialogSequenceFinished_19();
	void OnDialogSequenceFinished_20();
	void OnDialogSequenceFinished_21();
	void OnDialogSequenceFinished_22();
	void OnDialogSequenceFinished_23();
	void OnDialogSequenceFinished_24();
	void OnDialogSequenceFinished_25();
	void OnDialogSequenceFinished_26();
	void OnDialogSequenceFinished_27();
	void OnDialogSequenceFinished_28();
	void OnDialogSequenceFinished_29();
	void OnDialogSequenceFinished_30();
	void OnDialogSequenceFinished_31();
	void OnDialogSequenceFinished_32();
	void OnDialogSequenceFinished_33();
	void OnDialogSequenceFinished_34();
	void OnDialogSequenceFinished_35();
	void OnDialogSequenceFinished_36();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_HeadCase_C">();
	}
	static class UMission_HeadCase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_HeadCase_C>();
	}
};
static_assert(alignof(UMission_HeadCase_C) == 0x000008, "Wrong alignment on UMission_HeadCase_C");
static_assert(sizeof(UMission_HeadCase_C) == 0x0005C8, "Wrong size on UMission_HeadCase_C");
static_assert(offsetof(UMission_HeadCase_C, UberGraphFrame_Mission_HeadCase_C) == 0x000510, "Member 'UMission_HeadCase_C::UberGraphFrame_Mission_HeadCase_C' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_EnterVRWorld_ObjSetVar) == 0x000518, "Member 'UMission_HeadCase_C::Set_EnterVRWorld_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_RescueNPC_ObjSetVar) == 0x000520, "Member 'UMission_HeadCase_C::Set_RescueNPC_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_EnterVRWorld_ObjVar) == 0x000528, "Member 'UMission_HeadCase_C::Obj_EnterVRWorld_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_FindNPC_ObjVar) == 0x000530, "Member 'UMission_HeadCase_C::Obj_FindNPC_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_KillTheInterrogator_ObjSetVar) == 0x000538, "Member 'UMission_HeadCase_C::Set_KillTheInterrogator_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_ExitTheSimulation_ObjSetVar) == 0x000540, "Member 'UMission_HeadCase_C::Set_ExitTheSimulation_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_HeadCase_TurnIn_ObjSetVar) == 0x000548, "Member 'UMission_HeadCase_C::Set_HeadCase_TurnIn_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_KillTheInterrogator_ObjVar) == 0x000550, "Member 'UMission_HeadCase_C::Obj_KillTheInterrogator_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_ExitTheSimulation_ObjVar) == 0x000558, "Member 'UMission_HeadCase_C::Obj_ExitTheSimulation_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_TurnIn_ObjVar) == 0x000560, "Member 'UMission_HeadCase_C::Obj_TurnIn_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_PickUpTheHead_ObjSetVar) == 0x000568, "Member 'UMission_HeadCase_C::Set_PickUpTheHead_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_PickUpTheHead_ObjVar) == 0x000570, "Member 'UMission_HeadCase_C::Obj_PickUpTheHead_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, ObjStatus_FindNPC) == 0x000578, "Member 'UMission_HeadCase_C::ObjStatus_FindNPC' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Set_PlugIn_ObjSetVar) == 0x000580, "Member 'UMission_HeadCase_C::Set_PlugIn_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_PlugIn_ObjVar) == 0x000588, "Member 'UMission_HeadCase_C::Obj_PlugIn_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_CollectMemoryFragments_ObjVar) == 0x000590, "Member 'UMission_HeadCase_C::Obj_CollectMemoryFragments_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_MemFrag1_ObjVar) == 0x000598, "Member 'UMission_HeadCase_C::Obj_MemFrag1_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_MemFrag2_ObjVar) == 0x0005A0, "Member 'UMission_HeadCase_C::Obj_MemFrag2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_MemFrag3_ObjVar) == 0x0005A8, "Member 'UMission_HeadCase_C::Obj_MemFrag3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_MemFrag4_ObjVar) == 0x0005B0, "Member 'UMission_HeadCase_C::Obj_MemFrag4_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, ObjStatus_OptionalObj) == 0x0005B8, "Member 'UMission_HeadCase_C::ObjStatus_OptionalObj' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, ObjCount_MemoryFrags) == 0x0005BC, "Member 'UMission_HeadCase_C::ObjCount_MemoryFrags' has a wrong offset!");
static_assert(offsetof(UMission_HeadCase_C, Obj_HeadHider_ObjVar) == 0x0005C0, "Member 'UMission_HeadCase_C::Obj_HeadHider_ObjVar' has a wrong offset!");

}

