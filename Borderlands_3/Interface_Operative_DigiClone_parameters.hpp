#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Interface_Operative_DigiClone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Interface_Operative_DigiClone.Interface_Operative_DigiClone_C.Is DigiClone Active
// 0x0001 (0x0001 - 0x0000)
struct Interface_Operative_DigiClone_C_Is_DigiClone_Active final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_Operative_DigiClone_C_Is_DigiClone_Active) == 0x000001, "Wrong alignment on Interface_Operative_DigiClone_C_Is_DigiClone_Active");
static_assert(sizeof(Interface_Operative_DigiClone_C_Is_DigiClone_Active) == 0x000001, "Wrong size on Interface_Operative_DigiClone_C_Is_DigiClone_Active");
static_assert(offsetof(Interface_Operative_DigiClone_C_Is_DigiClone_Active, Return) == 0x000000, "Member 'Interface_Operative_DigiClone_C_Is_DigiClone_Active::Return' has a wrong offset!");

// Function Interface_Operative_DigiClone.Interface_Operative_DigiClone_C.GetDigiCloneReference
// 0x0008 (0x0008 - 0x0000)
struct Interface_Operative_DigiClone_C_GetDigiCloneReference final
{
public:
	class AActor*                                 Digiclone;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DigiClone_C_GetDigiCloneReference) == 0x000008, "Wrong alignment on Interface_Operative_DigiClone_C_GetDigiCloneReference");
static_assert(sizeof(Interface_Operative_DigiClone_C_GetDigiCloneReference) == 0x000008, "Wrong size on Interface_Operative_DigiClone_C_GetDigiCloneReference");
static_assert(offsetof(Interface_Operative_DigiClone_C_GetDigiCloneReference, Digiclone) == 0x000000, "Member 'Interface_Operative_DigiClone_C_GetDigiCloneReference::Digiclone' has a wrong offset!");

// Function Interface_Operative_DigiClone.Interface_Operative_DigiClone_C.StartSeperationAnxietyNova
// 0x000C (0x000C - 0x0000)
struct Interface_Operative_DigiClone_C_StartSeperationAnxietyNova final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Interface_Operative_DigiClone_C_StartSeperationAnxietyNova) == 0x000004, "Wrong alignment on Interface_Operative_DigiClone_C_StartSeperationAnxietyNova");
static_assert(sizeof(Interface_Operative_DigiClone_C_StartSeperationAnxietyNova) == 0x00000C, "Wrong size on Interface_Operative_DigiClone_C_StartSeperationAnxietyNova");
static_assert(offsetof(Interface_Operative_DigiClone_C_StartSeperationAnxietyNova, Loc) == 0x000000, "Member 'Interface_Operative_DigiClone_C_StartSeperationAnxietyNova::Loc' has a wrong offset!");

}

