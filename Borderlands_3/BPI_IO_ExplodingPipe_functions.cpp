#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_IO_ExplodingPipe

#include "Basic.hpp"

#include "BPI_IO_ExplodingPipe_classes.hpp"
#include "BPI_IO_ExplodingPipe_parameters.hpp"


namespace SDK
{

// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.DestroyPipe
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_IO_ExplodingPipe_C::DestroyPipe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_ExplodingPipe_C", "DestroyPipe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.SetPipeFlowState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasFlow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_IO_ExplodingPipe_C::SetPipeFlowState(bool HasFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_ExplodingPipe_C", "SetPipeFlowState");

	Params::BPI_IO_ExplodingPipe_C_SetPipeFlowState Parms{};

	Parms.HasFlow = HasFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.SetPipeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_IO_ExplodingPipe_DestroyedState    PipeState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_IO_ExplodingPipe_C::SetPipeState(Enum_IO_ExplodingPipe_DestroyedState PipeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_ExplodingPipe_C", "SetPipeState");

	Params::BPI_IO_ExplodingPipe_C_SetPipeState Parms{};

	Parms.PipeState = PipeState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.GetPipeDestroyedState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Destroyed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_IO_ExplodingPipe_C::GetPipeDestroyedState(bool* Destroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_ExplodingPipe_C", "GetPipeDestroyedState");

	Params::BPI_IO_ExplodingPipe_C_GetPipeDestroyedState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Destroyed != nullptr)
		*Destroyed = Parms.Destroyed;
}


// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.GetPipeFlowState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasFlow                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_IO_ExplodingPipe_C::GetPipeFlowState(bool* HasFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_ExplodingPipe_C", "GetPipeFlowState");

	Params::BPI_IO_ExplodingPipe_C_GetPipeFlowState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasFlow != nullptr)
		*HasFlow = Parms.HasFlow;
}

}

