#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputComponent_PlayerController

#include "Basic.hpp"


namespace SDK::Params
{

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TriggerContextualPrompt_K2Node_GbxInputActionEvent_Discrete_49::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Trade_K2Node_GbxInputActionEvent_Discrete_41::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_TextChat_K2Node_GbxInputActionEvent_Discrete_48::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_StartDuel_K2Node_GbxInputActionEvent_Discrete_34::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Shift_K2Node_GbxInputActionEvent_Discrete_36::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Roster_K2Node_GbxInputActionEvent_Discrete_30::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PhotoMode_K2Node_GbxInputActionEvent_Discrete_35::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_PauseGame_K2Node_GbxInputActionEvent_Discrete_46::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenStatusMenu_K2Node_GbxInputActionEvent_Discrete_50::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenQuickMenu_K2Node_GbxInputActionEvent_Discrete_27::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMissionLog_K2Node_GbxInputActionEvent_Discrete_51::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenMap_K2Node_GbxInputActionEvent_Discrete_32::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenInventoryMenu_K2Node_GbxInputActionEvent_Discrete_47::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_OpenCharacterSkillsMenu_K2Node_GbxInputActionEvent_Discrete_44::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Matchmaking_K2Node_GbxInputActionEvent_Discrete_29::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Mail_K2Node_GbxInputActionEvent_Discrete_28::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_LANBrowser_K2Node_GbxInputActionEvent_Discrete_26::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_HandleNotification_K2Node_GbxInputActionEvent_Discrete_45::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_GuardianRank_K2Node_GbxInputActionEvent_Discrete_31::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_4_K2Node_GbxInputActionEvent_Discrete_37::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_3_K2Node_GbxInputActionEvent_Discrete_38::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_2_K2Node_GbxInputActionEvent_Discrete_39::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Emote_1_K2Node_GbxInputActionEvent_Discrete_40::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_43::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_Chat_K2Node_GbxInputActionEvent_Discrete_42::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33
// 0x0008 (0x0008 - 0x0000)
struct InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33");
static_assert(sizeof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33) == 0x000008, "Wrong size on InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33");
static_assert(offsetof(InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33, Action) == 0x000000, "Member 'InputComponent_PlayerController_C_GbxInpActEvt_InputAction_Discrete_AskForHelp_K2Node_GbxInputActionEvent_Discrete_33::Action' has a wrong offset!");

// Function InputComponent_PlayerController.InputComponent_PlayerController_C.ExecuteUbergraph_InputComponent_PlayerController
// 0x01A8 (0x01A8 - 0x0000)
struct InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakHUD*                                CallFunc_GetOakHUD_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action1;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action2;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action3;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action4;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action5;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action6;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action7;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action8;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action9;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakHUD*                                CallFunc_GetOakHUD_ReturnValue1;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action10;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakHUD*                                CallFunc_GetOakHUD_ReturnValue2;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action11;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action12;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action13;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action14;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakHUD*                                CallFunc_GetOakHUD_ReturnValue3;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContextSensitivePromptActive_ReturnValue; // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action15;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakHUD*                                CallFunc_GetOakHUD_ReturnValue4;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> Temp_softobject_Variable;                          // 0x00D8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action16;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0110(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action17;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1; // 0x0140(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action18;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action19;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action20;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action21;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action22;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action23;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action24;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action25;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController) == 0x000008, "Wrong alignment on InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController");
static_assert(sizeof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController) == 0x0001A8, "Wrong size on InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, EntryPoint) == 0x000000, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000010, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_GetOakHUD_ReturnValue) == 0x000020, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_GetOakHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action) == 0x000028, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action1) == 0x000030, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action1' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action2) == 0x000038, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action2' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action3) == 0x000040, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action3' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action4) == 0x000048, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action4' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action5) == 0x000050, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action5' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action6) == 0x000058, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action6' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action7) == 0x000060, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action7' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action8) == 0x000068, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action8' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action9) == 0x000070, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action9' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_GetOakHUD_ReturnValue1) == 0x000078, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_GetOakHUD_ReturnValue1' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action10) == 0x000088, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action10' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_GetOakHUD_ReturnValue2) == 0x000090, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_GetOakHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action11) == 0x000098, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action11' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action12) == 0x0000A0, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action12' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action13) == 0x0000A8, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action13' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action14) == 0x0000B0, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action14' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_GetOakHUD_ReturnValue3) == 0x0000B8, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_GetOakHUD_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_IsValid_ReturnValue1) == 0x0000C0, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_IsContextSensitivePromptActive_ReturnValue) == 0x0000C1, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_IsContextSensitivePromptActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action15) == 0x0000C8, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action15' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_GetOakHUD_ReturnValue4) == 0x0000D0, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_GetOakHUD_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, Temp_softobject_Variable) == 0x0000D8, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_IsValid_ReturnValue2) == 0x000100, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action16) == 0x000108, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action16' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000110, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action17) == 0x000138, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action17' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1) == 0x000140, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action18) == 0x000168, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action18' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action19) == 0x000170, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action19' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action20) == 0x000178, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action20' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action21) == 0x000180, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action21' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action22) == 0x000188, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action22' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action23) == 0x000190, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action23' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action24) == 0x000198, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action24' has a wrong offset!");
static_assert(offsetof(InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController, K2Node_GbxInputActionEvent_Discrete_Action25) == 0x0001A0, "Member 'InputComponent_PlayerController_C_ExecuteUbergraph_InputComponent_PlayerController::K2Node_GbxInputActionEvent_Discrete_Action25' has a wrong offset!");

}

