#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_MAL_SR_ASMD_Orb

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Projectile_MAL_SR_ASMD_Orb.Projectile_MAL_SR_ASMD_Orb_C.ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb
// 0x00E8 (0x00E8 - 0x0000)
struct Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     CallFunc_MakeGbxAttributeFloat_ReturnValue;        // 0x0018(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb) == 0x000008, "Wrong alignment on Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb");
static_assert(sizeof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb) == 0x0000E8, "Wrong size on Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, EntryPoint) == 0x000000, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::EntryPoint' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_GetDataTableValue_OutValue) == 0x000004, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_GetDataTableValue_ReturnValue) == 0x000008, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_GetDataTableValue_OutValue1) == 0x000010, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_GetDataTableValue_ReturnValue1) == 0x000014, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_MakeGbxAttributeFloat_ReturnValue) == 0x000018, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_MakeGbxAttributeFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000028, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, K2Node_ComponentBoundEvent_OtherActor) == 0x000030, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, K2Node_ComponentBoundEvent_OtherComp) == 0x000038, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000040, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_GetObjectClass_ReturnValue) == 0x0000D8, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000E0, "Member 'Projectile_MAL_SR_ASMD_Orb_C_ExecuteUbergraph_Projectile_MAL_SR_ASMD_Orb::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function Projectile_MAL_SR_ASMD_Orb.Projectile_MAL_SR_ASMD_Orb_C.BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb
// 0x00B0 (0x00B0 - 0x0000)
struct Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb) == 0x000008, "Wrong alignment on Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb");
static_assert(sizeof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb) == 0x0000B0, "Wrong size on Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb, OverlappedComponent) == 0x000000, "Member 'Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb, OtherActor) == 0x000008, "Member 'Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb::OtherActor' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb, OtherComp) == 0x000010, "Member 'Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb::OtherComp' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb, OtherBodyIndex) == 0x000018, "Member 'Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb, bFromSweep) == 0x00001C, "Member 'Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb::bFromSweep' has a wrong offset!");
static_assert(offsetof(Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb, SweepResult) == 0x000020, "Member 'Projectile_MAL_SR_ASMD_Orb_C_BndEvt__ProjOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_Projectile_MAL_SR_ASMD_Orb::SweepResult' has a wrong offset!");

}

