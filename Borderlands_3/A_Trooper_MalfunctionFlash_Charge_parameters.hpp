#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_Trooper_MalfunctionFlash_Charge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge
// 0x00A0 (0x00A0 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor7;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            K2Node_Event_ActionEndState;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor6;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor5;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor4;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor3;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor2;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor1;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SpeedAtImpact;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LocalHitDirection;              // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Trooper_C>        K2Node_DynamicCast_AsBPI_Trooper;                  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Trooper_C>        K2Node_DynamicCast_AsBPI_Trooper1;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge) == 0x0000A0, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, EntryPoint) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::EntryPoint' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor7) == 0x000008, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor7' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_ActionEndState) == 0x000010, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_ActionEndState' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor6) == 0x000018, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor6' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor5) == 0x000020, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor5' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor4) == 0x000028, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor4' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor3) == 0x000030, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor3' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor2) == 0x000038, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor2' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor1) == 0x000040, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor1' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_Event_Actor) == 0x000048, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_CustomEvent_SpeedAtImpact) == 0x000050, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_CustomEvent_SpeedAtImpact' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_CustomEvent_LocalHitDirection) == 0x000054, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_CustomEvent_LocalHitDirection' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_DynamicCast_AsBPI_Trooper) == 0x000070, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_DynamicCast_AsBPI_Trooper' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_DynamicCast_AsBPI_Trooper1) == 0x000088, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_DynamicCast_AsBPI_Trooper1' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge, Temp_bool_Has_Been_Initd_Variable) == 0x000099, "Member 'A_Trooper_MalfunctionFlash_Charge_C_ExecuteUbergraph_A_Trooper_MalfunctionFlash_Charge::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.CE_TriggerFlashDeath
// 0x0010 (0x0010 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath final
{
public:
	int32                                         SpeedAtImpact;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalHitDirection;                                 // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath) == 0x000004, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath) == 0x000010, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath, SpeedAtImpact) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath::SpeedAtImpact' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath, LocalHitDirection) == 0x000004, "Member 'A_Trooper_MalfunctionFlash_Charge_C_CE_TriggerFlashDeath::LocalHitDirection' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnEnd
// 0x0010 (0x0010 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnEnd final
{
public:
	EGbxActionEndState                            ActionEndState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnEnd) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnEnd");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnEnd) == 0x000010, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnEnd");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnEnd, ActionEndState) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnEnd::ActionEndState' has a wrong offset!");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnEnd, Actor) == 0x000008, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnEnd::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnBegin
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnBegin final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnBegin) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnBegin");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnBegin) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnBegin");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnBegin, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnBegin::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnLoop
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnLoop final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnLoop) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnLoop");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnLoop) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnLoop");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnLoop, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnLoop::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnStopForFriendly
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnStopForFriendly::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnReachCliff
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnReachCliff::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnMiss
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnMiss final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnMiss) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnMiss");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnMiss) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnMiss");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnMiss, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnMiss::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnHitWall
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnHitWall final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnHitWall) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnHitWall");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnHitWall) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnHitWall");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnHitWall, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnHitWall::Actor' has a wrong offset!");

// Function A_Trooper_MalfunctionFlash_Charge.A_Trooper_MalfunctionFlash_Charge_C.OnStrike
// 0x0008 (0x0008 - 0x0000)
struct A_Trooper_MalfunctionFlash_Charge_C_OnStrike final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Trooper_MalfunctionFlash_Charge_C_OnStrike) == 0x000008, "Wrong alignment on A_Trooper_MalfunctionFlash_Charge_C_OnStrike");
static_assert(sizeof(A_Trooper_MalfunctionFlash_Charge_C_OnStrike) == 0x000008, "Wrong size on A_Trooper_MalfunctionFlash_Charge_C_OnStrike");
static_assert(offsetof(A_Trooper_MalfunctionFlash_Charge_C_OnStrike, Actor) == 0x000000, "Member 'A_Trooper_MalfunctionFlash_Charge_C_OnStrike::Actor' has a wrong offset!");

}

