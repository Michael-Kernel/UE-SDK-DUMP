#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_Torgue_BaseWeapon

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"


namespace SDK::Params
{

// Function BPWeap_Torgue_BaseWeapon.BPWeap_Torgue_BaseWeapon_C.ExecuteUbergraph_BPWeap_Torgue_BaseWeapon
// 0x0038 (0x0038 - 0x0000)
struct BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bCompleted;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AWeapon* EventWeapon)>   K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class AWeapon*                                K2Node_CustomEvent_EventWeapon;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon) == 0x000008, "Wrong alignment on BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon");
static_assert(sizeof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon) == 0x000038, "Wrong size on BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon, EntryPoint) == 0x000000, "Member 'BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon, K2Node_Event_bCompleted) == 0x000018, "Member 'BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon::K2Node_Event_bCompleted' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon, K2Node_CustomEvent_EventWeapon) == 0x000030, "Member 'BPWeap_Torgue_BaseWeapon_C_ExecuteUbergraph_BPWeap_Torgue_BaseWeapon::K2Node_CustomEvent_EventWeapon' has a wrong offset!");

// Function BPWeap_Torgue_BaseWeapon.BPWeap_Torgue_BaseWeapon_C.Weapon_NotifyPutDown
// 0x0008 (0x0008 - 0x0000)
struct BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown final
{
public:
	class AWeapon*                                EventWeapon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown) == 0x000008, "Wrong alignment on BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown");
static_assert(sizeof(BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown) == 0x000008, "Wrong size on BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown, EventWeapon) == 0x000000, "Member 'BPWeap_Torgue_BaseWeapon_C_Weapon_NotifyPutDown::EventWeapon' has a wrong offset!");

// Function BPWeap_Torgue_BaseWeapon.BPWeap_Torgue_BaseWeapon_C.DetonateActiveProjectiles
// 0x0040 (0x0040 - 0x0000)
struct BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPWeaponFireProjectileComponent_Torgue_C* CallFunc_GetUseModeComponentByClass_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileQueryData              K2Node_MakeStruct_LightProjectileQueryData;        // 0x0018(0x0020)(NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles) == 0x000008, "Wrong alignment on BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles");
static_assert(sizeof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles) == 0x000040, "Wrong size on BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles, CallFunc_GetUseModeComponentByClass_ReturnValue) == 0x000008, "Member 'BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles::CallFunc_GetUseModeComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000014, "Member 'BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles, K2Node_MakeStruct_LightProjectileQueryData) == 0x000018, "Member 'BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles::K2Node_MakeStruct_LightProjectileQueryData' has a wrong offset!");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BPWeap_Torgue_BaseWeapon_C_DetonateActiveProjectiles::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPWeap_Torgue_BaseWeapon.BPWeap_Torgue_BaseWeapon_C.Notify_ReloadEnded
// 0x0001 (0x0001 - 0x0000)
struct BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded final
{
public:
	bool                                          bCompleted;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded) == 0x000001, "Wrong alignment on BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded");
static_assert(sizeof(BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded) == 0x000001, "Wrong size on BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded");
static_assert(offsetof(BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded, bCompleted) == 0x000000, "Member 'BPWeap_Torgue_BaseWeapon_C_Notify_ReloadEnded::bCompleted' has a wrong offset!");

}

