#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_SG_MAL

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_SG_MAL.BPAnim_SG_MAL_C.ExecuteUbergraph_BPAnim_SG_MAL
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewMode;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL) == 0x000004, "Wrong alignment on BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL");
static_assert(sizeof(BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL) == 0x000008, "Wrong size on BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL");
static_assert(offsetof(BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL, EntryPoint) == 0x000000, "Member 'BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL, K2Node_Event_NewMode) == 0x000004, "Member 'BPAnim_SG_MAL_C_ExecuteUbergraph_BPAnim_SG_MAL::K2Node_Event_NewMode' has a wrong offset!");

// Function BPAnim_SG_MAL.BPAnim_SG_MAL_C.BlueprintSwitchedMode
// 0x0004 (0x0004 - 0x0000)
struct BPAnim_SG_MAL_C_BlueprintSwitchedMode final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SG_MAL_C_BlueprintSwitchedMode) == 0x000004, "Wrong alignment on BPAnim_SG_MAL_C_BlueprintSwitchedMode");
static_assert(sizeof(BPAnim_SG_MAL_C_BlueprintSwitchedMode) == 0x000004, "Wrong size on BPAnim_SG_MAL_C_BlueprintSwitchedMode");
static_assert(offsetof(BPAnim_SG_MAL_C_BlueprintSwitchedMode, NewMode) == 0x000000, "Member 'BPAnim_SG_MAL_C_BlueprintSwitchedMode::NewMode' has a wrong offset!");

// Function BPAnim_SG_MAL.BPAnim_SG_MAL_C.UpdateIdle
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_SG_MAL_C_UpdateIdle final
{
public:
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_SG_MAL_C_UpdateIdle) == 0x000004, "Wrong alignment on BPAnim_SG_MAL_C_UpdateIdle");
static_assert(sizeof(BPAnim_SG_MAL_C_UpdateIdle) == 0x000008, "Wrong size on BPAnim_SG_MAL_C_UpdateIdle");
static_assert(offsetof(BPAnim_SG_MAL_C_UpdateIdle, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000000, "Member 'BPAnim_SG_MAL_C_UpdateIdle::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SG_MAL_C_UpdateIdle, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BPAnim_SG_MAL_C_UpdateIdle::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

