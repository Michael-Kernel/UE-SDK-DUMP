#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_SlideKick_FrozenHeart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function ShieldAug_SlideKick_FrozenHeart.ShieldAug_SlideKick_FrozenHeart_C.K2_OnCausedDamage
// 0x01E8 (0x01E8 - 0x0000)
struct ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class AActor*                                 DamageInstigator;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0048(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0050(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0060(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	float                                         ShieldPercent;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FullCryoAmount;                                    // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x00C8(0x0018)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             Temp_struct_Variable;                              // 0x00E0(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue1;      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGbxAttributeFloat_Value;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGbxAttributeFloat_BaseValue;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue;    // 0x01B0(0x0018)(NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage) == 0x000008, "Wrong alignment on ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage");
static_assert(sizeof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage) == 0x0001E8, "Wrong size on ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, Shield) == 0x000000, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, StackData) == 0x000008, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, DamageInstigator) == 0x000038, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, Damage) == 0x000040, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::Damage' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, DamageType) == 0x000048, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::DamageType' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, DamageSource) == 0x000050, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, DamagedActor) == 0x000058, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, Details) == 0x000060, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::Details' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, ShieldPercent) == 0x0000C0, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::ShieldPercent' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, FullCryoAmount) == 0x0000C4, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::FullCryoAmount' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, ResourcePool) == 0x0000C8, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, Temp_struct_Variable) == 0x0000E0, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetValueFromStackCount_ReturnValue) == 0x000170, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetValueFromStackCount_ReturnValue1) == 0x000174, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetValueFromStackCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000178, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x00017C, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000180, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_BreakGbxAttributeFloat_Value) == 0x000184, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_BreakGbxAttributeFloat_Value' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_BreakGbxAttributeFloat_BaseValue) == 0x000188, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_BreakGbxAttributeFloat_BaseValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetOwner_ReturnValue) == 0x000190, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, K2Node_DynamicCast_AsOak_Character) == 0x000198, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetDamageType_ReturnValue) == 0x0001A8, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetResourcePoolByResource_ReturnValue) == 0x0001B0, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetResourcePoolByResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetOwner_ReturnValue1) == 0x0001C8, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetOwner_ReturnValue2) == 0x0001D0, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_GetValueOfAttribute_ReturnValue) == 0x0001D8, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001DC, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001E0, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0001E4, "Member 'ShieldAug_SlideKick_FrozenHeart_C_K2_OnCausedDamage::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");

}

