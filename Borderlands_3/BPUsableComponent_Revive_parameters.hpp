#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUsableComponent_Revive

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPUsableComponent_Revive.BPUsableComponent_Revive_C.K2_CanBeUsed
// 0x0060 (0x0060 - 0x0000)
struct BPUsableComponent_Revive_C_K2_CanBeUsed final
{
public:
	struct FUsabilityQuery                        Query;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxCharacter*                          CallFunc_GetPrimaryCharacter_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUsableComponent_Revive_C_K2_CanBeUsed) == 0x000008, "Wrong alignment on BPUsableComponent_Revive_C_K2_CanBeUsed");
static_assert(sizeof(BPUsableComponent_Revive_C_K2_CanBeUsed) == 0x000060, "Wrong size on BPUsableComponent_Revive_C_K2_CanBeUsed");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, Query) == 0x000000, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::Query' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, ReturnValue) == 0x000018, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000028, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, K2Node_DynamicCast_AsOak_Character) == 0x000038, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, CallFunc_GetPrimaryCharacter_ReturnValue) == 0x000048, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::CallFunc_GetPrimaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, K2Node_DynamicCast_AsOak_Character1) == 0x000050, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::K2Node_DynamicCast_AsOak_Character1' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BPUsableComponent_Revive_C_K2_CanBeUsed, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000059, "Member 'BPUsableComponent_Revive_C_K2_CanBeUsed::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

