#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_BOTD

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_BOTD.Ability_BOTD_C
// 0x0038 (0x0130 - 0x00F8)
class UAbility_BOTD_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 Killed;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD; // 0x0108(0x0028)()

public:
	void ExecuteUbergraph_Ability_BOTD(int32 EntryPoint);
	void OnActivated();
	void OnCausedDeath_Event(class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_BOTD_C">();
	}
	static class UAbility_BOTD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_BOTD_C>();
	}
};
static_assert(alignof(UAbility_BOTD_C) == 0x000008, "Wrong alignment on UAbility_BOTD_C");
static_assert(sizeof(UAbility_BOTD_C) == 0x000130, "Wrong size on UAbility_BOTD_C");
static_assert(offsetof(UAbility_BOTD_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_BOTD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_BOTD_C, Killed) == 0x000100, "Member 'UAbility_BOTD_C::Killed' has a wrong offset!");
static_assert(offsetof(UAbility_BOTD_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD) == 0x000108, "Member 'UAbility_BOTD_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD' has a wrong offset!");

}

