#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFistOverMatterActor

#include "Basic.hpp"

#include "BPFistOverMatterActor_classes.hpp"
#include "BPFistOverMatterActor_parameters.hpp"


namespace SDK
{

// Function BPFistOverMatterActor.BPFistOverMatterActor_C.ExecuteUbergraph_BPFistOverMatterActor
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPFistOverMatterActor_C::ExecuteUbergraph_BPFistOverMatterActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "ExecuteUbergraph_BPFistOverMatterActor");

	Params::BPFistOverMatterActor_C_ExecuteUbergraph_BPFistOverMatterActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPFistOverMatterActor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "ReceiveEndPlay");

	Params::BPFistOverMatterActor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.DoWebSlamRightDamage
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::DoWebSlamRightDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "DoWebSlamRightDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.DoWebSlamLeftDamage
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::DoWebSlamLeftDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "DoWebSlamLeftDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.EndWebSlam
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::EndWebSlam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "EndWebSlam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.BeginWebSlam
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::BeginWebSlam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "BeginWebSlam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.FindGroundLocationAsync
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::FindGroundLocationAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "FindGroundLocationAsync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPFistOverMatterActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.StartLeftHandTimer
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::StartLeftHandTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "StartLeftHandTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.StartRightHandTimer
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::StartRightHandTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "StartRightHandTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.WebSlamParticleSystemEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPFistOverMatterActor_C::WebSlamParticleSystemEvent(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "WebSlamParticleSystemEvent");

	Params::BPFistOverMatterActor_C_WebSlamParticleSystemEvent Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.SpawnSlamEmitter
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::SpawnSlamEmitter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "SpawnSlamEmitter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPFistOverMatterActor_C::GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9(const struct FHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9");

	Params::BPFistOverMatterActor_C_GbxAsyncRequest_Hit_63BA0B474B62AE3C6ACDD8B4712D6DD9 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPFistOverMatterActor_C::GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9(const struct FHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9");

	Params::BPFistOverMatterActor_C_GbxAsyncRequest_Miss_63BA0B474B62AE3C6ACDD8B4712D6DD9 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GetfindGroundVectorLocations
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPFistOverMatterActor_C::GetfindGroundVectorLocations(struct FVector* Start, struct FVector* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "GetfindGroundVectorLocations");

	Params::BPFistOverMatterActor_C_GetfindGroundVectorLocations Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = std::move(Parms.Start);

	if (End != nullptr)
		*End = std::move(Parms.End);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.DoSlamDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SlamLocation_                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPFistOverMatterActor_C::DoSlamDamage(const struct FVector& SlamLocation_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "DoSlamDamage");

	Params::BPFistOverMatterActor_C_DoSlamDamage Parms{};

	Parms.SlamLocation_ = std::move(SlamLocation_);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.PerformFeedback
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::PerformFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "PerformFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.OnRep_GroundLocation
// (BlueprintCallable, BlueprintEvent)

void ABPFistOverMatterActor_C::OnRep_GroundLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "OnRep_GroundLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPFistOverMatterActor.BPFistOverMatterActor_C.GetMaxTime
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABPFistOverMatterActor_C::GetMaxTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFistOverMatterActor_C", "GetMaxTime");

	Params::BPFistOverMatterActor_C_GetMaxTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

