#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionImageMonitor

#include "Basic.hpp"

#include "Struct_HelperMonitorSetup_structs.hpp"
#include "Enum_MissionImageMonitorStates_structs.hpp"


namespace SDK::Params
{

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.OverrideSecondaryMonitors
// 0x0030 (0x0030 - 0x0000)
struct IO_MissionImageMonitor_C_OverrideSecondaryMonitors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_HelperMonitorSetup             CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors) == 0x000008, "Wrong alignment on IO_MissionImageMonitor_C_OverrideSecondaryMonitors");
static_assert(sizeof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors) == 0x000030, "Wrong size on IO_MissionImageMonitor_C_OverrideSecondaryMonitors");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, CallFunc_Array_Get_Item) == 0x000018, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_OverrideSecondaryMonitors, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'IO_MissionImageMonitor_C_OverrideSecondaryMonitors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.SetupMonitorMesh
// 0x0010 (0x0010 - 0x0000)
struct IO_MissionImageMonitor_C_SetupMonitorMesh final
{
public:
	class UMaterialInstance*                      MaterialToUse;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C_SetupMonitorMesh) == 0x000008, "Wrong alignment on IO_MissionImageMonitor_C_SetupMonitorMesh");
static_assert(sizeof(IO_MissionImageMonitor_C_SetupMonitorMesh) == 0x000010, "Wrong size on IO_MissionImageMonitor_C_SetupMonitorMesh");
static_assert(offsetof(IO_MissionImageMonitor_C_SetupMonitorMesh, MaterialToUse) == 0x000000, "Member 'IO_MissionImageMonitor_C_SetupMonitorMesh::MaterialToUse' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_SetupMonitorMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000008, "Member 'IO_MissionImageMonitor_C_SetupMonitorMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.__UserState_MonitorStates_0
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C___UserState_MonitorStates_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C___UserState_MonitorStates_0) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C___UserState_MonitorStates_0");
static_assert(sizeof(IO_MissionImageMonitor_C___UserState_MonitorStates_0) == 0x000001, "Wrong size on IO_MissionImageMonitor_C___UserState_MonitorStates_0");
static_assert(offsetof(IO_MissionImageMonitor_C___UserState_MonitorStates_0, bFromLoad) == 0x000000, "Member 'IO_MissionImageMonitor_C___UserState_MonitorStates_0::bFromLoad' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.__UserState_MonitorStates_1
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C___UserState_MonitorStates_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C___UserState_MonitorStates_1) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C___UserState_MonitorStates_1");
static_assert(sizeof(IO_MissionImageMonitor_C___UserState_MonitorStates_1) == 0x000001, "Wrong size on IO_MissionImageMonitor_C___UserState_MonitorStates_1");
static_assert(offsetof(IO_MissionImageMonitor_C___UserState_MonitorStates_1, bFromLoad) == 0x000000, "Member 'IO_MissionImageMonitor_C___UserState_MonitorStates_1::bFromLoad' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.__UserState_MonitorStates_2
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C___UserState_MonitorStates_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C___UserState_MonitorStates_2) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C___UserState_MonitorStates_2");
static_assert(sizeof(IO_MissionImageMonitor_C___UserState_MonitorStates_2) == 0x000001, "Wrong size on IO_MissionImageMonitor_C___UserState_MonitorStates_2");
static_assert(offsetof(IO_MissionImageMonitor_C___UserState_MonitorStates_2, bFromLoad) == 0x000000, "Member 'IO_MissionImageMonitor_C___UserState_MonitorStates_2::bFromLoad' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.__UserState_MonitorStates_3
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C___UserState_MonitorStates_3 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C___UserState_MonitorStates_3) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C___UserState_MonitorStates_3");
static_assert(sizeof(IO_MissionImageMonitor_C___UserState_MonitorStates_3) == 0x000001, "Wrong size on IO_MissionImageMonitor_C___UserState_MonitorStates_3");
static_assert(offsetof(IO_MissionImageMonitor_C___UserState_MonitorStates_3, bFromLoad) == 0x000000, "Member 'IO_MissionImageMonitor_C___UserState_MonitorStates_3::bFromLoad' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.__UserState_MonitorStates_4
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C___UserState_MonitorStates_4 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C___UserState_MonitorStates_4) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C___UserState_MonitorStates_4");
static_assert(sizeof(IO_MissionImageMonitor_C___UserState_MonitorStates_4) == 0x000001, "Wrong size on IO_MissionImageMonitor_C___UserState_MonitorStates_4");
static_assert(offsetof(IO_MissionImageMonitor_C___UserState_MonitorStates_4, bFromLoad) == 0x000000, "Member 'IO_MissionImageMonitor_C___UserState_MonitorStates_4::bFromLoad' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.__UserState_MonitorStates_5
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C___UserState_MonitorStates_5 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C___UserState_MonitorStates_5) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C___UserState_MonitorStates_5");
static_assert(sizeof(IO_MissionImageMonitor_C___UserState_MonitorStates_5) == 0x000001, "Wrong size on IO_MissionImageMonitor_C___UserState_MonitorStates_5");
static_assert(offsetof(IO_MissionImageMonitor_C___UserState_MonitorStates_5, bFromLoad) == 0x000000, "Member 'IO_MissionImageMonitor_C___UserState_MonitorStates_5::bFromLoad' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.SetMonitorState
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionImageMonitor_C_SetMonitorState final
{
public:
	Enum_MissionImageMonitorStates                State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionImageMonitor_C_SetMonitorState) == 0x000001, "Wrong alignment on IO_MissionImageMonitor_C_SetMonitorState");
static_assert(sizeof(IO_MissionImageMonitor_C_SetMonitorState) == 0x000001, "Wrong size on IO_MissionImageMonitor_C_SetMonitorState");
static_assert(offsetof(IO_MissionImageMonitor_C_SetMonitorState, State) == 0x000000, "Member 'IO_MissionImageMonitor_C_SetMonitorState::State' has a wrong offset!");

// Function IO_MissionImageMonitor.IO_MissionImageMonitor_C.ExecuteUbergraph_IO_MissionImageMonitor
// 0x000C (0x000C - 0x0000)
struct IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_MissionImageMonitorStates                K2Node_CustomEvent_State;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad5;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad4;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor) == 0x000004, "Wrong alignment on IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor");
static_assert(sizeof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor) == 0x00000C, "Wrong size on IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, EntryPoint) == 0x000000, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_CustomEvent_State) == 0x000004, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_UserStateEvent_bFromLoad5) == 0x000005, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_UserStateEvent_bFromLoad5' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_UserStateEvent_bFromLoad4) == 0x000006, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_UserStateEvent_bFromLoad4' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_UserStateEvent_bFromLoad3) == 0x000007, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_UserStateEvent_bFromLoad2) == 0x000008, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_UserStateEvent_bFromLoad1) == 0x000009, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor, K2Node_UserStateEvent_bFromLoad) == 0x00000A, "Member 'IO_MissionImageMonitor_C_ExecuteUbergraph_IO_MissionImageMonitor::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");

}

