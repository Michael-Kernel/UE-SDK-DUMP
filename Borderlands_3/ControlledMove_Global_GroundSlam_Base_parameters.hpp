#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_Global_GroundSlam_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ControlledMove_Global_GroundSlam_Base.ControlledMove_Global_GroundSlam_Base_C.ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base
// 0x0068 (0x0068 - 0x0000)
struct ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Distance;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MoveDuration;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInterrupted;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPInterface_PlayerInputActions_C> K2Node_DynamicCast_AsBPInterface_Player_Input_Actions; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base) == 0x000008, "Wrong alignment on ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base");
static_assert(sizeof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base) == 0x000068, "Wrong size on ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, EntryPoint) == 0x000000, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, K2Node_Event_Distance) == 0x000004, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::K2Node_Event_Distance' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, K2Node_Event_MoveDuration) == 0x000008, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::K2Node_Event_MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, K2Node_Event_TargetActor) == 0x000010, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, K2Node_Event_bInterrupted) == 0x000018, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::K2Node_Event_bInterrupted' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, K2Node_DynamicCast_AsBPInterface_Player_Input_Actions) == 0x000020, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::K2Node_DynamicCast_AsBPInterface_Player_Input_Actions' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000040, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, CallFunc_BreakVector_X) == 0x000058, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, CallFunc_BreakVector_Y) == 0x00005C, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base, CallFunc_BreakVector_Z) == 0x000060, "Member 'ControlledMove_Global_GroundSlam_Base_C_ExecuteUbergraph_ControlledMove_Global_GroundSlam_Base::CallFunc_BreakVector_Z' has a wrong offset!");

// Function ControlledMove_Global_GroundSlam_Base.ControlledMove_Global_GroundSlam_Base_C.OnStop
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_Global_GroundSlam_Base_C_OnStop final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_Global_GroundSlam_Base_C_OnStop) == 0x000001, "Wrong alignment on ControlledMove_Global_GroundSlam_Base_C_OnStop");
static_assert(sizeof(ControlledMove_Global_GroundSlam_Base_C_OnStop) == 0x000001, "Wrong size on ControlledMove_Global_GroundSlam_Base_C_OnStop");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_OnStop, bInterrupted) == 0x000000, "Member 'ControlledMove_Global_GroundSlam_Base_C_OnStop::bInterrupted' has a wrong offset!");

// Function ControlledMove_Global_GroundSlam_Base.ControlledMove_Global_GroundSlam_Base_C.OnStart
// 0x0010 (0x0010 - 0x0000)
struct ControlledMove_Global_GroundSlam_Base_C_OnStart final
{
public:
	float                                         MoveDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_GroundSlam_Base_C_OnStart) == 0x000008, "Wrong alignment on ControlledMove_Global_GroundSlam_Base_C_OnStart");
static_assert(sizeof(ControlledMove_Global_GroundSlam_Base_C_OnStart) == 0x000010, "Wrong size on ControlledMove_Global_GroundSlam_Base_C_OnStart");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_OnStart, MoveDuration) == 0x000000, "Member 'ControlledMove_Global_GroundSlam_Base_C_OnStart::MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_OnStart, TargetActor) == 0x000008, "Member 'ControlledMove_Global_GroundSlam_Base_C_OnStart::TargetActor' has a wrong offset!");

// Function ControlledMove_Global_GroundSlam_Base.ControlledMove_Global_GroundSlam_Base_C.GroundSlam_End
// 0x0004 (0x0004 - 0x0000)
struct ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End) == 0x000004, "Wrong alignment on ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End");
static_assert(sizeof(ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End) == 0x000004, "Wrong size on ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End");
static_assert(offsetof(ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End, Distance) == 0x000000, "Member 'ControlledMove_Global_GroundSlam_Base_C_GroundSlam_End::Distance' has a wrong offset!");

}

