#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_BinaryOperator

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_BinaryOperator.Ability_BinaryOperator_C
// 0x0068 (0x0160 - 0x00F8)
class UAbility_BinaryOperator_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 Killed;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BinaryOperator; // 0x0108(0x0028)()
	float                                         TotalHitPoints;                                    // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  TargetPawn;                                        // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0150(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_BinaryOperator(int32 EntryPoint);
	void OnCausedDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnRegistered();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_BinaryOperator_C">();
	}
	static class UAbility_BinaryOperator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_BinaryOperator_C>();
	}
};
static_assert(alignof(UAbility_BinaryOperator_C) == 0x000008, "Wrong alignment on UAbility_BinaryOperator_C");
static_assert(sizeof(UAbility_BinaryOperator_C) == 0x000160, "Wrong size on UAbility_BinaryOperator_C");
static_assert(offsetof(UAbility_BinaryOperator_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_BinaryOperator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, Killed) == 0x000100, "Member 'UAbility_BinaryOperator_C::Killed' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BinaryOperator) == 0x000108, "Member 'UAbility_BinaryOperator_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BinaryOperator' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, TotalHitPoints) == 0x000130, "Member 'UAbility_BinaryOperator_C::TotalHitPoints' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, TargetActor) == 0x000138, "Member 'UAbility_BinaryOperator_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, TargetPawn) == 0x000140, "Member 'UAbility_BinaryOperator_C::TargetPawn' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, Instigator) == 0x000148, "Member 'UAbility_BinaryOperator_C::Instigator' has a wrong offset!");
static_assert(offsetof(UAbility_BinaryOperator_C, HitLocation) == 0x000150, "Member 'UAbility_BinaryOperator_C::HitLocation' has a wrong offset!");

}

