#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Door_ScalableForcefield

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_Door_ReasonForTimeline_structs.hpp"


namespace SDK::Params
{

// Function IO_Door_ScalableForcefield.IO_Door_ScalableForcefield_C.UserConstructionScript
// 0x0024 (0x0024 - 0x0000)
struct IO_Door_ScalableForcefield_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_ScalableForcefield_C_UserConstructionScript) == 0x000004, "Wrong alignment on IO_Door_ScalableForcefield_C_UserConstructionScript");
static_assert(sizeof(IO_Door_ScalableForcefield_C_UserConstructionScript) == 0x000024, "Wrong size on IO_Door_ScalableForcefield_C_UserConstructionScript");
static_assert(offsetof(IO_Door_ScalableForcefield_C_UserConstructionScript, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'IO_Door_ScalableForcefield_C_UserConstructionScript::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00000C, "Member 'IO_Door_ScalableForcefield_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000010, "Member 'IO_Door_ScalableForcefield_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000014, "Member 'IO_Door_ScalableForcefield_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'IO_Door_ScalableForcefield_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function IO_Door_ScalableForcefield.IO_Door_ScalableForcefield_C.PlayDoorMovement
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_ScalableForcefield_C_PlayDoorMovement final
{
public:
	Enum_Door_ReasonForTimeline                   Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_ScalableForcefield_C_PlayDoorMovement) == 0x000001, "Wrong alignment on IO_Door_ScalableForcefield_C_PlayDoorMovement");
static_assert(sizeof(IO_Door_ScalableForcefield_C_PlayDoorMovement) == 0x000001, "Wrong size on IO_Door_ScalableForcefield_C_PlayDoorMovement");
static_assert(offsetof(IO_Door_ScalableForcefield_C_PlayDoorMovement, Reason) == 0x000000, "Member 'IO_Door_ScalableForcefield_C_PlayDoorMovement::Reason' has a wrong offset!");

// Function IO_Door_ScalableForcefield.IO_Door_ScalableForcefield_C.Audio_SetLocations
// 0x0240 (0x0240 - 0x0000)
struct IO_Door_ScalableForcefield_C_Audio_SetLocations final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0064(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min1;                      // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max1;                      // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocalBounds_Min2;                      // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max2;                      // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue2;      // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x0168(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue1;       // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue1;                      // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue1;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0200(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x020C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseLocationOverride                 K2Node_MakeStruct_WwiseLocationOverride;           // 0x0218(0x0020)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_ScalableForcefield_C_Audio_SetLocations) == 0x000010, "Wrong alignment on IO_Door_ScalableForcefield_C_Audio_SetLocations");
static_assert(sizeof(IO_Door_ScalableForcefield_C_Audio_SetLocations) == 0x000240, "Wrong size on IO_Door_ScalableForcefield_C_Audio_SetLocations");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, Temp_bool_Variable) == 0x000000, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, Temp_int_Variable) == 0x000004, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_GetLocalBounds_Min) == 0x000040, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_GetLocalBounds_Max) == 0x00004C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakTransform_Location) == 0x000058, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakTransform_Rotation) == 0x000064, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakTransform_Scale) == 0x000070, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00007C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_X) == 0x000094, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_Y) == 0x000098, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_Z) == 0x00009C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A5, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, K2Node_Select_Default) == 0x0000A8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_GetLocalBounds_Min1) == 0x0000AC, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_GetLocalBounds_Min1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_GetLocalBounds_Max1) == 0x0000B8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_GetLocalBounds_Max1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x0000D0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_GetLocalBounds_Min2) == 0x000100, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_GetLocalBounds_Min2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_GetLocalBounds_Max2) == 0x00010C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_GetLocalBounds_Max2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_K2_GetComponentToWorld_ReturnValue2) == 0x000120, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_K2_GetComponentToWorld_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000150, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakTransform_Location1) == 0x00015C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakTransform_Rotation1) == 0x000168, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakTransform_Scale1) == 0x000174, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_X1) == 0x000180, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_Y1) == 0x000184, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_Z1) == 0x000188, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Multiply_VectorVector_ReturnValue1) == 0x00018C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Multiply_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_X2) == 0x000198, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_Y2) == 0x00019C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_BreakVector_Z2) == 0x0001A0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Abs_ReturnValue) == 0x0001A4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Abs_ReturnValue1) == 0x0001A8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001AC, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0001B0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_FFloor_ReturnValue) == 0x0001B4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_FFloor_ReturnValue1) == 0x0001B8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_FFloor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Max_ReturnValue) == 0x0001BC, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Max_ReturnValue1) == 0x0001C0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Max_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Divide_IntInt_ReturnValue) == 0x0001C4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001C8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001CC, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x0001D0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Less_IntInt_ReturnValue) == 0x0001D4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001D8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001DC, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Percent_IntInt_ReturnValue) == 0x0001E0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001E4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x0001E8, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x0001EC, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x0001F0, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_MakeVector_ReturnValue) == 0x0001F4, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Add_VectorVector_ReturnValue) == 0x000200, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_TransformLocation_ReturnValue) == 0x00020C, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, K2Node_MakeStruct_WwiseLocationOverride) == 0x000218, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::K2Node_MakeStruct_WwiseLocationOverride' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Audio_SetLocations, CallFunc_Array_Add_ReturnValue) == 0x000238, "Member 'IO_Door_ScalableForcefield_C_Audio_SetLocations::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function IO_Door_ScalableForcefield.IO_Door_ScalableForcefield_C.Flicker_OnOrOff
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_ScalableForcefield_C_Flicker_OnOrOff final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_ScalableForcefield_C_Flicker_OnOrOff) == 0x000001, "Wrong alignment on IO_Door_ScalableForcefield_C_Flicker_OnOrOff");
static_assert(sizeof(IO_Door_ScalableForcefield_C_Flicker_OnOrOff) == 0x000001, "Wrong size on IO_Door_ScalableForcefield_C_Flicker_OnOrOff");
static_assert(offsetof(IO_Door_ScalableForcefield_C_Flicker_OnOrOff, On) == 0x000000, "Member 'IO_Door_ScalableForcefield_C_Flicker_OnOrOff::On' has a wrong offset!");

// Function IO_Door_ScalableForcefield.IO_Door_ScalableForcefield_C.ExecuteUbergraph_IO_Door_ScalableForcefield
// 0x00A8 (0x00A8 - 0x0000)
struct IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Door_ReasonForTimeline                   K2Node_Event_Reason;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0018(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0030(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x0048(0x0018)()
	class AStaticMeshActor*                       CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_Array_Get_Item1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_On;                             // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield) == 0x000008, "Wrong alignment on IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield");
static_assert(sizeof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield) == 0x0000A8, "Wrong size on IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, EntryPoint) == 0x000000, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, K2Node_Event_Reason) == 0x000010, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, Temp_int_Array_Index_Variable1) == 0x000014, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_PostWwiseEvent_ReturnValue) == 0x000018, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000030, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_PostWwiseEvent_ReturnValue2) == 0x000048, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Array_Get_Item) == 0x000060, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000068, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Array_Get_Item1) == 0x000080, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Array_Length_ReturnValue1) == 0x000088, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_IsValid_ReturnValue1) == 0x00008D, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, K2Node_CustomEvent_On) == 0x00008E, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::K2Node_CustomEvent_On' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Not_PreBool_ReturnValue) == 0x000094, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Not_PreBool_ReturnValue1) == 0x000095, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, Temp_int_Loop_Counter_Variable1) == 0x000098, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Less_IntInt_ReturnValue1) == 0x00009C, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield, CallFunc_Add_IntInt_ReturnValue1) == 0x0000A0, "Member 'IO_Door_ScalableForcefield_C_ExecuteUbergraph_IO_Door_ScalableForcefield::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

}

