#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Heavy_Shared

#include "Basic.hpp"

#include "BPChar_Heavy_Shared_classes.hpp"
#include "BPChar_Heavy_Shared_parameters.hpp"


namespace SDK
{

// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.ExecuteUbergraph_BPChar_Heavy_Shared
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::ExecuteUbergraph_BPChar_Heavy_Shared(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "ExecuteUbergraph_BPChar_Heavy_Shared");

	Params::BPChar_Heavy_Shared_C_ExecuteUbergraph_BPChar_Heavy_Shared Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BndEvt__StatusEffectManagerComponent_K2Node_ComponentBoundEvent_0_CryoFreezeEvent__DelegateSignature_BPChar_Heavy_Shared
// (BlueprintEvent)

void ABPChar_Heavy_Shared_C::BndEvt__StatusEffectManagerComponent_K2Node_ComponentBoundEvent_0_CryoFreezeEvent__DelegateSignature_BPChar_Heavy_Shared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BndEvt__StatusEffectManagerComponent_K2Node_ComponentBoundEvent_0_CryoFreezeEvent__DelegateSignature_BPChar_Heavy_Shared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864181
// (BlueprintEvent)
// Parameters:
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864181(class AActor* DamageReceiver, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864181");

	Params::BPChar_Heavy_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864181 Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864171
// (BlueprintEvent)
// Parameters:
// class UDamageComponent*                 DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageCauserComponent*           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864171(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864171");

	Params::BPChar_Heavy_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Heavy_Shared_UNIX1536864171 Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Enemy_OnPhaseLockStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Enemy_OnPhaseLockStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Enemy_OnPhaseLockStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Enemy_OnPhaseLockStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Enemy_OnPhaseLockStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Enemy_OnPhaseLockStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared
// (BlueprintEvent)
// Parameters:
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared(class AActor* DamageReceiver, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared");

	Params::BPChar_Heavy_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Heavy_Shared Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPChar_Heavy_Shared_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_FistChargeFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Heavy_FistChargeFX(bool IsLeftHand, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_FistChargeFX");

	Params::BPChar_Heavy_Shared_C_Heavy_FistChargeFX Parms{};

	Parms.IsLeftHand = IsLeftHand;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Wwise_FireBeam_PwrUp
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Wwise_FireBeam_PwrUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Wwise_FireBeam_PwrUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_WeaponChargeFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Heavy_WeaponChargeFX(bool IsLeftHand, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_WeaponChargeFX");

	Params::BPChar_Heavy_Shared_C_Heavy_WeaponChargeFX Parms{};

	Parms.IsLeftHand = IsLeftHand;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BombLaunch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EOakElementalType                       OverrideElementType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_BombLaunch(class AActor* MyTarget, bool IsLeftHand, EOakElementalType OverrideElementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BombLaunch");

	Params::BPChar_Heavy_Shared_C_Heavy_BombLaunch Parms{};

	Parms.MyTarget = MyTarget;
	Parms.IsLeftHand = IsLeftHand;
	Parms.OverrideElementType = OverrideElementType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BlastWave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_BlastWave(class AActor* AttackTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BlastWave");

	Params::BPChar_Heavy_Shared_C_Heavy_BlastWave Parms{};

	Parms.AttackTarget = AttackTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BlastShot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ProjectileTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             WeaponSocket                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_BlastShot(class AActor* ProjectileTarget, class FName WeaponSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BlastShot");

	Params::BPChar_Heavy_Shared_C_Heavy_BlastShot Parms{};

	Parms.ProjectileTarget = ProjectileTarget;
	Parms.WeaponSocket = WeaponSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Wwise_BlastPump_PwrUp
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Wwise_BlastPump_PwrUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Wwise_BlastPump_PwrUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.VisorFXGlow
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::VisorFXGlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "VisorFXGlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_StompImpact
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Heavy_StompImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_StompImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_FaceMedic
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Heavy_FaceMedic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_FaceMedic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.HT_EndReceiveHealing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HealingSource                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::HT_EndReceiveHealing(class AActor* HealingSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "HT_EndReceiveHealing");

	Params::BPChar_Heavy_Shared_C_HT_EndReceiveHealing Parms{};

	Parms.HealingSource = HealingSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.HT_BeginReceiveHealing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HealingSource                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::HT_BeginReceiveHealing(class AActor* HealingSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "HT_BeginReceiveHealing");

	Params::BPChar_Heavy_Shared_C_HT_BeginReceiveHealing Parms{};

	Parms.HealingSource = HealingSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.HT_InformIntentToHeal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HealingSource                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::HT_InformIntentToHeal(class AActor* HealingSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "HT_InformIntentToHeal");

	Params::BPChar_Heavy_Shared_C_HT_InformIntentToHeal Parms{};

	Parms.HealingSource = HealingSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.ReplicatedBackpackExplosion
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::ReplicatedBackpackExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "ReplicatedBackpackExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDamageHeavyAUDIO
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::BackpackDamageHeavyAUDIO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDamageHeavyAUDIO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDamageLightAUDIO
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::BackpackDamageLightAUDIO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDamageLightAUDIO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Backpack Death Audio
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Backpack_Death_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Backpack Death Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamageReactionEventSummary      Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void ABPChar_Heavy_Shared_C::BackpackDamaged(const struct FDamageReactionEventSummary& Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDamaged");

	Params::BPChar_Heavy_Shared_C_BackpackDamaged Parms{};

	Parms.Damage = std::move(Damage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.DetachBackpack
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::DetachBackpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "DetachBackpack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDamageLight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamageReactionEventSummary      Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void ABPChar_Heavy_Shared_C::BackpackDamageLight(const struct FDamageReactionEventSummary& Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDamageLight");

	Params::BPChar_Heavy_Shared_C_BackpackDamageLight Parms{};

	Parms.Damage = std::move(Damage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDamageHeavy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamageReactionEventSummary      Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void ABPChar_Heavy_Shared_C::BackpackDamageHeavy(const struct FDamageReactionEventSummary& Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDamageHeavy");

	Params::BPChar_Heavy_Shared_C_BackpackDamageHeavy Parms{};

	Parms.Damage = std::move(Damage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDeath
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamageReactionEventSummary      Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void ABPChar_Heavy_Shared_C::BackpackDeath(const struct FDamageReactionEventSummary& Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDeath");

	Params::BPChar_Heavy_Shared_C_BackpackDeath Parms{};

	Parms.Damage = std::move(Damage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BackpackExplosion_TriggerExplosion
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Heavy_BackpackExplosion_TriggerExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BackpackExplosion_TriggerExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BackpackExplosion_TriggerDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Heavy_BackpackExplosion_TriggerDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BackpackExplosion_TriggerDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BackpackDeathBegan
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_BackpackDeathBegan(class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BackpackDeathBegan");

	Params::BPChar_Heavy_Shared_C_Heavy_BackpackDeathBegan Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDamageTransition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DoStagger                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::BackpackDamageTransition(bool DoStagger, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDamageTransition");

	Params::BPChar_Heavy_Shared_C_BackpackDamageTransition Parms{};

	Parms.DoStagger = DoStagger;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.BackpackDeathOnCryoFrozen
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::BackpackDeathOnCryoFrozen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "BackpackDeathOnCryoFrozen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BackpackExplosion_TriggerFriendlyDodge
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Heavy_BackpackExplosion_TriggerFriendlyDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BackpackExplosion_TriggerFriendlyDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Update Muzzle Beam Audio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_Left_Hand                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Update_Muzzle_Beam_Audio(bool Enable, bool Is_Left_Hand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Update Muzzle Beam Audio");

	Params::BPChar_Heavy_Shared_C_Update_Muzzle_Beam_Audio Parms{};

	Parms.Enable = Enable;
	Parms.Is_Left_Hand = Is_Left_Hand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Update NavBeam Audio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Update_NavBeam_Audio(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Update NavBeam Audio");

	Params::BPChar_Heavy_Shared_C_Update_NavBeam_Audio Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.FireBeamAudio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsNavAnim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// Enum_Heavy_WeaponSocket                 WeaponSocket                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::FireBeamAudio(bool Enable, bool IsNavAnim, Enum_Heavy_WeaponSocket WeaponSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "FireBeamAudio");

	Params::BPChar_Heavy_Shared_C_FireBeamAudio Parms{};

	Parms.Enable = Enable;
	Parms.IsNavAnim = IsNavAnim;
	Parms.WeaponSocket = WeaponSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_FireBeam_Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_Heavy_WeaponSocket                 WeaponSocket                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsNavAnim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Heavy_FireBeam_Start(Enum_Heavy_WeaponSocket WeaponSocket, bool IsNavAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_FireBeam_Start");

	Params::BPChar_Heavy_Shared_C_Heavy_FireBeam_Start Parms{};

	Parms.WeaponSocket = WeaponSocket;
	Parms.IsNavAnim = IsNavAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_FireBeam_Stop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNavAnim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Heavy_FireBeam_Stop(bool IsNavAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_FireBeam_Stop");

	Params::BPChar_Heavy_Shared_C_Heavy_FireBeam_Stop Parms{};

	Parms.IsNavAnim = IsNavAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.HeavyLoot_FleeBeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::HeavyLoot_FleeBeam(bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "HeavyLoot_FleeBeam");

	Params::BPChar_Heavy_Shared_C_HeavyLoot_FleeBeam Parms{};

	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_TargetChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_TargetChanged(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_TargetChanged");

	Params::BPChar_Heavy_Shared_C_Heavy_TargetChanged Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_Powerhouse_LaunchPole
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Heavy_Powerhouse_LaunchPole(class AActor* MyTarget, bool IsLeftHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_Powerhouse_LaunchPole");

	Params::BPChar_Heavy_Shared_C_Heavy_Powerhouse_LaunchPole Parms{};

	Parms.MyTarget = MyTarget;
	Parms.IsLeftHand = IsLeftHand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_GroundPoundTrail
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OptionalStartingSocket                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalImpactsAlongPath                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OptionalDamageAlongPath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OptionalDamageAtTargetLocation                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  PathFX                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  TargetFX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathFXStartScale                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathFXEndScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_GroundPoundTrail(class AActor* MyTarget, class FName OptionalStartingSocket, int32 TotalImpactsAlongPath, float Duration, class UClass* OptionalDamageAlongPath, class UClass* OptionalDamageAtTargetLocation, class UParticleSystem* PathFX, class UParticleSystem* TargetFX, float PathFXStartScale, float PathFXEndScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_GroundPoundTrail");

	Params::BPChar_Heavy_Shared_C_Heavy_GroundPoundTrail Parms{};

	Parms.MyTarget = MyTarget;
	Parms.OptionalStartingSocket = OptionalStartingSocket;
	Parms.TotalImpactsAlongPath = TotalImpactsAlongPath;
	Parms.Duration = Duration;
	Parms.OptionalDamageAlongPath = OptionalDamageAlongPath;
	Parms.OptionalDamageAtTargetLocation = OptionalDamageAtTargetLocation;
	Parms.PathFX = PathFX;
	Parms.TargetFX = TargetFX;
	Parms.PathFXStartScale = PathFXStartScale;
	Parms.PathFXEndScale = PathFXEndScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_BackpackExplosion_TriggerExplosion_PostDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ExplosionLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_BackpackExplosion_TriggerExplosion_PostDeath(const struct FVector& ExplosionLocation, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_BackpackExplosion_TriggerExplosion_PostDeath");

	Params::BPChar_Heavy_Shared_C_Heavy_BackpackExplosion_TriggerExplosion_PostDeath Parms{};

	Parms.ExplosionLocation = std::move(ExplosionLocation);
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Nog_BuffDrone_SpecialBuff_Ended
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Nog_BuffDrone_SpecialBuff_Ended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Nog_BuffDrone_SpecialBuff_Ended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Nog_BuffDrone_SpecialBuff_Began
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::Nog_BuffDrone_SpecialBuff_Began()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Nog_BuffDrone_SpecialBuff_Began");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Nog_BuffDrone_Detached
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BuffDrone                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Nog_BuffDrone_Detached(class AActor* BuffDrone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Nog_BuffDrone_Detached");

	Params::BPChar_Heavy_Shared_C_Nog_BuffDrone_Detached Parms{};

	Parms.BuffDrone = BuffDrone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Nog_BuffDrone_Attached
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BuffDrone                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Nog_BuffDrone_Attached(class AActor* BuffDrone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Nog_BuffDrone_Attached");

	Params::BPChar_Heavy_Shared_C_Nog_BuffDrone_Attached Parms{};

	Parms.BuffDrone = BuffDrone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Success_8A149E6243903ABCB1A27CBD959D1F3A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEnvQueryResult                  QueryResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Success_8A149E6243903ABCB1A27CBD959D1F3A(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Success_8A149E6243903ABCB1A27CBD959D1F3A");

	Params::BPChar_Heavy_Shared_C_Success_8A149E6243903ABCB1A27CBD959D1F3A Parms{};

	Parms.QueryResult = std::move(QueryResult);
	Parms.Location = std::move(Location);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Failure_8A149E6243903ABCB1A27CBD959D1F3A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEnvQueryResult                  QueryResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Failure_8A149E6243903ABCB1A27CBD959D1F3A(const struct FEnvQueryResult& QueryResult, const struct FVector& Location, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Failure_8A149E6243903ABCB1A27CBD959D1F3A");

	Params::BPChar_Heavy_Shared_C_Failure_8A149E6243903ABCB1A27CBD959D1F3A Parms{};

	Parms.QueryResult = std::move(QueryResult);
	Parms.Location = std::move(Location);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.CleanupOnDeath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPChar_Heavy_Shared_C::CleanupOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "CleanupOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.FlatDistanceToTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SubtractActor1Bounds                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Actor2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SubtractActor2Bounds                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::FlatDistanceToTarget(class AActor* Actor1, bool SubtractActor1Bounds, class AActor* Actor2, bool SubtractActor2Bounds, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "FlatDistanceToTarget");

	Params::BPChar_Heavy_Shared_C_FlatDistanceToTarget Parms{};

	Parms.Actor1 = Actor1;
	Parms.SubtractActor1Bounds = SubtractActor1Bounds;
	Parms.Actor2 = Actor2;
	Parms.SubtractActor2Bounds = SubtractActor2Bounds;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.CalculateBlastWaveHorizontalArcOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartingXOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndXOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentInstance                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalInstances                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetOffset                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::CalculateBlastWaveHorizontalArcOffset(class AActor* MyTarget, float StartingXOffset, float EndXOffset, int32 CurrentInstance, int32 TotalInstances, struct FVector* TargetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "CalculateBlastWaveHorizontalArcOffset");

	Params::BPChar_Heavy_Shared_C_CalculateBlastWaveHorizontalArcOffset Parms{};

	Parms.MyTarget = MyTarget;
	Parms.StartingXOffset = StartingXOffset;
	Parms.EndXOffset = EndXOffset;
	Parms.CurrentInstance = CurrentInstance;
	Parms.TotalInstances = TotalInstances;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetOffset != nullptr)
		*TargetOffset = std::move(Parms.TargetOffset);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.CalculateBlastWaveHorizontalSputterOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxPrediction                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetOffset                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::CalculateBlastWaveHorizontalSputterOffset(float* MaxPrediction, struct FVector* TargetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "CalculateBlastWaveHorizontalSputterOffset");

	Params::BPChar_Heavy_Shared_C_CalculateBlastWaveHorizontalSputterOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxPrediction != nullptr)
		*MaxPrediction = Parms.MaxPrediction;

	if (TargetOffset != nullptr)
		*TargetOffset = std::move(Parms.TargetOffset);
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_ElementalTrap_Spawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Obstruction1                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Obstruction2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_ElementalTrap_Spawn(class AActor** Obstruction1, class AActor** Obstruction2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_ElementalTrap_Spawn");

	Params::BPChar_Heavy_Shared_C_Heavy_ElementalTrap_Spawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Obstruction1 != nullptr)
		*Obstruction1 = Parms.Obstruction1;

	if (Obstruction2 != nullptr)
		*Obstruction2 = Parms.Obstruction2;
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_WasBackpackExplosionThresholdTriggered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ThresholdReached                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Heavy_Shared_C::Heavy_WasBackpackExplosionThresholdTriggered(bool* ThresholdReached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_WasBackpackExplosionThresholdTriggered");

	Params::BPChar_Heavy_Shared_C_Heavy_WasBackpackExplosionThresholdTriggered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThresholdReached != nullptr)
		*ThresholdReached = Parms.ThresholdReached;
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_GetMaxHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxHealth                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_GetMaxHealth(float* MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_GetMaxHealth");

	Params::BPChar_Heavy_Shared_C_Heavy_GetMaxHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxHealth != nullptr)
		*MaxHealth = Parms.MaxHealth;
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Heavy_GetElementalMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOakElementalType                       ElementalMode_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Heavy_GetElementalMode(EOakElementalType* ElementalMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Heavy_GetElementalMode");

	Params::BPChar_Heavy_Shared_C_Heavy_GetElementalMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ElementalMode_0 != nullptr)
		*ElementalMode_0 = Parms.ElementalMode_0;
}


// Function BPChar_Heavy_Shared.BPChar_Heavy_Shared_C.Nog_BuffDrone_GetAttachSocket
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Socket                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SocketTransform                                        (Parm, OutParm, IsPlainOldData, NoDestructor)
// class USceneComponent*                  SocketComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Heavy_Shared_C::Nog_BuffDrone_GetAttachSocket(class FName* Socket, struct FTransform* SocketTransform, class USceneComponent** SocketComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Heavy_Shared_C", "Nog_BuffDrone_GetAttachSocket");

	Params::BPChar_Heavy_Shared_C_Nog_BuffDrone_GetAttachSocket Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Socket != nullptr)
		*Socket = Parms.Socket;

	if (SocketTransform != nullptr)
		*SocketTransform = std::move(Parms.SocketTransform);

	if (SocketComponent != nullptr)
		*SocketComponent = Parms.SocketComponent;
}

}

