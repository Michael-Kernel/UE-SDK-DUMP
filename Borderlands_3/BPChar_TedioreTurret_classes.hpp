#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_TedioreTurret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPChar_AI_classes.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_TedioreTurret.BPChar_TedioreTurret_C
// 0x00C0 (0x2410 - 0x2350)
class ABPChar_TedioreTurret_C : public ABPChar_AI_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_TedioreTurret_C;             // 0x2348(0x0008)(Transient, DuplicateTransient)
	class UOakDialogComponent*                    OakDialog;                                         // 0x2350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBodyWeaponHoldManagerComponent*        BodyWeaponHoldManager;                             // 0x2358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIBalanceStateComponent*               AIBalanceState;                                    // 0x2360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakAIWeaponUserComponent*              AIWeaponUser1;                                     // 0x2368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Proximity;                                         // 0x2370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                OwnerWeapon;                                       // 0x2378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                AIWeapon;                                          // 0x2380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanShoot;                                         // 0x2388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTargetCombo;                                      // 0x2389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_238A[0x6];                                     // 0x238A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          OakCharacter;                                      // 0x2390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LegBone;                                           // 0x2398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReadyAim;                                         // 0x23A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A1[0x3];                                     // 0x23A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoadedAmmo;                                        // 0x23A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x23A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMIRV;                                             // 0x23A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23AA[0x6];                                     // 0x23AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWwiseEvent*                            Audio_Explosion;                                   // 0x23B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Audio_Idle;                                        // 0x23B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AI_Weapon_MinAmmo;                                 // 0x23C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C4[0x4];                                     // 0x23C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATEDProjectile_Base_C*                  TEDProjectile_Base;                                // 0x23C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATedioreProjectile*                     TEDProjectile;                                     // 0x23D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeapDirectAction;                                  // 0x23D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LeapDirectActionClass;                             // 0x23E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Idle180Action;                                     // 0x23E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Idle360Action;                                     // 0x23F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Idle180ActionClass;                                // 0x23F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Idle360ActionClass;                                // 0x2400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPS;                                               // 0x2408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSMG;                                              // 0x2409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSG;                                               // 0x240A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnGround;                                          // 0x240B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCanUseDialogue;                                   // 0x240C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPChar_TedioreTurret(int32 EntryPoint);
	void BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_2_CauseDeathDelegate__DelegateSignature_BPChar_TedioreTurret(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void Reload2(bool bAutoReload);
	void OnProjectileDeath(class AActor* DestroyedActor);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void OnReaped();
	void InitializeWeapon();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__DamageComponent_K2Node_ComponentBoundEvent_0_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_TedioreTurret(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser);
	void Detonated();
	void InitWeaponData();
	void WeaponCreation();
	void InitBlackboardKeys();
	void DialogueCalloutReloading();
	void DialogueCalloutTargetKilled();
	void DialogueCalloutTargetAcquired();
	void DialogueCalloutSearchingForTarget();
	void DialogueCalloutIdle();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_TedioreTurret_C">();
	}
	static class ABPChar_TedioreTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_TedioreTurret_C>();
	}
};
static_assert(alignof(ABPChar_TedioreTurret_C) == 0x000010, "Wrong alignment on ABPChar_TedioreTurret_C");
static_assert(sizeof(ABPChar_TedioreTurret_C) == 0x002410, "Wrong size on ABPChar_TedioreTurret_C");
static_assert(offsetof(ABPChar_TedioreTurret_C, UberGraphFrame_BPChar_TedioreTurret_C) == 0x002348, "Member 'ABPChar_TedioreTurret_C::UberGraphFrame_BPChar_TedioreTurret_C' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, OakDialog) == 0x002350, "Member 'ABPChar_TedioreTurret_C::OakDialog' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, BodyWeaponHoldManager) == 0x002358, "Member 'ABPChar_TedioreTurret_C::BodyWeaponHoldManager' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, AIBalanceState) == 0x002360, "Member 'ABPChar_TedioreTurret_C::AIBalanceState' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, AIWeaponUser1) == 0x002368, "Member 'ABPChar_TedioreTurret_C::AIWeaponUser1' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Proximity) == 0x002370, "Member 'ABPChar_TedioreTurret_C::Proximity' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, OwnerWeapon) == 0x002378, "Member 'ABPChar_TedioreTurret_C::OwnerWeapon' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, AIWeapon) == 0x002380, "Member 'ABPChar_TedioreTurret_C::AIWeapon' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bCanShoot) == 0x002388, "Member 'ABPChar_TedioreTurret_C::bCanShoot' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bTargetCombo) == 0x002389, "Member 'ABPChar_TedioreTurret_C::bTargetCombo' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, OakCharacter) == 0x002390, "Member 'ABPChar_TedioreTurret_C::OakCharacter' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, LegBone) == 0x002398, "Member 'ABPChar_TedioreTurret_C::LegBone' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bReadyAim) == 0x0023A0, "Member 'ABPChar_TedioreTurret_C::bReadyAim' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, LoadedAmmo) == 0x0023A4, "Member 'ABPChar_TedioreTurret_C::LoadedAmmo' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bInitialized) == 0x0023A8, "Member 'ABPChar_TedioreTurret_C::bInitialized' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bMIRV) == 0x0023A9, "Member 'ABPChar_TedioreTurret_C::bMIRV' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Audio_Explosion) == 0x0023B0, "Member 'ABPChar_TedioreTurret_C::Audio_Explosion' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Audio_Idle) == 0x0023B8, "Member 'ABPChar_TedioreTurret_C::Audio_Idle' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, AI_Weapon_MinAmmo) == 0x0023C0, "Member 'ABPChar_TedioreTurret_C::AI_Weapon_MinAmmo' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, TEDProjectile_Base) == 0x0023C8, "Member 'ABPChar_TedioreTurret_C::TEDProjectile_Base' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, TEDProjectile) == 0x0023D0, "Member 'ABPChar_TedioreTurret_C::TEDProjectile' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, LeapDirectAction) == 0x0023D8, "Member 'ABPChar_TedioreTurret_C::LeapDirectAction' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, LeapDirectActionClass) == 0x0023E0, "Member 'ABPChar_TedioreTurret_C::LeapDirectActionClass' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Idle180Action) == 0x0023E8, "Member 'ABPChar_TedioreTurret_C::Idle180Action' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Idle360Action) == 0x0023F0, "Member 'ABPChar_TedioreTurret_C::Idle360Action' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Idle180ActionClass) == 0x0023F8, "Member 'ABPChar_TedioreTurret_C::Idle180ActionClass' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, Idle360ActionClass) == 0x002400, "Member 'ABPChar_TedioreTurret_C::Idle360ActionClass' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bPS) == 0x002408, "Member 'ABPChar_TedioreTurret_C::bPS' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bSMG) == 0x002409, "Member 'ABPChar_TedioreTurret_C::bSMG' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bSG) == 0x00240A, "Member 'ABPChar_TedioreTurret_C::bSG' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, OnGround) == 0x00240B, "Member 'ABPChar_TedioreTurret_C::OnGround' has a wrong offset!");
static_assert(offsetof(ABPChar_TedioreTurret_C, bCanUseDialogue) == 0x00240C, "Member 'ABPChar_TedioreTurret_C::bCanUseDialogue' has a wrong offset!");

}

