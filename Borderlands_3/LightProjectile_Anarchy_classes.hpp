#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Anarchy

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LightProjectile_Anarchy.LightProjectile_Anarchy_C
// 0x00D0 (0x0410 - 0x0340)
class ULightProjectile_Anarchy_C final : public UOakLightProjectileData
{
public:
	struct FEnvQueryParams                        EQS;                                               // 0x0340(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          AnarchyRicochet;                                   // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RicochetChance;                                    // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RicochetScale;                                     // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnRicochet(class ULightProjectile* Projectile, const struct FHitResult& Hit, const struct FVector& ImpactVelocity) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LightProjectile_Anarchy_C">();
	}
	static class ULightProjectile_Anarchy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightProjectile_Anarchy_C>();
	}
};
static_assert(alignof(ULightProjectile_Anarchy_C) == 0x000010, "Wrong alignment on ULightProjectile_Anarchy_C");
static_assert(sizeof(ULightProjectile_Anarchy_C) == 0x000410, "Wrong size on ULightProjectile_Anarchy_C");
static_assert(offsetof(ULightProjectile_Anarchy_C, EQS) == 0x000340, "Member 'ULightProjectile_Anarchy_C::EQS' has a wrong offset!");
static_assert(offsetof(ULightProjectile_Anarchy_C, AnarchyRicochet) == 0x0003F8, "Member 'ULightProjectile_Anarchy_C::AnarchyRicochet' has a wrong offset!");
static_assert(offsetof(ULightProjectile_Anarchy_C, RicochetChance) == 0x0003FC, "Member 'ULightProjectile_Anarchy_C::RicochetChance' has a wrong offset!");
static_assert(offsetof(ULightProjectile_Anarchy_C, RicochetScale) == 0x000400, "Member 'ULightProjectile_Anarchy_C::RicochetScale' has a wrong offset!");

}

