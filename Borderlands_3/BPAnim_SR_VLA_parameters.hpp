#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_SR_VLA

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_SR_VLA.BPAnim_SR_VLA_C.ExecuteUbergraph_BPAnim_SR_VLA
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewMode;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA) == 0x000004, "Wrong alignment on BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA");
static_assert(sizeof(BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA) == 0x000010, "Wrong size on BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA");
static_assert(offsetof(BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA, EntryPoint) == 0x000000, "Member 'BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA, K2Node_Event_NewMode) == 0x00000C, "Member 'BPAnim_SR_VLA_C_ExecuteUbergraph_BPAnim_SR_VLA::K2Node_Event_NewMode' has a wrong offset!");

// Function BPAnim_SR_VLA.BPAnim_SR_VLA_C.BlueprintSwitchedMode
// 0x0004 (0x0004 - 0x0000)
struct BPAnim_SR_VLA_C_BlueprintSwitchedMode final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_SR_VLA_C_BlueprintSwitchedMode) == 0x000004, "Wrong alignment on BPAnim_SR_VLA_C_BlueprintSwitchedMode");
static_assert(sizeof(BPAnim_SR_VLA_C_BlueprintSwitchedMode) == 0x000004, "Wrong size on BPAnim_SR_VLA_C_BlueprintSwitchedMode");
static_assert(offsetof(BPAnim_SR_VLA_C_BlueprintSwitchedMode, NewMode) == 0x000000, "Member 'BPAnim_SR_VLA_C_BlueprintSwitchedMode::NewMode' has a wrong offset!");

// Function BPAnim_SR_VLA.BPAnim_SR_VLA_C.SetIdleAnim
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_SR_VLA_C_SetIdleAnim final
{
public:
	int32                                         UseMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger1_CmpSuccess;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_SR_VLA_C_SetIdleAnim) == 0x000004, "Wrong alignment on BPAnim_SR_VLA_C_SetIdleAnim");
static_assert(sizeof(BPAnim_SR_VLA_C_SetIdleAnim) == 0x000010, "Wrong size on BPAnim_SR_VLA_C_SetIdleAnim");
static_assert(offsetof(BPAnim_SR_VLA_C_SetIdleAnim, UseMode) == 0x000000, "Member 'BPAnim_SR_VLA_C_SetIdleAnim::UseMode' has a wrong offset!");
static_assert(offsetof(BPAnim_SR_VLA_C_SetIdleAnim, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BPAnim_SR_VLA_C_SetIdleAnim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPAnim_SR_VLA_C_SetIdleAnim, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BPAnim_SR_VLA_C_SetIdleAnim::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_SR_VLA_C_SetIdleAnim, K2Node_SwitchInteger1_CmpSuccess) == 0x00000C, "Member 'BPAnim_SR_VLA_C_SetIdleAnim::K2Node_SwitchInteger1_CmpSuccess' has a wrong offset!");

}

