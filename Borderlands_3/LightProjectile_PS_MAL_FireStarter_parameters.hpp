#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_PS_MAL_FireStarter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_PS_MAL_FireStarter.LightProjectile_PS_MAL_FireStarter_C.OnDamage
// 0x0218 (0x0218 - 0x0000)
struct LightProjectile_PS_MAL_FireStarter_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x00A0(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectRemoveSpec                K2Node_MakeStruct_StatusEffectRemoveSpec;          // 0x01D0(0x0010)(NoDestructor)
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery;               // 0x01E0(0x0018)(NoDestructor)
	bool                                          CallFunc_RemoveStatusEffect_ReturnValue;           // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue;            // 0x01FC(0x0010)(NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_PS_MAL_FireStarter_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_PS_MAL_FireStarter_C_OnDamage");
static_assert(sizeof(LightProjectile_PS_MAL_FireStarter_C_OnDamage) == 0x000218, "Wrong size on LightProjectile_PS_MAL_FireStarter_C_OnDamage");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, Temp_struct_Variable) == 0x0000A0, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x000130, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x000131, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x00013C, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x000154, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000194, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x0001A4, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x0001B0, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_GetInstigator_ReturnValue1) == 0x0001B8, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x0001C0, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x0001C4, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_GetOwner_ReturnValue) == 0x0001C8, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, K2Node_MakeStruct_StatusEffectRemoveSpec) == 0x0001D0, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::K2Node_MakeStruct_StatusEffectRemoveSpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, K2Node_MakeStruct_StatusEffectQuery) == 0x0001E0, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::K2Node_MakeStruct_StatusEffectQuery' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_RemoveStatusEffect_ReturnValue) == 0x0001F8, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_RemoveStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_QueryStatusEffect_ReturnValue) == 0x0001FC, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_QueryStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00020C, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000210, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_FireStarter_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000214, "Member 'LightProjectile_PS_MAL_FireStarter_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

