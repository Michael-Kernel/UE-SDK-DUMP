#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_WagonWheel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_WagonWheel.LightProjectile_WagonWheel_C.OnDamage
// 0x0300 (0x0300 - 0x0000)
struct LightProjectile_WagonWheel_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumRicochets;                                      // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x00A0(0x0090)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ULightProjectile*                       MyLightProjectile;                                 // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0138(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x01E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x01F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0200(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0244(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0258(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02B0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetHitActor_ReturnValue;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_WagonWheel_C_OnDamage) == 0x000010, "Wrong alignment on LightProjectile_WagonWheel_C_OnDamage");
static_assert(sizeof(LightProjectile_WagonWheel_C_OnDamage) == 0x000300, "Wrong size on LightProjectile_WagonWheel_C_OnDamage");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_WagonWheel_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_WagonWheel_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_WagonWheel_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, NumRicochets) == 0x00009C, "Member 'LightProjectile_WagonWheel_C_OnDamage::NumRicochets' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, HitInfo) == 0x0000A0, "Member 'LightProjectile_WagonWheel_C_OnDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, MyLightProjectile) == 0x000130, "Member 'LightProjectile_WagonWheel_C_OnDamage::MyLightProjectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, HitLocation) == 0x000138, "Member 'LightProjectile_WagonWheel_C_OnDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, Temp_int_Array_Index_Variable) == 0x000144, "Member 'LightProjectile_WagonWheel_C_OnDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x000148, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x000149, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x00014C, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x000150, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x000154, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x000160, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x00016C, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x000178, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x000188, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x000190, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000198, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0001A0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0001AC, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x0001BC, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001C8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, Temp_int_Loop_Counter_Variable) == 0x0001CC, "Member 'LightProjectile_WagonWheel_C_OnDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit1) == 0x0001D0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap1) == 0x0001D1, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Time1) == 0x0001D4, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Distance1) == 0x0001D8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Location1) == 0x0001DC, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint1) == 0x0001E8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_Normal1) == 0x0001F4, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal1) == 0x000200, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_PhysMat1) == 0x000210, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitActor1) == 0x000218, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitComponent1) == 0x000220, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitBoneName1) == 0x000228, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_HitItem1) == 0x000230, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_FaceIndex1) == 0x000234, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_TraceStart1) == 0x000238, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakHitResult_TraceEnd1) == 0x000244, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000250, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000258, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_Array_Get_Item) == 0x000270, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_Array_Length_ReturnValue) == 0x0002A0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakTransform_Location) == 0x0002A4, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakTransform_Rotation) == 0x0002B0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_BreakTransform_Scale) == 0x0002BC, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0002C8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_GetForwardVector_ReturnValue) == 0x0002CC, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x0002D8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_GetHitActor_ReturnValue) == 0x0002E0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_GetHitActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_GetInstigator_ReturnValue1) == 0x0002E8, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WagonWheel_C_OnDamage, CallFunc_GetDamageCauser_ReturnValue) == 0x0002F0, "Member 'LightProjectile_WagonWheel_C_OnDamage::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");

}

