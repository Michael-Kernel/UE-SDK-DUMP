#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_Claptrap_TalkingLoop_L

#include "Basic.hpp"


namespace SDK::Params
{

// Function A_Claptrap_TalkingLoop_L.A_Claptrap_TalkingLoop_L_C.ExecuteUbergraph_A_Claptrap_TalkingLoop_L
// 0x0010 (0x0010 - 0x0000)
struct A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L) == 0x000008, "Wrong alignment on A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L");
static_assert(sizeof(A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L) == 0x000010, "Wrong size on A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L");
static_assert(offsetof(A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L, EntryPoint) == 0x000000, "Member 'A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L::EntryPoint' has a wrong offset!");
static_assert(offsetof(A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L, K2Node_Event_Actor) == 0x000008, "Member 'A_Claptrap_TalkingLoop_L_C_ExecuteUbergraph_A_Claptrap_TalkingLoop_L::K2Node_Event_Actor' has a wrong offset!");

// Function A_Claptrap_TalkingLoop_L.A_Claptrap_TalkingLoop_L_C.OnLoop
// 0x0008 (0x0008 - 0x0000)
struct A_Claptrap_TalkingLoop_L_C_OnLoop final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_Claptrap_TalkingLoop_L_C_OnLoop) == 0x000008, "Wrong alignment on A_Claptrap_TalkingLoop_L_C_OnLoop");
static_assert(sizeof(A_Claptrap_TalkingLoop_L_C_OnLoop) == 0x000008, "Wrong size on A_Claptrap_TalkingLoop_L_C_OnLoop");
static_assert(offsetof(A_Claptrap_TalkingLoop_L_C_OnLoop, Actor) == 0x000000, "Member 'A_Claptrap_TalkingLoop_L_C_OnLoop::Actor' has a wrong offset!");

}

