#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageData_BloodyHarvestGhost

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function DamageData_BloodyHarvestGhost.DamageData_BloodyHarvestGhost_C.OnHitAnyAttitude
// 0x0098 (0x0098 - 0x0000)
struct DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageTarget;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageDataEventDetails                Details;                                           // 0x0018(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGbxAbilitySpec                        K2Node_MakeStruct_GbxAbilitySpec;                  // 0x0060(0x0010)(NoDestructor)
	class UOakCharacterAbilityManagerComponent*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAbility*                            CallFunc_AddAbility_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAbility*                            CallFunc_FindAbility_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbility_BloodyHarvest_Terror_C*        K2Node_DynamicCast_AsAbility_Bloody_Harvest_Terror; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude) == 0x000008, "Wrong alignment on DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude");
static_assert(sizeof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude) == 0x000098, "Wrong size on DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, DamageInstigator) == 0x000000, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::DamageInstigator' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, DamageCauser) == 0x000008, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::DamageCauser' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, DamageTarget) == 0x000010, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::DamageTarget' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, Details) == 0x000018, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::Details' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, K2Node_MakeStruct_GbxAbilitySpec) == 0x000060, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::K2Node_MakeStruct_GbxAbilitySpec' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, CallFunc_AddAbility_ReturnValue) == 0x000078, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::CallFunc_AddAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, CallFunc_FindAbility_ReturnValue) == 0x000080, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::CallFunc_FindAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, K2Node_DynamicCast_AsAbility_Bloody_Harvest_Terror) == 0x000088, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::K2Node_DynamicCast_AsAbility_Bloody_Harvest_Terror' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'DamageData_BloodyHarvestGhost_C_OnHitAnyAttitude::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

