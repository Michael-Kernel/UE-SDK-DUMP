#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeaponFireProjectile_Gunner_GrenadeLauncher

#include "Basic.hpp"

#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function BPWeaponFireProjectile_Gunner_GrenadeLauncher.BPWeaponFireProjectile_Gunner_GrenadeLauncher_C.ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher
// 0x0020 (0x0020 - 0x0000)
struct BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakWeapon_IronBearHardPoint*           K2Node_DynamicCast_AsOak_Weapon_Iron_Bear_Hard_Point; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher) == 0x000008, "Wrong alignment on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher");
static_assert(sizeof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher) == 0x000020, "Wrong size on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher, EntryPoint) == 0x000000, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher, K2Node_DynamicCast_AsOak_Weapon_Iron_Bear_Hard_Point) == 0x000010, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher::K2Node_DynamicCast_AsOak_Weapon_Iron_Bear_Hard_Point' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_ExecuteUbergraph_BPWeaponFireProjectile_Gunner_GrenadeLauncher::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPWeaponFireProjectile_Gunner_GrenadeLauncher.BPWeaponFireProjectile_Gunner_GrenadeLauncher_C.SetNewGrenadeType
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType final
{
public:
	bool                                          bReadyForSingularityGrenade_0;                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType) == 0x000001, "Wrong alignment on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType");
static_assert(sizeof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType) == 0x000001, "Wrong size on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType, bReadyForSingularityGrenade_0) == 0x000000, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_SetNewGrenadeType::bReadyForSingularityGrenade_0' has a wrong offset!");

// Function BPWeaponFireProjectile_Gunner_GrenadeLauncher.BPWeaponFireProjectile_Gunner_GrenadeLauncher_C.GetShotProjectileData
// 0x0018 (0x0018 - 0x0000)
struct BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData final
{
public:
	TSubclassOf<class AActor>                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 FinalProjectile;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIronBearModType                              CallFunc_GetMod_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData) == 0x000008, "Wrong alignment on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData");
static_assert(sizeof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData) == 0x000018, "Wrong size on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData, ReturnValue) == 0x000000, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData, FinalProjectile) == 0x000008, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData::FinalProjectile' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData, CallFunc_GetMod_ReturnValue) == 0x000010, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData::CallFunc_GetMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotProjectileData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPWeaponFireProjectile_Gunner_GrenadeLauncher.BPWeaponFireProjectile_Gunner_GrenadeLauncher_C.GetShotLightProjectileData
// 0x0018 (0x0018 - 0x0000)
struct BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData final
{
public:
	TSubclassOf<class ULightProjectileData>       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 FinalProjectile;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIronBearModType                              CallFunc_GetMod_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData) == 0x000008, "Wrong alignment on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData");
static_assert(sizeof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData) == 0x000018, "Wrong size on BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData, ReturnValue) == 0x000000, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData, FinalProjectile) == 0x000008, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData::FinalProjectile' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData, CallFunc_GetMod_ReturnValue) == 0x000010, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData::CallFunc_GetMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BPWeaponFireProjectile_Gunner_GrenadeLauncher_C_GetShotLightProjectileData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

