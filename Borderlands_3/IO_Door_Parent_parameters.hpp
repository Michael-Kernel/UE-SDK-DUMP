#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Door_Parent

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_States_DoorLocked_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_Door_State_structs.hpp"
#include "Enum_Door_ReasonForTimeline_structs.hpp"


namespace SDK::Params
{

// Function IO_Door_Parent.IO_Door_Parent_C.GetDoorFeedbackState
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_GetDoorFeedbackState final
{
public:
	Enum_States_DoorLocked                        FeedbackState;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_GetDoorFeedbackState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_GetDoorFeedbackState");
static_assert(sizeof(IO_Door_Parent_C_GetDoorFeedbackState) == 0x000001, "Wrong size on IO_Door_Parent_C_GetDoorFeedbackState");
static_assert(offsetof(IO_Door_Parent_C_GetDoorFeedbackState, FeedbackState) == 0x000000, "Member 'IO_Door_Parent_C_GetDoorFeedbackState::FeedbackState' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.GetDoorInteractiveState
// 0x0002 (0x0002 - 0x0000)
struct IO_Door_Parent_C_GetDoorInteractiveState final
{
public:
	bool                                          Interactive;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_GetDoorInteractiveState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_GetDoorInteractiveState");
static_assert(sizeof(IO_Door_Parent_C_GetDoorInteractiveState) == 0x000002, "Wrong size on IO_Door_Parent_C_GetDoorInteractiveState");
static_assert(offsetof(IO_Door_Parent_C_GetDoorInteractiveState, Interactive) == 0x000000, "Member 'IO_Door_Parent_C_GetDoorInteractiveState::Interactive' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_GetDoorInteractiveState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'IO_Door_Parent_C_GetDoorInteractiveState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.GetDoorLockedState
// 0x0002 (0x0002 - 0x0000)
struct IO_Door_Parent_C_GetDoorLockedState final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_GetDoorLockedState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_GetDoorLockedState");
static_assert(sizeof(IO_Door_Parent_C_GetDoorLockedState) == 0x000002, "Wrong size on IO_Door_Parent_C_GetDoorLockedState");
static_assert(offsetof(IO_Door_Parent_C_GetDoorLockedState, Locked) == 0x000000, "Member 'IO_Door_Parent_C_GetDoorLockedState::Locked' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_GetDoorLockedState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'IO_Door_Parent_C_GetDoorLockedState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.GetDoorState
// 0x0002 (0x0002 - 0x0000)
struct IO_Door_Parent_C_GetDoorState final
{
public:
	Enum_Door_State                               DoorState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_GetDoorState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_GetDoorState");
static_assert(sizeof(IO_Door_Parent_C_GetDoorState) == 0x000002, "Wrong size on IO_Door_Parent_C_GetDoorState");
static_assert(offsetof(IO_Door_Parent_C_GetDoorState, DoorState) == 0x000000, "Member 'IO_Door_Parent_C_GetDoorState::DoorState' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_GetDoorState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'IO_Door_Parent_C_GetDoorState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.EvaluateDoorTrigger
// 0x0070 (0x0070 - 0x0000)
struct IO_Door_Parent_C_EvaluateDoorTrigger final
{
public:
	int32                                         NumberOfRelevantActorsInVolume;                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetAssociatedController_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_EvaluateDoorTrigger) == 0x000008, "Wrong alignment on IO_Door_Parent_C_EvaluateDoorTrigger");
static_assert(sizeof(IO_Door_Parent_C_EvaluateDoorTrigger) == 0x000070, "Wrong size on IO_Door_Parent_C_EvaluateDoorTrigger");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, NumberOfRelevantActorsInVolume) == 0x000000, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::NumberOfRelevantActorsInVolume' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, Temp_int_Array_Index_Variable) == 0x000008, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, Temp_int_Variable) == 0x000014, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Add_IntInt_ReturnValue1) == 0x000020, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Array_Get_Item) == 0x000040, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_GetAssociatedController_ReturnValue) == 0x000050, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_GetAssociatedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Array_Length_ReturnValue1) == 0x000058, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000060, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_EvaluateDoorTrigger, CallFunc_BooleanAND_ReturnValue) == 0x00006B, "Member 'IO_Door_Parent_C_EvaluateDoorTrigger::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.StopControllerAndCameraFeedback
// 0x0040 (0x0040 - 0x0000)
struct IO_Door_Parent_C_StopControllerAndCameraFeedback final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AOakCharacter_Player*>           CallFunc_GetAllPlayerCharacters_Characters;        // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class AOakCharacter_Player*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_StopControllerAndCameraFeedback) == 0x000008, "Wrong alignment on IO_Door_Parent_C_StopControllerAndCameraFeedback");
static_assert(sizeof(IO_Door_Parent_C_StopControllerAndCameraFeedback) == 0x000040, "Wrong size on IO_Door_Parent_C_StopControllerAndCameraFeedback");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, Temp_int_Array_Index_Variable) == 0x000000, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_GetAllPlayerCharacters_Characters) == 0x000010, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_GetAllPlayerCharacters_Characters' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_Array_Get_Item) == 0x000020, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000030, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StopControllerAndCameraFeedback, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'IO_Door_Parent_C_StopControllerAndCameraFeedback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.StartControllerAndCameraFeedback
// 0x0010 (0x0010 - 0x0000)
struct IO_Door_Parent_C_StartControllerAndCameraFeedback final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_StartControllerAndCameraFeedback) == 0x000004, "Wrong alignment on IO_Door_Parent_C_StartControllerAndCameraFeedback");
static_assert(sizeof(IO_Door_Parent_C_StartControllerAndCameraFeedback) == 0x000010, "Wrong size on IO_Door_Parent_C_StartControllerAndCameraFeedback");
static_assert(offsetof(IO_Door_Parent_C_StartControllerAndCameraFeedback, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'IO_Door_Parent_C_StartControllerAndCameraFeedback::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_StartControllerAndCameraFeedback, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'IO_Door_Parent_C_StartControllerAndCameraFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.UserConstructionScript
// 0x0090 (0x0090 - 0x0000)
struct IO_Door_Parent_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTimelineComponent*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class UTimelineComponent*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item1;                          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(IO_Door_Parent_C_UserConstructionScript) == 0x000008, "Wrong alignment on IO_Door_Parent_C_UserConstructionScript");
static_assert(sizeof(IO_Door_Parent_C_UserConstructionScript) == 0x000090, "Wrong size on IO_Door_Parent_C_UserConstructionScript");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'IO_Door_Parent_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'IO_Door_Parent_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'IO_Door_Parent_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, K2Node_SwitchEnum1_CmpSuccess) == 0x00000D, "Member 'IO_Door_Parent_C_UserConstructionScript::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'IO_Door_Parent_C_UserConstructionScript::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000018, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00001C, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000030, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, K2Node_SwitchEnum2_CmpSuccess) == 0x000038, "Member 'IO_Door_Parent_C_UserConstructionScript::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, Temp_int_Loop_Counter_Variable1) == 0x000040, "Member 'IO_Door_Parent_C_UserConstructionScript::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue1) == 0x000048, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Array_Get_Item1) == 0x000050, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue1) == 0x000058, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000060, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue1) == 0x000068, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_UserConstructionScript, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000080, "Member 'IO_Door_Parent_C_UserConstructionScript::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2
// 0x00B0 (0x00B0 - 0x0000)
struct IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2) == 0x000008, "Wrong alignment on IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2");
static_assert(sizeof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2) == 0x0000B0, "Wrong size on IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OverlappedComponent) == 0x000000, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OtherActor) == 0x000008, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OtherActor' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OtherComp) == 0x000010, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OtherComp' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OtherBodyIndex) == 0x000018, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, bFromSweep) == 0x00001C, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::bFromSweep' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, SweepResult) == 0x000020, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::SweepResult' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2
// 0x0020 (0x0020 - 0x0000)
struct IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2) == 0x000008, "Wrong alignment on IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2");
static_assert(sizeof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2) == 0x000020, "Wrong size on IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OverlappedComponent) == 0x000000, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OtherActor) == 0x000008, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OtherActor' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OtherComp) == 0x000010, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OtherComp' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2, OtherBodyIndex) == 0x000018, "Member 'IO_Door_Parent_C_BndEvt__TouchCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature_BP_IO_Door_Parent_2::OtherBodyIndex' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.PlayDoorMovement
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_PlayDoorMovement final
{
public:
	Enum_Door_ReasonForTimeline                   Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_PlayDoorMovement) == 0x000001, "Wrong alignment on IO_Door_Parent_C_PlayDoorMovement");
static_assert(sizeof(IO_Door_Parent_C_PlayDoorMovement) == 0x000001, "Wrong size on IO_Door_Parent_C_PlayDoorMovement");
static_assert(offsetof(IO_Door_Parent_C_PlayDoorMovement, Reason) == 0x000000, "Member 'IO_Door_Parent_C_PlayDoorMovement::Reason' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.SetDoorState
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_SetDoorState final
{
public:
	Enum_Door_State                               DoorState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_SetDoorState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_SetDoorState");
static_assert(sizeof(IO_Door_Parent_C_SetDoorState) == 0x000001, "Wrong size on IO_Door_Parent_C_SetDoorState");
static_assert(offsetof(IO_Door_Parent_C_SetDoorState, DoorState) == 0x000000, "Member 'IO_Door_Parent_C_SetDoorState::DoorState' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.SetDoorLockedState
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_SetDoorLockedState final
{
public:
	bool                                          Locked_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_SetDoorLockedState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_SetDoorLockedState");
static_assert(sizeof(IO_Door_Parent_C_SetDoorLockedState) == 0x000001, "Wrong size on IO_Door_Parent_C_SetDoorLockedState");
static_assert(offsetof(IO_Door_Parent_C_SetDoorLockedState, Locked_) == 0x000000, "Member 'IO_Door_Parent_C_SetDoorLockedState::Locked_' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.SetDoorInteractiveState
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_SetDoorInteractiveState final
{
public:
	bool                                          Interactive_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_SetDoorInteractiveState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_SetDoorInteractiveState");
static_assert(sizeof(IO_Door_Parent_C_SetDoorInteractiveState) == 0x000001, "Wrong size on IO_Door_Parent_C_SetDoorInteractiveState");
static_assert(offsetof(IO_Door_Parent_C_SetDoorInteractiveState, Interactive_) == 0x000000, "Member 'IO_Door_Parent_C_SetDoorInteractiveState::Interactive_' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.SetLightColor
// 0x0010 (0x0010 - 0x0000)
struct IO_Door_Parent_C_SetLightColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_SetLightColor) == 0x000004, "Wrong alignment on IO_Door_Parent_C_SetLightColor");
static_assert(sizeof(IO_Door_Parent_C_SetLightColor) == 0x000010, "Wrong size on IO_Door_Parent_C_SetLightColor");
static_assert(offsetof(IO_Door_Parent_C_SetLightColor, Color) == 0x000000, "Member 'IO_Door_Parent_C_SetLightColor::Color' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.SetDoorTriggerable
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_SetDoorTriggerable final
{
public:
	bool                                          Triggerable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_SetDoorTriggerable) == 0x000001, "Wrong alignment on IO_Door_Parent_C_SetDoorTriggerable");
static_assert(sizeof(IO_Door_Parent_C_SetDoorTriggerable) == 0x000001, "Wrong size on IO_Door_Parent_C_SetDoorTriggerable");
static_assert(offsetof(IO_Door_Parent_C_SetDoorTriggerable, Triggerable) == 0x000000, "Member 'IO_Door_Parent_C_SetDoorTriggerable::Triggerable' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.__UserState_DoorFeedbackState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C___UserState_DoorFeedbackState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C___UserState_DoorFeedbackState_1) == 0x000001, "Wrong alignment on IO_Door_Parent_C___UserState_DoorFeedbackState_1");
static_assert(sizeof(IO_Door_Parent_C___UserState_DoorFeedbackState_1) == 0x000001, "Wrong size on IO_Door_Parent_C___UserState_DoorFeedbackState_1");
static_assert(offsetof(IO_Door_Parent_C___UserState_DoorFeedbackState_1, bFromLoad) == 0x000000, "Member 'IO_Door_Parent_C___UserState_DoorFeedbackState_1::bFromLoad' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.__UserState_DoorFeedbackState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C___UserState_DoorFeedbackState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C___UserState_DoorFeedbackState_0) == 0x000001, "Wrong alignment on IO_Door_Parent_C___UserState_DoorFeedbackState_0");
static_assert(sizeof(IO_Door_Parent_C___UserState_DoorFeedbackState_0) == 0x000001, "Wrong size on IO_Door_Parent_C___UserState_DoorFeedbackState_0");
static_assert(offsetof(IO_Door_Parent_C___UserState_DoorFeedbackState_0, bFromLoad) == 0x000000, "Member 'IO_Door_Parent_C___UserState_DoorFeedbackState_0::bFromLoad' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.__UserState_DoorFeedbackState_2
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C___UserState_DoorFeedbackState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C___UserState_DoorFeedbackState_2) == 0x000001, "Wrong alignment on IO_Door_Parent_C___UserState_DoorFeedbackState_2");
static_assert(sizeof(IO_Door_Parent_C___UserState_DoorFeedbackState_2) == 0x000001, "Wrong size on IO_Door_Parent_C___UserState_DoorFeedbackState_2");
static_assert(offsetof(IO_Door_Parent_C___UserState_DoorFeedbackState_2, bFromLoad) == 0x000000, "Member 'IO_Door_Parent_C___UserState_DoorFeedbackState_2::bFromLoad' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.PrepPlayDoorMovement
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_PrepPlayDoorMovement final
{
public:
	Enum_Door_ReasonForTimeline                   Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_PrepPlayDoorMovement) == 0x000001, "Wrong alignment on IO_Door_Parent_C_PrepPlayDoorMovement");
static_assert(sizeof(IO_Door_Parent_C_PrepPlayDoorMovement) == 0x000001, "Wrong size on IO_Door_Parent_C_PrepPlayDoorMovement");
static_assert(offsetof(IO_Door_Parent_C_PrepPlayDoorMovement, Reason) == 0x000000, "Member 'IO_Door_Parent_C_PrepPlayDoorMovement::Reason' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.__UserState_DoorPositionState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C___UserState_DoorPositionState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C___UserState_DoorPositionState_1) == 0x000001, "Wrong alignment on IO_Door_Parent_C___UserState_DoorPositionState_1");
static_assert(sizeof(IO_Door_Parent_C___UserState_DoorPositionState_1) == 0x000001, "Wrong size on IO_Door_Parent_C___UserState_DoorPositionState_1");
static_assert(offsetof(IO_Door_Parent_C___UserState_DoorPositionState_1, bFromLoad) == 0x000000, "Member 'IO_Door_Parent_C___UserState_DoorPositionState_1::bFromLoad' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.__UserState_DoorPositionState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C___UserState_DoorPositionState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C___UserState_DoorPositionState_0) == 0x000001, "Wrong alignment on IO_Door_Parent_C___UserState_DoorPositionState_0");
static_assert(sizeof(IO_Door_Parent_C___UserState_DoorPositionState_0) == 0x000001, "Wrong size on IO_Door_Parent_C___UserState_DoorPositionState_0");
static_assert(offsetof(IO_Door_Parent_C___UserState_DoorPositionState_0, bFromLoad) == 0x000000, "Member 'IO_Door_Parent_C___UserState_DoorPositionState_0::bFromLoad' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent
// 0x0018 (0x0018 - 0x0000)
struct IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent final
{
public:
	struct FUseEvent                              UseEvent;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent) == 0x000008, "Wrong alignment on IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent");
static_assert(sizeof(IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent) == 0x000018, "Wrong size on IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent");
static_assert(offsetof(IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent, UseEvent) == 0x000000, "Member 'IO_Door_Parent_C_BndEvt__Usable_K2Node_ComponentBoundEvent_5_UsableUsedSignature__DelegateSignature_IO_Door_Parent::UseEvent' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.SetDoorFeedbackState
// 0x0001 (0x0001 - 0x0000)
struct IO_Door_Parent_C_SetDoorFeedbackState final
{
public:
	Enum_States_DoorLocked                        FeedbackState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_SetDoorFeedbackState) == 0x000001, "Wrong alignment on IO_Door_Parent_C_SetDoorFeedbackState");
static_assert(sizeof(IO_Door_Parent_C_SetDoorFeedbackState) == 0x000001, "Wrong size on IO_Door_Parent_C_SetDoorFeedbackState");
static_assert(offsetof(IO_Door_Parent_C_SetDoorFeedbackState, FeedbackState) == 0x000000, "Member 'IO_Door_Parent_C_SetDoorFeedbackState::FeedbackState' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.ExecuteUbergraph_IO_Door_Parent
// 0x01C0 (0x01C0 - 0x0000)
struct IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Door_ReasonForTimeline                   K2Node_CustomEvent_Reason1;                        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue; // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue1; // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Door_State                               K2Node_Event_DoorState;                            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Locked_;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Interactive_;                         // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0118(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Triggerable;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad4;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_Door_ReasonForTimeline                   K2Node_CustomEvent_Reason;                         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUseEvent                              K2Node_ComponentBoundEvent_UseEvent;               // 0x0148(0x0018)(ConstParm, NoDestructor, ContainsInstancedReference)
	Enum_States_DoorLocked                        K2Node_Event_FeedbackState;                        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue2;                // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item1;                          // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item2;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetAssociatedController_ReturnValue;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue5;         // 0x01B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue6;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue7;         // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent) == 0x000008, "Wrong alignment on IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent");
static_assert(sizeof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent) == 0x0001C0, "Wrong size on IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, EntryPoint) == 0x000000, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_bool_Variable) == 0x000004, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_float_Variable) == 0x000008, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_int_Array_Index_Variable1) == 0x000018, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000020, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OtherActor1) == 0x000028, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OtherComp1) == 0x000030, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000038, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000D0, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OtherActor) == 0x0000D8, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OtherComp) == 0x0000E0, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000E8, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_CustomEvent_Reason1) == 0x0000EC, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_CustomEvent_Reason1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue) == 0x0000ED, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue1) == 0x0000EE, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_BooleanOR_ReturnValue) == 0x0000EF, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_int_Loop_Counter_Variable1) == 0x0000F0, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_Event_DoorState) == 0x0000F4, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_Event_DoorState' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_SwitchEnum_CmpSuccess) == 0x0000F5, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Add_IntInt_ReturnValue1) == 0x0000F8, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_Event_Locked_) == 0x0000FC, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_Event_Locked_' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_Event_Interactive_) == 0x0000FD, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_Event_Interactive_' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000FE, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x0000FF, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_int_Loop_Counter_Variable2) == 0x000100, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Add_IntInt_ReturnValue2) == 0x000104, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Get_Item) == 0x000108, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_CustomEvent_Color) == 0x000118, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000128, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, Temp_int_Array_Index_Variable2) == 0x000134, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_HasAuthority_ReturnValue) == 0x000138, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_CustomEvent_Triggerable) == 0x000139, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_CustomEvent_Triggerable' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00013A, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00013B, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_UserStateEvent_bFromLoad4) == 0x00013C, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_UserStateEvent_bFromLoad4' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_UserStateEvent_bFromLoad3) == 0x00013D, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_UserStateEvent_bFromLoad2) == 0x00013E, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_SwitchEnum1_CmpSuccess) == 0x00013F, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_CustomEvent_Reason) == 0x000140, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_CustomEvent_Reason' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_SwitchEnum2_CmpSuccess) == 0x000141, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_SwitchEnum3_CmpSuccess) == 0x000142, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000143, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000144, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_HasAuthority_ReturnValue1) == 0x000145, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_UserStateEvent_bFromLoad1) == 0x000146, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_UserStateEvent_bFromLoad) == 0x000147, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_ComponentBoundEvent_UseEvent) == 0x000148, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_ComponentBoundEvent_UseEvent' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, K2Node_Event_FeedbackState) == 0x000160, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::K2Node_Event_FeedbackState' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_IsValidClass_ReturnValue) == 0x000161, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_IsValidClass_ReturnValue1) == 0x000162, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_IsValidClass_ReturnValue2) == 0x000163, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_IsValidClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Get_Item1) == 0x000168, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Length_ReturnValue1) == 0x000170, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Less_IntInt_ReturnValue1) == 0x000174, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000178, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Get_Item2) == 0x000188, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Length_ReturnValue2) == 0x000190, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000198, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Less_IntInt_ReturnValue2) == 0x0001A0, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_IsValid_ReturnValue) == 0x0001A1, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_GetAssociatedController_ReturnValue) == 0x0001A8, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_GetAssociatedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Array_Length_ReturnValue3) == 0x0001B0, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_IsValid_ReturnValue1) == 0x0001B4, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B5, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x0001B6, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue5) == 0x0001B7, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue6) == 0x0001B8, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue6' has a wrong offset!");
static_assert(offsetof(IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent, CallFunc_EqualEqual_ByteByte_ReturnValue7) == 0x0001B9, "Member 'IO_Door_Parent_C_ExecuteUbergraph_IO_Door_Parent::CallFunc_EqualEqual_ByteByte_ReturnValue7' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.On_DoorLockedUsed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature) == 0x000008, "Wrong alignment on IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature");
static_assert(sizeof(IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature) == 0x000008, "Wrong size on IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature");
static_assert(offsetof(IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature, UserController) == 0x000000, "Member 'IO_Door_Parent_C_On_DoorLockedUsed__DelegateSignature::UserController' has a wrong offset!");

// Function IO_Door_Parent.IO_Door_Parent_C.On_DoorUsed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct IO_Door_Parent_C_On_DoorUsed__DelegateSignature final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Door_Parent_C_On_DoorUsed__DelegateSignature) == 0x000008, "Wrong alignment on IO_Door_Parent_C_On_DoorUsed__DelegateSignature");
static_assert(sizeof(IO_Door_Parent_C_On_DoorUsed__DelegateSignature) == 0x000008, "Wrong size on IO_Door_Parent_C_On_DoorUsed__DelegateSignature");
static_assert(offsetof(IO_Door_Parent_C_On_DoorUsed__DelegateSignature, UserController) == 0x000000, "Member 'IO_Door_Parent_C_On_DoorUsed__DelegateSignature::UserController' has a wrong offset!");

}

