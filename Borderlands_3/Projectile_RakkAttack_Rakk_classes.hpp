#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_RakkAttack_Rakk

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C
// 0x00C0 (0x07E8 - 0x0728)
class AProjectile_RakkAttack_Rakk_C final : public AOakProjectile_RakkAttack_Rakk
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0728(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       DMGCollision;                                      // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakTriggerComponent*                   DamageTrigger;                                     // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              FX_RakkTransfusionReturn;                          // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Transfusion_Audio;                                 // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BeastMaster_Rakk_Healing_Return;                // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDrunkenRandomMovementComponent*        DrunkenRandomMovement;                             // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_BeastMaster_Rakk_Healing;                       // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              FX_RakkTransfusion;                                // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxActionComponent*                    GbxAction;                                         // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGameplayTasksComponent*                GameplayTasks;                                     // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Passive_FX;                                        // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileHomingComponent*             ProjectileHoming;                                  // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Rakk;                                           // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HitEnemy;                                          // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReturningToOwner;                                 // 0x07B1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_7B2[0x6];                                      // 0x07B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ReturnPortalFX;                                    // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CoordinatedEffect_Out;                             // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CoordinatedEffect_In;                              // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFindingTargets;                                 // 0x07D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHasHadInitialTarget;                              // 0x07D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWasJustSpawned;                                   // 0x07D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3[0x5];                                      // 0x07D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPEventHub_Beastmaster_C*              OwnerEventHub;                                     // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDelay;                                       // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Projectile_RakkAttack_Rakk(int32 EntryPoint);
	void BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void SetNewHomingTargetWithDelay(float Delay, class AActor* NewHomingTarget);
	void ReturnToOwner();
	void StartNewTargetSearch();
	void OnDeath_ProjectileHomingTarget(class AActor* DamageReceiver, class AActor* DamageCauser);
	void SetNewHomingTarget(class AActor* NewHomingTarget);
	void DoRakkDigistructIn();
	void SetupRuntimeMods();
	void DoRakkDestroyCleanup(bool WantsNiceCleanup);
	void BndEvt__ProjectileHoming_K2Node_ComponentBoundEvent_0_ProjectileHomingComponentEvent__DelegateSignature_Projectile_PetJabbermon_Rakk_Return1();
	void OnExplode();
	void OnHitWorld(const struct FHitResult& Hit);
	void OnHitDamagableObject(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void OnEnd_D54427794086CD24870288B0EF46744B(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_D54427794086CD24870288B0EF46744B();
	void OnEnd_A3A042B947729CE01D4C998DA75FCBF4(EGbxActionEndState EndState, class AActor* Actor);
	void OnAnimEnd_A3A042B947729CE01D4C998DA75FCBF4();
	void UserConstructionScript();
	void DoRakkDamage();
	void SetHomingAndLocation(class AActor* NewTarget);
	void InitAudio();
	void SetupMod1Transfusion();
	void DoPreDestroyCleanup();
	void SetupElementalMaterials(class UMaterialInstance* Material, class UParticleSystem* PassiveParticle);
	void SetupRakkElement();
	void HasHomingTarget(bool* bRes);
	void DoMod1Heal();
	void OnRep_bReturningToOwner();
	void ReleaseCurrentHomingTarget();
	void FindNewTarget();
	void SetHomingAndLocationWithDelay(class AActor* NewTarget);
	void SetHitTarget(class AActor* SourceActor);

	void ChooseTargetFromSet(TArray<class AActor*>& SetRef, class AActor** Res) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_RakkAttack_Rakk_C">();
	}
	static class AProjectile_RakkAttack_Rakk_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_RakkAttack_Rakk_C>();
	}
};
static_assert(alignof(AProjectile_RakkAttack_Rakk_C) == 0x000008, "Wrong alignment on AProjectile_RakkAttack_Rakk_C");
static_assert(sizeof(AProjectile_RakkAttack_Rakk_C) == 0x0007E8, "Wrong size on AProjectile_RakkAttack_Rakk_C");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, UberGraphFrame) == 0x000728, "Member 'AProjectile_RakkAttack_Rakk_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, DMGCollision) == 0x000730, "Member 'AProjectile_RakkAttack_Rakk_C::DMGCollision' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, DamageTrigger) == 0x000738, "Member 'AProjectile_RakkAttack_Rakk_C::DamageTrigger' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, FX_RakkTransfusionReturn) == 0x000740, "Member 'AProjectile_RakkAttack_Rakk_C::FX_RakkTransfusionReturn' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, Transfusion_Audio) == 0x000748, "Member 'AProjectile_RakkAttack_Rakk_C::Transfusion_Audio' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, PS_BeastMaster_Rakk_Healing_Return) == 0x000750, "Member 'AProjectile_RakkAttack_Rakk_C::PS_BeastMaster_Rakk_Healing_Return' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, DrunkenRandomMovement) == 0x000758, "Member 'AProjectile_RakkAttack_Rakk_C::DrunkenRandomMovement' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, GbxProjectileMovement) == 0x000760, "Member 'AProjectile_RakkAttack_Rakk_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, WwiseAudio) == 0x000768, "Member 'AProjectile_RakkAttack_Rakk_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, PS_BeastMaster_Rakk_Healing) == 0x000770, "Member 'AProjectile_RakkAttack_Rakk_C::PS_BeastMaster_Rakk_Healing' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, FX_RakkTransfusion) == 0x000778, "Member 'AProjectile_RakkAttack_Rakk_C::FX_RakkTransfusion' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, GbxAction) == 0x000780, "Member 'AProjectile_RakkAttack_Rakk_C::GbxAction' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, GameplayTasks) == 0x000788, "Member 'AProjectile_RakkAttack_Rakk_C::GameplayTasks' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, Passive_FX) == 0x000790, "Member 'AProjectile_RakkAttack_Rakk_C::Passive_FX' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, ProjectileHoming) == 0x000798, "Member 'AProjectile_RakkAttack_Rakk_C::ProjectileHoming' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, SK_Rakk) == 0x0007A0, "Member 'AProjectile_RakkAttack_Rakk_C::SK_Rakk' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, Sphere) == 0x0007A8, "Member 'AProjectile_RakkAttack_Rakk_C::Sphere' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, HitEnemy) == 0x0007B0, "Member 'AProjectile_RakkAttack_Rakk_C::HitEnemy' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, bReturningToOwner) == 0x0007B1, "Member 'AProjectile_RakkAttack_Rakk_C::bReturningToOwner' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, ReturnPortalFX) == 0x0007B8, "Member 'AProjectile_RakkAttack_Rakk_C::ReturnPortalFX' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, CoordinatedEffect_Out) == 0x0007C0, "Member 'AProjectile_RakkAttack_Rakk_C::CoordinatedEffect_Out' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, CoordinatedEffect_In) == 0x0007C8, "Member 'AProjectile_RakkAttack_Rakk_C::CoordinatedEffect_In' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, bIsFindingTargets) == 0x0007D0, "Member 'AProjectile_RakkAttack_Rakk_C::bIsFindingTargets' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, bHasHadInitialTarget) == 0x0007D1, "Member 'AProjectile_RakkAttack_Rakk_C::bHasHadInitialTarget' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, bWasJustSpawned) == 0x0007D2, "Member 'AProjectile_RakkAttack_Rakk_C::bWasJustSpawned' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, OwnerEventHub) == 0x0007D8, "Member 'AProjectile_RakkAttack_Rakk_C::OwnerEventHub' has a wrong offset!");
static_assert(offsetof(AProjectile_RakkAttack_Rakk_C, TargetDelay) == 0x0007E0, "Member 'AProjectile_RakkAttack_Rakk_C::TargetDelay' has a wrong offset!");

}

