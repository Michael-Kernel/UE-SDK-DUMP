#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_HoldAndThrow

#include "Basic.hpp"

#include "FL_HoldAndThrow_classes.hpp"
#include "FL_HoldAndThrow_parameters.hpp"


namespace SDK
{

// Function FL_HoldAndThrow.FL_HoldAndThrow_C.HNT_Prime
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_HoldAndThrow_C::HNT_Prime(class AActor* Projectile, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_HoldAndThrow_C", "HNT_Prime");

	Params::FL_HoldAndThrow_C_HNT_Prime Parms{};

	Parms.Projectile = Projectile;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_HoldAndThrow.FL_HoldAndThrow_C.HNT_Drop
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_HoldAndThrow_C::HNT_Drop(class AActor* Projectile, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_HoldAndThrow_C", "HNT_Drop");

	Params::FL_HoldAndThrow_C_HNT_Drop Parms{};

	Parms.Projectile = Projectile;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_HoldAndThrow.FL_HoldAndThrow_C.HNT_Throw
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_HoldAndThrow_C::HNT_Throw(class AActor* Projectile, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_HoldAndThrow_C", "HNT_Throw");

	Params::FL_HoldAndThrow_C_HNT_Throw Parms{};

	Parms.Projectile = Projectile;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

