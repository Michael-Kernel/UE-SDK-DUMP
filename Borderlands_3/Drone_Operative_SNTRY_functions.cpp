#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Drone_Operative_SNTRY

#include "Basic.hpp"

#include "Drone_Operative_SNTRY_classes.hpp"
#include "Drone_Operative_SNTRY_parameters.hpp"


namespace SDK
{

// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ExecuteUbergraph_Drone_Operative_SNTRY
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::ExecuteUbergraph_Drone_Operative_SNTRY(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "ExecuteUbergraph_Drone_Operative_SNTRY");

	Params::Drone_Operative_SNTRY_C_ExecuteUbergraph_Drone_Operative_SNTRY Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.HaltDronePhase
// (BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::HaltDronePhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "HaltDronePhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetDronePhasing
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPhasing                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADrone_Operative_SNTRY_C::SetDronePhasing(bool bPhasing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "SetDronePhasing");

	Params::Drone_Operative_SNTRY_C_SetDronePhasing Parms{};

	Parms.bPhasing = bPhasing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnCalledShotKill
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           KilledActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::OnCalledShotKill(class AActor* KilledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "OnCalledShotKill");

	Params::Drone_Operative_SNTRY_C_OnCalledShotKill Parms{};

	Parms.KilledActor = KilledActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DoNextCalledShot
// (BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::DoNextCalledShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DoNextCalledShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnCalledShotActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::OnCalledShotActivated(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "OnCalledShotActivated");

	Params::Drone_Operative_SNTRY_C_OnCalledShotActivated Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DoDroneDelivery
// (Event, Protected, BlueprintEvent)

void ADrone_Operative_SNTRY_C::DoDroneDelivery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DoDroneDelivery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DoGracefulShutdown
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::DoGracefulShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DoGracefulShutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnShutdownGracefully
// (Event, Protected, BlueprintEvent)

void ADrone_Operative_SNTRY_C::OnShutdownGracefully()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "OnShutdownGracefully");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupMods
// (Event, Protected, BlueprintEvent)

void ADrone_Operative_SNTRY_C::SetupMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "SetupMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADrone_Operative_SNTRY_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ApplyCollisionDamageToTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::ApplyCollisionDamageToTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "ApplyCollisionDamageToTarget");

	Params::Drone_Operative_SNTRY_C_ApplyCollisionDamageToTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.StartDigistructOut
// (BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::StartDigistructOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "StartDigistructOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY
// (BlueprintEvent)
// Parameters:
// bool                                    bIsBoosting                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADrone_Operative_SNTRY_C::BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY(bool bIsBoosting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY");

	Params::Drone_Operative_SNTRY_C_BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY Parms{};

	Parms.bIsBoosting = bIsBoosting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DronePhase__UpdateFunc
// (BlueprintEvent)

void ADrone_Operative_SNTRY_C::DronePhase__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DronePhase__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DronePhase__FinishedFunc
// (BlueprintEvent)

void ADrone_Operative_SNTRY_C::DronePhase__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DronePhase__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DigistructOut__UpdateFunc
// (BlueprintEvent)

void ADrone_Operative_SNTRY_C::DigistructOut__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DigistructOut__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DigistructOut__FinishedFunc
// (BlueprintEvent)

void ADrone_Operative_SNTRY_C::DigistructOut__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DigistructOut__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DropPayload
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::DropPayload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DropPayload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetExhaustFXEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADrone_Operative_SNTRY_C::SetExhaustFXEnabled(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "SetExhaustFXEnabled");

	Params::Drone_Operative_SNTRY_C_SetExhaustFXEnabled Parms{};

	Parms.bIsEnabled = bIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.GetMoveDelayForTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::GetMoveDelayForTarget(float* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "GetMoveDelayForTarget");

	Params::Drone_Operative_SNTRY_C_GetMoveDelayForTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.CauseCollisionDamageToEnemy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::CauseCollisionDamageToEnemy(class AActor* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "CauseCollisionDamageToEnemy");

	Params::Drone_Operative_SNTRY_C_CauseCollisionDamageToEnemy Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupCryoBullets
// (Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::SetupCryoBullets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "SetupCryoBullets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupStaticField
// (Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::SetupStaticField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "SetupStaticField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.SetupCalledShot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::SetupCalledShot(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "SetupCalledShot");

	Params::Drone_Operative_SNTRY_C_SetupCalledShot Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.AdvanceCalledShotCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADrone_Operative_SNTRY_C::AdvanceCalledShotCount(bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "AdvanceCalledShotCount");

	Params::Drone_Operative_SNTRY_C_AdvanceCalledShotCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.RefundDuration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Val                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::RefundDuration(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "RefundDuration");

	Params::Drone_Operative_SNTRY_C_RefundDuration Parms{};

	Parms.Val = Val;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.DispatchCalledShotRestorationParticles
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           KilledTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::DispatchCalledShotRestorationParticles(class AActor* KilledTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "DispatchCalledShotRestorationParticles");

	Params::Drone_Operative_SNTRY_C_DispatchCalledShotRestorationParticles Parms{};

	Parms.KilledTarget = KilledTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.RegisterDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::RegisterDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "RegisterDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.OnSimCalledShotRelease
// (Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::OnSimCalledShotRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "OnSimCalledShotRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ConfigureCryoEmitter
// (Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::ConfigureCryoEmitter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "ConfigureCryoEmitter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ConfigureDigistruct
// (Public, BlueprintCallable, BlueprintEvent)

void ADrone_Operative_SNTRY_C::ConfigureDigistruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "ConfigureDigistruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.FindNewTargetAutonomous
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ADrone_Operative_SNTRY_C::FindNewTargetAutonomous() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "FindNewTargetAutonomous");

	Params::Drone_Operative_SNTRY_C_FindNewTargetAutonomous Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.CreateBadDoseBeamToTarget
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BeamName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::CreateBadDoseBeamToTarget(class AActor* TargetActor, class FName BeamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "CreateBadDoseBeamToTarget");

	Params::Drone_Operative_SNTRY_C_CreateBadDoseBeamToTarget Parms{};

	Parms.TargetActor = TargetActor;
	Parms.BeamName = BeamName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.CreateStaticFieldBeamToTarget
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BeamName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::CreateStaticFieldBeamToTarget(class AActor* TargetActor, class FName BeamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "CreateStaticFieldBeamToTarget");

	Params::Drone_Operative_SNTRY_C_CreateStaticFieldBeamToTarget Parms{};

	Parms.TargetActor = TargetActor;
	Parms.BeamName = BeamName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.ApplyShieldDamageRefund
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           CurrentTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LastDamageLocation                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TotalRefund                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADrone_Operative_SNTRY_C::ApplyShieldDamageRefund(class AActor* CurrentTarget, const struct FVector& LastDamageLocation, float TotalRefund) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "ApplyShieldDamageRefund");

	Params::Drone_Operative_SNTRY_C_ApplyShieldDamageRefund Parms{};

	Parms.CurrentTarget = CurrentTarget;
	Parms.LastDamageLocation = std::move(LastDamageLocation);
	Parms.TotalRefund = TotalRefund;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Drone_Operative_SNTRY.Drone_Operative_SNTRY_C.HasValidDroneTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADrone_Operative_SNTRY_C::HasValidDroneTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Drone_Operative_SNTRY_C", "HasValidDroneTarget");

	Params::Drone_Operative_SNTRY_C_HasValidDroneTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

