#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_HitAndRun_1

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Passive_Beastmaster_HitAndRun_1.Passive_Beastmaster_HitAndRun_1_C.ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1
// 0x0178 (0x0178 - 0x0000)
struct Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0030(0x0060)(ContainsInstancedReference)
	TScriptInterface<class IIBPChar_Beastmaster_C> K2Node_DynamicCast_AsIBPChar_Beastmaster;          // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          CallFunc_GetCurrentPet_Res;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageCauserComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x00D8(0x0028)(NoDestructor)
	TScriptInterface<class IIBPChar_Beastmaster_C> K2Node_DynamicCast_AsIBPChar_Beastmaster1;         // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          CallFunc_GetCurrentPet_Res1;                       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0128(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0160(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1) == 0x000008, "Wrong alignment on Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1");
static_assert(sizeof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1) == 0x000178, "Wrong size on Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, EntryPoint) == 0x000000, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CustomEvent_DamageInstigator) == 0x000008, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CustomEvent_Damage) == 0x000010, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CustomEvent_DamageType) == 0x000018, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CustomEvent_DamageSource) == 0x000020, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CustomEvent_DamagedActor) == 0x000028, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CustomEvent_Details) == 0x000030, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_DynamicCast_AsIBPChar_Beastmaster) == 0x000090, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_DynamicCast_AsIBPChar_Beastmaster' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_Compare_Damage_Source_Equal) == 0x0000A1, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_Compare_Damage_Source_Not_Equal) == 0x0000A2, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_GetCurrentPet_Res) == 0x0000A8, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_GetCurrentPet_Res' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000B1, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B8, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_GetAbilityOwner_ReturnValue) == 0x0000D0, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0000D8, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_DynamicCast_AsIBPChar_Beastmaster1) == 0x000100, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_DynamicCast_AsIBPChar_Beastmaster1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_DynamicCast_bSuccess1) == 0x000110, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_GetCurrentPet_Res1) == 0x000118, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_GetCurrentPet_Res1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000120, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, K2Node_MakeStruct_StatusEffectSpec) == 0x000128, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1, CallFunc_AddStatusEffect_ReturnValue) == 0x000160, "Member 'Passive_Beastmaster_HitAndRun_1_C_ExecuteUbergraph_Passive_Beastmaster_HitAndRun_1::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");

// Function Passive_Beastmaster_HitAndRun_1.Passive_Beastmaster_HitAndRun_1_C.CausedDamage_HitAndRun1
// 0x0088 (0x0088 - 0x0000)
struct Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1 final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1) == 0x000008, "Wrong alignment on Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1");
static_assert(sizeof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1) == 0x000088, "Wrong size on Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1, DamageInstigator) == 0x000000, "Member 'Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1, Damage) == 0x000008, "Member 'Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1::Damage' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1, DamageType) == 0x000010, "Member 'Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1::DamageType' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1, DamageSource) == 0x000018, "Member 'Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1::DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1, DamagedActor) == 0x000020, "Member 'Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1::DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1, Details) == 0x000028, "Member 'Passive_Beastmaster_HitAndRun_1_C_CausedDamage_HitAndRun1::Details' has a wrong offset!");

}

