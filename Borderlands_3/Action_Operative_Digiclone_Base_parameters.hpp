#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Operative_Digiclone_Base

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Action_Operative_Digiclone_Base.Action_Operative_Digiclone_Base_C.ExecuteUbergraph_Action_Operative_Digiclone_Base
// 0x0018 (0x0018 - 0x0000)
struct Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxActionEndState                            K2Node_Event_ActionEndState;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor1;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base) == 0x000008, "Wrong alignment on Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base");
static_assert(sizeof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base) == 0x000018, "Wrong size on Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base, EntryPoint) == 0x000000, "Member 'Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base, K2Node_Event_ActionEndState) == 0x000006, "Member 'Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base::K2Node_Event_ActionEndState' has a wrong offset!");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base, K2Node_Event_Actor1) == 0x000008, "Member 'Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base::K2Node_Event_Actor1' has a wrong offset!");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base, K2Node_Event_Actor) == 0x000010, "Member 'Action_Operative_Digiclone_Base_C_ExecuteUbergraph_Action_Operative_Digiclone_Base::K2Node_Event_Actor' has a wrong offset!");

// Function Action_Operative_Digiclone_Base.Action_Operative_Digiclone_Base_C.OnBeginBringUpWeapon
// 0x0008 (0x0008 - 0x0000)
struct Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon) == 0x000008, "Wrong alignment on Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon");
static_assert(sizeof(Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon) == 0x000008, "Wrong size on Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon, Actor) == 0x000000, "Member 'Action_Operative_Digiclone_Base_C_OnBeginBringUpWeapon::Actor' has a wrong offset!");

// Function Action_Operative_Digiclone_Base.Action_Operative_Digiclone_Base_C.OnEnd
// 0x0010 (0x0010 - 0x0000)
struct Action_Operative_Digiclone_Base_C_OnEnd final
{
public:
	EGbxActionEndState                            ActionEndState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Operative_Digiclone_Base_C_OnEnd) == 0x000008, "Wrong alignment on Action_Operative_Digiclone_Base_C_OnEnd");
static_assert(sizeof(Action_Operative_Digiclone_Base_C_OnEnd) == 0x000010, "Wrong size on Action_Operative_Digiclone_Base_C_OnEnd");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_OnEnd, ActionEndState) == 0x000000, "Member 'Action_Operative_Digiclone_Base_C_OnEnd::ActionEndState' has a wrong offset!");
static_assert(offsetof(Action_Operative_Digiclone_Base_C_OnEnd, Actor) == 0x000008, "Member 'Action_Operative_Digiclone_Base_C_OnEnd::Actor' has a wrong offset!");

}

