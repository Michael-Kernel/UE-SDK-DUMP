#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCine_Actor_Claptrap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPCine_Actor_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPCine_Actor_Claptrap.BPCine_Actor_Claptrap_C
// 0x0030 (0x0540 - 0x0510)
class ABPCine_Actor_Claptrap_C final : public ABPCine_Actor_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPCine_Actor_Claptrap_C;            // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   AntennaChoice;                                     // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Claptrap_Green_Blinky_Light;                    // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Claptrap_Dirt_Kickup;                           // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    AntennaArray;                                      // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BPCine_Actor_Claptrap(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPCine_Actor_Claptrap_C">();
	}
	static class ABPCine_Actor_Claptrap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPCine_Actor_Claptrap_C>();
	}
};
static_assert(alignof(ABPCine_Actor_Claptrap_C) == 0x000008, "Wrong alignment on ABPCine_Actor_Claptrap_C");
static_assert(sizeof(ABPCine_Actor_Claptrap_C) == 0x000540, "Wrong size on ABPCine_Actor_Claptrap_C");
static_assert(offsetof(ABPCine_Actor_Claptrap_C, UberGraphFrame_BPCine_Actor_Claptrap_C) == 0x000510, "Member 'ABPCine_Actor_Claptrap_C::UberGraphFrame_BPCine_Actor_Claptrap_C' has a wrong offset!");
static_assert(offsetof(ABPCine_Actor_Claptrap_C, AntennaChoice) == 0x000518, "Member 'ABPCine_Actor_Claptrap_C::AntennaChoice' has a wrong offset!");
static_assert(offsetof(ABPCine_Actor_Claptrap_C, PS_Claptrap_Green_Blinky_Light) == 0x000520, "Member 'ABPCine_Actor_Claptrap_C::PS_Claptrap_Green_Blinky_Light' has a wrong offset!");
static_assert(offsetof(ABPCine_Actor_Claptrap_C, PS_Claptrap_Dirt_Kickup) == 0x000528, "Member 'ABPCine_Actor_Claptrap_C::PS_Claptrap_Dirt_Kickup' has a wrong offset!");
static_assert(offsetof(ABPCine_Actor_Claptrap_C, AntennaArray) == 0x000530, "Member 'ABPCine_Actor_Claptrap_C::AntennaArray' has a wrong offset!");

}

