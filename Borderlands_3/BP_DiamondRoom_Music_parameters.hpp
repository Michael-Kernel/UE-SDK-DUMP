#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DiamondRoom_Music

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_DiamondRoom_Music.BP_DiamondRoom_Music_C.ExecuteUbergraph_BP_DiamondRoom_Music
// 0x0040 (0x0040 - 0x0000)
struct BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Mus_Sanctuary_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0018(0x0018)()
	class ABP_Mus_Sanctuary_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceFromEmitterToListener_RTPCValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music) == 0x000008, "Wrong alignment on BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music");
static_assert(sizeof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music) == 0x000040, "Wrong size on BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music");
static_assert(offsetof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music, EntryPoint) == 0x000000, "Member 'BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music, CallFunc_PostWwiseEvent_ReturnValue) == 0x000018, "Member 'BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music, CallFunc_GetDistanceFromEmitterToListener_RTPCValue) == 0x00003C, "Member 'BP_DiamondRoom_Music_C_ExecuteUbergraph_BP_DiamondRoom_Music::CallFunc_GetDistanceFromEmitterToListener_RTPCValue' has a wrong offset!");

// Function BP_DiamondRoom_Music.BP_DiamondRoom_Music_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DiamondRoom_Music_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DiamondRoom_Music_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DiamondRoom_Music_C_ReceiveTick");
static_assert(sizeof(BP_DiamondRoom_Music_C_ReceiveTick) == 0x000004, "Wrong size on BP_DiamondRoom_Music_C_ReceiveTick");
static_assert(offsetof(BP_DiamondRoom_Music_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DiamondRoom_Music_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

