#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_PullOutMethod

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_PullOutMethod.Ability_Artifact_PullOutMethod_C.ExecuteUbergraph_Ability_Artifact_PullOutMethod
// 0x0178 (0x0178 - 0x0000)
struct Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_MakeStruct_OakAbilityTimerSpec;             // 0x0008(0x0018)(NoDestructor)
	TDelegate<void(struct FGroundSlamEndedDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0030(0x0028)(NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	struct FSingularityInitializationInfo         K2Node_MakeStruct_SingularityInitializationInfo;   // 0x0068(0x00C0)()
	struct FGroundSlamEndedDetails                K2Node_CustomEvent_Details;                        // 0x0128(0x0008)(ConstParm, NoDestructor)
	class USingularityComponent*                  CallFunc_CreateSingularity_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec1;                                // 0x0138(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec;                                 // 0x0150(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerResult                 K2Node_Event_Result;                               // 0x0168(0x000C)(ConstParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod) == 0x000008, "Wrong alignment on Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod");
static_assert(sizeof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod) == 0x000178, "Wrong size on Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, EntryPoint) == 0x000000, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000004, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_MakeStruct_OakAbilityTimerSpec) == 0x000008, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_MakeStruct_OakAbilityTimerSpec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000030, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_MakeArray_Array) == 0x000058, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_MakeStruct_SingularityInitializationInfo) == 0x000068, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_MakeStruct_SingularityInitializationInfo' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_CustomEvent_Details) == 0x000128, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, CallFunc_CreateSingularity_ReturnValue) == 0x000130, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::CallFunc_CreateSingularity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_Event_Spec1) == 0x000138, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_Event_Spec1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_Event_Spec) == 0x000150, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod, K2Node_Event_Result) == 0x000168, "Member 'Ability_Artifact_PullOutMethod_C_ExecuteUbergraph_Ability_Artifact_PullOutMethod::K2Node_Event_Result' has a wrong offset!");

// Function Ability_Artifact_PullOutMethod.Ability_Artifact_PullOutMethod_C.OnAbilityTimerEnded
// 0x0028 (0x0028 - 0x0000)
struct Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FOakAbilityTimerResult                 Result;                                            // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded) == 0x000008, "Wrong alignment on Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded");
static_assert(sizeof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded) == 0x000028, "Wrong size on Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded, Spec) == 0x000000, "Member 'Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded::Spec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded, Result) == 0x000018, "Member 'Ability_Artifact_PullOutMethod_C_OnAbilityTimerEnded::Result' has a wrong offset!");

// Function Ability_Artifact_PullOutMethod.Ability_Artifact_PullOutMethod_C.OnAbilityTimerStarted
// 0x0018 (0x0018 - 0x0000)
struct Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted) == 0x000008, "Wrong alignment on Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted");
static_assert(sizeof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted) == 0x000018, "Wrong size on Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted, Spec) == 0x000000, "Member 'Ability_Artifact_PullOutMethod_C_OnAbilityTimerStarted::Spec' has a wrong offset!");

// Function Ability_Artifact_PullOutMethod.Ability_Artifact_PullOutMethod_C.SlamEnd
// 0x0008 (0x0008 - 0x0000)
struct Ability_Artifact_PullOutMethod_C_SlamEnd final
{
public:
	struct FGroundSlamEndedDetails                Details;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_PullOutMethod_C_SlamEnd) == 0x000004, "Wrong alignment on Ability_Artifact_PullOutMethod_C_SlamEnd");
static_assert(sizeof(Ability_Artifact_PullOutMethod_C_SlamEnd) == 0x000008, "Wrong size on Ability_Artifact_PullOutMethod_C_SlamEnd");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_SlamEnd, Details) == 0x000000, "Member 'Ability_Artifact_PullOutMethod_C_SlamEnd::Details' has a wrong offset!");

// Function Ability_Artifact_PullOutMethod.Ability_Artifact_PullOutMethod_C.Ammo Return
// 0x0020 (0x0020 - 0x0000)
struct Ability_Artifact_PullOutMethod_C_Ammo_Return final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Artifact_PullOutMethod_C_Ammo_Return) == 0x000008, "Wrong alignment on Ability_Artifact_PullOutMethod_C_Ammo_Return");
static_assert(sizeof(Ability_Artifact_PullOutMethod_C_Ammo_Return) == 0x000020, "Wrong size on Ability_Artifact_PullOutMethod_C_Ammo_Return");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_Ammo_Return, Character) == 0x000000, "Member 'Ability_Artifact_PullOutMethod_C_Ammo_Return::Character' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_Ammo_Return, CallFunc_GetWeapon_ReturnValue) == 0x000008, "Member 'Ability_Artifact_PullOutMethod_C_Ammo_Return::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_Ammo_Return, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000010, "Member 'Ability_Artifact_PullOutMethod_C_Ammo_Return::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_Ammo_Return, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Ability_Artifact_PullOutMethod_C_Ammo_Return::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_PullOutMethod_C_Ammo_Return, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'Ability_Artifact_PullOutMethod_C_Ammo_Return::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

