#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_AnimFunctionLibrary

#include "Basic.hpp"

#include "AStruct_Generic_WeaponAnimContainer_structs.hpp"
#include "AStruct_Generic_WeaponAnims_structs.hpp"
#include "Engine_structs.hpp"
#include "AStruct_WeaponAnimContainer_structs.hpp"
#include "AStruct_WeaponAnimContainer_Menu_structs.hpp"
#include "AStruct_WeaponAnims_Menu_structs.hpp"
#include "AStruct_WeaponAnims_structs.hpp"


namespace SDK::Params
{

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.InitCharacterComponents
// 0x0050 (0x0050 - 0x0000)
struct BP_Character_AnimFunctionLibrary_C_InitCharacterComponents final
{
public:
	class APawn*                                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Character;                                         // 0x0008(0x0008)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxCharacterMovementComponent*         GbxMoveComp;                                       // 0x0010(0x0008)(BlueprintVisible, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCharacterMovementComponent*         OakMoveComp;                                       // 0x0018(0x0008)(BlueprintVisible, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Characteroutput;                                   // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxCharacterMovementComponent*         GbxCharacterMovement;                              // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCharacterMovementComponent*         OakCharacterMovement;                              // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents) == 0x000008, "Wrong alignment on BP_Character_AnimFunctionLibrary_C_InitCharacterComponents");
static_assert(sizeof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents) == 0x000050, "Wrong size on BP_Character_AnimFunctionLibrary_C_InitCharacterComponents");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, Target) == 0x000000, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::Target' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, Character) == 0x000008, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::Character' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, GbxMoveComp) == 0x000010, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::GbxMoveComp' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, OakMoveComp) == 0x000018, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::OakMoveComp' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, __WorldContext) == 0x000020, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, Characteroutput) == 0x000028, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::Characteroutput' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, GbxCharacterMovement) == 0x000030, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::GbxCharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, OakCharacterMovement) == 0x000038, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::OakCharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, K2Node_DynamicCast_AsOak_Character) == 0x000040, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_InitCharacterComponents, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Character_AnimFunctionLibrary_C_InitCharacterComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.Log Error
// 0x0118 (0x0118 - 0x0000)
struct BP_Character_AnimFunctionLibrary_C_Log_Error final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Log_Text;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ErrorText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
};
static_assert(alignof(BP_Character_AnimFunctionLibrary_C_Log_Error) == 0x000008, "Wrong alignment on BP_Character_AnimFunctionLibrary_C_Log_Error");
static_assert(sizeof(BP_Character_AnimFunctionLibrary_C_Log_Error) == 0x000118, "Wrong size on BP_Character_AnimFunctionLibrary_C_Log_Error");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, Object) == 0x000000, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::Object' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, Log_Text) == 0x000008, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::Log_Text' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, __WorldContext) == 0x000020, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, ErrorText) == 0x000028, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::ErrorText' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, CallFunc_GetObjectClass_ReturnValue) == 0x000080, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, CallFunc_GetClassDisplayName_ReturnValue) == 0x000088, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, K2Node_MakeStruct_FormatArgumentData1) == 0x0000B0, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_Log_Error, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_Character_AnimFunctionLibrary_C_Log_Error::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.PostInitCheck
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_AnimFunctionLibrary_C_PostInitCheck final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxCharacterMovementComponent*         GbxMoveComp;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCharacterMovementComponent*         OakMoveComp;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_AnimFunctionLibrary_C_PostInitCheck) == 0x000008, "Wrong alignment on BP_Character_AnimFunctionLibrary_C_PostInitCheck");
static_assert(sizeof(BP_Character_AnimFunctionLibrary_C_PostInitCheck) == 0x000030, "Wrong size on BP_Character_AnimFunctionLibrary_C_PostInitCheck");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, Object) == 0x000000, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::Object' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, Character) == 0x000008, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::Character' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, GbxMoveComp) == 0x000010, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::GbxMoveComp' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, OakMoveComp) == 0x000018, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::OakMoveComp' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, __WorldContext) == 0x000020, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, CallFunc_IsValid_ReturnValue1) == 0x000029, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_PostInitCheck, CallFunc_IsValid_ReturnValue2) == 0x00002A, "Member 'BP_Character_AnimFunctionLibrary_C_PostInitCheck::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.SetLocalWeaponSequenceArray_Player
// 0x09C0 (0x09C0 - 0x0000)
struct BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player final
{
public:
	struct FAStruct_WeaponAnimContainer           AStruct_WeaponAnimContainer;                       // 0x0000(0x0780)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<class FName>                           LiveWeaponPoses;                                   // 0x0780(0x0010)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         WeaponManufacturer;                                // 0x0790(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponType;                                        // 0x0794(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GripType;                                          // 0x0798(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForeGripType;                                      // 0x079C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_Pose_Array_;                                 // 0x07A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x07A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugSequences;                                    // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x3];                                      // 0x07B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ForeGrip_Type;                                     // 0x07B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Grip_Type;                                         // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BC[0x4];                                      // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LiveWeaponPoses_Local;                             // 0x07C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           GripSequences;                                     // 0x07D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           WeaponSequences;                                   // 0x07E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Current_Weapon_Type;                               // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Weapon_Manufacturer;                       // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0854(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0855(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_856[0x2];                                      // 0x0856(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0858(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Variable1;                                // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAStruct_WeaponAnims                   K2Node_Select_Default;                             // 0x0870(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_Select1_Default;                            // 0x0938(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           Temp_name_Variable1;                               // 0x0948(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Variable2;                                // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95C[0x4];                                      // 0x095C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select2_Default;                            // 0x0968(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0988(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x099C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D[0x3];                                      // 0x099D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item4;                          // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player) == 0x000008, "Wrong alignment on BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player");
static_assert(sizeof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player) == 0x0009C0, "Wrong size on BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, AStruct_WeaponAnimContainer) == 0x000000, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::AStruct_WeaponAnimContainer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, LiveWeaponPoses) == 0x000780, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::LiveWeaponPoses' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, WeaponManufacturer) == 0x000790, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::WeaponManufacturer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, WeaponType) == 0x000794, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, GripType) == 0x000798, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::GripType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, ForeGripType) == 0x00079C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::ForeGripType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Debug_Pose_Array_) == 0x0007A0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Debug_Pose_Array_' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, __WorldContext) == 0x0007A8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, DebugSequences) == 0x0007B0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::DebugSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, ForeGrip_Type) == 0x0007B4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::ForeGrip_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Grip_Type) == 0x0007B8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Grip_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, LiveWeaponPoses_Local) == 0x0007C0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::LiveWeaponPoses_Local' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, GripSequences) == 0x0007D0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::GripSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, WeaponSequences) == 0x0007E0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::WeaponSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Current_Weapon_Type) == 0x0007F0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Current_Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Current_Weapon_Manufacturer) == 0x0007F4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Current_Weapon_Manufacturer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Array_Index_Variable) == 0x0007F8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Conv_IntToString_ReturnValue) == 0x000800, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Concat_StrStr_ReturnValue) == 0x000810, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Loop_Counter_Variable) == 0x000820, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000824, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_bool_True_if_break_was_hit_Variable) == 0x000828, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Array_Index_Variable1) == 0x00082C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Not_PreBool_ReturnValue) == 0x000830, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Variable) == 0x000834, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_LastIndex_ReturnValue) == 0x000838, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Get_Item) == 0x000840, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Get_Item1) == 0x000848, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Length_ReturnValue) == 0x000850, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000854, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_BooleanAND_ReturnValue) == 0x000855, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_name_Variable) == 0x000858, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Variable1) == 0x000868, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Loop_Counter_Variable1) == 0x00086C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, K2Node_Select_Default) == 0x000870, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Add_IntInt_ReturnValue1) == 0x000930, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, K2Node_Select1_Default) == 0x000938, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_name_Variable1) == 0x000948, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, Temp_int_Variable2) == 0x000958, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Get_Item2) == 0x000960, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, K2Node_Select2_Default) == 0x000968, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Conv_NameToString_ReturnValue) == 0x000978, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Concat_StrStr_ReturnValue1) == 0x000988, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Length_ReturnValue1) == 0x000998, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Less_IntInt_ReturnValue1) == 0x00099C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Add_ReturnValue) == 0x0009A0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Add_ReturnValue1) == 0x0009A4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Get_Item3) == 0x0009A8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Get_Item4) == 0x0009B0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Add_ReturnValue2) == 0x0009B8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player, CallFunc_Array_Add_ReturnValue3) == 0x0009BC, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.SetLocalWeaponSequenceArray_Menu
// 0x09F8 (0x09F8 - 0x0000)
struct BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu final
{
public:
	struct FAStruct_WeaponAnimContainer_Menu      AStruct_WeaponAnimContainer_Menu;                  // 0x0000(0x0780)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<class FName>                           LiveWeaponPoses;                                   // 0x0780(0x0010)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         WeaponManufacturer;                                // 0x0790(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponType;                                        // 0x0794(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GripType;                                          // 0x0798(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForeGripType;                                      // 0x079C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_Pose_Array_;                                 // 0x07A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x07A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugSequences;                                    // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x3];                                      // 0x07B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ForeGrip_Type;                                     // 0x07B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Grip_Type;                                         // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BC[0x4];                                      // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LiveWeaponPoses_Local;                             // 0x07C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           GripSequences;                                     // 0x07D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           WeaponSequences;                                   // 0x07E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Current_Weapon_Type;                               // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Weapon_Manufacturer;                       // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x3];                                      // 0x0851(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_859[0x3];                                      // 0x0859(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x3];                                      // 0x0869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0870(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Variable1;                                // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884[0x4];                                      // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAStruct_WeaponAnims_Menu              K2Node_Select_Default;                             // 0x0888(0x00C0)(HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable1;                               // 0x0948(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           K2Node_Select1_Default;                            // 0x0958(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0970(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98C[0x4];                                      // 0x098C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0990(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1[0x7];                                      // 0x09A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x09A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select2_Default;                            // 0x09C0(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue2;          // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D9[0x3];                                      // 0x09D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue3;          // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item4;                          // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu) == 0x000008, "Wrong alignment on BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu");
static_assert(sizeof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu) == 0x0009F8, "Wrong size on BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, AStruct_WeaponAnimContainer_Menu) == 0x000000, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::AStruct_WeaponAnimContainer_Menu' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, LiveWeaponPoses) == 0x000780, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::LiveWeaponPoses' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, WeaponManufacturer) == 0x000790, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::WeaponManufacturer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, WeaponType) == 0x000794, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, GripType) == 0x000798, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::GripType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, ForeGripType) == 0x00079C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::ForeGripType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Debug_Pose_Array_) == 0x0007A0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Debug_Pose_Array_' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, __WorldContext) == 0x0007A8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, DebugSequences) == 0x0007B0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::DebugSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, ForeGrip_Type) == 0x0007B4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::ForeGrip_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Grip_Type) == 0x0007B8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Grip_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, LiveWeaponPoses_Local) == 0x0007C0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::LiveWeaponPoses_Local' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, GripSequences) == 0x0007D0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::GripSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, WeaponSequences) == 0x0007E0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::WeaponSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Current_Weapon_Type) == 0x0007F0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Current_Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Current_Weapon_Manufacturer) == 0x0007F4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Current_Weapon_Manufacturer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Array_Index_Variable) == 0x0007F8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Conv_IntToString_ReturnValue) == 0x000800, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Concat_StrStr_ReturnValue) == 0x000810, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Loop_Counter_Variable) == 0x000820, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Add_IntInt_ReturnValue) == 0x000824, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Conv_StringToName_ReturnValue) == 0x000828, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Array_Index_Variable1) == 0x000830, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Add_ReturnValue) == 0x000834, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_LastIndex_ReturnValue) == 0x000838, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Get_Item) == 0x000840, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Get_Item1) == 0x000848, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000850, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Add_ReturnValue1) == 0x000854, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000858, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Length_ReturnValue) == 0x00085C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Variable) == 0x000860, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Loop_Counter_Variable1) == 0x000864, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Less_IntInt_ReturnValue) == 0x000868, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Add_IntInt_ReturnValue1) == 0x00086C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_name_Variable) == 0x000870, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Variable1) == 0x000880, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, K2Node_Select_Default) == 0x000888, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_name_Variable1) == 0x000948, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, K2Node_Select1_Default) == 0x000958, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Get_Item2) == 0x000968, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Conv_NameToText_ReturnValue) == 0x000970, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Length_ReturnValue1) == 0x000988, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Conv_TextToString_ReturnValue) == 0x000990, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Less_IntInt_ReturnValue1) == 0x0009A0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Concat_StrStr_ReturnValue1) == 0x0009A8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, Temp_int_Variable2) == 0x0009B8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Add_ReturnValue2) == 0x0009BC, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, K2Node_Select2_Default) == 0x0009C0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Get_Item3) == 0x0009D0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_IsValidIndex_ReturnValue2) == 0x0009D8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_IsValidIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Add_ReturnValue3) == 0x0009DC, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_IsValidIndex_ReturnValue3) == 0x0009E0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_IsValidIndex_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Get_Item4) == 0x0009E8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu, CallFunc_Array_Add_ReturnValue4) == 0x0009F0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.SetLocalWeaponSequenceArray_Generic
// 0x0D10 (0x0D10 - 0x0000)
struct BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic final
{
public:
	struct FAStruct_Generic_WeaponAnimContainer   AStruct_WeaponAnimContainer_Menu;                  // 0x0000(0x0A20)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<class FName>                           LiveWeaponPoses;                                   // 0x0A20(0x0010)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         WeaponManufacturer;                                // 0x0A30(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponType;                                        // 0x0A34(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GripType;                                          // 0x0A38(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForeGripType;                                      // 0x0A3C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_Pose_Array_;                                 // 0x0A40(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A41[0x7];                                      // 0x0A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0A48(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ForeGripSequences;                                 // 0x0A50(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          DebugSequences;                                    // 0x0A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A61[0x3];                                      // 0x0A61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ForeGrip_Type;                                     // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Grip_Type;                                         // 0x0A68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6C[0x4];                                      // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LiveWeaponPoses_Local;                             // 0x0A70(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           GripSequences;                                     // 0x0A80(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           WeaponSequences;                                   // 0x0A90(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Current_Weapon_Type;                               // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Weapon_Manufacturer;                       // 0x0AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAC[0x4];                                      // 0x0AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0AB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0AC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0AF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF5[0x3];                                      // 0x0AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AFC[0x4];                                      // 0x0AFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0B00(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable1;                               // 0x0B18(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2D[0x3];                                      // 0x0B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3C[0x4];                                      // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable2;                               // 0x0B40(0x0010)(ZeroConstructor, ReferenceParm)
	struct FAStruct_Generic_WeaponAnims           K2Node_Select_Default;                             // 0x0B50(0x0120)(HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0C78(0x0018)()
	TArray<class FName>                           K2Node_Select1_Default;                            // 0x0C90(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0CA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0CB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC4[0x4];                                      // 0x0CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_Select2_Default;                            // 0x0CC8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD9[0x3];                                      // 0x0CD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable3;                                // 0x0CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select3_Default;                            // 0x0CE0(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0CFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFD[0x3];                                      // 0x0CFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue2;          // 0x0D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D09[0x3];                                      // 0x0D09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic) == 0x000008, "Wrong alignment on BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic");
static_assert(sizeof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic) == 0x000D10, "Wrong size on BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, AStruct_WeaponAnimContainer_Menu) == 0x000000, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::AStruct_WeaponAnimContainer_Menu' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, LiveWeaponPoses) == 0x000A20, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::LiveWeaponPoses' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, WeaponManufacturer) == 0x000A30, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::WeaponManufacturer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, WeaponType) == 0x000A34, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, GripType) == 0x000A38, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::GripType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, ForeGripType) == 0x000A3C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::ForeGripType' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Debug_Pose_Array_) == 0x000A40, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Debug_Pose_Array_' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, __WorldContext) == 0x000A48, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, ForeGripSequences) == 0x000A50, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::ForeGripSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, DebugSequences) == 0x000A60, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::DebugSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, ForeGrip_Type) == 0x000A64, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::ForeGrip_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Grip_Type) == 0x000A68, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Grip_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, LiveWeaponPoses_Local) == 0x000A70, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::LiveWeaponPoses_Local' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, GripSequences) == 0x000A80, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::GripSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, WeaponSequences) == 0x000A90, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::WeaponSequences' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Current_Weapon_Type) == 0x000AA0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Current_Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Current_Weapon_Manufacturer) == 0x000AA4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Current_Weapon_Manufacturer' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Array_Index_Variable) == 0x000AA8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Conv_IntToString_ReturnValue) == 0x000AB0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Concat_StrStr_ReturnValue) == 0x000AC0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Loop_Counter_Variable) == 0x000AD0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Add_IntInt_ReturnValue) == 0x000AD4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Array_Index_Variable1) == 0x000AD8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Conv_StringToName_ReturnValue) == 0x000AE0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Get_Item) == 0x000AE8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Add_ReturnValue) == 0x000AF0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000AF4, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Length_ReturnValue) == 0x000AF8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_name_Variable) == 0x000B00, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Add_ReturnValue1) == 0x000B10, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Variable) == 0x000B14, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_name_Variable1) == 0x000B18, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Loop_Counter_Variable1) == 0x000B28, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Less_IntInt_ReturnValue) == 0x000B2C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Add_IntInt_ReturnValue1) == 0x000B30, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Variable1) == 0x000B34, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Variable2) == 0x000B38, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_name_Variable2) == 0x000B40, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, K2Node_Select_Default) == 0x000B50, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Get_Item1) == 0x000C70, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Conv_NameToText_ReturnValue) == 0x000C78, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, K2Node_Select1_Default) == 0x000C90, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Conv_TextToString_ReturnValue) == 0x000CA0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Concat_StrStr_ReturnValue1) == 0x000CB0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Length_ReturnValue1) == 0x000CC0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, K2Node_Select2_Default) == 0x000CC8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Less_IntInt_ReturnValue1) == 0x000CD8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, Temp_int_Variable3) == 0x000CDC, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, K2Node_Select3_Default) == 0x000CE0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Get_Item2) == 0x000CF0, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Add_ReturnValue2) == 0x000CF8, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000CFC, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Get_Item3) == 0x000D00, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_IsValidIndex_ReturnValue2) == 0x000D08, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_IsValidIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic, CallFunc_Array_Add_ReturnValue3) == 0x000D0C, "Member 'BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");

}

