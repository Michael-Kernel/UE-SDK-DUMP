#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_JAK_SR_BirdofPrey

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_JAK_SR_BirdofPrey.LightProjectile_JAK_SR_BirdofPrey_C.OnDamage
// 0x0328 (0x0328 - 0x0000)
struct LightProjectile_JAK_SR_BirdofPrey_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x00A8(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x00B4(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightProjectile*                       MyProjectile;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0150(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x017C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetHitActor_ReturnValue;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01E8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_JAK_SR_BirdofPrey_C_OnDamage");
static_assert(sizeof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage) == 0x000328, "Wrong size on LightProjectile_JAK_SR_BirdofPrey_C_OnDamage");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, Target) == 0x0000A0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::Target' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, EndLocation) == 0x0000A8, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::EndLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, StartLocation) == 0x0000B4, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, MyProjectile) == 0x0000C0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::MyProjectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x0000C8, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x0000CC, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000CD, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000CE, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000D0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000D4, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000D8, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E4, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000F0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000FC, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x00012C, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000130, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x00013C, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_IsAlive_ReturnValue) == 0x000148, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000150, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetDataTableValue_OutValue1) == 0x000160, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue1) == 0x000164, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_RandomInteger_ReturnValue) == 0x000168, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x00016C, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakTransform_Location) == 0x000170, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakTransform_Rotation) == 0x00017C, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BreakTransform_Scale) == 0x000188, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_BooleanAND_ReturnValue) == 0x000194, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetForwardVector_ReturnValue) == 0x000198, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A4, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetHitActor_ReturnValue) == 0x0001C0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetHitActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x0001C8, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetModifierType_ReturnValue) == 0x0001D0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_GetSource_ReturnValue) == 0x0001D8, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001E0, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_JAK_SR_BirdofPrey_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001E8, "Member 'LightProjectile_JAK_SR_BirdofPrey_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

