#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Gunner_ExplosivePuncutation

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Passive_Gunner_ExplosivePuncutation.Passive_Gunner_ExplosivePuncutation_C.ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation
// 0x00D0 (0x00D0 - 0x0000)
struct Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0030(0x0060)(ContainsInstancedReference)
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x00A8(0x0028)(NoDestructor)
};
static_assert(alignof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation) == 0x000008, "Wrong alignment on Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation");
static_assert(sizeof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation) == 0x0000D0, "Wrong size on Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, EntryPoint) == 0x000000, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CustomEvent_DamageInstigator) == 0x000008, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CustomEvent_Damage) == 0x000010, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CustomEvent_DamageType) == 0x000018, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CustomEvent_DamageSource) == 0x000020, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CustomEvent_DamagedActor) == 0x000028, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CustomEvent_Details) == 0x000030, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A0, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0000A8, "Member 'Passive_Gunner_ExplosivePuncutation_C_ExecuteUbergraph_Passive_Gunner_ExplosivePuncutation::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");

// Function Passive_Gunner_ExplosivePuncutation.Passive_Gunner_ExplosivePuncutation_C.CausedDamage_ExplosivePunctuation
// 0x0088 (0x0088 - 0x0000)
struct Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation) == 0x000008, "Wrong alignment on Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation");
static_assert(sizeof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation) == 0x000088, "Wrong size on Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation, DamageInstigator) == 0x000000, "Member 'Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation, Damage) == 0x000008, "Member 'Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation::Damage' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation, DamageType) == 0x000010, "Member 'Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation::DamageType' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation, DamageSource) == 0x000018, "Member 'Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation::DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation, DamagedActor) == 0x000020, "Member 'Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation::DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation, Details) == 0x000028, "Member 'Passive_Gunner_ExplosivePuncutation_C_CausedDamage_ExplosivePunctuation::Details' has a wrong offset!");

}

