#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RailingsAndWalls

#include "Basic.hpp"

#include "BP_RailingsAndWalls_classes.hpp"
#include "BP_RailingsAndWalls_parameters.hpp"


namespace SDK
{

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SpawnMainMeshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::SpawnMainMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "SpawnMainMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SpawnPostsAlongRail
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::SpawnPostsAlongRail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "SpawnPostsAlongRail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.InitializeMainMeshWidth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::InitializeMainMeshWidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "InitializeMainMeshWidth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpPostInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::SetUpPostInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "SetUpPostInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpMainInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::SetUpMainInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "SetUpMainInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.LockYandZLocations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::LockYandZLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "LockYandZLocations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.FindNewTransfromFromType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_BP_RailingEndType                  Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnd                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         NewRotation                                            (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_RailingsAndWalls_C::FindNewTransfromFromType(Enum_BP_RailingEndType Type, bool IsEnd, struct FRotator* NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "FindNewTransfromFromType");

	Params::BP_RailingsAndWalls_C_FindNewTransfromFromType Parms{};

	Parms.Type = Type;
	Parms.IsEnd = IsEnd;

	UObject::ProcessEvent(Func, &Parms);

	if (NewRotation != nullptr)
		*NewRotation = std::move(Parms.NewRotation);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpEndInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::SetUpEndInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "SetUpEndInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpStartInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::SetUpStartInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "SetUpStartInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.FlipDirectionOfEndMesh
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::FlipDirectionOfEndMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "FlipDirectionOfEndMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.FlipDirectionOfStartMesh
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::FlipDirectionOfStartMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "FlipDirectionOfStartMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RailingsAndWalls_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailingsAndWalls_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

