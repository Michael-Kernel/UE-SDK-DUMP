#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelTravelStationObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_LevelTravelStationObject_structs.hpp"


namespace SDK::Params
{

// Function LevelTravelStationObject.LevelTravelStationObject_C.IsInAnOverlappingVehicle
// 0x0068 (0x0068 - 0x0000)
struct LevelTravelStationObject_C_IsInAnOverlappingVehicle final
{
public:
	class AOakCharacter_Player*                   PlayerChar;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerIsInOverlappingVehicle;                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakVehicle*                            K2Node_DynamicCast_AsOak_Vehicle;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_GetAllOccupants_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LevelTravelStationObject_C_IsInAnOverlappingVehicle) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_IsInAnOverlappingVehicle");
static_assert(sizeof(LevelTravelStationObject_C_IsInAnOverlappingVehicle) == 0x000068, "Wrong size on LevelTravelStationObject_C_IsInAnOverlappingVehicle");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, PlayerChar) == 0x000000, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::PlayerChar' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, PlayerIsInOverlappingVehicle) == 0x000008, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::PlayerIsInOverlappingVehicle' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_Array_Get_Item) == 0x000030, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, K2Node_DynamicCast_AsOak_Vehicle) == 0x000040, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::K2Node_DynamicCast_AsOak_Vehicle' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_GetAllOccupants_ReturnValue) == 0x000050, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_GetAllOccupants_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_IsInAnOverlappingVehicle, CallFunc_Array_Contains_ReturnValue) == 0x000060, "Member 'LevelTravelStationObject_C_IsInAnOverlappingVehicle::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.SetLevelNameTextRender
// 0x0048 (0x0048 - 0x0000)
struct LevelTravelStationObject_C_SetLevelNameTextRender final
{
public:
	class UTravelStationData*                     TravelData;                                        // 0x0000(0x0008)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0010(0x0018)()
	class FText                                   CallFunc_GetFormattedText_ReturnValue;             // 0x0028(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LevelTravelStationObject_C_SetLevelNameTextRender) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_SetLevelNameTextRender");
static_assert(sizeof(LevelTravelStationObject_C_SetLevelNameTextRender) == 0x000048, "Wrong size on LevelTravelStationObject_C_SetLevelNameTextRender");
static_assert(offsetof(LevelTravelStationObject_C_SetLevelNameTextRender, TravelData) == 0x000000, "Member 'LevelTravelStationObject_C_SetLevelNameTextRender::TravelData' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_SetLevelNameTextRender, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'LevelTravelStationObject_C_SetLevelNameTextRender::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_SetLevelNameTextRender, CallFunc_TextToUpper_ReturnValue) == 0x000010, "Member 'LevelTravelStationObject_C_SetLevelNameTextRender::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_SetLevelNameTextRender, CallFunc_GetFormattedText_ReturnValue) == 0x000028, "Member 'LevelTravelStationObject_C_SetLevelNameTextRender::CallFunc_GetFormattedText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_SetLevelNameTextRender, CallFunc_IsValid_ReturnValue1) == 0x000040, "Member 'LevelTravelStationObject_C_SetLevelNameTextRender::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject
// 0x0010 (0x0010 - 0x0000)
struct LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject");
static_assert(sizeof(LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject) == 0x000010, "Wrong size on LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject, UserController) == 0x000000, "Member 'LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject::UserController' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject, UsedComponent) == 0x000008, "Member 'LevelTravelStationObject_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_LevelTravelStationObject::UsedComponent' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject
// 0x00B0 (0x00B0 - 0x0000)
struct LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject");
static_assert(sizeof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject) == 0x0000B0, "Wrong size on LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject, OverlappedComponent) == 0x000000, "Member 'LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject, OtherActor) == 0x000008, "Member 'LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject::OtherActor' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject, OtherComp) == 0x000010, "Member 'LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject::OtherComp' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject, OtherBodyIndex) == 0x000018, "Member 'LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject, bFromSweep) == 0x00001C, "Member 'LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject::bFromSweep' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject, SweepResult) == 0x000020, "Member 'LevelTravelStationObject_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature_LevelTravelStationObject::SweepResult' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject
// 0x0020 (0x0020 - 0x0000)
struct LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject");
static_assert(sizeof(LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject) == 0x000020, "Wrong size on LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject, OverlappedComponent) == 0x000000, "Member 'LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject, OtherActor) == 0x000008, "Member 'LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject::OtherActor' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject, OtherComp) == 0x000010, "Member 'LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject::OtherComp' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject, OtherBodyIndex) == 0x000018, "Member 'LevelTravelStationObject_C_BndEvt__InteractPromptFX_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature_LevelTravelStationObject::OtherBodyIndex' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject
// 0x0008 (0x0008 - 0x0000)
struct LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject final
{
public:
	class ULevelTravelStationData*                Destination;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject");
static_assert(sizeof(LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject) == 0x000008, "Wrong size on LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject");
static_assert(offsetof(LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject, Destination) == 0x000000, "Member 'LevelTravelStationObject_C_BndEvt__LevelTravelStation_K2Node_ComponentBoundEvent_0_LevelTravelOnDestinationForTextRenderChanged__DelegateSignature_LevelTravelStationObject::Destination' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.__UserState_LevelTravel_0
// 0x0001 (0x0001 - 0x0000)
struct LevelTravelStationObject_C___UserState_LevelTravel_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LevelTravelStationObject_C___UserState_LevelTravel_0) == 0x000001, "Wrong alignment on LevelTravelStationObject_C___UserState_LevelTravel_0");
static_assert(sizeof(LevelTravelStationObject_C___UserState_LevelTravel_0) == 0x000001, "Wrong size on LevelTravelStationObject_C___UserState_LevelTravel_0");
static_assert(offsetof(LevelTravelStationObject_C___UserState_LevelTravel_0, bFromLoad) == 0x000000, "Member 'LevelTravelStationObject_C___UserState_LevelTravel_0::bFromLoad' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.__UserState_LevelTravel_1
// 0x0001 (0x0001 - 0x0000)
struct LevelTravelStationObject_C___UserState_LevelTravel_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LevelTravelStationObject_C___UserState_LevelTravel_1) == 0x000001, "Wrong alignment on LevelTravelStationObject_C___UserState_LevelTravel_1");
static_assert(sizeof(LevelTravelStationObject_C___UserState_LevelTravel_1) == 0x000001, "Wrong size on LevelTravelStationObject_C___UserState_LevelTravel_1");
static_assert(offsetof(LevelTravelStationObject_C___UserState_LevelTravel_1, bFromLoad) == 0x000000, "Member 'LevelTravelStationObject_C___UserState_LevelTravel_1::bFromLoad' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.SetLevelTravelVisibilityState
// 0x0001 (0x0001 - 0x0000)
struct LevelTravelStationObject_C_SetLevelTravelVisibilityState final
{
public:
	Enum_LevelTravelStationObject                 VisiblilityState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevelTravelStationObject_C_SetLevelTravelVisibilityState) == 0x000001, "Wrong alignment on LevelTravelStationObject_C_SetLevelTravelVisibilityState");
static_assert(sizeof(LevelTravelStationObject_C_SetLevelTravelVisibilityState) == 0x000001, "Wrong size on LevelTravelStationObject_C_SetLevelTravelVisibilityState");
static_assert(offsetof(LevelTravelStationObject_C_SetLevelTravelVisibilityState, VisiblilityState) == 0x000000, "Member 'LevelTravelStationObject_C_SetLevelTravelVisibilityState::VisiblilityState' has a wrong offset!");

// Function LevelTravelStationObject.LevelTravelStationObject_C.ExecuteUbergraph_LevelTravelStationObject
// 0x0158 (0x0158 - 0x0000)
struct LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player1;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInAnOverlappingVehicle_PlayerIsInOverlappingVehicle; // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelTravelStationData*                K2Node_ComponentBoundEvent_Destination;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelTravelStationData*                CallFunc_GetLevelTravelStationData_ReturnValue;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelTravelStationData*                CallFunc_GetLevelTravelStationData_ReturnValue1;   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue; // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_LevelTravelStationObject                 K2Node_CustomEvent_VisiblilityState;               // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDestinationInstalled_ReturnValue;       // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDestinationInstalled_ReturnValue1;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateLevelTravel_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDestinationInstalled_ReturnValue2;      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject) == 0x000008, "Wrong alignment on LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject");
static_assert(sizeof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject) == 0x000158, "Wrong size on LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, EntryPoint) == 0x000000, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000008, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OtherActor1) == 0x000010, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OtherComp1) == 0x000018, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000020, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B8, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C0, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C8, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000D0, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x0000D8, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_GetAssociatedCharacter_ReturnValue1) == 0x0000E0, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_GetAssociatedCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_DynamicCast_AsOak_Character_Player) == 0x0000E8, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_DynamicCast_AsOak_Character_Player1) == 0x0000F8, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_DynamicCast_AsOak_Character_Player1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_DynamicCast_bSuccess1) == 0x000100, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_IsInAnOverlappingVehicle_PlayerIsInOverlappingVehicle) == 0x000101, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_IsInAnOverlappingVehicle_PlayerIsInOverlappingVehicle' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_Array_AddUnique_ReturnValue) == 0x000104, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_Array_RemoveItem_ReturnValue) == 0x000108, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_Destination) == 0x000110, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_Destination' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_GetLevelTravelStationData_ReturnValue) == 0x000120, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_GetLevelTravelStationData_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_GetLevelTravelStationData_ReturnValue1) == 0x000128, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_GetLevelTravelStationData_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_HasAuthority_ReturnValue) == 0x000130, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_IsValid_ReturnValue) == 0x000131, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue) == 0x000132, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_HasEnableConditionsSetForSpecificUserState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_Not_PreBool_ReturnValue) == 0x000133, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_UserStateEvent_bFromLoad1) == 0x000134, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_UserStateEvent_bFromLoad) == 0x000135, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_CustomEvent_VisiblilityState) == 0x000136, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_CustomEvent_VisiblilityState' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_IsDestinationInstalled_ReturnValue) == 0x000137, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_IsDestinationInstalled_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_IsDestinationInstalled_ReturnValue1) == 0x000138, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_IsDestinationInstalled_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_UserController) == 0x000140, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, K2Node_ComponentBoundEvent_UsedComponent) == 0x000148, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_ActivateLevelTravel_ReturnValue) == 0x000150, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_ActivateLevelTravel_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject, CallFunc_IsDestinationInstalled_ReturnValue2) == 0x000151, "Member 'LevelTravelStationObject_C_ExecuteUbergraph_LevelTravelStationObject::CallFunc_IsDestinationInstalled_ReturnValue2' has a wrong offset!");

}

