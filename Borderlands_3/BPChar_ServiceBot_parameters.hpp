#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_ServiceBot

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Enum_ServiceBot_Type_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ExecuteUbergraph_BPChar_ServiceBot
// 0x0AB0 (0x0AB0 - 0x0000)
struct BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EGbxActionEndState                            K2Node_CustomEvent_EndState;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGbxActionEndState EndState, class AActor* Actor)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Actor, int32 InstanceIndex)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_HasHead1;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HasRightArm1;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HasLeftArm1;                          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpawnRight;                           // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_LeftWeapon;                           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HideWeapon;                           // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ExtinguishOn;                         // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageReactionEventSummary            K2Node_CustomEvent_DamageEventSummary2;            // 0x0090(0x0060)(NoDestructor, ContainsInstancedReference)
	struct FDamageReactionEventSummary            K2Node_CustomEvent_DamageEventSummary1;            // 0x00F0(0x0060)(NoDestructor, ContainsInstancedReference)
	struct FDamageReactionEventSummary            K2Node_CustomEvent_DamageEventSummary;             // 0x0150(0x0060)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable1;                             // 0x01B8(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_ComponentBoundEvent_HealReceiver;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Healing;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_HealInstigator;         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_QueryAttachedPieces_HasHead;              // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueryAttachedPieces_HasRightArm;          // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueryAttachedPieces_HasLeftArm;           // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26F[0x1];                                      // 0x026F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor, int32 InstanceIndex)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0278(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x0290(0x0230)(ContainsInstancedReference)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x04C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAudioPlaying_ReturnValue;               // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E6[0x2];                                      // 0x04E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x04E8(0x0018)()
	TDelegate<void(class AActor* Actor, int32 InstanceIndex)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0500(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0510(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAudioPlaying_ReturnValue1;              // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue1;           // 0x0520(0x0018)()
	class AActor*                                 K2Node_ComponentBoundEvent_DamageReceiver;         // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_Controller;             // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_ActionTag;              // 0x0550(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ServiceBot_C>     K2Node_DynamicCast_AsBPI_Service_Bot;              // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ServiceBot_C>     K2Node_DynamicCast_AsBPI_Service_Bot1;             // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ServiceBot_Type                          CallFunc_GetBotType_BotType;                       // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0598(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ServiceBot_Type                          CallFunc_GetBotType_BotType1;                      // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_GetActionUsers_OutUsers;                  // 0x05A8(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue1;               // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor1;                         // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InstanceIndex;                  // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue1;             // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor2;                         // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InstanceIndex1;                 // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor, int32 InstanceIndex)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0600(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest1;      // 0x0610(0x0230)(ContainsInstancedReference)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue1;             // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue2;             // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ServiceBot_Type                          CallFunc_GetBotType_BotType2;                      // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAnim_ServiceBot_C*                   K2Node_DynamicCast_AsBPAnim_Service_Bot;           // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTarget_Target;                  // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FThrowProjectileAsyncRequest           K2Node_MakeStruct_ThrowProjectileAsyncRequest;     // 0x0880(0x0188)(ContainsInstancedReference)
	int32                                         CallFunc_ThrowProjectileAsync_ReturnValue;         // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A0D[0x3];                                      // 0x0A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item1;                          // 0x0A18(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_DynamicCast_AsParticle_System_Component;    // 0x0A20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2A[0x6];                                      // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor3;                         // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InstanceIndex2;                 // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasHead;                              // 0x0A3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HasRightArm;                          // 0x0A3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HasLeftArm;                           // 0x0A3E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F[0x1];                                      // 0x0A3F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor4;                         // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InstanceIndex3;                 // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4D[0x3];                                      // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_GetActionUsers_OutUsers1;                 // 0x0A50(0x0010)(ZeroConstructor, ReferenceParm)
	class APawn*                                  CallFunc_Array_Get_Item2;                          // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A69[0x3];                                      // 0x0A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0A71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A72[0x6];                                      // 0x0A72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxUIName*                             K2Node_Event_UIName;                               // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RightArmDominant;                     // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_LeftArmDominant;                      // 0x0A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HeadDominant;                         // 0x0A82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x0A83(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0A88(0x0008)(NoDestructor)
	class UGameplayTask_PlayGbxAction*            CallFunc_PlayGbxAction_ReturnValue;                // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Start;                                // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9A[0x2];                                      // 0x0A9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot) == 0x000010, "Wrong alignment on BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot");
static_assert(sizeof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot) == 0x000AB0, "Wrong size on BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, EntryPoint) == 0x000000, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_EndState) == 0x000018, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_EndState' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_Actor) == 0x000020, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_object_Variable) == 0x000038, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_byte_Variable) == 0x000040, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_struct_Variable) == 0x000048, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_HasAuthority_ReturnValue) == 0x000058, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate3) == 0x000078, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HasHead1) == 0x000088, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HasHead1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HasRightArm1) == 0x000089, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HasRightArm1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HasLeftArm1) == 0x00008A, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HasLeftArm1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_SpawnRight) == 0x00008B, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_SpawnRight' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_LeftWeapon) == 0x00008C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_LeftWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HideWeapon) == 0x00008D, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HideWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_ExtinguishOn) == 0x00008E, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_ExtinguishOn' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_DamageEventSummary2) == 0x000090, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_DamageEventSummary2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_DamageEventSummary1) == 0x0000F0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_DamageEventSummary1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_DamageEventSummary) == 0x000150, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_DamageEventSummary' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_BooleanAND_ReturnValue) == 0x0001B0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001B1, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x0001B2, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x0001B3, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_struct_Variable1) == 0x0001B8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_HealReceiver) == 0x000248, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_HealReceiver' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_Healing) == 0x000250, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_Healing' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_HealInstigator) == 0x000258, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_HealInstigator' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000260, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000264, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000268, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_QueryAttachedPieces_HasHead) == 0x00026C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_QueryAttachedPieces_HasHead' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_QueryAttachedPieces_HasRightArm) == 0x00026D, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_QueryAttachedPieces_HasRightArm' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_QueryAttachedPieces_HasLeftArm) == 0x00026E, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_QueryAttachedPieces_HasLeftArm' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_int_Array_Index_Variable1) == 0x000270, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate4) == 0x000278, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x000290, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_SpawnActorAsync_ReturnValue) == 0x0004C0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_IsAlive_ReturnValue) == 0x0004C4, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetChildrenComponents_Children) == 0x0004C8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_int_Loop_Counter_Variable1) == 0x0004D8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Array_Length_ReturnValue) == 0x0004DC, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Add_IntInt_ReturnValue1) == 0x0004E0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Less_IntInt_ReturnValue) == 0x0004E4, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_IsAudioPlaying_ReturnValue) == 0x0004E5, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_IsAudioPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_PostAttachedEvent_ReturnValue) == 0x0004E8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate5) == 0x000500, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_MakeVector_ReturnValue) == 0x000510, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_IsAudioPlaying_ReturnValue1) == 0x00051C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_IsAudioPlaying_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_PostAttachedEvent_ReturnValue1) == 0x000520, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_PostAttachedEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_DamageReceiver) == 0x000538, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_DamageCauser) == 0x000540, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_Controller) == 0x000548, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_Controller' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_ComponentBoundEvent_ActionTag) == 0x000550, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_ComponentBoundEvent_ActionTag' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000558, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x000560, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_AsBPI_Service_Bot) == 0x000568, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_AsBPI_Service_Bot' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_bSuccess) == 0x000578, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_AsBPI_Service_Bot1) == 0x000580, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_AsBPI_Service_Bot1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_bSuccess1) == 0x000590, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetBotType_BotType) == 0x000591, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetBotType_BotType' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetBlackboard_ReturnValue) == 0x000598, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_SwitchEnum_CmpSuccess) == 0x0005A0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetBotType_BotType1) == 0x0005A1, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetBotType_BotType1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetActionUsers_OutUsers) == 0x0005A8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetActionUsers_OutUsers' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_MakeLiteralName_ReturnValue) == 0x0005B8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Array_Get_Item) == 0x0005C0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Array_Length_ReturnValue1) == 0x0005C8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetBlackboard_ReturnValue1) == 0x0005D0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetBlackboard_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_Actor1) == 0x0005D8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_Actor1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_InstanceIndex) == 0x0005E0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_InstanceIndex' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_MakeLiteralName_ReturnValue1) == 0x0005E8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_MakeLiteralName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_Actor2) == 0x0005F0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_Actor2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_InstanceIndex1) == 0x0005F8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_InstanceIndex1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CreateDelegate_OutputDelegate6) == 0x000600, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_MakeStruct_GbxSpawnActorAsyncRequest1) == 0x000610, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_MakeStruct_GbxSpawnActorAsyncRequest1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_SpawnActorAsync_ReturnValue1) == 0x000840, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_SpawnActorAsync_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_MakeLiteralName_ReturnValue2) == 0x000848, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_MakeLiteralName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetBotType_BotType2) == 0x000850, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetBotType_BotType2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetAnimInstance_ReturnValue) == 0x000858, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_AsBPAnim_Service_Bot) == 0x000860, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_AsBPAnim_Service_Bot' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_bSuccess2) == 0x000868, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetCurrentTarget_Target) == 0x000870, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetCurrentTarget_Target' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_int_Loop_Counter_Variable2) == 0x000878, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_MakeStruct_ThrowProjectileAsyncRequest) == 0x000880, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_MakeStruct_ThrowProjectileAsyncRequest' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_ThrowProjectileAsync_ReturnValue) == 0x000A08, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_ThrowProjectileAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Less_IntInt_ReturnValue1) == 0x000A0C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Add_IntInt_ReturnValue2) == 0x000A10, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, Temp_int_Array_Index_Variable2) == 0x000A14, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Array_Get_Item1) == 0x000A18, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_AsParticle_System_Component) == 0x000A20, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_AsParticle_System_Component' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_DynamicCast_bSuccess3) == 0x000A28, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000A29, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_Actor3) == 0x000A30, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_Actor3' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_InstanceIndex2) == 0x000A38, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_InstanceIndex2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HasHead) == 0x000A3C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HasHead' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HasRightArm) == 0x000A3D, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HasRightArm' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HasLeftArm) == 0x000A3E, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HasLeftArm' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_Actor4) == 0x000A40, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_Actor4' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_CustomEvent_InstanceIndex3) == 0x000A48, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_CustomEvent_InstanceIndex3' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000A4C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetActionUsers_OutUsers1) == 0x000A50, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetActionUsers_OutUsers1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Array_Get_Item2) == 0x000A60, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000A68, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Array_Length_ReturnValue2) == 0x000A6C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_EndPlayReason) == 0x000A70, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Less_IntInt_ReturnValue2) == 0x000A71, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_UIName) == 0x000A78, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_UIName' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_RightArmDominant) == 0x000A80, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_RightArmDominant' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_LeftArmDominant) == 0x000A81, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_LeftArmDominant' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_HeadDominant) == 0x000A82, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_HeadDominant' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x000A83, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000A88, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_PlayGbxAction_ReturnValue) == 0x000A90, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_PlayGbxAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_Start) == 0x000A98, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_Start' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_IsValid_ReturnValue) == 0x000A99, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_GetMaxHealth_ReturnValue) == 0x000A9C, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, K2Node_Event_TargetActor) == 0x000AA0, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000AA8, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot, CallFunc_IsValid_ReturnValue1) == 0x000AAC, "Member 'BPChar_ServiceBot_C_ExecuteUbergraph_BPChar_ServiceBot::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ServiceBot_TargetChanged
// 0x0008 (0x0008 - 0x0000)
struct BPChar_ServiceBot_C_ServiceBot_TargetChanged final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_ServiceBot_TargetChanged) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_ServiceBot_TargetChanged");
static_assert(sizeof(BPChar_ServiceBot_C_ServiceBot_TargetChanged) == 0x000008, "Wrong size on BPChar_ServiceBot_C_ServiceBot_TargetChanged");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_TargetChanged, TargetActor) == 0x000000, "Member 'BPChar_ServiceBot_C_ServiceBot_TargetChanged::TargetActor' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ServiceBot_SuicideTimer
// 0x0001 (0x0001 - 0x0000)
struct BPChar_ServiceBot_C_ServiceBot_SuicideTimer final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_ServiceBot_SuicideTimer) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_ServiceBot_SuicideTimer");
static_assert(sizeof(BPChar_ServiceBot_C_ServiceBot_SuicideTimer) == 0x000001, "Wrong size on BPChar_ServiceBot_C_ServiceBot_SuicideTimer");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_SuicideTimer, Start) == 0x000000, "Member 'BPChar_ServiceBot_C_ServiceBot_SuicideTimer::Start' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.AssignDominantPieces
// 0x0003 (0x0003 - 0x0000)
struct BPChar_ServiceBot_C_AssignDominantPieces final
{
public:
	bool                                          RightArmDominant_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftArmDominant_0;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HeadDominant_0;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_AssignDominantPieces) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_AssignDominantPieces");
static_assert(sizeof(BPChar_ServiceBot_C_AssignDominantPieces) == 0x000003, "Wrong size on BPChar_ServiceBot_C_AssignDominantPieces");
static_assert(offsetof(BPChar_ServiceBot_C_AssignDominantPieces, RightArmDominant_0) == 0x000000, "Member 'BPChar_ServiceBot_C_AssignDominantPieces::RightArmDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_AssignDominantPieces, LeftArmDominant_0) == 0x000001, "Member 'BPChar_ServiceBot_C_AssignDominantPieces::LeftArmDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_AssignDominantPieces, HeadDominant_0) == 0x000002, "Member 'BPChar_ServiceBot_C_AssignDominantPieces::HeadDominant_0' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ServiceBot_ManageUIName
// 0x0008 (0x0008 - 0x0000)
struct BPChar_ServiceBot_C_ServiceBot_ManageUIName final
{
public:
	class UGbxUIName*                             UIName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_ServiceBot_ManageUIName) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_ServiceBot_ManageUIName");
static_assert(sizeof(BPChar_ServiceBot_C_ServiceBot_ManageUIName) == 0x000008, "Wrong size on BPChar_ServiceBot_C_ServiceBot_ManageUIName");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_ManageUIName, UIName) == 0x000000, "Member 'BPChar_ServiceBot_C_ServiceBot_ManageUIName::UIName' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BPChar_ServiceBot_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_ReceiveEndPlay");
static_assert(sizeof(BPChar_ServiceBot_C_ReceiveEndPlay) == 0x000001, "Wrong size on BPChar_ServiceBot_C_ReceiveEndPlay");
static_assert(offsetof(BPChar_ServiceBot_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BPChar_ServiceBot_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.DesignateAttachedPieces
// 0x0003 (0x0003 - 0x0000)
struct BPChar_ServiceBot_C_DesignateAttachedPieces final
{
public:
	bool                                          HasHead_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasRightArm_0;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasLeftArm_0;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_DesignateAttachedPieces) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_DesignateAttachedPieces");
static_assert(sizeof(BPChar_ServiceBot_C_DesignateAttachedPieces) == 0x000003, "Wrong size on BPChar_ServiceBot_C_DesignateAttachedPieces");
static_assert(offsetof(BPChar_ServiceBot_C_DesignateAttachedPieces, HasHead_0) == 0x000000, "Member 'BPChar_ServiceBot_C_DesignateAttachedPieces::HasHead_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_DesignateAttachedPieces, HasRightArm_0) == 0x000001, "Member 'BPChar_ServiceBot_C_DesignateAttachedPieces::HasRightArm_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_DesignateAttachedPieces, HasLeftArm_0) == 0x000002, "Member 'BPChar_ServiceBot_C_DesignateAttachedPieces::HasLeftArm_0' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot final
{
public:
	class AController*                            Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActionTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot");
static_assert(sizeof(BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot) == 0x000010, "Wrong size on BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot, Controller_0) == 0x000000, "Member 'BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot::Controller_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot, ActionTag) == 0x000008, "Member 'BPChar_ServiceBot_C_BndEvt__SmartObject_K2Node_ComponentBoundEvent_1_SmartObjectUsageEvent__DelegateSignature_BPChar_ServiceBot::ActionTag' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot final
{
public:
	class AActor*                                 DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot");
static_assert(sizeof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot) == 0x000010, "Wrong size on BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot, DamageReceiver) == 0x000000, "Member 'BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot, DamageCauser) == 0x000008, "Member 'BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_ServiceBot::DamageCauser' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot
// 0x0018 (0x0018 - 0x0000)
struct BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot final
{
public:
	class AActor*                                 HealReceiver;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Healing;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HealInstigator;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot");
static_assert(sizeof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot) == 0x000018, "Wrong size on BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot, HealReceiver) == 0x000000, "Member 'BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot::HealReceiver' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot, Healing) == 0x000008, "Member 'BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot::Healing' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot, HealInstigator) == 0x000010, "Member 'BPChar_ServiceBot_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineHealingDelegate__DelegateSignature_BPChar_ServiceBot::HealInstigator' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.HeadDestroyed
// 0x0060 (0x0060 - 0x0000)
struct BPChar_ServiceBot_C_HeadDestroyed final
{
public:
	struct FDamageReactionEventSummary            DamageEventSummary;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_ServiceBot_C_HeadDestroyed) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_HeadDestroyed");
static_assert(sizeof(BPChar_ServiceBot_C_HeadDestroyed) == 0x000060, "Wrong size on BPChar_ServiceBot_C_HeadDestroyed");
static_assert(offsetof(BPChar_ServiceBot_C_HeadDestroyed, DamageEventSummary) == 0x000000, "Member 'BPChar_ServiceBot_C_HeadDestroyed::DamageEventSummary' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.RightArmDestroyed
// 0x0060 (0x0060 - 0x0000)
struct BPChar_ServiceBot_C_RightArmDestroyed final
{
public:
	struct FDamageReactionEventSummary            DamageEventSummary;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_ServiceBot_C_RightArmDestroyed) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_RightArmDestroyed");
static_assert(sizeof(BPChar_ServiceBot_C_RightArmDestroyed) == 0x000060, "Wrong size on BPChar_ServiceBot_C_RightArmDestroyed");
static_assert(offsetof(BPChar_ServiceBot_C_RightArmDestroyed, DamageEventSummary) == 0x000000, "Member 'BPChar_ServiceBot_C_RightArmDestroyed::DamageEventSummary' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.LeftArmDestroyed
// 0x0060 (0x0060 - 0x0000)
struct BPChar_ServiceBot_C_LeftArmDestroyed final
{
public:
	struct FDamageReactionEventSummary            DamageEventSummary;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_ServiceBot_C_LeftArmDestroyed) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_LeftArmDestroyed");
static_assert(sizeof(BPChar_ServiceBot_C_LeftArmDestroyed) == 0x000060, "Wrong size on BPChar_ServiceBot_C_LeftArmDestroyed");
static_assert(offsetof(BPChar_ServiceBot_C_LeftArmDestroyed, DamageEventSummary) == 0x000000, "Member 'BPChar_ServiceBot_C_LeftArmDestroyed::DamageEventSummary' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ServiceBot_FireExtinguisher
// 0x0001 (0x0001 - 0x0000)
struct BPChar_ServiceBot_C_ServiceBot_FireExtinguisher final
{
public:
	bool                                          ExtinguishOn;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_ServiceBot_FireExtinguisher) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_ServiceBot_FireExtinguisher");
static_assert(sizeof(BPChar_ServiceBot_C_ServiceBot_FireExtinguisher) == 0x000001, "Wrong size on BPChar_ServiceBot_C_ServiceBot_FireExtinguisher");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_FireExtinguisher, ExtinguishOn) == 0x000000, "Member 'BPChar_ServiceBot_C_ServiceBot_FireExtinguisher::ExtinguishOn' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ManageWeapon
// 0x0002 (0x0002 - 0x0000)
struct BPChar_ServiceBot_C_ManageWeapon final
{
public:
	bool                                          LeftWeapon;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideWeapon;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_ManageWeapon) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_ManageWeapon");
static_assert(sizeof(BPChar_ServiceBot_C_ManageWeapon) == 0x000002, "Wrong size on BPChar_ServiceBot_C_ManageWeapon");
static_assert(offsetof(BPChar_ServiceBot_C_ManageWeapon, LeftWeapon) == 0x000000, "Member 'BPChar_ServiceBot_C_ManageWeapon::LeftWeapon' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ManageWeapon, HideWeapon) == 0x000001, "Member 'BPChar_ServiceBot_C_ManageWeapon::HideWeapon' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.MELEE_SpawnMelee
// 0x0001 (0x0001 - 0x0000)
struct BPChar_ServiceBot_C_MELEE_SpawnMelee final
{
public:
	bool                                          SpawnRight;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_MELEE_SpawnMelee) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_MELEE_SpawnMelee");
static_assert(sizeof(BPChar_ServiceBot_C_MELEE_SpawnMelee) == 0x000001, "Wrong size on BPChar_ServiceBot_C_MELEE_SpawnMelee");
static_assert(offsetof(BPChar_ServiceBot_C_MELEE_SpawnMelee, SpawnRight) == 0x000000, "Member 'BPChar_ServiceBot_C_MELEE_SpawnMelee::SpawnRight' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.EMS_ManageReviveParts
// 0x0003 (0x0003 - 0x0000)
struct BPChar_ServiceBot_C_EMS_ManageReviveParts final
{
public:
	bool                                          HasHead_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasRightArm_0;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasLeftArm_0;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_EMS_ManageReviveParts) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_EMS_ManageReviveParts");
static_assert(sizeof(BPChar_ServiceBot_C_EMS_ManageReviveParts) == 0x000003, "Wrong size on BPChar_ServiceBot_C_EMS_ManageReviveParts");
static_assert(offsetof(BPChar_ServiceBot_C_EMS_ManageReviveParts, HasHead_0) == 0x000000, "Member 'BPChar_ServiceBot_C_EMS_ManageReviveParts::HasHead_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_EMS_ManageReviveParts, HasRightArm_0) == 0x000001, "Member 'BPChar_ServiceBot_C_EMS_ManageReviveParts::HasRightArm_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_EMS_ManageReviveParts, HasLeftArm_0) == 0x000002, "Member 'BPChar_ServiceBot_C_EMS_ManageReviveParts::HasLeftArm_0' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.OnEnd_EC6759724792DE311AC13AAA3D964D58
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58 final
{
public:
	EGbxActionEndState                            EndState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58");
static_assert(sizeof(BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58) == 0x000010, "Wrong size on BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58");
static_assert(offsetof(BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58, EndState) == 0x000000, "Member 'BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58::EndState' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58, Actor) == 0x000008, "Member 'BPChar_ServiceBot_C_OnEnd_EC6759724792DE311AC13AAA3D964D58::Actor' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC");
static_assert(sizeof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC) == 0x000010, "Wrong size on BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC, Actor) == 0x000000, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC::Actor' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC, InstanceIndex) == 0x000008, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_539745114742BC3F986E3EB1A4D09DFC::InstanceIndex' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC");
static_assert(sizeof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC) == 0x000010, "Wrong size on BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC, Actor) == 0x000000, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC::Actor' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC, InstanceIndex) == 0x000008, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Failed_539745114742BC3F986E3EB1A4D09DFC::InstanceIndex' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007");
static_assert(sizeof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007) == 0x000010, "Wrong size on BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007, Actor) == 0x000000, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007::Actor' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007, InstanceIndex) == 0x000008, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Spawned_F459E0A94B14D135E2BAA09CFE31B007::InstanceIndex' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007
// 0x0010 (0x0010 - 0x0000)
struct BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007");
static_assert(sizeof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007) == 0x000010, "Wrong size on BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007, Actor) == 0x000000, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007::Actor' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007, InstanceIndex) == 0x000008, "Member 'BPChar_ServiceBot_C_GbxAsyncRequest_Failed_F459E0A94B14D135E2BAA09CFE31B007::InstanceIndex' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.IsBotInjured
// 0x000C (0x000C - 0x0000)
struct BPChar_ServiceBot_C_IsBotInjured final
{
public:
	bool                                          IsInjured;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentHealthPercent_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_IsBotInjured) == 0x000004, "Wrong alignment on BPChar_ServiceBot_C_IsBotInjured");
static_assert(sizeof(BPChar_ServiceBot_C_IsBotInjured) == 0x00000C, "Wrong size on BPChar_ServiceBot_C_IsBotInjured");
static_assert(offsetof(BPChar_ServiceBot_C_IsBotInjured, IsInjured) == 0x000000, "Member 'BPChar_ServiceBot_C_IsBotInjured::IsInjured' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_IsBotInjured, CallFunc_GetCurrentHealthPercent_ReturnValue) == 0x000004, "Member 'BPChar_ServiceBot_C_IsBotInjured::CallFunc_GetCurrentHealthPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_IsBotInjured, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BPChar_ServiceBot_C_IsBotInjured::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_IsBotInjured, CallFunc_Less_FloatFloat_ReturnValue) == 0x000009, "Member 'BPChar_ServiceBot_C_IsBotInjured::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.IsEMSBot
// 0x0001 (0x0001 - 0x0000)
struct BPChar_ServiceBot_C_IsEMSBot final
{
public:
	bool                                          IsEMS;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_IsEMSBot) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_IsEMSBot");
static_assert(sizeof(BPChar_ServiceBot_C_IsEMSBot) == 0x000001, "Wrong size on BPChar_ServiceBot_C_IsEMSBot");
static_assert(offsetof(BPChar_ServiceBot_C_IsEMSBot, IsEMS) == 0x000000, "Member 'BPChar_ServiceBot_C_IsEMSBot::IsEMS' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.GetBotType
// 0x0001 (0x0001 - 0x0000)
struct BPChar_ServiceBot_C_GetBotType final
{
public:
	Enum_ServiceBot_Type                          BotType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_ServiceBot_C_GetBotType) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_GetBotType");
static_assert(sizeof(BPChar_ServiceBot_C_GetBotType) == 0x000001, "Wrong size on BPChar_ServiceBot_C_GetBotType");
static_assert(offsetof(BPChar_ServiceBot_C_GetBotType, BotType) == 0x000000, "Member 'BPChar_ServiceBot_C_GetBotType::BotType' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.QueryAttachedPieces
// 0x0003 (0x0003 - 0x0000)
struct BPChar_ServiceBot_C_QueryAttachedPieces final
{
public:
	bool                                          HasHead_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasRightArm_0;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasLeftArm_0;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_QueryAttachedPieces) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_QueryAttachedPieces");
static_assert(sizeof(BPChar_ServiceBot_C_QueryAttachedPieces) == 0x000003, "Wrong size on BPChar_ServiceBot_C_QueryAttachedPieces");
static_assert(offsetof(BPChar_ServiceBot_C_QueryAttachedPieces, HasHead_0) == 0x000000, "Member 'BPChar_ServiceBot_C_QueryAttachedPieces::HasHead_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_QueryAttachedPieces, HasRightArm_0) == 0x000001, "Member 'BPChar_ServiceBot_C_QueryAttachedPieces::HasRightArm_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_QueryAttachedPieces, HasLeftArm_0) == 0x000002, "Member 'BPChar_ServiceBot_C_QueryAttachedPieces::HasLeftArm_0' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.QueryDominantPieces
// 0x0003 (0x0003 - 0x0000)
struct BPChar_ServiceBot_C_QueryDominantPieces final
{
public:
	bool                                          RightArmDominant_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LeftArmDominant_0;                                 // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HeadDominant_0;                                    // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_QueryDominantPieces) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_QueryDominantPieces");
static_assert(sizeof(BPChar_ServiceBot_C_QueryDominantPieces) == 0x000003, "Wrong size on BPChar_ServiceBot_C_QueryDominantPieces");
static_assert(offsetof(BPChar_ServiceBot_C_QueryDominantPieces, RightArmDominant_0) == 0x000000, "Member 'BPChar_ServiceBot_C_QueryDominantPieces::RightArmDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_QueryDominantPieces, LeftArmDominant_0) == 0x000001, "Member 'BPChar_ServiceBot_C_QueryDominantPieces::LeftArmDominant_0' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_QueryDominantPieces, HeadDominant_0) == 0x000002, "Member 'BPChar_ServiceBot_C_QueryDominantPieces::HeadDominant_0' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.IsLootWeaponEquipped
// 0x0002 (0x0002 - 0x0000)
struct BPChar_ServiceBot_C_IsLootWeaponEquipped final
{
public:
	bool                                          EquippedRight;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EquippedLeft;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_IsLootWeaponEquipped) == 0x000001, "Wrong alignment on BPChar_ServiceBot_C_IsLootWeaponEquipped");
static_assert(sizeof(BPChar_ServiceBot_C_IsLootWeaponEquipped) == 0x000002, "Wrong size on BPChar_ServiceBot_C_IsLootWeaponEquipped");
static_assert(offsetof(BPChar_ServiceBot_C_IsLootWeaponEquipped, EquippedRight) == 0x000000, "Member 'BPChar_ServiceBot_C_IsLootWeaponEquipped::EquippedRight' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_IsLootWeaponEquipped, EquippedLeft) == 0x000001, "Member 'BPChar_ServiceBot_C_IsLootWeaponEquipped::EquippedLeft' has a wrong offset!");

// Function BPChar_ServiceBot.BPChar_ServiceBot_C.ServiceBot_GetUIName
// 0x0018 (0x0018 - 0x0000)
struct BPChar_ServiceBot_C_ServiceBot_GetUIName final
{
public:
	float                                         PlayThroughIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxUIName*                             UIName;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_ServiceBot_C_ServiceBot_GetUIName) == 0x000008, "Wrong alignment on BPChar_ServiceBot_C_ServiceBot_GetUIName");
static_assert(sizeof(BPChar_ServiceBot_C_ServiceBot_GetUIName) == 0x000018, "Wrong size on BPChar_ServiceBot_C_ServiceBot_GetUIName");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_GetUIName, PlayThroughIndex) == 0x000000, "Member 'BPChar_ServiceBot_C_ServiceBot_GetUIName::PlayThroughIndex' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_GetUIName, UIName) == 0x000008, "Member 'BPChar_ServiceBot_C_ServiceBot_GetUIName::UIName' has a wrong offset!");
static_assert(offsetof(BPChar_ServiceBot_C_ServiceBot_GetUIName, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BPChar_ServiceBot_C_ServiceBot_GetUIName::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

