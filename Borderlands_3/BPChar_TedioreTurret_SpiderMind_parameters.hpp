#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_TedioreTurret_SpiderMind

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPChar_TedioreTurret_SpiderMind.BPChar_TedioreTurret_SpiderMind_C.ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind
// 0x00D8 (0x00D8 - 0x0000)
struct BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OverlappedComponent;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OtherBodyIndex;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromSweep;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_SweepResult;                          // 0x0038(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UTeamComponent*                         CallFunc_GetTeamComponent_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostile_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind) == 0x000008, "Wrong alignment on BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind");
static_assert(sizeof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind) == 0x0000D8, "Wrong size on BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, EntryPoint) == 0x000000, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000010, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, K2Node_Event_OverlappedComponent) == 0x000018, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::K2Node_Event_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, K2Node_Event_OtherActor) == 0x000020, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, K2Node_Event_OtherComp) == 0x000028, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, K2Node_Event_OtherBodyIndex) == 0x000030, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::K2Node_Event_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, K2Node_Event_bFromSweep) == 0x000034, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::K2Node_Event_bFromSweep' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, K2Node_Event_SweepResult) == 0x000038, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::K2Node_Event_SweepResult' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, CallFunc_GetTeamComponent_ReturnValue) == 0x0000C8, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::CallFunc_GetTeamComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind, CallFunc_IsHostile_ReturnValue) == 0x0000D0, "Member 'BPChar_TedioreTurret_SpiderMind_C_ExecuteUbergraph_BPChar_TedioreTurret_SpiderMind::CallFunc_IsHostile_ReturnValue' has a wrong offset!");

// Function BPChar_TedioreTurret_SpiderMind.BPChar_TedioreTurret_SpiderMind_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret
// 0x00B0 (0x00B0 - 0x0000)
struct BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret) == 0x000008, "Wrong alignment on BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret");
static_assert(sizeof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret) == 0x0000B0, "Wrong size on BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret, OverlappedComponent) == 0x000000, "Member 'BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret, OtherActor) == 0x000008, "Member 'BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret::OtherActor' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret, OtherComp) == 0x000010, "Member 'BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret::OtherComp' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret, OtherBodyIndex) == 0x000018, "Member 'BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret, bFromSweep) == 0x00001C, "Member 'BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret::bFromSweep' has a wrong offset!");
static_assert(offsetof(BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret, SweepResult) == 0x000020, "Member 'BPChar_TedioreTurret_SpiderMind_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_BPChar_TedioreTurret::SweepResult' has a wrong offset!");

}

