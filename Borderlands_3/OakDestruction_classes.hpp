#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OakDestruction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GbxDestruction_classes.hpp"


namespace SDK
{

// Class OakDestruction.CryoDestructibleComponent
// 0x00C0 (0x0C90 - 0x0BD0)
class UCryoDestructibleComponent : public UGbxDestructibleComponent
{
public:
	class UMaterialInterface*                     BaseMaterial;                                      // 0x0BD0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FracturedLifeSpan;                                 // 0x0BD8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BDC[0x4];                                      // 0x0BDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     FracturedMaterial;                                 // 0x0BE0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     FracturedInteriorMaterial;                         // 0x0BE8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFractureEffect                        FractureEffect;                                    // 0x0BF0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     FracturedActorClass;                               // 0x0C00(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreezeRateVariation;                               // 0x0C08(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThawJitterSpeed;                                   // 0x0C0C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThawJitterScale;                                   // 0x0C10(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C14[0x4];                                      // 0x0C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ThawMaterialParamName;                             // 0x0C18(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DissolveTime;                                      // 0x0C20(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DissolveDelayTime;                                 // 0x0C24(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DissolvePositionOffsetScale;                       // 0x0C28(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C2C[0x4C];                                     // 0x0C2C(0x004C)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleComponent*                 LinkedDestructible;                                // 0x0C78(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C80[0x10];                                     // 0x0C80(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CryoDestructibleComponent">();
	}
	static class UCryoDestructibleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCryoDestructibleComponent>();
	}
};
static_assert(alignof(UCryoDestructibleComponent) == 0x000008, "Wrong alignment on UCryoDestructibleComponent");
static_assert(sizeof(UCryoDestructibleComponent) == 0x000C90, "Wrong size on UCryoDestructibleComponent");
static_assert(offsetof(UCryoDestructibleComponent, BaseMaterial) == 0x000BD0, "Member 'UCryoDestructibleComponent::BaseMaterial' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, FracturedLifeSpan) == 0x000BD8, "Member 'UCryoDestructibleComponent::FracturedLifeSpan' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, FracturedMaterial) == 0x000BE0, "Member 'UCryoDestructibleComponent::FracturedMaterial' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, FracturedInteriorMaterial) == 0x000BE8, "Member 'UCryoDestructibleComponent::FracturedInteriorMaterial' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, FractureEffect) == 0x000BF0, "Member 'UCryoDestructibleComponent::FractureEffect' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, FracturedActorClass) == 0x000C00, "Member 'UCryoDestructibleComponent::FracturedActorClass' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, FreezeRateVariation) == 0x000C08, "Member 'UCryoDestructibleComponent::FreezeRateVariation' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, ThawJitterSpeed) == 0x000C0C, "Member 'UCryoDestructibleComponent::ThawJitterSpeed' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, ThawJitterScale) == 0x000C10, "Member 'UCryoDestructibleComponent::ThawJitterScale' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, ThawMaterialParamName) == 0x000C18, "Member 'UCryoDestructibleComponent::ThawMaterialParamName' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, DissolveTime) == 0x000C20, "Member 'UCryoDestructibleComponent::DissolveTime' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, DissolveDelayTime) == 0x000C24, "Member 'UCryoDestructibleComponent::DissolveDelayTime' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, DissolvePositionOffsetScale) == 0x000C28, "Member 'UCryoDestructibleComponent::DissolvePositionOffsetScale' has a wrong offset!");
static_assert(offsetof(UCryoDestructibleComponent, LinkedDestructible) == 0x000C78, "Member 'UCryoDestructibleComponent::LinkedDestructible' has a wrong offset!");

// Class OakDestruction.OakDestructibleFXManager
// 0x0068 (0x04C0 - 0x0458)
class AOakDestructibleFXManager final : public AActor
{
public:
	uint8                                         Pad_458[0x68];                                     // 0x0458(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientApplyDamage(uint32 SyncID, float DamageAmount, const struct FVector& HitLocation, const struct FVector& ImpulseDir, float ImpulseStrength);
	void ClientApplyRadiusDamage(uint32 SyncID, float DamageAmount, const struct FVector& HurtOrigin, float DamageRadius, float ImpulseStrength, bool bFullDamage);
	void DestroyAllDestructibles();
	void OnDestructibleDestroyed(class AActor* DestroyedActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OakDestructibleFXManager">();
	}
	static class AOakDestructibleFXManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOakDestructibleFXManager>();
	}
};
static_assert(alignof(AOakDestructibleFXManager) == 0x000008, "Wrong alignment on AOakDestructibleFXManager");
static_assert(sizeof(AOakDestructibleFXManager) == 0x0004C0, "Wrong size on AOakDestructibleFXManager");

}

