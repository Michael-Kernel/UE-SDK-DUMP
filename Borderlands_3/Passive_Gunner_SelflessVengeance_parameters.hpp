#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Gunner_SelflessVengeance

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Passive_Gunner_SelflessVengeance.Passive_Gunner_SelflessVengeance_C.ExecuteUbergraph_Passive_Gunner_SelflessVengeance
// 0x0278 (0x0278 - 0x0000)
struct Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle;            // 0x0008(0x0018)(NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle1;           // 0x0028(0x0018)(NoDestructor)
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle2;           // 0x0040(0x0018)(NoDestructor)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue2; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakPlayerAbilityAllyQuerySpec         K2Node_MakeStruct_OakPlayerAbilityAllyQuerySpec;   // 0x0060(0x0010)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_CustomEvent_EventWeapon;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCompleted;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AWeapon* EventWeapon, bool bCompleted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue1;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec1;                                // 0x00B8(0x0018)(ConstParm, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec;                                 // 0x00D8(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerResult                 K2Node_Event_Result;                               // 0x00F0(0x000C)(ConstParm, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0108(0x0018)()
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakAbilityTimerSpec                   K2Node_MakeStruct_OakAbilityTimerSpec;             // 0x0128(0x0018)(NoDestructor)
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue;    // 0x0140(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FOakAbilityResourceSpec_WeaponShotModifier K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier; // 0x0158(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FOakAbilityResourceSpec_WeaponShotModifier K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier1; // 0x0180(0x0028)(NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakPlayerAbilityAllyQueryResult       CallFunc_QueryAllies_ReturnValue;                  // 0x01B0(0x0020)()
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter_Player*                   CallFunc_Array_Get_Item;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x01E0(0x0028)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakAbilityResourceSpec_WeaponShotModifier K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier2; // 0x0210(0x0028)(NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter_Player*                   CallFunc_Array_Get_Item1;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakAbilityResourceSpec_WeaponShotModifier K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier3; // 0x0250(0x0028)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance) == 0x000008, "Wrong alignment on Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance");
static_assert(sizeof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance) == 0x000278, "Wrong size on Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, EntryPoint) == 0x000000, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_DataTableValueHandle) == 0x000008, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_DataTableValueHandle' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, Temp_float_Variable) == 0x000020, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000024, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_DataTableValueHandle1) == 0x000028, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_DataTableValueHandle1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_DataTableValueHandle2) == 0x000040, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_DataTableValueHandle2' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x000058, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_GetDataTableValueFromHandle_ReturnValue2) == 0x00005C, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_GetDataTableValueFromHandle_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_OakPlayerAbilityAllyQuerySpec) == 0x000060, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_OakPlayerAbilityAllyQuerySpec' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, Temp_int_Array_Index_Variable) == 0x000070, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, Temp_int_Array_Index_Variable1) == 0x00007C, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, Temp_bool_Variable) == 0x000080, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_CustomEvent_EventWeapon) == 0x000088, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_CustomEvent_EventWeapon' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_CustomEvent_bCompleted) == 0x000090, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_CustomEvent_bCompleted' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_GetValueOfAttribute_ReturnValue) == 0x0000A8, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000AC, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_GetValueOfAttribute_ReturnValue1) == 0x0000B0, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_GetValueOfAttribute_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_Event_Spec1) == 0x0000B8, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_Event_Spec1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000D0, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D4, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_Event_Spec) == 0x0000D8, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_Event_Result) == 0x0000F0, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_Event_Result' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000FC, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_SwitchEnum_CmpSuccess) == 0x0000FD, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_Select_Default) == 0x000100, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000104, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_PostAttachedEvent_ReturnValue) == 0x000108, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000120, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_OakAbilityTimerSpec) == 0x000128, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_OakAbilityTimerSpec' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_GetResourcePoolByResource_ReturnValue) == 0x000140, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_GetResourcePoolByResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier) == 0x000158, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier1) == 0x000180, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, Temp_int_Loop_Counter_Variable1) == 0x0001A8, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_QueryAllies_ReturnValue) == 0x0001B0, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_QueryAllies_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Add_IntInt_ReturnValue1) == 0x0001D0, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0001E0, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Less_IntInt_ReturnValue) == 0x00020C, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier2) == 0x000210, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier2' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Array_Length_ReturnValue1) == 0x000238, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Array_Get_Item1) == 0x000240, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, CallFunc_Less_IntInt_ReturnValue1) == 0x000248, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance, K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier3) == 0x000250, "Member 'Passive_Gunner_SelflessVengeance_C_ExecuteUbergraph_Passive_Gunner_SelflessVengeance::K2Node_MakeStruct_OakAbilityResourceSpec_WeaponShotModifier3' has a wrong offset!");

// Function Passive_Gunner_SelflessVengeance.Passive_Gunner_SelflessVengeance_C.OnAbilityTimerEnded
// 0x0028 (0x0028 - 0x0000)
struct Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FOakAbilityTimerResult                 Result;                                            // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded) == 0x000008, "Wrong alignment on Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded");
static_assert(sizeof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded) == 0x000028, "Wrong size on Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded, Spec) == 0x000000, "Member 'Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded::Spec' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded, Result) == 0x000018, "Member 'Passive_Gunner_SelflessVengeance_C_OnAbilityTimerEnded::Result' has a wrong offset!");

// Function Passive_Gunner_SelflessVengeance.Passive_Gunner_SelflessVengeance_C.OnAbilityTimerStarted
// 0x0018 (0x0018 - 0x0000)
struct Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted) == 0x000008, "Wrong alignment on Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted");
static_assert(sizeof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted) == 0x000018, "Wrong size on Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted, Spec) == 0x000000, "Member 'Passive_Gunner_SelflessVengeance_C_OnAbilityTimerStarted::Spec' has a wrong offset!");

// Function Passive_Gunner_SelflessVengeance.Passive_Gunner_SelflessVengeance_C.ReloadEnded_SelflessVengeance
// 0x0010 (0x0010 - 0x0000)
struct Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance final
{
public:
	class AWeapon*                                EventWeapon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleted;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance) == 0x000008, "Wrong alignment on Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance");
static_assert(sizeof(Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance) == 0x000010, "Wrong size on Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance, EventWeapon) == 0x000000, "Member 'Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance::EventWeapon' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance, bCompleted) == 0x000008, "Member 'Passive_Gunner_SelflessVengeance_C_ReloadEnded_SelflessVengeance::bCompleted' has a wrong offset!");

// Function Passive_Gunner_SelflessVengeance.Passive_Gunner_SelflessVengeance_C.ApplyBonusDamageToTarget
// 0x00D0 (0x00D0 - 0x0000)
struct Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageSource*                    DmgSource;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewDamage;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NewTarget;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0030(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsAbilityTimerActive_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget) == 0x000008, "Wrong alignment on Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget");
static_assert(sizeof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget) == 0x0000D0, "Wrong size on Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, Damage) == 0x000000, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::Damage' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, DmgSource) == 0x000008, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::DmgSource' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, Target) == 0x000010, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::Target' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, NewDamage) == 0x000018, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::NewDamage' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, NewTarget) == 0x000020, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::NewTarget' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_GetDataTableValue_OutValue) == 0x000028, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_GetDataTableValue_ReturnValue) == 0x00002C, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_Compare_Damage_Source_Equal) == 0x00002D, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_Compare_Damage_Source_Not_Equal) == 0x00002E, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, Temp_struct_Variable) == 0x000030, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_IsAbilityTimerActive_ReturnValue) == 0x0000C0, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_IsAbilityTimerActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000C4, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000CC, "Member 'Passive_Gunner_SelflessVengeance_C_ApplyBonusDamageToTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

