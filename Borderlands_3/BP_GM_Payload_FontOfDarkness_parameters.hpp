#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GM_Payload_FontOfDarkness

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GM_Payload_FontOfDarkness.BP_GM_Payload_FontOfDarkness_C.K2_UpdateChildGeneration
// 0x007C (0x007C - 0x0000)
struct BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration final
{
public:
	struct FGrenadeChildGenerationData            InGenerationData;                                  // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FGrenadeChildGenerationData            GenerationData;                                    // 0x0028(0x0028)(Parm, OutParm, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrenadeChildGenerationData            K2Node_MakeStruct_GrenadeChildGenerationData;      // 0x0054(0x0028)(NoDestructor)
};
static_assert(alignof(BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration) == 0x000004, "Wrong alignment on BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration");
static_assert(sizeof(BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration) == 0x00007C, "Wrong size on BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration, InGenerationData) == 0x000000, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration::InGenerationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration, GenerationData) == 0x000028, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration::GenerationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration, K2Node_MakeStruct_GrenadeChildGenerationData) == 0x000054, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_UpdateChildGeneration::K2Node_MakeStruct_GrenadeChildGenerationData' has a wrong offset!");

// Function BP_GM_Payload_FontOfDarkness.BP_GM_Payload_FontOfDarkness_C.K2_GrenadeInitialized
// 0x0060 (0x0060 - 0x0000)
struct BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class UWwiseAudioComponent*                   CallFunc_GetDefaultWwiseComponent_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized) == 0x000008, "Wrong alignment on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized");
static_assert(sizeof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized) == 0x000060, "Wrong size on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, Grenade) == 0x000000, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, InstanceData) == 0x000010, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, CallFunc_GetDefaultWwiseComponent_ReturnValue) == 0x000040, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::CallFunc_GetDefaultWwiseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000050, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeInitialized::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_FontOfDarkness.BP_GM_Payload_FontOfDarkness_C.K2_GrenadeExplode
// 0x02E0 (0x02E0 - 0x0000)
struct BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	TArray<struct FTransform>                     NewLocalVar_2;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x00A0(0x0230)(ContainsInstancedReference)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode) == 0x000010, "Wrong alignment on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode");
static_assert(sizeof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode) == 0x0002E0, "Wrong size on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, Grenade) == 0x000000, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, InstanceData) == 0x000010, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, NewLocalVar_2) == 0x000040, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x0000A0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode, CallFunc_SpawnActorAsync_ReturnValue) == 0x0002D0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeExplode::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_FontOfDarkness.BP_GM_Payload_FontOfDarkness_C.K2_GrenadeDamageDealt
// 0x0090 (0x0090 - 0x0000)
struct BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class AOakCharacter*                          Character;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageDataEventDetails                DamageEvent;                                       // 0x0048(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt) == 0x000008, "Wrong alignment on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt");
static_assert(sizeof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt) == 0x000090, "Wrong size on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt, Grenade) == 0x000000, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt, InstanceData) == 0x000010, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt, Character) == 0x000040, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt::Character' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt, DamageEvent) == 0x000048, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeDamageDealt::DamageEvent' has a wrong offset!");

// Function BP_GM_Payload_FontOfDarkness.BP_GM_Payload_FontOfDarkness_C.K2_NativeDelayCallback
// 0x0310 (0x0310 - 0x0000)
struct BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   DelayName;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FanRot;                                            // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                FanLoc;                                            // 0x0054(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         NewLocalVar_0;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0078(0x0018)()
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0100(0x0140)(ContainsInstancedReference)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0270(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x027C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0288(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0294(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x02A0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item1;                          // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x02E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x02EC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x02F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback) == 0x000010, "Wrong alignment on BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback");
static_assert(sizeof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback) == 0x000310, "Wrong size on BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, Grenade) == 0x000000, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, InstanceData) == 0x000010, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, DelayName) == 0x000040, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::DelayName' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, FanRot) == 0x000048, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::FanRot' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, FanLoc) == 0x000054, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::FanLoc' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, NewLocalVar_0) == 0x000060, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, K2Node_SwitchName_CmpSuccess) == 0x000070, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_PostEventAtLocation_ReturnValue) == 0x000078, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000090, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_GetForwardVector_ReturnValue) == 0x000094, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_RandomIntegerInRange_ReturnValue1) == 0x0000B8, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_RandomIntegerInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000C0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_IsActive_ReturnValue) == 0x0000C8, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x0000D8, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x0000E0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_Add_VectorVector_ReturnValue1) == 0x0000E4, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x0000F0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000100, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_Array_Get_Item) == 0x000240, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Location) == 0x000270, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Rotation) == 0x00027C, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Scale) == 0x000288, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_GetUpVector_ReturnValue) == 0x000294, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x0002A0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_Array_Get_Item1) == 0x0002B0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Location1) == 0x0002E0, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Rotation1) == 0x0002EC, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Scale1) == 0x0002F8, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Scale1' has a wrong offset!");

// Function BP_GM_Payload_FontOfDarkness.BP_GM_Payload_FontOfDarkness_C.K2_GrenadeBeginPlay
// 0x0040 (0x0040 - 0x0000)
struct BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay) == 0x000008, "Wrong alignment on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay");
static_assert(sizeof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay) == 0x000040, "Wrong size on BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay, Grenade) == 0x000000, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay, InstanceData) == 0x000010, "Member 'BP_GM_Payload_FontOfDarkness_C_K2_GrenadeBeginPlay::InstanceData' has a wrong offset!");

}

