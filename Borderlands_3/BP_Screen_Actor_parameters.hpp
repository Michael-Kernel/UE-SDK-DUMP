#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Screen_Actor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_structs.hpp"


namespace SDK::Params
{

// Function BP_Screen_Actor.BP_Screen_Actor_C.Create Dynamic Screen Material Instance
// 0x0100 (0x0100 - 0x0000)
struct BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance final
{
public:
	class UMaterialInstanceDynamic*               DynamicScreenMaterialOut;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DefaultScreenMaterialOut;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicLightMaterialOut;                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLightFunction;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Light_Mat_Image_Noise_and_Glitches;                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Mat_Image_and_Noise;                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Mat_Image_Only;                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Mat_Noise_Only;                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Mat;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Screen_Mat;                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Light_Mat;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Default_Screen_Mat;                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChromaticAberrationIntensityis0;                   // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GlitchIntensityis0;                                // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ImageIntensityis0;                                 // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EmissiveIntensityis0;                              // 0x0063(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoiseIntensityIs0;                                 // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue2;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue3;       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue4;       // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue6;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue7;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue5;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00B0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakRandomStream_InitialSeed;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue3;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance) == 0x000008, "Wrong alignment on BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance");
static_assert(sizeof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance) == 0x000100, "Wrong size on BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, DynamicScreenMaterialOut) == 0x000000, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::DynamicScreenMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, DefaultScreenMaterialOut) == 0x000008, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::DefaultScreenMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, DynamicLightMaterialOut) == 0x000010, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::DynamicLightMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, UseLightFunction) == 0x000018, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::UseLightFunction' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Light_Mat_Image_Noise_and_Glitches) == 0x000020, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Light_Mat_Image_Noise_and_Glitches' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Light_Mat_Image_and_Noise) == 0x000028, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Light_Mat_Image_and_Noise' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Light_Mat_Image_Only) == 0x000030, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Light_Mat_Image_Only' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Light_Mat_Noise_Only) == 0x000038, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Light_Mat_Noise_Only' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Light_Mat) == 0x000040, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Light_Mat' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Dynamic_Screen_Mat) == 0x000048, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Dynamic_Screen_Mat' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Dynamic_Light_Mat) == 0x000050, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Dynamic_Light_Mat' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, Default_Screen_Mat) == 0x000058, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::Default_Screen_Mat' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, ChromaticAberrationIntensityis0) == 0x000060, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::ChromaticAberrationIntensityis0' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, GlitchIntensityis0) == 0x000061, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::GlitchIntensityis0' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, ImageIntensityis0) == 0x000062, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::ImageIntensityis0' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, EmissiveIntensityis0) == 0x000063, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::EmissiveIntensityis0' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, NoiseIntensityIs0) == 0x000064, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::NoiseIntensityIs0' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_IsValid_ReturnValue) == 0x000065, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_IsValid_ReturnValue1) == 0x000070, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_IsValid_ReturnValue2) == 0x000071, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_IsValid_ReturnValue3) == 0x000072, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000073, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000078, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00007C, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x000080, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000084, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_EqualEqual_FloatFloat_ReturnValue2) == 0x000088, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_EqualEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue4) == 0x00008C, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue5) == 0x000090, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_EqualEqual_FloatFloat_ReturnValue3) == 0x000094, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_EqualEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_EqualEqual_FloatFloat_ReturnValue4) == 0x000095, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_EqualEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue6) == 0x000098, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Add_FloatFloat_ReturnValue7) == 0x00009C, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Add_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_EqualEqual_FloatFloat_ReturnValue5) == 0x0000A0, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_EqualEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_BooleanOR_ReturnValue) == 0x0000A1, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x0000A4, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000B0, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_BreakVector_X) == 0x0000C0, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_BreakVector_Y) == 0x0000C4, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_MapRangeClamped_ReturnValue) == 0x0000CC, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_MapRangeClamped_ReturnValue1) == 0x0000D0, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_MapRangeClamped_ReturnValue2) == 0x0000D4, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_BreakRandomStream_InitialSeed) == 0x0000E4, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_BreakRandomStream_InitialSeed' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_Less_IntInt_ReturnValue) == 0x0000E9, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_RandomFloatFromStream_ReturnValue) == 0x0000EC, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_MapRangeClamped_ReturnValue3) == 0x0000F0, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_MapRangeClamped_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, K2Node_SwitchEnum_CmpSuccess) == 0x0000F4, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x0000F8, "Member 'BP_Screen_Actor_C_Create_Dynamic_Screen_Material_Instance::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");

// Function BP_Screen_Actor.BP_Screen_Actor_C.Set Per Element Screen Material Parameters
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters final
{
public:
	class UMaterialInstanceDynamic*               DynamicScreenMat;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DefaultScreenMaterial;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicLightMat;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Light_Material;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Default_Material;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_FloatToLinearColor_ReturnValue;      // 0x004C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x006C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x008C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00B4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters) == 0x000008, "Wrong alignment on BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters");
static_assert(sizeof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters) == 0x0000C8, "Wrong size on BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, DynamicScreenMat) == 0x000000, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::DynamicScreenMat' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, DefaultScreenMaterial) == 0x000008, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::DefaultScreenMaterial' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, DynamicLightMat) == 0x000010, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::DynamicLightMat' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, DynamicMaterial) == 0x000018, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, Dynamic_Light_Material) == 0x000020, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::Dynamic_Light_Material' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, Default_Material) == 0x000028, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::Default_Material' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_IsValid_ReturnValue1) == 0x000031, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_FMax_ReturnValue) == 0x000044, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_FMax_ReturnValue1) == 0x000048, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_FMax_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Conv_FloatToLinearColor_ReturnValue) == 0x00004C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Conv_FloatToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_BreakColor_R) == 0x00005C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_BreakColor_G) == 0x000060, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_BreakColor_B) == 0x000064, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_BreakColor_A) == 0x000068, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_MakeColor_ReturnValue) == 0x00006C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00007C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000080, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000084, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_LinearColorLerp_ReturnValue) == 0x00008C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x00009C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Normal_ReturnValue) == 0x0000A8, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000B4, "Member 'BP_Screen_Actor_C_Set_Per_Element_Screen_Material_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_Screen_Actor.BP_Screen_Actor_C.Set Level ColorScheme
// 0x0060 (0x0060 - 0x0000)
struct BP_Screen_Actor_C_Set_Level_ColorScheme final
{
public:
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0000(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue1;     // 0x0010(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue2;     // 0x0020(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue3;     // 0x0030(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue4;     // 0x0040(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue5;     // 0x0050(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Screen_Actor_C_Set_Level_ColorScheme) == 0x000004, "Wrong alignment on BP_Screen_Actor_C_Set_Level_ColorScheme");
static_assert(sizeof(BP_Screen_Actor_C_Set_Level_ColorScheme) == 0x000060, "Wrong size on BP_Screen_Actor_C_Set_Level_ColorScheme");
static_assert(offsetof(BP_Screen_Actor_C_Set_Level_ColorScheme, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000000, "Member 'BP_Screen_Actor_C_Set_Level_ColorScheme::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Level_ColorScheme, CallFunc_GetVectorParameterValue_ReturnValue1) == 0x000010, "Member 'BP_Screen_Actor_C_Set_Level_ColorScheme::CallFunc_GetVectorParameterValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Level_ColorScheme, CallFunc_GetVectorParameterValue_ReturnValue2) == 0x000020, "Member 'BP_Screen_Actor_C_Set_Level_ColorScheme::CallFunc_GetVectorParameterValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Level_ColorScheme, CallFunc_GetVectorParameterValue_ReturnValue3) == 0x000030, "Member 'BP_Screen_Actor_C_Set_Level_ColorScheme::CallFunc_GetVectorParameterValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Level_ColorScheme, CallFunc_GetVectorParameterValue_ReturnValue4) == 0x000040, "Member 'BP_Screen_Actor_C_Set_Level_ColorScheme::CallFunc_GetVectorParameterValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Level_ColorScheme, CallFunc_GetVectorParameterValue_ReturnValue5) == 0x000050, "Member 'BP_Screen_Actor_C_Set_Level_ColorScheme::CallFunc_GetVectorParameterValue_ReturnValue5' has a wrong offset!");

// Function BP_Screen_Actor.BP_Screen_Actor_C.Set Per Element Base Material Parameters
// 0x0090 (0x0090 - 0x0000)
struct BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters final
{
public:
	class UMaterialInstanceDynamic*               Material_Instance_Dynamic;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynamic_Material_Instance;                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Material_ID_Out;                                   // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Default_Material_Out;                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Material;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Default_Material;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Material_ID;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_MasterMaterial_BaseParams      CallFunc_Array_Get_Item;                           // 0x0048(0x0044)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters) == 0x000008, "Wrong alignment on BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters");
static_assert(sizeof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters) == 0x000090, "Wrong size on BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Material_Instance_Dynamic) == 0x000000, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Material_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Array_index) == 0x000008, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Array_index' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Dynamic_Material_Instance) == 0x000010, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Dynamic_Material_Instance' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Material_ID_Out) == 0x000018, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Material_ID_Out' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Default_Material_Out) == 0x000020, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Default_Material_Out' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Dynamic_Material) == 0x000028, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Dynamic_Material' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Default_Material) == 0x000030, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Default_Material' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, Material_ID) == 0x000038, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::Material_ID' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, CallFunc_Min_ReturnValue) == 0x000044, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, K2Node_SwitchEnum_CmpSuccess) == 0x00008C, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters, K2Node_SwitchEnum1_CmpSuccess) == 0x00008D, "Member 'BP_Screen_Actor_C_Set_Per_Element_Base_Material_Parameters::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

// Function BP_Screen_Actor.BP_Screen_Actor_C.Per Instance Master Material Parameters
// 0x0080 (0x0080 - 0x0000)
struct BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Create_Dynamic_Screen_Material_Instance_DynamicScreenMaterialOut; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Create_Dynamic_Screen_Material_Instance_DefaultScreenMaterialOut; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Create_Dynamic_Screen_Material_Instance_DynamicLightMaterialOut; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Set_Per_Element_Screen_Material_Parameters_DynamicMaterial; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Set_Per_Element_Base_Material_Parameters_Dynamic_Material_Instance; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Set_Per_Element_Base_Material_Parameters_Material_ID_Out; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Set_Per_Element_Base_Material_Parameters_Default_Material_Out; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Set_Per_Element_Base_Material_Parameters_Dynamic_Material_Instance1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Set_Per_Element_Base_Material_Parameters_Material_ID_Out1; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Set_Per_Element_Base_Material_Parameters_Default_Material_Out1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters) == 0x000008, "Wrong alignment on BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters");
static_assert(sizeof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters) == 0x000080, "Wrong size on BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Create_Dynamic_Screen_Material_Instance_DynamicScreenMaterialOut) == 0x000010, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Create_Dynamic_Screen_Material_Instance_DynamicScreenMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Create_Dynamic_Screen_Material_Instance_DefaultScreenMaterialOut) == 0x000018, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Create_Dynamic_Screen_Material_Instance_DefaultScreenMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Create_Dynamic_Screen_Material_Instance_DynamicLightMaterialOut) == 0x000020, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Create_Dynamic_Screen_Material_Instance_DynamicLightMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Screen_Material_Parameters_DynamicMaterial) == 0x000028, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Screen_Material_Parameters_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Base_Material_Parameters_Dynamic_Material_Instance) == 0x000030, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Base_Material_Parameters_Dynamic_Material_Instance' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Base_Material_Parameters_Material_ID_Out) == 0x000038, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Base_Material_Parameters_Material_ID_Out' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Base_Material_Parameters_Default_Material_Out) == 0x000040, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Base_Material_Parameters_Default_Material_Out' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Base_Material_Parameters_Dynamic_Material_Instance1) == 0x000068, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Base_Material_Parameters_Dynamic_Material_Instance1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Base_Material_Parameters_Material_ID_Out1) == 0x000070, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Base_Material_Parameters_Material_ID_Out1' has a wrong offset!");
static_assert(offsetof(BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters, CallFunc_Set_Per_Element_Base_Material_Parameters_Default_Material_Out1) == 0x000078, "Member 'BP_Screen_Actor_C_Per_Instance_Master_Material_Parameters::CallFunc_Set_Per_Element_Base_Material_Parameters_Default_Material_Out1' has a wrong offset!");

// Function BP_Screen_Actor.BP_Screen_Actor_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BP_Screen_Actor_C_UserConstructionScript final
{
public:
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Screen_Actor_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Screen_Actor_C_UserConstructionScript");
static_assert(sizeof(BP_Screen_Actor_C_UserConstructionScript) == 0x000004, "Wrong size on BP_Screen_Actor_C_UserConstructionScript");
static_assert(offsetof(BP_Screen_Actor_C_UserConstructionScript, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000000, "Member 'BP_Screen_Actor_C_UserConstructionScript::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");

}

