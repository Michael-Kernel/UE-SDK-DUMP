#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_Rectifier

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function ShieldAug_Rectifier.ShieldAug_Rectifier_C.K2_TriggerEffect
// 0x0130 (0x0130 - 0x0000)
struct ShieldAug_Rectifier_C_K2_TriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	TArray<class AActor*>                         TargetList;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue1;      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x00B0(0x0028)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_RunEnvQueryForAllActors_ResultActors;     // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_RunEnvQueryForAllActors_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0108(0x0028)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ShieldAug_Rectifier_C_K2_TriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_Rectifier_C_K2_TriggerEffect");
static_assert(sizeof(ShieldAug_Rectifier_C_K2_TriggerEffect) == 0x000130, "Wrong size on ShieldAug_Rectifier_C_K2_TriggerEffect");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, TargetList) == 0x000050, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::TargetList' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, Temp_bool_True_if_break_was_hit_Variable) == 0x000068, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x000078, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetDamageType_ReturnValue) == 0x000080, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetValueFromStackCount_ReturnValue) == 0x00008C, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetValueFromStackCount_ReturnValue1) == 0x000094, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetValueFromStackCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_FTrunc_ReturnValue) == 0x000098, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, K2Node_MakeStruct_LightBeamAttachment) == 0x0000B0, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetOwner_ReturnValue1) == 0x0000E0, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_GetOwner_ReturnValue2) == 0x0000E8, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_RunEnvQueryForAllActors_ResultActors) == 0x0000F0, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_RunEnvQueryForAllActors_ResultActors' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, CallFunc_RunEnvQueryForAllActors_ReturnValue) == 0x000100, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::CallFunc_RunEnvQueryForAllActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_TriggerEffect, K2Node_MakeStruct_LightBeamAttachment1) == 0x000108, "Member 'ShieldAug_Rectifier_C_K2_TriggerEffect::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");

// Function ShieldAug_Rectifier.ShieldAug_Rectifier_C.K2_UntriggerEffect
// 0x0058 (0x0058 - 0x0000)
struct ShieldAug_Rectifier_C_K2_UntriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShieldAug_Rectifier_C_K2_UntriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_Rectifier_C_K2_UntriggerEffect");
static_assert(sizeof(ShieldAug_Rectifier_C_K2_UntriggerEffect) == 0x000058, "Wrong size on ShieldAug_Rectifier_C_K2_UntriggerEffect");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_UntriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_Rectifier_C_K2_UntriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_UntriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_Rectifier_C_K2_UntriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_UntriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_Rectifier_C_K2_UntriggerEffect::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_UntriggerEffect, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'ShieldAug_Rectifier_C_K2_UntriggerEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function ShieldAug_Rectifier.ShieldAug_Rectifier_C.K2_NativeDelayCallback
// 0x0178 (0x0178 - 0x0000)
struct ShieldAug_Rectifier_C_K2_NativeDelayCallback final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   DelayName;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TargetList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize100                 K2Node_MakeStruct_Vector_NetQuantize100;           // 0x0060(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue;    // 0x0088(0x0018)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakResourcePoolReference_bValid;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakResourcePoolReference_CurrentValue;  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MinValue;      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MaxValue;      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x00D8(0x0028)(NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue1;      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0130(0x0028)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_RunEnvQueryForAllActors_ResultActors;     // 0x0160(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_RunEnvQueryForAllActors_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ShieldAug_Rectifier_C_K2_NativeDelayCallback) == 0x000008, "Wrong alignment on ShieldAug_Rectifier_C_K2_NativeDelayCallback");
static_assert(sizeof(ShieldAug_Rectifier_C_K2_NativeDelayCallback) == 0x000178, "Wrong size on ShieldAug_Rectifier_C_K2_NativeDelayCallback");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, Shield) == 0x000000, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, StackData) == 0x000008, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, DelayName) == 0x000038, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::DelayName' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, TargetList) == 0x000040, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::TargetList' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, K2Node_SwitchName_CmpSuccess) == 0x000050, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, Temp_bool_True_if_break_was_hit_Variable) == 0x000051, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, Temp_int_Array_Index_Variable) == 0x000054, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, K2Node_MakeStruct_Vector_NetQuantize100) == 0x000060, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::K2Node_MakeStruct_Vector_NetQuantize100' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetDamageType_ReturnValue) == 0x000070, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, K2Node_DynamicCast_AsOak_Character_Player) == 0x000078, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x000084, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetResourcePoolByResource_ReturnValue) == 0x000088, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetResourcePoolByResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_BreakResourcePoolReference_bValid) == 0x0000A0, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_BreakResourcePoolReference_bValid' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_BreakResourcePoolReference_CurrentValue) == 0x0000A4, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_BreakResourcePoolReference_CurrentValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_BreakResourcePoolReference_MinValue) == 0x0000A8, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_BreakResourcePoolReference_MinValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_BreakResourcePoolReference_MaxValue) == 0x0000AC, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_BreakResourcePoolReference_MaxValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue) == 0x0000B8, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetValueFromStackCount_ReturnValue) == 0x0000C0, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue1) == 0x0000C8, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightBeamAttachment) == 0x0000D8, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetValueFromStackCount_ReturnValue1) == 0x000100, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetValueFromStackCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue2) == 0x000108, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_FTrunc_ReturnValue) == 0x000110, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue3) == 0x000118, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_Array_Get_Item) == 0x000120, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightBeamAttachment1) == 0x000130, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_BooleanAND_ReturnValue) == 0x000159, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_RunEnvQueryForAllActors_ResultActors) == 0x000160, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_RunEnvQueryForAllActors_ResultActors' has a wrong offset!");
static_assert(offsetof(ShieldAug_Rectifier_C_K2_NativeDelayCallback, CallFunc_RunEnvQueryForAllActors_ReturnValue) == 0x000170, "Member 'ShieldAug_Rectifier_C_K2_NativeDelayCallback::CallFunc_RunEnvQueryForAllActors_ReturnValue' has a wrong offset!");

}

