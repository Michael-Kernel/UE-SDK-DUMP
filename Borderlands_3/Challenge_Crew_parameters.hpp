#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Crew

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "Enum_CrewChallengeType_structs.hpp"


namespace SDK::Params
{

// Function Challenge_Crew.Challenge_Crew_C.ExecuteUbergraph_Challenge_Crew
// 0x0038 (0x0038 - 0x0000)
struct Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengesComponent*                   K2Node_Event_OwningChallenges;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          K2Node_Event_AssociatedCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class AGbxPlayerController*             K2Node_Event_CompletedPlayer;                      // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayCompletionAudio_PlayedAudio;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew) == 0x000008, "Wrong alignment on Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew");
static_assert(sizeof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew) == 0x000038, "Wrong size on Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, EntryPoint) == 0x000000, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::EntryPoint' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, K2Node_Event_OwningChallenges) == 0x000008, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::K2Node_Event_OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, K2Node_Event_AssociatedCharacter) == 0x000010, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::K2Node_Event_AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, Temp_bool_IsClosed_Variable) == 0x000020, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, Temp_bool_Has_Been_Initd_Variable) == 0x000021, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, K2Node_Event_CompletedPlayer) == 0x000028, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::K2Node_Event_CompletedPlayer' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew, CallFunc_PlayCompletionAudio_PlayedAudio) == 0x000030, "Member 'Challenge_Crew_C_ExecuteUbergraph_Challenge_Crew::CallFunc_PlayCompletionAudio_PlayedAudio' has a wrong offset!");

// Function Challenge_Crew.Challenge_Crew_C.CompletedChallenge
// 0x0008 (0x0008 - 0x0000)
struct Challenge_Crew_C_CompletedChallenge final
{
public:
	const class AGbxPlayerController*             CompletedPlayer;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Crew_C_CompletedChallenge) == 0x000008, "Wrong alignment on Challenge_Crew_C_CompletedChallenge");
static_assert(sizeof(Challenge_Crew_C_CompletedChallenge) == 0x000008, "Wrong size on Challenge_Crew_C_CompletedChallenge");
static_assert(offsetof(Challenge_Crew_C_CompletedChallenge, CompletedPlayer) == 0x000000, "Member 'Challenge_Crew_C_CompletedChallenge::CompletedPlayer' has a wrong offset!");

// Function Challenge_Crew.Challenge_Crew_C.OnInitChallengeInstance
// 0x0010 (0x0010 - 0x0000)
struct Challenge_Crew_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Crew_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on Challenge_Crew_C_OnInitChallengeInstance");
static_assert(sizeof(Challenge_Crew_C_OnInitChallengeInstance) == 0x000010, "Wrong size on Challenge_Crew_C_OnInitChallengeInstance");
static_assert(offsetof(Challenge_Crew_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'Challenge_Crew_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'Challenge_Crew_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");

// Function Challenge_Crew.Challenge_Crew_C.PlayCompletionAudio
// 0x0240 (0x0240 - 0x0000)
struct Challenge_Crew_C_PlayCompletionAudio final
{
public:
	const class AGbxPlayerController*             InputPin;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayedAudio;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         K2Node_MakeStruct_DialogContext;                   // 0x0010(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0228(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Crew_C_PlayCompletionAudio) == 0x000008, "Wrong alignment on Challenge_Crew_C_PlayCompletionAudio");
static_assert(sizeof(Challenge_Crew_C_PlayCompletionAudio) == 0x000240, "Wrong size on Challenge_Crew_C_PlayCompletionAudio");
static_assert(offsetof(Challenge_Crew_C_PlayCompletionAudio, InputPin) == 0x000000, "Member 'Challenge_Crew_C_PlayCompletionAudio::InputPin' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayCompletionAudio, PlayedAudio) == 0x000008, "Member 'Challenge_Crew_C_PlayCompletionAudio::PlayedAudio' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayCompletionAudio, K2Node_MakeStruct_DialogContext) == 0x000010, "Member 'Challenge_Crew_C_PlayCompletionAudio::K2Node_MakeStruct_DialogContext' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayCompletionAudio, CallFunc_FinishSpeak_Conversation) == 0x000228, "Member 'Challenge_Crew_C_PlayCompletionAudio::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayCompletionAudio, CallFunc_FinishSpeak_SequenceID) == 0x000234, "Member 'Challenge_Crew_C_PlayCompletionAudio::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayCompletionAudio, CallFunc_FinishSpeak_ReturnValue) == 0x000238, "Member 'Challenge_Crew_C_PlayCompletionAudio::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");

// Function Challenge_Crew.Challenge_Crew_C.ShowTutorialPopup
// 0x0090 (0x0090 - 0x0000)
struct Challenge_Crew_C_ShowTutorialPopup final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   TargetPlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorialMessageDataAsset*              Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakCharacter_Player*>           CallFunc_GetAllPlayerCharacters_Characters;        // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxCharacter*                          CallFunc_GetAssociatedPrimaryCharacter_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetAssociatedVehicle_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorialMessageDataAsset*              Temp_object_Variable1;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTutorialMessageDataAsset*              Temp_object_Variable2;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorialMessageDataAsset*              Temp_object_Variable3;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorialMessageDataAsset*              Temp_object_Variable4;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorialMessageDataAsset*              Temp_object_Variable5;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorialMessageDataAsset*              Temp_object_Variable6;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_CrewChallengeType                        Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTutorialMessageDataAsset*              K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Crew_C_ShowTutorialPopup) == 0x000008, "Wrong alignment on Challenge_Crew_C_ShowTutorialPopup");
static_assert(sizeof(Challenge_Crew_C_ShowTutorialPopup) == 0x000090, "Wrong size on Challenge_Crew_C_ShowTutorialPopup");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, GameInstance) == 0x000000, "Member 'Challenge_Crew_C_ShowTutorialPopup::GameInstance' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, TargetPlayer) == 0x000008, "Member 'Challenge_Crew_C_ShowTutorialPopup::TargetPlayer' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable) == 0x000010, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_GetAllPlayerCharacters_Characters) == 0x000018, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_GetAllPlayerCharacters_Characters' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_GetAssociatedPrimaryCharacter_ReturnValue) == 0x000030, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_GetAssociatedPrimaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_GetAssociatedVehicle_ReturnValue) == 0x000040, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_GetAssociatedVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable1) == 0x000048, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'Challenge_Crew_C_ShowTutorialPopup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable2) == 0x000058, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable3) == 0x000060, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable4) == 0x000068, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable5) == 0x000070, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_object_Variable6) == 0x000078, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, Temp_byte_Variable) == 0x000080, "Member 'Challenge_Crew_C_ShowTutorialPopup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_ShowTutorialPopup, K2Node_Select_Default) == 0x000088, "Member 'Challenge_Crew_C_ShowTutorialPopup::K2Node_Select_Default' has a wrong offset!");

// Function Challenge_Crew.Challenge_Crew_C.PlayActivationAudio
// 0x0270 (0x0270 - 0x0000)
struct Challenge_Crew_C_PlayActivationAudio final
{
public:
	bool                                          CallFunc_IsEditorSession_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogContext                         K2Node_MakeStruct_DialogContext;                   // 0x0010(0x0218)()
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0234(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation1;                // 0x0250(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID1;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue1;                 // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Crew_C_PlayActivationAudio) == 0x000008, "Wrong alignment on Challenge_Crew_C_PlayActivationAudio");
static_assert(sizeof(Challenge_Crew_C_PlayActivationAudio) == 0x000270, "Wrong size on Challenge_Crew_C_PlayActivationAudio");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_IsEditorSession_ReturnValue) == 0x000000, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_IsEditorSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, K2Node_MakeStruct_DialogContext) == 0x000010, "Member 'Challenge_Crew_C_PlayActivationAudio::K2Node_MakeStruct_DialogContext' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000228, "Member 'Challenge_Crew_C_PlayActivationAudio::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'Challenge_Crew_C_PlayActivationAudio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_FinishSpeak_Conversation) == 0x000234, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_FinishSpeak_SequenceID) == 0x000240, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_FinishSpeak_ReturnValue) == 0x000244, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_GetGameInstance_ReturnValue) == 0x000248, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_FinishSpeak_Conversation1) == 0x000250, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_FinishSpeak_Conversation1' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_FinishSpeak_SequenceID1) == 0x00025C, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_FinishSpeak_SequenceID1' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_FinishSpeak_ReturnValue1) == 0x000260, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_FinishSpeak_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_GetStatValue_ReturnValue) == 0x000264, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Crew_C_PlayActivationAudio, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000268, "Member 'Challenge_Crew_C_PlayActivationAudio::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

