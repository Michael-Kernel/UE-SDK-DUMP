#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_FalconStrike_ModHoming

#include "Basic.hpp"


namespace SDK::Params
{

// Function LightProjectile_FalconStrike_ModHoming.LightProjectile_FalconStrike_ModHoming_C.HomeToTarget
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_FalconStrike_ModHoming_C_HomeToTarget final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget) == 0x000008, "Wrong alignment on LightProjectile_FalconStrike_ModHoming_C_HomeToTarget");
static_assert(sizeof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget) == 0x000010, "Wrong size on LightProjectile_FalconStrike_ModHoming_C_HomeToTarget");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget, Projectile) == 0x000000, "Member 'LightProjectile_FalconStrike_ModHoming_C_HomeToTarget::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000008, "Member 'LightProjectile_FalconStrike_ModHoming_C_HomeToTarget::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

// Function LightProjectile_FalconStrike_ModHoming.LightProjectile_FalconStrike_ModHoming_C.HomeToTarget02
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02 final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02) == 0x000008, "Wrong alignment on LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02");
static_assert(sizeof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02) == 0x000010, "Wrong size on LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02, Projectile) == 0x000000, "Member 'LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000008, "Member 'LightProjectile_FalconStrike_ModHoming_C_HomeToTarget02::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

// Function LightProjectile_FalconStrike_ModHoming.LightProjectile_FalconStrike_ModHoming_C.HomeToTarget03
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03 final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03) == 0x000008, "Wrong alignment on LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03");
static_assert(sizeof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03) == 0x000008, "Wrong size on LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03, Projectile) == 0x000000, "Member 'LightProjectile_FalconStrike_ModHoming_C_HomeToTarget03::Projectile' has a wrong offset!");

// Function LightProjectile_FalconStrike_ModHoming.LightProjectile_FalconStrike_ModHoming_C.OnExplode
// 0x0028 (0x0028 - 0x0000)
struct LightProjectile_FalconStrike_ModHoming_C_OnExplode final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeaponType_Hardpoints_Base_C*          K2Node_DynamicCast_AsWeapon_Type_Hardpoints_Base;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFalconStrikeTargetingComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_FalconStrike_ModHoming_C_OnExplode) == 0x000008, "Wrong alignment on LightProjectile_FalconStrike_ModHoming_C_OnExplode");
static_assert(sizeof(LightProjectile_FalconStrike_ModHoming_C_OnExplode) == 0x000028, "Wrong size on LightProjectile_FalconStrike_ModHoming_C_OnExplode");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_OnExplode, Projectile) == 0x000000, "Member 'LightProjectile_FalconStrike_ModHoming_C_OnExplode::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_OnExplode, CallFunc_GetSource_ReturnValue) == 0x000008, "Member 'LightProjectile_FalconStrike_ModHoming_C_OnExplode::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_OnExplode, K2Node_DynamicCast_AsWeapon_Type_Hardpoints_Base) == 0x000010, "Member 'LightProjectile_FalconStrike_ModHoming_C_OnExplode::K2Node_DynamicCast_AsWeapon_Type_Hardpoints_Base' has a wrong offset!");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_OnExplode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'LightProjectile_FalconStrike_ModHoming_C_OnExplode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LightProjectile_FalconStrike_ModHoming_C_OnExplode, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'LightProjectile_FalconStrike_ModHoming_C_OnExplode::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

}

