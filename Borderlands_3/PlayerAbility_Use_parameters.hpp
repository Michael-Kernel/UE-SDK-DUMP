#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAbility_Use

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function PlayerAbility_Use.PlayerAbility_Use_C.ExecuteUbergraph_PlayerAbility_Use
// 0x01B8 (0x01B8 - 0x0000)
struct PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxInputActionData_Discrete> Temp_softobject_Variable;                          // 0x0008(0x0028)(HasGetValueTypeHash)
	class UPawnAttachSlotComponent*               CallFunc_FindPawnAttachSlotComponent_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action5;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action4;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action3;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1; // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue2; // 0x00A8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> Temp_softobject_Variable1;                         // 0x00D0(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action6;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue3; // 0x0100(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action2;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action1;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue4; // 0x0138(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue5; // 0x0160(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UGbxInputActionData_Discrete> Temp_softobject_Variable2;                         // 0x0188(0x0028)(HasGetValueTypeHash)
	class UGbxInputActionData_Discrete*           K2Node_GbxInputActionEvent_Discrete_Action;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use");
static_assert(sizeof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use) == 0x0001B8, "Wrong size on PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, EntryPoint) == 0x000000, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, Temp_softobject_Variable) == 0x000008, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_FindPawnAttachSlotComponent_ReturnValue) == 0x000030, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_FindPawnAttachSlotComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action5) == 0x000038, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action5' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000040, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action4) == 0x000070, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action4' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action3) == 0x000078, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action3' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1) == 0x000080, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue2) == 0x0000A8, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, Temp_softobject_Variable1) == 0x0000D0, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::Temp_softobject_Variable1' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action6) == 0x0000F8, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action6' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue3) == 0x000100, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action2) == 0x000128, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action2' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action1) == 0x000130, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action1' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue4) == 0x000138, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue4' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue5) == 0x000160, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue5' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, Temp_softobject_Variable2) == 0x000188, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::Temp_softobject_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use, K2Node_GbxInputActionEvent_Discrete_Action) == 0x0001B0, "Member 'PlayerAbility_Use_C_ExecuteUbergraph_PlayerAbility_Use::K2Node_GbxInputActionEvent_Discrete_Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_ExitSeat_K2Node_GbxInputActionEvent_Discrete_7::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_8::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_Use_K2Node_GbxInputActionEvent_Discrete_9::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_10::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_GiveUp_K2Node_GbxInputActionEvent_Discrete_11::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_12::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13 final
{
public:
	class UGbxInputActionData_Discrete*           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13");
static_assert(sizeof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13) == 0x000008, "Wrong size on PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13");
static_assert(offsetof(PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13, Action) == 0x000000, "Member 'PlayerAbility_Use_C_GbxInpActEvt_InputAction_Discrete_UseAlt_K2Node_GbxInputActionEvent_Discrete_13::Action' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.StartUseInner
// 0x0018 (0x0018 - 0x0000)
struct PlayerAbility_Use_C_StartUseInner final
{
public:
	EUsabilityType                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUseComponent*                          CallFunc_GetUseComponent_Res;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerAbility_Use_C_StartUseInner) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_StartUseInner");
static_assert(sizeof(PlayerAbility_Use_C_StartUseInner) == 0x000018, "Wrong size on PlayerAbility_Use_C_StartUseInner");
static_assert(offsetof(PlayerAbility_Use_C_StartUseInner, Type) == 0x000000, "Member 'PlayerAbility_Use_C_StartUseInner::Type' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_StartUseInner, CallFunc_GetUseComponent_Res) == 0x000008, "Member 'PlayerAbility_Use_C_StartUseInner::CallFunc_GetUseComponent_Res' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_StartUseInner, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerAbility_Use_C_StartUseInner::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.StopUseInner
// 0x0018 (0x0018 - 0x0000)
struct PlayerAbility_Use_C_StopUseInner final
{
public:
	EUsabilityType                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUseComponent*                          CallFunc_GetUseComponent_Res;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerAbility_Use_C_StopUseInner) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_StopUseInner");
static_assert(sizeof(PlayerAbility_Use_C_StopUseInner) == 0x000018, "Wrong size on PlayerAbility_Use_C_StopUseInner");
static_assert(offsetof(PlayerAbility_Use_C_StopUseInner, Type) == 0x000000, "Member 'PlayerAbility_Use_C_StopUseInner::Type' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_StopUseInner, CallFunc_GetUseComponent_Res) == 0x000008, "Member 'PlayerAbility_Use_C_StopUseInner::CallFunc_GetUseComponent_Res' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_StopUseInner, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerAbility_Use_C_StopUseInner::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GetFFYLComponent
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_GetFFYLComponent final
{
public:
	class UFightForYourLifeComponent*             Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_GetFFYLComponent) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GetFFYLComponent");
static_assert(sizeof(PlayerAbility_Use_C_GetFFYLComponent) == 0x000008, "Wrong size on PlayerAbility_Use_C_GetFFYLComponent");
static_assert(offsetof(PlayerAbility_Use_C_GetFFYLComponent, Res) == 0x000000, "Member 'PlayerAbility_Use_C_GetFFYLComponent::Res' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.StartGiveUpInner
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_StartGiveUpInner final
{
public:
	class UFightForYourLifeComponent*             CallFunc_GetFFYLComponent_Res;                     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_StartGiveUpInner) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_StartGiveUpInner");
static_assert(sizeof(PlayerAbility_Use_C_StartGiveUpInner) == 0x000008, "Wrong size on PlayerAbility_Use_C_StartGiveUpInner");
static_assert(offsetof(PlayerAbility_Use_C_StartGiveUpInner, CallFunc_GetFFYLComponent_Res) == 0x000000, "Member 'PlayerAbility_Use_C_StartGiveUpInner::CallFunc_GetFFYLComponent_Res' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.StopGiveUpInner
// 0x0008 (0x0008 - 0x0000)
struct PlayerAbility_Use_C_StopGiveUpInner final
{
public:
	class UFightForYourLifeComponent*             CallFunc_GetFFYLComponent_Res;                     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAbility_Use_C_StopGiveUpInner) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_StopGiveUpInner");
static_assert(sizeof(PlayerAbility_Use_C_StopGiveUpInner) == 0x000008, "Wrong size on PlayerAbility_Use_C_StopGiveUpInner");
static_assert(offsetof(PlayerAbility_Use_C_StopGiveUpInner, CallFunc_GetFFYLComponent_Res) == 0x000000, "Member 'PlayerAbility_Use_C_StopGiveUpInner::CallFunc_GetFFYLComponent_Res' has a wrong offset!");

// Function PlayerAbility_Use.PlayerAbility_Use_C.GetUseComponent
// 0x0018 (0x0018 - 0x0000)
struct PlayerAbility_Use_C_GetUseComponent final
{
public:
	class UUseComponent*                          Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUseComponent*                          CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerAbility_Use_C_GetUseComponent) == 0x000008, "Wrong alignment on PlayerAbility_Use_C_GetUseComponent");
static_assert(sizeof(PlayerAbility_Use_C_GetUseComponent) == 0x000018, "Wrong size on PlayerAbility_Use_C_GetUseComponent");
static_assert(offsetof(PlayerAbility_Use_C_GetUseComponent, Res) == 0x000000, "Member 'PlayerAbility_Use_C_GetUseComponent::Res' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_GetUseComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'PlayerAbility_Use_C_GetUseComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerAbility_Use_C_GetUseComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerAbility_Use_C_GetUseComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

