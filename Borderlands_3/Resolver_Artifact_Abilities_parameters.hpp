#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Resolver_Artifact_Abilities

#include "Basic.hpp"

#include "Struct_Artifact_Abilities_structs.hpp"


namespace SDK::Params
{

// Function Resolver_Artifact_Abilities.Resolver_Artifact_Abilities_C.GetValueForAttribute
// 0x00D0 (0x00D0 - 0x0000)
struct Resolver_Artifact_Abilities_C_GetValueForAttribute final
{
public:
	const class UGbxAttributeData*                Attribute;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UObject*                          Context;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 MyScaler;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyReturn;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MyContext;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEquippedInventoryForSlot_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateAttributeInitializer_ReturnValue; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateAttributeInitializer_ReturnValue1; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_Artifact_Abilities             CallFunc_GetDataTableRowFromHandle_OutRow;         // 0x0088(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromHandle_ReturnValue;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Resolver_Artifact_Abilities_C_GetValueForAttribute) == 0x000008, "Wrong alignment on Resolver_Artifact_Abilities_C_GetValueForAttribute");
static_assert(sizeof(Resolver_Artifact_Abilities_C_GetValueForAttribute) == 0x0000D0, "Wrong size on Resolver_Artifact_Abilities_C_GetValueForAttribute");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, Attribute) == 0x000000, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::Attribute' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, Context) == 0x000008, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::Context' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, ReturnValue) == 0x000010, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, MyScaler) == 0x000018, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::MyScaler' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, MyReturn) == 0x000020, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::MyReturn' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, MyContext) == 0x000028, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::MyContext' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000030, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, K2Node_DynamicCast_AsOak_Character_Player) == 0x000058, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_GetEquippedInventoryForSlot_ReturnValue) == 0x000068, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_GetEquippedInventoryForSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_EvaluateAttributeInitializer_ReturnValue) == 0x000070, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_EvaluateAttributeInitializer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_EvaluateAttributeInitializer_ReturnValue1) == 0x000074, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_EvaluateAttributeInitializer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00007C, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_IsValidClass_ReturnValue) == 0x000081, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_GetDataTableRowFromHandle_OutRow) == 0x000088, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_GetDataTableRowFromHandle_OutRow' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_GetDataTableRowFromHandle_ReturnValue) == 0x0000C0, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_GetDataTableRowFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C4, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0000C8, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Resolver_Artifact_Abilities_C_GetValueForAttribute, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000CC, "Member 'Resolver_Artifact_Abilities_C_GetValueForAttribute::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}

