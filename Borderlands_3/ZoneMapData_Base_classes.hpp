#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZoneMapData_Base

#include "Basic.hpp"

#include "ZoneMapSection_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OakGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ZoneMapData_Base.ZoneMapData_Base_C
// 0x0050 (0x0270 - 0x0220)
class UZoneMapData_Base_C final : public UZoneMapData
{
public:
	TArray<struct FZoneMapSection>                Zone_Map_Sections;                                 // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FTransform                             Planet_Transform;                                  // 0x0230(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Target_Yaw;                                        // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Target_Pitch;                                      // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Target_Scale;                             // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Target_Scale;                                      // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ZoneMapData_Base_C">();
	}
	static class UZoneMapData_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UZoneMapData_Base_C>();
	}
};
static_assert(alignof(UZoneMapData_Base_C) == 0x000010, "Wrong alignment on UZoneMapData_Base_C");
static_assert(sizeof(UZoneMapData_Base_C) == 0x000270, "Wrong size on UZoneMapData_Base_C");
static_assert(offsetof(UZoneMapData_Base_C, Zone_Map_Sections) == 0x000220, "Member 'UZoneMapData_Base_C::Zone_Map_Sections' has a wrong offset!");
static_assert(offsetof(UZoneMapData_Base_C, Planet_Transform) == 0x000230, "Member 'UZoneMapData_Base_C::Planet_Transform' has a wrong offset!");
static_assert(offsetof(UZoneMapData_Base_C, Target_Yaw) == 0x000260, "Member 'UZoneMapData_Base_C::Target_Yaw' has a wrong offset!");
static_assert(offsetof(UZoneMapData_Base_C, Target_Pitch) == 0x000264, "Member 'UZoneMapData_Base_C::Target_Pitch' has a wrong offset!");
static_assert(offsetof(UZoneMapData_Base_C, Override_Target_Scale) == 0x000268, "Member 'UZoneMapData_Base_C::Override_Target_Scale' has a wrong offset!");
static_assert(offsetof(UZoneMapData_Base_C, Target_Scale) == 0x00026C, "Member 'UZoneMapData_Base_C::Target_Scale' has a wrong offset!");

}

