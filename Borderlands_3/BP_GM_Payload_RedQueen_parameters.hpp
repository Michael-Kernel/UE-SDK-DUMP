#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GM_Payload_RedQueen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GM_Payload_RedQueen.BP_GM_Payload_RedQueen_C.K2_GrenadeBeginPlay
// 0x0070 (0x0070 - 0x0000)
struct BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FGrenadeChildGenerationData            CallFunc_GetChildOffset_ReturnValue;               // 0x0040(0x0028)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay) == 0x000008, "Wrong alignment on BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay");
static_assert(sizeof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay) == 0x000070, "Wrong size on BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay, Grenade) == 0x000000, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay, InstanceData) == 0x000010, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay, CallFunc_GetChildOffset_ReturnValue) == 0x000040, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay::CallFunc_GetChildOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeBeginPlay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_RedQueen.BP_GM_Payload_RedQueen_C.K2_NativeDelayCallback
// 0x0360 (0x0360 - 0x0000)
struct BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   DelayName;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize100                 K2Node_MakeStruct_Vector_NetQuantize100;           // 0x0058(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize100                 K2Node_MakeStruct_Vector_NetQuantize1001;          // 0x0070(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FDamageGoreModifiers                   K2Node_MakeStruct_DamageGoreModifiers;             // 0x007C(0x0008)(NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment;             // 0x0088(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x00B0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	class AGrenade*                               CallFunc_SpawnChildGrenade_ReturnValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult1;   // 0x0178(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLightBeamAttachment                   K2Node_MakeStruct_LightBeamAttachment1;            // 0x0208(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FLightBeamInitializationData           K2Node_MakeStruct_LightBeamInitializationData;     // 0x0230(0x0128)(ContainsInstancedReference)
};
static_assert(alignof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback) == 0x000010, "Wrong alignment on BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback");
static_assert(sizeof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback) == 0x000360, "Wrong size on BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, Grenade) == 0x000000, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, InstanceData) == 0x000010, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, DelayName) == 0x000040, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::DelayName' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_SwitchName_CmpSuccess) == 0x000048, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_MakeStruct_Vector_NetQuantize100) == 0x000058, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_MakeStruct_Vector_NetQuantize100' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000068, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_MakeStruct_Vector_NetQuantize1001) == 0x000070, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_MakeStruct_Vector_NetQuantize1001' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_MakeStruct_DamageGoreModifiers) == 0x00007C, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_MakeStruct_DamageGoreModifiers' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightBeamAttachment) == 0x000088, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightBeamAttachment' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x0000B0, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, CallFunc_GetTransform_ReturnValue) == 0x000140, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, CallFunc_SpawnChildGrenade_ReturnValue) == 0x000170, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::CallFunc_SpawnChildGrenade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, CallFunc_K2_AddActorLocalOffset_SweepHitResult1) == 0x000178, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::CallFunc_K2_AddActorLocalOffset_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightBeamAttachment1) == 0x000208, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightBeamAttachment1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightBeamInitializationData) == 0x000230, "Member 'BP_GM_Payload_RedQueen_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightBeamInitializationData' has a wrong offset!");

// Function BP_GM_Payload_RedQueen.BP_GM_Payload_RedQueen_C.K2_UpdateChildGeneration
// 0x007C (0x007C - 0x0000)
struct BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration final
{
public:
	struct FGrenadeChildGenerationData            InGenerationData;                                  // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FGrenadeChildGenerationData            GenerationData;                                    // 0x0028(0x0028)(Parm, OutParm, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrenadeChildGenerationData            K2Node_MakeStruct_GrenadeChildGenerationData;      // 0x0054(0x0028)(NoDestructor)
};
static_assert(alignof(BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration) == 0x000004, "Wrong alignment on BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration");
static_assert(sizeof(BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration) == 0x00007C, "Wrong size on BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration, InGenerationData) == 0x000000, "Member 'BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration::InGenerationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration, GenerationData) == 0x000028, "Member 'BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration::GenerationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration, K2Node_MakeStruct_GrenadeChildGenerationData) == 0x000054, "Member 'BP_GM_Payload_RedQueen_C_K2_UpdateChildGeneration::K2Node_MakeStruct_GrenadeChildGenerationData' has a wrong offset!");

// Function BP_GM_Payload_RedQueen.BP_GM_Payload_RedQueen_C.K2_GrenadeInitialized
// 0x0040 (0x0040 - 0x0000)
struct BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized) == 0x000008, "Wrong alignment on BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized");
static_assert(sizeof(BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized) == 0x000040, "Wrong size on BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized, Grenade) == 0x000000, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized, InstanceData) == 0x000010, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeInitialized::InstanceData' has a wrong offset!");

// Function BP_GM_Payload_RedQueen.BP_GM_Payload_RedQueen_C.K2_GrenadeExplode
// 0x0040 (0x0040 - 0x0000)
struct BP_GM_Payload_RedQueen_C_K2_GrenadeExplode final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_RedQueen_C_K2_GrenadeExplode) == 0x000008, "Wrong alignment on BP_GM_Payload_RedQueen_C_K2_GrenadeExplode");
static_assert(sizeof(BP_GM_Payload_RedQueen_C_K2_GrenadeExplode) == 0x000040, "Wrong size on BP_GM_Payload_RedQueen_C_K2_GrenadeExplode");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeExplode, Grenade) == 0x000000, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeExplode::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeExplode, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeExplode::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeExplode, InstanceData) == 0x000010, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeExplode::InstanceData' has a wrong offset!");

// Function BP_GM_Payload_RedQueen.BP_GM_Payload_RedQueen_C.K2_GrenadeLastBounce
// 0x0040 (0x0040 - 0x0000)
struct BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce) == 0x000008, "Wrong alignment on BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce");
static_assert(sizeof(BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce) == 0x000040, "Wrong size on BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce, Grenade) == 0x000000, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce, InstanceData) == 0x000010, "Member 'BP_GM_Payload_RedQueen_C_K2_GrenadeLastBounce::InstanceData' has a wrong offset!");

}

