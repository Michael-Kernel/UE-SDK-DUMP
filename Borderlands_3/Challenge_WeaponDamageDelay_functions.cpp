#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_WeaponDamageDelay

#include "Basic.hpp"

#include "Challenge_WeaponDamageDelay_classes.hpp"
#include "Challenge_WeaponDamageDelay_parameters.hpp"


namespace SDK
{

// Function Challenge_WeaponDamageDelay.Challenge_WeaponDamageDelay_C.ExecuteUbergraph_Challenge_WeaponDamageDelay
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_WeaponDamageDelay_C::ExecuteUbergraph_Challenge_WeaponDamageDelay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_WeaponDamageDelay_C", "ExecuteUbergraph_Challenge_WeaponDamageDelay");

	Params::Challenge_WeaponDamageDelay_C_ExecuteUbergraph_Challenge_WeaponDamageDelay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_WeaponDamageDelay.Challenge_WeaponDamageDelay_C.CheckDamageDealt
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxDamageType*                   DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageSource*                    DamageSource                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamagedActor_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDamageDetails             Details                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UChallenge_WeaponDamageDelay_C::CheckDamageDealt(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor_0, const struct FCausedDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_WeaponDamageDelay_C", "CheckDamageDealt");

	Params::Challenge_WeaponDamageDelay_C_CheckDamageDealt Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.DamageSource = DamageSource;
	Parms.DamagedActor_0 = DamagedActor_0;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_WeaponDamageDelay.Challenge_WeaponDamageDelay_C.OnInitChallengeInstance
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UChallengesComponent*             OwningChallenges                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGbxCharacter*                    AssociatedCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_WeaponDamageDelay_C::OnInitChallengeInstance(class UChallengesComponent* OwningChallenges, class AGbxCharacter* AssociatedCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_WeaponDamageDelay_C", "OnInitChallengeInstance");

	Params::Challenge_WeaponDamageDelay_C_OnInitChallengeInstance Parms{};

	Parms.OwningChallenges = OwningChallenges;
	Parms.AssociatedCharacter = AssociatedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_WeaponDamageDelay.Challenge_WeaponDamageDelay_C.SetBinds
// (Public, BlueprintCallable, BlueprintEvent, Const)

void UChallenge_WeaponDamageDelay_C::SetBinds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_WeaponDamageDelay_C", "SetBinds");

	UObject::ProcessEvent(Func, nullptr);
}

}

