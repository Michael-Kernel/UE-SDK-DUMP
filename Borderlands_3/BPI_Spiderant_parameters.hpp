#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Spiderant

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_ThrowWebBallBounce
// 0x0001 (0x0001 - 0x0000)
struct BPI_Spiderant_C_Spiderant_ThrowWebBallBounce final
{
public:
	bool                                          bIsDirectThrow;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_ThrowWebBallBounce) == 0x000001, "Wrong alignment on BPI_Spiderant_C_Spiderant_ThrowWebBallBounce");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_ThrowWebBallBounce) == 0x000001, "Wrong size on BPI_Spiderant_C_Spiderant_ThrowWebBallBounce");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_ThrowWebBallBounce, bIsDirectThrow) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_ThrowWebBallBounce::bIsDirectThrow' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_QueenStompSummon
// 0x000C (0x000C - 0x0000)
struct BPI_Spiderant_C_Spiderant_QueenStompSummon final
{
public:
	struct FVector                                SummonLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_QueenStompSummon) == 0x000004, "Wrong alignment on BPI_Spiderant_C_Spiderant_QueenStompSummon");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_QueenStompSummon) == 0x00000C, "Wrong size on BPI_Spiderant_C_Spiderant_QueenStompSummon");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_QueenStompSummon, SummonLocation) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_QueenStompSummon::SummonLocation' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_QueenStompSummonLeft
// 0x000C (0x000C - 0x0000)
struct BPI_Spiderant_C_Spiderant_QueenStompSummonLeft final
{
public:
	struct FVector                                SummonLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_QueenStompSummonLeft) == 0x000004, "Wrong alignment on BPI_Spiderant_C_Spiderant_QueenStompSummonLeft");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_QueenStompSummonLeft) == 0x00000C, "Wrong size on BPI_Spiderant_C_Spiderant_QueenStompSummonLeft");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_QueenStompSummonLeft, SummonLocation) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_QueenStompSummonLeft::SummonLocation' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_QueenStompSummonRight
// 0x000C (0x000C - 0x0000)
struct BPI_Spiderant_C_Spiderant_QueenStompSummonRight final
{
public:
	struct FVector                                SummonLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_QueenStompSummonRight) == 0x000004, "Wrong alignment on BPI_Spiderant_C_Spiderant_QueenStompSummonRight");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_QueenStompSummonRight) == 0x00000C, "Wrong size on BPI_Spiderant_C_Spiderant_QueenStompSummonRight");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_QueenStompSummonRight, SummonLocation) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_QueenStompSummonRight::SummonLocation' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_KingDeathThrow
// 0x0001 (0x0001 - 0x0000)
struct BPI_Spiderant_C_Spiderant_KingDeathThrow final
{
public:
	bool                                          AbdomenGone;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_KingDeathThrow) == 0x000001, "Wrong alignment on BPI_Spiderant_C_Spiderant_KingDeathThrow");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_KingDeathThrow) == 0x000001, "Wrong size on BPI_Spiderant_C_Spiderant_KingDeathThrow");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_KingDeathThrow, AbdomenGone) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_KingDeathThrow::AbdomenGone' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_KingDeathThrowStart
// 0x0001 (0x0001 - 0x0000)
struct BPI_Spiderant_C_Spiderant_KingDeathThrowStart final
{
public:
	bool                                          AbdomenGone;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_KingDeathThrowStart) == 0x000001, "Wrong alignment on BPI_Spiderant_C_Spiderant_KingDeathThrowStart");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_KingDeathThrowStart) == 0x000001, "Wrong size on BPI_Spiderant_C_Spiderant_KingDeathThrowStart");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_KingDeathThrowStart, AbdomenGone) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_KingDeathThrowStart::AbdomenGone' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_WebBeamYank
// 0x0008 (0x0008 - 0x0000)
struct BPI_Spiderant_C_Spiderant_WebBeamYank final
{
public:
	class AActor*                                 WhoToYank;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_WebBeamYank) == 0x000008, "Wrong alignment on BPI_Spiderant_C_Spiderant_WebBeamYank");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_WebBeamYank) == 0x000008, "Wrong size on BPI_Spiderant_C_Spiderant_WebBeamYank");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_WebBeamYank, WhoToYank) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_WebBeamYank::WhoToYank' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_QueenStompSummon4
// 0x000C (0x000C - 0x0000)
struct BPI_Spiderant_C_Spiderant_QueenStompSummon4 final
{
public:
	struct FVector                                SummonLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_QueenStompSummon4) == 0x000004, "Wrong alignment on BPI_Spiderant_C_Spiderant_QueenStompSummon4");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_QueenStompSummon4) == 0x00000C, "Wrong size on BPI_Spiderant_C_Spiderant_QueenStompSummon4");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_QueenStompSummon4, SummonLocation) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_QueenStompSummon4::SummonLocation' has a wrong offset!");

// Function BPI_Spiderant.BPI_Spiderant_C.Spiderant_TargetChanged
// 0x0008 (0x0008 - 0x0000)
struct BPI_Spiderant_C_Spiderant_TargetChanged final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Spiderant_C_Spiderant_TargetChanged) == 0x000008, "Wrong alignment on BPI_Spiderant_C_Spiderant_TargetChanged");
static_assert(sizeof(BPI_Spiderant_C_Spiderant_TargetChanged) == 0x000008, "Wrong size on BPI_Spiderant_C_Spiderant_TargetChanged");
static_assert(offsetof(BPI_Spiderant_C_Spiderant_TargetChanged, TargetActor) == 0x000000, "Member 'BPI_Spiderant_C_Spiderant_TargetChanged::TargetActor' has a wrong offset!");

}

