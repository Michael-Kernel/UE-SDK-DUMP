#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StandIn_Operative_Digiclone

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass StandIn_Operative_Digiclone.StandIn_Operative_Digiclone_C
// 0x0020 (0x0598 - 0x0578)
class AStandIn_Operative_Digiclone_C : public AStandInAuxiliaryActor
{
public:
	uint8                                         Pad_578[0x8];                                      // 0x0578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(Transient, DuplicateTransient)
	class UGbxSkeletalMeshComponent*              HeadMesh;                                          // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              BodyMesh;                                          // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_StandIn_Operative_Digiclone(int32 EntryPoint);
	void BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_CharacterCustomizationApplied__DelegateSignature_StandIn_Operative_Digiclone(class UGbxCustomizationData* Customization);
	void OnReceivedClonedWeaponAppearance(class USceneComponent* BaseComponent);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StandIn_Operative_Digiclone_C">();
	}
	static class AStandIn_Operative_Digiclone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStandIn_Operative_Digiclone_C>();
	}
};
static_assert(alignof(AStandIn_Operative_Digiclone_C) == 0x000008, "Wrong alignment on AStandIn_Operative_Digiclone_C");
static_assert(sizeof(AStandIn_Operative_Digiclone_C) == 0x000598, "Wrong size on AStandIn_Operative_Digiclone_C");
static_assert(offsetof(AStandIn_Operative_Digiclone_C, UberGraphFrame) == 0x000580, "Member 'AStandIn_Operative_Digiclone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AStandIn_Operative_Digiclone_C, HeadMesh) == 0x000588, "Member 'AStandIn_Operative_Digiclone_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(AStandIn_Operative_Digiclone_C, BodyMesh) == 0x000590, "Member 'AStandIn_Operative_Digiclone_C::BodyMesh' has a wrong offset!");

}

