#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WwiseAudio

#include "Basic.hpp"

#include "WwiseAudio_classes.hpp"
#include "WwiseAudio_parameters.hpp"


namespace SDK
{

// Function WwiseAudio.WwiseAmbientSound.GetAudioEmitterLocation
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ListenerLocation                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWwiseAmbientSound::GetAudioEmitterLocation(const struct FVector& ListenerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAmbientSound", "GetAudioEmitterLocation");

	Params::WwiseAmbientSound_GetAudioEmitterLocation Parms{};

	Parms.ListenerLocation = std::move(ListenerLocation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAmbientSound.StartAmbientSound
// (Final, Native, Public, BlueprintCallable)

void AWwiseAmbientSound::StartAmbientSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAmbientSound", "StartAmbientSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAmbientSound.StopAmbientSound
// (Final, Native, Public, BlueprintCallable)

void AWwiseAmbientSound::StopAmbientSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAmbientSound", "StopAmbientSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAmbientSound.ToggleAmbientSound
// (Final, Native, Public, BlueprintCallable)

void AWwiseAmbientSound::ToggleAmbientSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAmbientSound", "ToggleAmbientSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.GetPlayingInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FWwisePlaybackInstance>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FWwisePlaybackInstance> UWwiseAudioComponent::GetPlayingInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "GetPlayingInstances");

	Params::WwiseAudioComponent_GetPlayingInstances Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponent.GetRtpcValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseRtpc*                       RTPC                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWwiseAudioComponent::GetRtpcValue(class UWwiseRtpc* RTPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "GetRtpcValue");

	Params::WwiseAudioComponent_GetRtpcValue Parms{};

	Parms.RTPC = RTPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponent.IsPossiblyAudible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*                      WwiseEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EventAttenuationScale                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWwiseAudioComponent::IsPossiblyAudible(class UWwiseEvent* WwiseEvent, float EventAttenuationScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "IsPossiblyAudible");

	Params::WwiseAudioComponent_IsPossiblyAudible Parms{};

	Parms.WwiseEvent = WwiseEvent;
	Parms.EventAttenuationScale = EventAttenuationScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponent.Jettison
// (Final, Native, Public, BlueprintCallable)

void UWwiseAudioComponent::Jettison()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "Jettison");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.MakeMidiNote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NoteNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseEvent*                      AssociatedEvent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::MakeMidiNote(int32 NoteNum, int32 Velocity, int32 Channel, float Duration, float StartTime, class UWwiseEvent* AssociatedEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "MakeMidiNote");

	Params::WwiseAudioComponent_MakeMidiNote Parms{};

	Parms.NoteNum = NoteNum;
	Parms.Velocity = Velocity;
	Parms.Channel = Channel;
	Parms.Duration = Duration;
	Parms.StartTime = StartTime;
	Parms.AssociatedEvent = AssociatedEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.PostTrigger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseTrigger*                    Trigger                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::PostTrigger(class UWwiseTrigger* Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "PostTrigger");

	Params::WwiseAudioComponent_PostTrigger Parms{};

	Parms.Trigger = Trigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.PostWwiseEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*                      WwiseEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Flags_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWwisePlaybackInstance           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWwisePlaybackInstance UWwiseAudioComponent::PostWwiseEvent(class UWwiseEvent* WwiseEvent, int32 Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "PostWwiseEvent");

	Params::WwiseAudioComponent_PostWwiseEvent Parms{};

	Parms.WwiseEvent = WwiseEvent;
	Parms.Flags_0 = Flags_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponent.RegisterRtpcValueCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UWwiseRtpc*>               CallbackRtpcs                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::RegisterRtpcValueCallback(const TArray<class UWwiseRtpc*>& CallbackRtpcs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "RegisterRtpcValueCallback");

	Params::WwiseAudioComponent_RegisterRtpcValueCallback Parms{};

	Parms.CallbackRtpcs = std::move(CallbackRtpcs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.ScaleAttenuation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ScalingFactor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::ScaleAttenuation(float ScalingFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "ScaleAttenuation");

	Params::WwiseAudioComponent_ScaleAttenuation Parms{};

	Parms.ScalingFactor = ScalingFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.ScaleToRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::ScaleToRadius(float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "ScaleToRadius");

	Params::WwiseAudioComponent_ScaleToRadius Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.SetEmitterLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FWwiseLocationOverride>   NewLocations                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EWwiseMultiPositionType                 MultiPositionType_0                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocationsAreRelative                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::SetEmitterLocations(const TArray<struct FWwiseLocationOverride>& NewLocations, EWwiseMultiPositionType MultiPositionType_0, bool bLocationsAreRelative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "SetEmitterLocations");

	Params::WwiseAudioComponent_SetEmitterLocations Parms{};

	Parms.NewLocations = std::move(NewLocations);
	Parms.MultiPositionType_0 = MultiPositionType_0;
	Parms.bLocationsAreRelative = bLocationsAreRelative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.SetRTPCValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseRtpc*                       GameParameter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueChangeDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::SetRTPCValue(class UWwiseRtpc* GameParameter, float Value, float ValueChangeDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "SetRTPCValue");

	Params::WwiseAudioComponent_SetRTPCValue Parms{};

	Parms.GameParameter = GameParameter;
	Parms.Value = Value;
	Parms.ValueChangeDuration = ValueChangeDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.SetSwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseSwitch*                     WwiseSwitch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::SetSwitch(class UWwiseSwitch* WwiseSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "SetSwitch");

	Params::WwiseAudioComponent_SetSwitch Parms{};

	Parms.WwiseSwitch = WwiseSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.StartManagedLoop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*                      NewLoopEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::StartManagedLoop(class UWwiseEvent* NewLoopEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "StartManagedLoop");

	Params::WwiseAudioComponent_StartManagedLoop Parms{};

	Parms.NewLoopEvent = NewLoopEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.StopAll
// (Final, Native, Public, BlueprintCallable)

void UWwiseAudioComponent::StopAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "StopAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.StopManagedLoop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*                      OptionalStopEvent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseAudioComponent::StopManagedLoop(class UWwiseEvent* OptionalStopEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "StopManagedLoop");

	Params::WwiseAudioComponent_StopManagedLoop Parms{};

	Parms.OptionalStopEvent = OptionalStopEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioComponent.GetMaxAttenuationRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWwiseAudioComponent::GetMaxAttenuationRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "GetMaxAttenuationRadius");

	Params::WwiseAudioComponent_GetMaxAttenuationRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponent.GetRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWwiseAudioComponent::GetRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "GetRadius");

	Params::WwiseAudioComponent_GetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWwiseAudioComponent::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponent", "IsPlaying");

	Params::WwiseAudioComponent_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioComponentPool.GetPooledComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseAudioComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseAudioComponent* UWwiseAudioComponentPool::GetPooledComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioComponentPool", "GetPooledComponent");

	Params::WwiseAudioComponentPool_GetPooledComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseEvent.GetMaxDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWwiseEvent::GetMaxDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseEvent", "GetMaxDuration");

	Params::WwiseEvent_GetMaxDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseAudioEffect.ActivateEffect
// (Final, Native, Public, BlueprintCallable)

void UWwiseAudioEffect::ActivateEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioEffect", "ActivateEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseAudioEffect.DeactivateEffect
// (Final, Native, Public, BlueprintCallable)

void UWwiseAudioEffect::DeactivateEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseAudioEffect", "DeactivateEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.AddOutputCaptureMarker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           MarkerText                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::AddOutputCaptureMarker(const class FString& MarkerText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "AddOutputCaptureMarker");

	Params::WwiseGameplayStatics_AddOutputCaptureMarker Parms{};

	Parms.MarkerText = std::move(MarkerText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.ConvertLocationsToWwiseLocationOverrides
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  Locations                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FRotator                         Orientation                                            (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                                   Gain                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWwiseLocationOverride>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FWwiseLocationOverride> UWwiseGameplayStatics::ConvertLocationsToWwiseLocationOverrides(const TArray<struct FVector>& Locations, const struct FRotator& Orientation, float Gain, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "ConvertLocationsToWwiseLocationOverrides");

	Params::WwiseGameplayStatics_ConvertLocationsToWwiseLocationOverrides Parms{};

	Parms.Locations = std::move(Locations);
	Parms.Orientation = std::move(Orientation);
	Parms.Gain = Gain;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.CreateAudioEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseAuxBus*                     AuxBus                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseEffectType                        EffectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WetAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAudioEffect*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseAudioEffect* UWwiseGameplayStatics::CreateAudioEffect(class UWwiseAuxBus* AuxBus, EWwiseEffectType EffectType, float WetAmount, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "CreateAudioEffect");

	Params::WwiseGameplayStatics_CreateAudioEffect Parms{};

	Parms.AuxBus = AuxBus;
	Parms.EffectType = EffectType;
	Parms.WetAmount = WetAmount;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.CreateListenerAudioEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseAuxBus*                     AuxBus                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WetAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseListenerEnvironmentalEffect*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseListenerEnvironmentalEffect* UWwiseGameplayStatics::CreateListenerAudioEffect(class UWwiseAuxBus* AuxBus, class AActor* TargetActor, float WetAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "CreateListenerAudioEffect");

	Params::WwiseGameplayStatics_CreateListenerAudioEffect Parms{};

	Parms.AuxBus = AuxBus;
	Parms.TargetActor = TargetActor;
	Parms.WetAmount = WetAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.CreateZoneAudioEffect
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAuxBus*                     AuxBus                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EffectLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EffectSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EffectAttenuationDistance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseZoneAudioEffect*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseZoneAudioEffect* UWwiseGameplayStatics::CreateZoneAudioEffect(class UObject* WorldContextObject, class UWwiseAuxBus* AuxBus, const struct FVector& EffectLocation, float EffectSize, float EffectAttenuationDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "CreateZoneAudioEffect");

	Params::WwiseGameplayStatics_CreateZoneAudioEffect Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AuxBus = AuxBus;
	Parms.EffectLocation = std::move(EffectLocation);
	Parms.EffectSize = EffectSize;
	Parms.EffectAttenuationDistance = EffectAttenuationDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.ExecuteActionOnAudioInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (Parm, NativeAccessSpecifierPublic)
// EWwiseEventAction                       Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::ExecuteActionOnAudioInstance(const struct FWwisePlaybackInstance& PlaybackInstance, EWwiseEventAction Action, float TransitionDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "ExecuteActionOnAudioInstance");

	Params::WwiseGameplayStatics_ExecuteActionOnAudioInstance Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.Action = Action;
	Parms.TransitionDuration = TransitionDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.GetAudioComponentFromPlaybackInstance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCreateIfNotFound                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAudioComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseAudioComponent* UWwiseGameplayStatics::GetAudioComponentFromPlaybackInstance(const struct FWwisePlaybackInstance& PlaybackInstance, bool bCreateIfNotFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetAudioComponentFromPlaybackInstance");

	Params::WwiseGameplayStatics_GetAudioComponentFromPlaybackInstance Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.bCreateIfNotFound = bCreateIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.GetAudioPlaybackPosition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bExtrapolateSubFrameTime                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWwiseGameplayStatics::GetAudioPlaybackPosition(const struct FWwisePlaybackInstance& PlaybackInstance, bool bExtrapolateSubFrameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetAudioPlaybackPosition");

	Params::WwiseGameplayStatics_GetAudioPlaybackPosition Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.bExtrapolateSubFrameTime = bExtrapolateSubFrameTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.GetClosestListenerLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TestPosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ClosestLocation                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::GetClosestListenerLocation(class UObject* WorldContextObject, const struct FVector& TestPosition, struct FVector* ClosestLocation, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetClosestListenerLocation");

	Params::WwiseGameplayStatics_GetClosestListenerLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TestPosition = std::move(TestPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ClosestLocation != nullptr)
		*ClosestLocation = std::move(Parms.ClosestLocation);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function WwiseAudio.WwiseGameplayStatics.GetDefaultWwiseComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCreateIfNotFound                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAudioComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseAudioComponent* UWwiseGameplayStatics::GetDefaultWwiseComponent(class AActor* Actor, bool bCreateIfNotFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetDefaultWwiseComponent");

	Params::WwiseGameplayStatics_GetDefaultWwiseComponent Parms{};

	Parms.Actor = Actor;
	Parms.bCreateIfNotFound = bCreateIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.GetEstimatedAudioDuration
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWwiseGameplayStatics::GetEstimatedAudioDuration(const struct FWwisePlaybackInstance& PlaybackInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetEstimatedAudioDuration");

	Params::WwiseGameplayStatics_GetEstimatedAudioDuration Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.GetPlayingEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWwiseEvent*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseEvent* UWwiseGameplayStatics::GetPlayingEvent(const struct FWwisePlaybackInstance& PlaybackInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetPlayingEvent");

	Params::WwiseGameplayStatics_GetPlayingEvent Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.GetWwiseBankEfficiencyReport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FWwiseBankEfficiencyReportDatum>ReportData                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::GetWwiseBankEfficiencyReport(TArray<struct FWwiseBankEfficiencyReportDatum>* ReportData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "GetWwiseBankEfficiencyReport");

	Params::WwiseGameplayStatics_GetWwiseBankEfficiencyReport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ReportData != nullptr)
		*ReportData = std::move(Parms.ReportData);
}


// Function WwiseAudio.WwiseGameplayStatics.IsAudioPaused
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWwiseGameplayStatics::IsAudioPaused(const struct FWwisePlaybackInstance& PlaybackInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "IsAudioPaused");

	Params::WwiseGameplayStatics_IsAudioPaused Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.IsAudioPlaying
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWwiseGameplayStatics::IsAudioPlaying(const struct FWwisePlaybackInstance& PlaybackInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "IsAudioPlaying");

	Params::WwiseGameplayStatics_IsAudioPlaying Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.IsPossiblyAudible
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseEvent*                      InWwiseEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AttenuationScale                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EmitterRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWwiseGameplayStatics::IsPossiblyAudible(class UObject* WorldContextObject, class UWwiseEvent* InWwiseEvent, const struct FVector& Location, float AttenuationScale, float EmitterRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "IsPossiblyAudible");

	Params::WwiseGameplayStatics_IsPossiblyAudible Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InWwiseEvent = InWwiseEvent;
	Parms.Location = std::move(Location);
	Parms.AttenuationScale = AttenuationScale;
	Parms.EmitterRadius = EmitterRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.LoadBank
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseBank*                       Bank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::LoadBank(class UWwiseBank* Bank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "LoadBank");

	Params::WwiseGameplayStatics_LoadBank Parms{};

	Parms.Bank = Bank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.PauseAudio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (Parm, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::PauseAudio(const struct FWwisePlaybackInstance& PlaybackInstance, float TransitionDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "PauseAudio");

	Params::WwiseGameplayStatics_PauseAudio Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.TransitionDuration = TransitionDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.PostAttachedEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*                      WwiseEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           AttachToActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EmitterRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWwisePlaybackInstance           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWwisePlaybackInstance UWwiseGameplayStatics::PostAttachedEvent(class UWwiseEvent* WwiseEvent, class AActor* AttachToActor, class USceneComponent* AttachToComponent, class FName SocketName, float EmitterRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "PostAttachedEvent");

	Params::WwiseGameplayStatics_PostAttachedEvent Parms{};

	Parms.WwiseEvent = WwiseEvent;
	Parms.AttachToActor = AttachToActor;
	Parms.AttachToComponent = AttachToComponent;
	Parms.SocketName = SocketName;
	Parms.EmitterRadius = EmitterRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.PostEventAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseEvent*                      WwiseEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EmitterRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Orientation                                            (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FWwisePlaybackInstance           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWwisePlaybackInstance UWwiseGameplayStatics::PostEventAtLocation(class UObject* WorldContextObject, class UWwiseEvent* WwiseEvent, const struct FVector& Location, float EmitterRadius, const struct FRotator& Orientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "PostEventAtLocation");

	Params::WwiseGameplayStatics_PostEventAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WwiseEvent = WwiseEvent;
	Parms.Location = std::move(Location);
	Parms.EmitterRadius = EmitterRadius;
	Parms.Orientation = std::move(Orientation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.PostEventAtMultipleLocations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseEvent*                      WwiseEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWwiseLocationOverride>   NewLocations                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EWwiseMultiPositionType                 MultiPositionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWwisePlaybackInstance           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWwisePlaybackInstance UWwiseGameplayStatics::PostEventAtMultipleLocations(class UObject* WorldContextObject, class UWwiseEvent* WwiseEvent, const TArray<struct FWwiseLocationOverride>& NewLocations, EWwiseMultiPositionType MultiPositionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "PostEventAtMultipleLocations");

	Params::WwiseGameplayStatics_PostEventAtMultipleLocations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WwiseEvent = WwiseEvent;
	Parms.NewLocations = std::move(NewLocations);
	Parms.MultiPositionType = MultiPositionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.ResumeAudio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (Parm, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::ResumeAudio(const struct FWwisePlaybackInstance& PlaybackInstance, float TransitionDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "ResumeAudio");

	Params::WwiseGameplayStatics_ResumeAudio Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.TransitionDuration = TransitionDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.SetAudioPlaybackPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (Parm, NativeAccessSpecifierPublic)
// float                                   PlaybackPosition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::SetAudioPlaybackPosition(const struct FWwisePlaybackInstance& PlaybackInstance, float PlaybackPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "SetAudioPlaybackPosition");

	Params::WwiseGameplayStatics_SetAudioPlaybackPosition Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.PlaybackPosition = PlaybackPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.SetGlobalRTPCValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseRtpc*                       GameParameter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::SetGlobalRTPCValue(class UWwiseRtpc* GameParameter, float Value, float TransitionDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "SetGlobalRTPCValue");

	Params::WwiseGameplayStatics_SetGlobalRTPCValue Parms{};

	Parms.GameParameter = GameParameter;
	Parms.Value = Value;
	Parms.TransitionDuration = TransitionDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.SetGlobalState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseState*                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::SetGlobalState(class UWwiseState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "SetGlobalState");

	Params::WwiseGameplayStatics_SetGlobalState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.SpawnAttachedWwiseComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsTemporaryComponent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachmentComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAudioComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseAudioComponent* UWwiseGameplayStatics::SpawnAttachedWwiseComponent(class AActor* Actor, class FName SocketName, bool IsTemporaryComponent, class USceneComponent* AttachmentComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "SpawnAttachedWwiseComponent");

	Params::WwiseGameplayStatics_SpawnAttachedWwiseComponent Parms{};

	Parms.Actor = Actor;
	Parms.SocketName = SocketName;
	Parms.IsTemporaryComponent = IsTemporaryComponent;
	Parms.AttachmentComponent = AttachmentComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.SpawnWwiseComponentAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EmitterRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Orientation                                            (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    IsTemporaryComponent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAudioComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseAudioComponent* UWwiseGameplayStatics::SpawnWwiseComponentAtLocation(const class UObject* WorldContextObject, const struct FVector& Location, float EmitterRadius, const struct FRotator& Orientation, bool IsTemporaryComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "SpawnWwiseComponentAtLocation");

	Params::WwiseGameplayStatics_SpawnWwiseComponentAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.EmitterRadius = EmitterRadius;
	Parms.Orientation = std::move(Orientation);
	Parms.IsTemporaryComponent = IsTemporaryComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseGameplayStatics.StartOutputCapture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::StartOutputCapture(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "StartOutputCapture");

	Params::WwiseGameplayStatics_StartOutputCapture Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.StartProfilerCapture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::StartProfilerCapture(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "StartProfilerCapture");

	Params::WwiseGameplayStatics_StartProfilerCapture Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.StopAudio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (Parm, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::StopAudio(const struct FWwisePlaybackInstance& PlaybackInstance, float TransitionDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "StopAudio");

	Params::WwiseGameplayStatics_StopAudio Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.TransitionDuration = TransitionDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.StopOutputCapture
// (Final, Native, Static, Public, BlueprintCallable)

void UWwiseGameplayStatics::StopOutputCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "StopOutputCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.StopProfilerCapture
// (Final, Native, Static, Public, BlueprintCallable)

void UWwiseGameplayStatics::StopProfilerCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "StopProfilerCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.UnloadBank
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWwiseBank*                       Bank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::UnloadBank(class UWwiseBank* Bank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "UnloadBank");

	Params::WwiseGameplayStatics_UnloadBank Parms{};

	Parms.Bank = Bank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.WaitForAudioInputConnection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseAudioInputEvent*            AudioInputEvent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MaxWaitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::WaitForAudioInputConnection(class UObject* WorldContextObject, class UWwiseAudioInputEvent* AudioInputEvent, const struct FLatentActionInfo& LatentInfo, float MaxWaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "WaitForAudioInputConnection");

	Params::WwiseGameplayStatics_WaitForAudioInputConnection Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AudioInputEvent = AudioInputEvent;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.MaxWaitTime = MaxWaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseGameplayStatics.WaitForAudioPlayback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FWwisePlaybackInstance           PlaybackInstance                                       (Parm, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UWwiseGameplayStatics::WaitForAudioPlayback(const struct FWwisePlaybackInstance& PlaybackInstance, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseGameplayStatics", "WaitForAudioPlayback");

	Params::WwiseGameplayStatics_WaitForAudioPlayback Parms{};

	Parms.PlaybackInstance = std::move(PlaybackInstance);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseListenerComponent.FindAssociatedListener
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWwiseListenerComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWwiseListenerComponent* UWwiseListenerComponent::FindAssociatedListener(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WwiseListenerComponent", "FindAssociatedListener");

	Params::WwiseListenerComponent_FindAssociatedListener Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WwiseAudio.WwiseListenerComponent.ConfigureListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*                      WwiseEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseListenerComponent::ConfigureListener(class UWwiseEvent* WwiseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseListenerComponent", "ConfigureListener");

	Params::WwiseListenerComponent_ConfigureListener Parms{};

	Parms.WwiseEvent = WwiseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WwiseAudio.WwiseListenerComponent.SetBusRTPCValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseRtpc*                       GameParameter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueChangeDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWwiseCurveInterpolation                FadeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWwiseListenerComponent::SetBusRTPCValue(class UWwiseRtpc* GameParameter, float Value, float ValueChangeDuration, EWwiseCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WwiseListenerComponent", "SetBusRTPCValue");

	Params::WwiseListenerComponent_SetBusRTPCValue Parms{};

	Parms.GameParameter = GameParameter;
	Parms.Value = Value;
	Parms.ValueChangeDuration = ValueChangeDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

