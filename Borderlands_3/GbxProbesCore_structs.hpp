#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxProbesCore

#include "Basic.hpp"


namespace SDK
{

// Enum GbxProbesCore.EGbxProbeResult
// NumValues: 0x0007
enum class EGbxProbeResult : uint8
{
	Seen                                     = 0,
	Skipped                                  = 1,
	Succeeded                                = 2,
	Failed                                   = 3,
	Disabled                                 = 4,
	Count                                    = 5,
	EGbxProbeResult_MAX                      = 6,
};

// ScriptStruct GbxProbesCore.GbxProbeId
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxProbeId final
{
public:
	class FName                                   Class;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Type;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SubType;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGbxProbeId) == 0x000008, "Wrong alignment on FGbxProbeId");
static_assert(sizeof(FGbxProbeId) == 0x000018, "Wrong size on FGbxProbeId");
static_assert(offsetof(FGbxProbeId, Class) == 0x000000, "Member 'FGbxProbeId::Class' has a wrong offset!");
static_assert(offsetof(FGbxProbeId, Type) == 0x000008, "Member 'FGbxProbeId::Type' has a wrong offset!");
static_assert(offsetof(FGbxProbeId, SubType) == 0x000010, "Member 'FGbxProbeId::SubType' has a wrong offset!");

}

