#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_NogBadass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPChar_Nog_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_NogBadass.BPChar_NogBadass_C
// 0x0060 (0x2650 - 0x25F0)
class ABPChar_NogBadass_C final : public ABPChar_Nog_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_NogBadass_C;                 // 0x25E8(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_DeathLaser;                                     // 0x25F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Shield_DmgState3;                            // 0x25F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Shield_DmgState2;                            // 0x2600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Shield_DmgState1;                            // 0x2608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Shield_DmgState0;                            // 0x2610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Shield_Healthy;                              // 0x2618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_EnergyShieldDrones;                             // 0x2620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_EnergyShield;                                   // 0x2628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              SwitchDroneShieldHealth;                           // 0x2630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Dronenado;                                      // 0x2638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              Switch_Dronenado;                                  // 0x2640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DroneBombHealthPctOfNog;                           // 0x2648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPChar_NogBadass(int32 EntryPoint);
	void BndEvt__StatusEffectManagerComponent_K2Node_ComponentBoundEvent_0_CryoFreezeEvent__DelegateSignature_BPChar_NogBadass();
	void NogBadass_DeathLaserBarrage(bool Enable, class AActor* MyTarget);
	void NogBadass_AttackDeathLaserFX(bool Enable);
	void NogBadass_DronenadoBarrage(bool Enable, class AActor* DefaultTarget);
	void NogBadass_LaunchAllDrones(class AActor* MyTarget, float DelayBetweenLaunch);
	void NogBadass_DroneShieldDisable_FromHitReaction(bool WasDestroyed);
	void DroneShieldDamage(const struct FDamageReactionEventSummary& Damage);
	void DeactivateEnergyShieldParticleSystem();
	void NogBadass_DroneShieldDisable(bool WasDestroyed, class AActor* OptionalDamageCauser);
	void NogBadass_DroneShieldEnable();
	void BadassDroneShieldSwitchByHealth(float DroneShieldHealth, class FName* SwitchStateName);
	void NogBadass_GetDroneBombHealthPctOfNog(float* HealthPctOfNog);
	void Enemy_OnPhaseLockStart();
	void NogCleanupOnDeath();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_NogBadass_C">();
	}
	static class ABPChar_NogBadass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_NogBadass_C>();
	}
};
static_assert(alignof(ABPChar_NogBadass_C) == 0x000010, "Wrong alignment on ABPChar_NogBadass_C");
static_assert(sizeof(ABPChar_NogBadass_C) == 0x002650, "Wrong size on ABPChar_NogBadass_C");
static_assert(offsetof(ABPChar_NogBadass_C, UberGraphFrame_BPChar_NogBadass_C) == 0x0025E8, "Member 'ABPChar_NogBadass_C::UberGraphFrame_BPChar_NogBadass_C' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, PS_DeathLaser) == 0x0025F0, "Member 'ABPChar_NogBadass_C::PS_DeathLaser' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SM_FX_Shield_DmgState3) == 0x0025F8, "Member 'ABPChar_NogBadass_C::SM_FX_Shield_DmgState3' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SM_FX_Shield_DmgState2) == 0x002600, "Member 'ABPChar_NogBadass_C::SM_FX_Shield_DmgState2' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SM_FX_Shield_DmgState1) == 0x002608, "Member 'ABPChar_NogBadass_C::SM_FX_Shield_DmgState1' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SM_FX_Shield_DmgState0) == 0x002610, "Member 'ABPChar_NogBadass_C::SM_FX_Shield_DmgState0' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SM_FX_Shield_Healthy) == 0x002618, "Member 'ABPChar_NogBadass_C::SM_FX_Shield_Healthy' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, PS_EnergyShieldDrones) == 0x002620, "Member 'ABPChar_NogBadass_C::PS_EnergyShieldDrones' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SM_EnergyShield) == 0x002628, "Member 'ABPChar_NogBadass_C::SM_EnergyShield' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, SwitchDroneShieldHealth) == 0x002630, "Member 'ABPChar_NogBadass_C::SwitchDroneShieldHealth' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, PS_Dronenado) == 0x002638, "Member 'ABPChar_NogBadass_C::PS_Dronenado' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, Switch_Dronenado) == 0x002640, "Member 'ABPChar_NogBadass_C::Switch_Dronenado' has a wrong offset!");
static_assert(offsetof(ABPChar_NogBadass_C, DroneBombHealthPctOfNog) == 0x002648, "Member 'ABPChar_NogBadass_C::DroneBombHealthPctOfNog' has a wrong offset!");

}

