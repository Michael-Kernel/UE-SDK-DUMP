#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPIO_SlotMachine

#include "Basic.hpp"

#include "Struct_SlotMachinePrizes_structs.hpp"
#include "Enum_SlotMachineWheelIcons_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_SlotMachineStates_structs.hpp"
#include "Enum_SlotMachinePrizePresentation_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPIO_SlotMachine.BPIO_SlotMachine_C
// 0x0268 (0x07B8 - 0x0550)
class ABPIO_SlotMachine_C : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reel_3_Hologram;                                   // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reel_2_Hologram;                                   // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reel_1_Hologram;                                   // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Reel_Light;                                        // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reel_1;                                            // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Topper;                                         // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Arm;                                               // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reel_3;                                            // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reel_2;                                            // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          NavBlocker;                                        // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TEMP_Trays;                                        // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMissionObserverComponent*              MissionObserver;                                   // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Light_Tray;                                        // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Light_Door;                                        // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door;                                           // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Jackpot_Hologram;                               // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUsableComponent*                       Usable;                                            // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBalanceStateComponent*                 BalanceState;                                      // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavMeshPainterComponent*            GbxNavMeshPainter;                                 // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TEMP_Cabinet;                                      // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakLootableComponent*                  OakLootable;                                       // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Cabinet;                                           // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_Bump_Bump_Location_14E7B956432DE554476C9D9AA699F2F4; // 0x0618(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_Bump_Bump_Rotation_14E7B956432DE554476C9D9AA699F2F4; // 0x0624(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Bump__Direction_14E7B956432DE554476C9D9AA699F2F4; // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Bump;                                     // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_LogoFlash_Scale_D3C081FF4499082482CA3DB5ABE3FA77; // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_LogoFlash__Direction_D3C081FF4499082482CA3DB5ABE3FA77; // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645[0x3];                                      // 0x0645(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_LogoFlash;                                // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Wheels_Wheel3_E81F232649B14B5866AAFB809E57C0B2; // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Wheels_Wheel2_E81F232649B14B5866AAFB809E57C0B2; // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Wheels_Wheel1_E81F232649B14B5866AAFB809E57C0B2; // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Wheels__Direction_E81F232649B14B5866AAFB809E57C0B2; // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65D[0x3];                                      // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Wheels;                                   // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_ArmRotation_Rotation_86398A274C5AAC89B56A76BB625E4BCF; // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_ArmRotation__Direction_86398A274C5AAC89B56A76BB625E4BCF; // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D[0x3];                                      // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_ArmRotation;                              // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   On_Win;                                            // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_Play;                                           // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDataTable*                             SlotMachinePrizes;                                 // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FStruct_SlotMachinePrizes              Prize;                                             // 0x06A0(0x0038)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)
	struct FVector                                Wheel_StartRotations;                              // 0x06D8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Wheel_EndRotations;                                // 0x06E4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Wheel_MinSpins;                                    // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Wheel_Offset;                                      // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetachDelay;                                       // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            SlotPlayer;                                        // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 WinningWheels;                                     // 0x0708(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	UMulticastDelegateProperty_                   On_Jackpot;                                        // 0x0718(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UGbxCondition*                          CheatCondition;                                    // 0x0728(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             CheatPrizeTable;                                   // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	Enum_SlotMachineStates                        SlotMachineState;                                  // 0x0738(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   On_WheelsStopped;                                  // 0x0740(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWwiseEvent*                            Wwise_Wheel1_Stop;                                 // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Wheel2_Stop;                                 // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Wheel3_Stop;                                 // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Music_Play_Out;                              // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Music_Attract;                               // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Spinner_Start;                               // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_Match;                                       // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Wwise_NoMatch;                                     // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Wwise_Mute_Attract_Music;                          // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_SlotMachineState_NewEnumerator1;              // 0x0798(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_SlotMachineState_NewEnumerator2;              // 0x07A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_SlotMachineState_NewEnumerator3;              // 0x07A8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_SlotMachineState_NewEnumerator4;              // 0x07B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Wheel3_Stop();
	void Wheel2_Stop();
	void Wheel1_Stop();
	void Win_SetPrizeMinLevel(const struct FStruct_SlotMachinePrizes& Struct_SlotMachinePrizes);
	void Win_SetPrizeWheels(const struct FStruct_SlotMachinePrizes& Prize_0);
	void Win_Presentation_End();
	void Win_Presentation_Start();
	void Win_Door_Close();
	void Win_Door_Open();
	void Win_Tray_Close();
	void Win_Tray_Open();
	void Play_AwardPrize();
	void OnRep_Prize();
	void Play_Interact(bool* Success);
	void Wheel_UpdateRotations();
	void Wheel_GetTargetRotation(Enum_SlotMachineWheelIcons Icon, float* Rotation);
	void Play_GetResults();
	void UserConstructionScript();
	void Timeline_ArmRotation__FinishedFunc();
	void Timeline_ArmRotation__UpdateFunc();
	void Timeline_Wheels__FinishedFunc();
	void Timeline_Wheels__UpdateFunc();
	void Timeline_Wheels__Wheel3_Stop__EventFunc();
	void Timeline_Wheels__Wheel2_Stop__EventFunc();
	void Timeline_Wheels__Wheel1_Stop__EventFunc();
	void Timeline_LogoFlash__FinishedFunc();
	void Timeline_LogoFlash__UpdateFunc();
	void Timeline_Bump__FinishedFunc();
	void Timeline_Bump__UpdateFunc();
	void BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void Animate_Arm();
	void Animate_Wheels();
	void BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine(class ADroppedInventoryItemPickup* Pickup, class AActor* PickedUpBy);
	void BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine(class ADroppedInventoryItemPickup* Pickup);
	void BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine(class ADroppedInventoryItemPickup* Pickup, class AActor* PickedUpBy);
	void Animate_LogoChange();
	void __UserState_SlotMachineState_1(bool bFromLoad);
	void __UserState_SlotMachineState_2(bool bFromLoad);
	void __UserState_SlotMachineState_3(bool bFromLoad);
	void __UserState_SlotMachineState_4(bool bFromLoad);
	void Animate_Bump();
	void ReceiveBeginPlay();
	void __UserState_SlotMachineState_0(bool bFromLoad);
	void ExecuteUbergraph_BPIO_SlotMachine(int32 EntryPoint);
	void On_WheelsStopped__DelegateSignature();
	void On_Jackpot__DelegateSignature();
	void On_Play__DelegateSignature();
	void On_Win__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPIO_SlotMachine_C">();
	}
	static class ABPIO_SlotMachine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPIO_SlotMachine_C>();
	}
};
static_assert(alignof(ABPIO_SlotMachine_C) == 0x000008, "Wrong alignment on ABPIO_SlotMachine_C");
static_assert(sizeof(ABPIO_SlotMachine_C) == 0x0007B8, "Wrong size on ABPIO_SlotMachine_C");
static_assert(offsetof(ABPIO_SlotMachine_C, UberGraphFrame) == 0x000550, "Member 'ABPIO_SlotMachine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SpotLight) == 0x000558, "Member 'ABPIO_SlotMachine_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_3_Hologram) == 0x000560, "Member 'ABPIO_SlotMachine_C::Reel_3_Hologram' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_2_Hologram) == 0x000568, "Member 'ABPIO_SlotMachine_C::Reel_2_Hologram' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_1_Hologram) == 0x000570, "Member 'ABPIO_SlotMachine_C::Reel_1_Hologram' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_Light) == 0x000578, "Member 'ABPIO_SlotMachine_C::Reel_Light' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, WwiseAudio) == 0x000580, "Member 'ABPIO_SlotMachine_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_1) == 0x000588, "Member 'ABPIO_SlotMachine_C::Reel_1' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SM_Topper) == 0x000590, "Member 'ABPIO_SlotMachine_C::SM_Topper' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Arm) == 0x000598, "Member 'ABPIO_SlotMachine_C::Arm' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_3) == 0x0005A0, "Member 'ABPIO_SlotMachine_C::Reel_3' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Reel_2) == 0x0005A8, "Member 'ABPIO_SlotMachine_C::Reel_2' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, NavBlocker) == 0x0005B0, "Member 'ABPIO_SlotMachine_C::NavBlocker' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, TEMP_Trays) == 0x0005B8, "Member 'ABPIO_SlotMachine_C::TEMP_Trays' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, MissionObserver) == 0x0005C0, "Member 'ABPIO_SlotMachine_C::MissionObserver' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Light_Tray) == 0x0005C8, "Member 'ABPIO_SlotMachine_C::Light_Tray' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Light_Door) == 0x0005D0, "Member 'ABPIO_SlotMachine_C::Light_Door' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SM_Door) == 0x0005D8, "Member 'ABPIO_SlotMachine_C::SM_Door' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SM_Jackpot_Hologram) == 0x0005E0, "Member 'ABPIO_SlotMachine_C::SM_Jackpot_Hologram' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Usable) == 0x0005E8, "Member 'ABPIO_SlotMachine_C::Usable' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, BalanceState) == 0x0005F0, "Member 'ABPIO_SlotMachine_C::BalanceState' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, GbxNavMeshPainter) == 0x0005F8, "Member 'ABPIO_SlotMachine_C::GbxNavMeshPainter' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, TEMP_Cabinet) == 0x000600, "Member 'ABPIO_SlotMachine_C::TEMP_Cabinet' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, OakLootable) == 0x000608, "Member 'ABPIO_SlotMachine_C::OakLootable' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Cabinet) == 0x000610, "Member 'ABPIO_SlotMachine_C::Cabinet' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Bump_Bump_Location_14E7B956432DE554476C9D9AA699F2F4) == 0x000618, "Member 'ABPIO_SlotMachine_C::Timeline_Bump_Bump_Location_14E7B956432DE554476C9D9AA699F2F4' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Bump_Bump_Rotation_14E7B956432DE554476C9D9AA699F2F4) == 0x000624, "Member 'ABPIO_SlotMachine_C::Timeline_Bump_Bump_Rotation_14E7B956432DE554476C9D9AA699F2F4' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Bump__Direction_14E7B956432DE554476C9D9AA699F2F4) == 0x000630, "Member 'ABPIO_SlotMachine_C::Timeline_Bump__Direction_14E7B956432DE554476C9D9AA699F2F4' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Bump) == 0x000638, "Member 'ABPIO_SlotMachine_C::Timeline_Bump' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_LogoFlash_Scale_D3C081FF4499082482CA3DB5ABE3FA77) == 0x000640, "Member 'ABPIO_SlotMachine_C::Timeline_LogoFlash_Scale_D3C081FF4499082482CA3DB5ABE3FA77' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_LogoFlash__Direction_D3C081FF4499082482CA3DB5ABE3FA77) == 0x000644, "Member 'ABPIO_SlotMachine_C::Timeline_LogoFlash__Direction_D3C081FF4499082482CA3DB5ABE3FA77' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_LogoFlash) == 0x000648, "Member 'ABPIO_SlotMachine_C::Timeline_LogoFlash' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Wheels_Wheel3_E81F232649B14B5866AAFB809E57C0B2) == 0x000650, "Member 'ABPIO_SlotMachine_C::Timeline_Wheels_Wheel3_E81F232649B14B5866AAFB809E57C0B2' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Wheels_Wheel2_E81F232649B14B5866AAFB809E57C0B2) == 0x000654, "Member 'ABPIO_SlotMachine_C::Timeline_Wheels_Wheel2_E81F232649B14B5866AAFB809E57C0B2' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Wheels_Wheel1_E81F232649B14B5866AAFB809E57C0B2) == 0x000658, "Member 'ABPIO_SlotMachine_C::Timeline_Wheels_Wheel1_E81F232649B14B5866AAFB809E57C0B2' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Wheels__Direction_E81F232649B14B5866AAFB809E57C0B2) == 0x00065C, "Member 'ABPIO_SlotMachine_C::Timeline_Wheels__Direction_E81F232649B14B5866AAFB809E57C0B2' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_Wheels) == 0x000660, "Member 'ABPIO_SlotMachine_C::Timeline_Wheels' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_ArmRotation_Rotation_86398A274C5AAC89B56A76BB625E4BCF) == 0x000668, "Member 'ABPIO_SlotMachine_C::Timeline_ArmRotation_Rotation_86398A274C5AAC89B56A76BB625E4BCF' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_ArmRotation__Direction_86398A274C5AAC89B56A76BB625E4BCF) == 0x00066C, "Member 'ABPIO_SlotMachine_C::Timeline_ArmRotation__Direction_86398A274C5AAC89B56A76BB625E4BCF' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Timeline_ArmRotation) == 0x000670, "Member 'ABPIO_SlotMachine_C::Timeline_ArmRotation' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, On_Win) == 0x000678, "Member 'ABPIO_SlotMachine_C::On_Win' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, On_Play) == 0x000688, "Member 'ABPIO_SlotMachine_C::On_Play' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SlotMachinePrizes) == 0x000698, "Member 'ABPIO_SlotMachine_C::SlotMachinePrizes' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Prize) == 0x0006A0, "Member 'ABPIO_SlotMachine_C::Prize' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wheel_StartRotations) == 0x0006D8, "Member 'ABPIO_SlotMachine_C::Wheel_StartRotations' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wheel_EndRotations) == 0x0006E4, "Member 'ABPIO_SlotMachine_C::Wheel_EndRotations' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wheel_MinSpins) == 0x0006F0, "Member 'ABPIO_SlotMachine_C::Wheel_MinSpins' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wheel_Offset) == 0x0006F4, "Member 'ABPIO_SlotMachine_C::Wheel_Offset' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, DetachDelay) == 0x0006F8, "Member 'ABPIO_SlotMachine_C::DetachDelay' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SlotPlayer) == 0x000700, "Member 'ABPIO_SlotMachine_C::SlotPlayer' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, WinningWheels) == 0x000708, "Member 'ABPIO_SlotMachine_C::WinningWheels' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, On_Jackpot) == 0x000718, "Member 'ABPIO_SlotMachine_C::On_Jackpot' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, CheatCondition) == 0x000728, "Member 'ABPIO_SlotMachine_C::CheatCondition' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, CheatPrizeTable) == 0x000730, "Member 'ABPIO_SlotMachine_C::CheatPrizeTable' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, SlotMachineState) == 0x000738, "Member 'ABPIO_SlotMachine_C::SlotMachineState' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, On_WheelsStopped) == 0x000740, "Member 'ABPIO_SlotMachine_C::On_WheelsStopped' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Wheel1_Stop) == 0x000750, "Member 'ABPIO_SlotMachine_C::Wwise_Wheel1_Stop' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Wheel2_Stop) == 0x000758, "Member 'ABPIO_SlotMachine_C::Wwise_Wheel2_Stop' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Wheel3_Stop) == 0x000760, "Member 'ABPIO_SlotMachine_C::Wwise_Wheel3_Stop' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Music_Play_Out) == 0x000768, "Member 'ABPIO_SlotMachine_C::Wwise_Music_Play_Out' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Music_Attract) == 0x000770, "Member 'ABPIO_SlotMachine_C::Wwise_Music_Attract' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Spinner_Start) == 0x000778, "Member 'ABPIO_SlotMachine_C::Wwise_Spinner_Start' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Match) == 0x000780, "Member 'ABPIO_SlotMachine_C::Wwise_Match' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_NoMatch) == 0x000788, "Member 'ABPIO_SlotMachine_C::Wwise_NoMatch' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Wwise_Mute_Attract_Music) == 0x000790, "Member 'ABPIO_SlotMachine_C::Wwise_Mute_Attract_Music' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Cond_SlotMachineState_NewEnumerator1) == 0x000798, "Member 'ABPIO_SlotMachine_C::Cond_SlotMachineState_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Cond_SlotMachineState_NewEnumerator2) == 0x0007A0, "Member 'ABPIO_SlotMachine_C::Cond_SlotMachineState_NewEnumerator2' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Cond_SlotMachineState_NewEnumerator3) == 0x0007A8, "Member 'ABPIO_SlotMachine_C::Cond_SlotMachineState_NewEnumerator3' has a wrong offset!");
static_assert(offsetof(ABPIO_SlotMachine_C, Cond_SlotMachineState_NewEnumerator4) == 0x0007B0, "Member 'ABPIO_SlotMachine_C::Cond_SlotMachineState_NewEnumerator4' has a wrong offset!");

}

