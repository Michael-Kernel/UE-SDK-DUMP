#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDynamicRoom

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct GbxDynamicRoom.DynamicRoomReplicationInfo
// 0x0010 (0x0010 - 0x0000)
struct FDynamicRoomReplicationInfo final
{
public:
	class UDynamicRoomBaseData*                   RoomToLoad;                                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoomUniqueIndex;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RoomLoadedOnHost;                                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDynamicRoomReplicationInfo) == 0x000008, "Wrong alignment on FDynamicRoomReplicationInfo");
static_assert(sizeof(FDynamicRoomReplicationInfo) == 0x000010, "Wrong size on FDynamicRoomReplicationInfo");
static_assert(offsetof(FDynamicRoomReplicationInfo, RoomToLoad) == 0x000000, "Member 'FDynamicRoomReplicationInfo::RoomToLoad' has a wrong offset!");
static_assert(offsetof(FDynamicRoomReplicationInfo, RoomUniqueIndex) == 0x000008, "Member 'FDynamicRoomReplicationInfo::RoomUniqueIndex' has a wrong offset!");
static_assert(offsetof(FDynamicRoomReplicationInfo, RoomLoadedOnHost) == 0x00000C, "Member 'FDynamicRoomReplicationInfo::RoomLoadedOnHost' has a wrong offset!");

// ScriptStruct GbxDynamicRoom.DynamicRoomInstanceInfo
// 0x0018 (0x0018 - 0x0000)
struct FDynamicRoomInstanceInfo final
{
public:
	class FName                                   RoomUniqueName;                                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                LoadingData;                                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                RoomInstance;                                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDynamicRoomInstanceInfo) == 0x000008, "Wrong alignment on FDynamicRoomInstanceInfo");
static_assert(sizeof(FDynamicRoomInstanceInfo) == 0x000018, "Wrong size on FDynamicRoomInstanceInfo");
static_assert(offsetof(FDynamicRoomInstanceInfo, RoomUniqueName) == 0x000000, "Member 'FDynamicRoomInstanceInfo::RoomUniqueName' has a wrong offset!");
static_assert(offsetof(FDynamicRoomInstanceInfo, LoadingData) == 0x000008, "Member 'FDynamicRoomInstanceInfo::LoadingData' has a wrong offset!");
static_assert(offsetof(FDynamicRoomInstanceInfo, RoomInstance) == 0x000010, "Member 'FDynamicRoomInstanceInfo::RoomInstance' has a wrong offset!");

}

