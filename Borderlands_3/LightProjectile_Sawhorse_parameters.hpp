#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Sawhorse

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_Sawhorse.LightProjectile_Sawhorse_C.OnLifetimeExpired
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_Sawhorse_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Sawhorse_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_Sawhorse_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_Sawhorse_C_OnLifetimeExpired) == 0x000008, "Wrong size on LightProjectile_Sawhorse_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_Sawhorse_C_OnLifetimeExpired::Projectile' has a wrong offset!");

// Function LightProjectile_Sawhorse.LightProjectile_Sawhorse_C.OnExplode
// 0x0228 (0x0228 - 0x0000)
struct LightProjectile_Sawhorse_C_OnExplode final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0008(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00E8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_Sawhorse_C_OnExplode) == 0x000008, "Wrong alignment on LightProjectile_Sawhorse_C_OnExplode");
static_assert(sizeof(LightProjectile_Sawhorse_C_OnExplode) == 0x000228, "Wrong size on LightProjectile_Sawhorse_C_OnExplode");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, Projectile) == 0x000000, "Member 'LightProjectile_Sawhorse_C_OnExplode::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, Temp_struct_Variable) == 0x000008, "Member 'LightProjectile_Sawhorse_C_OnExplode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_GetInstigator_ReturnValue) == 0x000098, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_GetModifierType_ReturnValue) == 0x0000A0, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_GetDamageCauser_ReturnValue) == 0x0000A8, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_GetSource_ReturnValue) == 0x0000B0, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_GetInstigator_ReturnValue1) == 0x0000B8, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x0000C0, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000CC, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'LightProjectile_Sawhorse_C_OnExplode::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Sawhorse_C_OnExplode, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000E8, "Member 'LightProjectile_Sawhorse_C_OnExplode::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

