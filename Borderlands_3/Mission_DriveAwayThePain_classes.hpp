#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_DriveAwayThePain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "BP_OakMission_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_DriveAwayThePain.Mission_DriveAwayThePain_C
// 0x00B8 (0x05C8 - 0x0510)
class UMission_DriveAwayThePain_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_DriveAwayThePain_C;         // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UMissionObjectiveSet*                   Set_GoToPrisasGarage_ObjSetVar;                    // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GoToPrisasGarage_ObjVar;                       // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Ramps_ObjSetVar;                               // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Ramp1_ObjVar;                                  // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Challenge2_ObjSetVar;                          // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Challenge2_ObjVar;                             // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Challenge3_ObjSetVar;                          // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Challenge3_ObjVar;                             // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_DestroyPopsMemory_ObjSetVar;                   // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_DestroyPopsMemory_ObjVar;                      // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Ramp2_ObjVar;                                  // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Ramp3_ObjVar;                                  // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Ramp4_ObjVar;                                  // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Ramp5_ObjVar;                                  // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_GetPopsLoot_ObjSetVar;                         // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GetPopsLoot_ObjVar;                            // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Breadcrumb01_ObjVar;                           // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Breadcrumb02_ObjVar;                           // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GetInVehicle_ObjVar;                           // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_RespawnVehicle_ObjVar;                         // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        ObjStatus_RespawnVehicle;                          // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjective*                      Obj_RampChallenges_ObjVar;                         // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mission_DriveAwayThePain(int32 EntryPoint);
	void Obj_Ramp1(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_RampChallenges(class UObject* Context);
	void Obj_RampChallenges(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_Ramps(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_Challenge3(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_Challenge3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_DestroyPopsMemory(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_DestroyPopsMemory(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Ramp1_Completed(class UObject* Context);
	void Set_Challenge2(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_Challenge2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_GoToPrisasGarage(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_GoToPrisasGarage(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Arrived_At_Prisas_Garage(class UObject* Context);
	void MCE_Challenge_2_Success(class UObject* Context);
	void MCE_Challenge_3_Success(class UObject* Context);
	void MCE_Pops_Car_Destroyed(class UObject* Context);
	void Obj_Ramp2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Ramp2_Completed(class UObject* Context);
	void Obj_Ramp3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Ramp3_Completed(class UObject* Context);
	void Obj_Ramp4(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Ramp4_Completed(class UObject* Context);
	void Obj_Ramp5(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Ramp5_Completed(class UObject* Context);
	void _Obj_RespawnVehicle_Objective__PROXY_2();
	void _Obj_GetInVehicle_Objective__PROXY_1();
	void _Obj_RespawnVehicle_Objective__PROXY_0();
	void _Obj_GetInVehicle_Objective__PROXY();
	void Obj_RespawnVehicle(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_GetInVehicle(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Challenge_3_Ramp2_Start(class UObject* Context);
	void MCE_Ramp_Failure_VO(class UObject* Context);
	void MCE_Challenge_3_Success_Check(class UObject* Context);
	void MCE_Challenge_3_Ramp1_Start(class UObject* Context);
	void MCE_Challenge_3_Failure(class UObject* Context);
	void MCE_Challenge_2_Success_Check(class UObject* Context);
	void MCE_Challenge_2_Start(class UObject* Context);
	void Obj_Breadcrumb02(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Breadcrumb_02(class UObject* Context);
	void Obj_Breadcrumb01(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Breadcrumb_01(class UObject* Context);
	void MCE_Remind_Player_About_Garage(class UObject* Context);
	void MCE_Pops_Loot_Aquired(class UObject* Context);
	void Obj_GetPopsLoot(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_GetPopsLoot(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void MCE_Challenge_2_Failure(class UObject* Context);
	void OnDialogSequenceFinished_10();
	void OnDialogSequenceFinished_11();
	void OnDialogSequenceFinished_12();
	void OnDialogSequenceFinished_7();
	void OnDialogSequenceFinished_8();
	void OnDialogSequenceFinished_9();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_DriveAwayThePain_C">();
	}
	static class UMission_DriveAwayThePain_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_DriveAwayThePain_C>();
	}
};
static_assert(alignof(UMission_DriveAwayThePain_C) == 0x000008, "Wrong alignment on UMission_DriveAwayThePain_C");
static_assert(sizeof(UMission_DriveAwayThePain_C) == 0x0005C8, "Wrong size on UMission_DriveAwayThePain_C");
static_assert(offsetof(UMission_DriveAwayThePain_C, UberGraphFrame_Mission_DriveAwayThePain_C) == 0x000510, "Member 'UMission_DriveAwayThePain_C::UberGraphFrame_Mission_DriveAwayThePain_C' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Set_GoToPrisasGarage_ObjSetVar) == 0x000518, "Member 'UMission_DriveAwayThePain_C::Set_GoToPrisasGarage_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_GoToPrisasGarage_ObjVar) == 0x000520, "Member 'UMission_DriveAwayThePain_C::Obj_GoToPrisasGarage_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Set_Ramps_ObjSetVar) == 0x000528, "Member 'UMission_DriveAwayThePain_C::Set_Ramps_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Ramp1_ObjVar) == 0x000530, "Member 'UMission_DriveAwayThePain_C::Obj_Ramp1_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Set_Challenge2_ObjSetVar) == 0x000538, "Member 'UMission_DriveAwayThePain_C::Set_Challenge2_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Challenge2_ObjVar) == 0x000540, "Member 'UMission_DriveAwayThePain_C::Obj_Challenge2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Set_Challenge3_ObjSetVar) == 0x000548, "Member 'UMission_DriveAwayThePain_C::Set_Challenge3_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Challenge3_ObjVar) == 0x000550, "Member 'UMission_DriveAwayThePain_C::Obj_Challenge3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Set_DestroyPopsMemory_ObjSetVar) == 0x000558, "Member 'UMission_DriveAwayThePain_C::Set_DestroyPopsMemory_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_DestroyPopsMemory_ObjVar) == 0x000560, "Member 'UMission_DriveAwayThePain_C::Obj_DestroyPopsMemory_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Ramp2_ObjVar) == 0x000568, "Member 'UMission_DriveAwayThePain_C::Obj_Ramp2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Ramp3_ObjVar) == 0x000570, "Member 'UMission_DriveAwayThePain_C::Obj_Ramp3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Ramp4_ObjVar) == 0x000578, "Member 'UMission_DriveAwayThePain_C::Obj_Ramp4_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Ramp5_ObjVar) == 0x000580, "Member 'UMission_DriveAwayThePain_C::Obj_Ramp5_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Set_GetPopsLoot_ObjSetVar) == 0x000588, "Member 'UMission_DriveAwayThePain_C::Set_GetPopsLoot_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_GetPopsLoot_ObjVar) == 0x000590, "Member 'UMission_DriveAwayThePain_C::Obj_GetPopsLoot_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Breadcrumb01_ObjVar) == 0x000598, "Member 'UMission_DriveAwayThePain_C::Obj_Breadcrumb01_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_Breadcrumb02_ObjVar) == 0x0005A0, "Member 'UMission_DriveAwayThePain_C::Obj_Breadcrumb02_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_GetInVehicle_ObjVar) == 0x0005A8, "Member 'UMission_DriveAwayThePain_C::Obj_GetInVehicle_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_RespawnVehicle_ObjVar) == 0x0005B0, "Member 'UMission_DriveAwayThePain_C::Obj_RespawnVehicle_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, ObjStatus_RespawnVehicle) == 0x0005B8, "Member 'UMission_DriveAwayThePain_C::ObjStatus_RespawnVehicle' has a wrong offset!");
static_assert(offsetof(UMission_DriveAwayThePain_C, Obj_RampChallenges_ObjVar) == 0x0005C0, "Member 'UMission_DriveAwayThePain_C::Obj_RampChallenges_ObjVar' has a wrong offset!");

}

