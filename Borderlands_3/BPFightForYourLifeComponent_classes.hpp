#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFightForYourLifeComponent

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFightForYourLifeComponent.BPFightForYourLifeComponent_C
// 0x00A0 (0x1400 - 0x1360)
class UBPFightForYourLifeComponent_C final : public UFightForYourLifeComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1360(0x0008)(Transient, DuplicateTransient)
	class UBPUsableComponent_Revive_C*            Revive_UsableComponent;                            // 0x1368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAttributeModifierHandle            ReviveTimeDisabledHandle;                          // 0x1370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGbxAttributeModifierHandle            RechargeDisabledHandle;                            // 0x1380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AOakCharacter*                          OwnerOakChar;                                      // 0x1390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       SecondWindAssistTarget;                            // 0x1398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHUDNotificationAsset*                  SecondWindUIAsset;                                 // 0x13A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioEffect*                      AudioEffect;                                       // 0x13A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       DamageMark;                                        // 0x13B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Action_Injured;                                    // 0x13B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Action_Death;                                      // 0x13C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Action_Resurrect_Unarmed;                          // 0x13C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Action_Resurrect_Weapon;                           // 0x13D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DownedActor;                                       // 0x13D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 AudioLoopPlaybackInstance;                         // 0x13E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APawn*                                  DamageInstigator;                                  // 0x13F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPFightForYourLifeComponent(int32 EntryPoint);
	void CausedDeath(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void WatchForSecondWindKill(bool Start);
	void FFYL_Penalty_Apply();
	void ReceiveBeginPlay();
	void MarkDamagedEnemy_RefreshDelay();
	void MarkDamagedEnemy_Died(class AActor* DamageReceiver, class AActor* DamageCauser);
	void FFYL_Penalty_Recover(float Delay);
	void DownState_Started_Host();
	void DownState_Started_Local();
	void FightForYourLifeKilledEnemy();
	void BeingRevived_Started_Host();
	void BeingRevived_Started_Local();
	void DownState_Stopped_Host();
	void DownState_Stopped_Local();
	void BeingRevived_Stopped_Host();
	void FightForYourLifeTimeExpired();
	void FightForYourLifeRevived();
	void InjuredLive();
	void InjuredStop();
	void ReplenishHealthAndShields(float HealthPercent, float ShieldPercent);
	void RespawnAtResurrectStation();
	void Reviving_Started_Host(class AActor* ActorBeingRevived);
	void Reviving_Started_Local();
	void Reviving_Stopped_Host(bool IsHealed);
	void DownState_Finished_Host();
	void ReplenishSMGAmmoToSetPercentage();
	void ReplenishAssault_RifleAmmoToSetPercentage();
	void ReplenishSniperRifleAmmoToSetPercentage();
	void ReplenishShotgunAmmoToSetPercentage();
	void ReplenishPistolAmmoToSetPercentage();
	void ReplenishGrenadeAmmoToSetPercentage();
	void ReplenishHeavyAmmoToSetPercentage();
	void GivingUp_Started_Host();
	void GivingUp_Stopped_Host();
	void GivingUp_Started_Local();
	void GivingUp_Stopped_Local();
	void ResurrectAtResurrectStation(class UTravelStationResurrectComponent* ResurrectStationComponent);
	void ImmediateTravelToResurrectHost(bool Interrupted);
	void DownState_Finished_Local();
	void ImmediateTravelToResurrectLocal();
	void Exertion_StanceChange(const struct FStanceChangedEventArgs& StanceArgs);
	void DownState_CinematicPause_Host();
	void DownState_CinematicPause_Local();
	void MarkDamagedEnemy(class AActor* DamagedActor);
	void InjuredIsRespawning();
	void WormholeStarting();
	void SecondWindKillCheck(class UActorComponent* DamagedActor, const struct FCausedDeathDetails& CausedDeathDetails);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFightForYourLifeComponent_C">();
	}
	static class UBPFightForYourLifeComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFightForYourLifeComponent_C>();
	}
};
static_assert(alignof(UBPFightForYourLifeComponent_C) == 0x000010, "Wrong alignment on UBPFightForYourLifeComponent_C");
static_assert(sizeof(UBPFightForYourLifeComponent_C) == 0x001400, "Wrong size on UBPFightForYourLifeComponent_C");
static_assert(offsetof(UBPFightForYourLifeComponent_C, UberGraphFrame) == 0x001360, "Member 'UBPFightForYourLifeComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, Revive_UsableComponent) == 0x001368, "Member 'UBPFightForYourLifeComponent_C::Revive_UsableComponent' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, ReviveTimeDisabledHandle) == 0x001370, "Member 'UBPFightForYourLifeComponent_C::ReviveTimeDisabledHandle' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, RechargeDisabledHandle) == 0x001380, "Member 'UBPFightForYourLifeComponent_C::RechargeDisabledHandle' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, OwnerOakChar) == 0x001390, "Member 'UBPFightForYourLifeComponent_C::OwnerOakChar' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, SecondWindAssistTarget) == 0x001398, "Member 'UBPFightForYourLifeComponent_C::SecondWindAssistTarget' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, SecondWindUIAsset) == 0x0013A0, "Member 'UBPFightForYourLifeComponent_C::SecondWindUIAsset' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, AudioEffect) == 0x0013A8, "Member 'UBPFightForYourLifeComponent_C::AudioEffect' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, DamageMark) == 0x0013B0, "Member 'UBPFightForYourLifeComponent_C::DamageMark' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, Action_Injured) == 0x0013B8, "Member 'UBPFightForYourLifeComponent_C::Action_Injured' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, Action_Death) == 0x0013C0, "Member 'UBPFightForYourLifeComponent_C::Action_Death' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, Action_Resurrect_Unarmed) == 0x0013C8, "Member 'UBPFightForYourLifeComponent_C::Action_Resurrect_Unarmed' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, Action_Resurrect_Weapon) == 0x0013D0, "Member 'UBPFightForYourLifeComponent_C::Action_Resurrect_Weapon' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, DownedActor) == 0x0013D8, "Member 'UBPFightForYourLifeComponent_C::DownedActor' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, AudioLoopPlaybackInstance) == 0x0013E0, "Member 'UBPFightForYourLifeComponent_C::AudioLoopPlaybackInstance' has a wrong offset!");
static_assert(offsetof(UBPFightForYourLifeComponent_C, DamageInstigator) == 0x0013F8, "Member 'UBPFightForYourLifeComponent_C::DamageInstigator' has a wrong offset!");

}

