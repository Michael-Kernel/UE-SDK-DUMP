#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Init_Minigun_DamageCalc

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function Init_Minigun_DamageCalc.Init_Minigun_DamageCalc_C.CalculateAttributeInitialValue
// 0x00D8 (0x00D8 - 0x0000)
struct Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue final
{
public:
	const class UObject*                          Context;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageScalar;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakWeapon_IronBearHardPoint*           Minigun;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_IronBear*                 Iron_Bear;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrengthThroughBalanceScalar;                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakWeapon_IronBearHardPoint*           K2Node_DynamicCast_AsOak_Weapon_Iron_Bear_Hard_Point; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_IronBear*                 K2Node_DynamicCast_AsOak_Character_Iron_Bear;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle;            // 0x0060(0x0018)(NoDestructor)
	EIronBearModType                              Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle1;           // 0x0088(0x0018)(NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle2;           // 0x00A8(0x0018)(NoDestructor)
	EIronBearModType                              CallFunc_GetMod_ReturnValue;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue2; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStrengthThroughBalanceScalar_Res;      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue) == 0x000008, "Wrong alignment on Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue");
static_assert(sizeof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue) == 0x0000D8, "Wrong size on Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, Context) == 0x000000, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::Context' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, ReturnValue) == 0x000008, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, DamageScalar) == 0x00000C, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::DamageScalar' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, Minigun) == 0x000010, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::Minigun' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, Iron_Bear) == 0x000018, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::Iron_Bear' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, StrengthThroughBalanceScalar) == 0x000020, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::StrengthThroughBalanceScalar' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_DynamicCast_AsActor) == 0x000028, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_DynamicCast_AsOak_Weapon_Iron_Bear_Hard_Point) == 0x000038, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_DynamicCast_AsOak_Weapon_Iron_Bear_Hard_Point' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_DynamicCast_AsOak_Character_Iron_Bear) == 0x000050, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_DynamicCast_AsOak_Character_Iron_Bear' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_MakeStruct_DataTableValueHandle) == 0x000060, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_MakeStruct_DataTableValueHandle' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, Temp_byte_Variable) == 0x000078, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x00007C, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000080, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_MakeStruct_DataTableValueHandle1) == 0x000088, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_MakeStruct_DataTableValueHandle1' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x0000A4, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_MakeStruct_DataTableValueHandle2) == 0x0000A8, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_MakeStruct_DataTableValueHandle2' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetMod_ReturnValue) == 0x0000C0, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetDataTableValueFromHandle_ReturnValue2) == 0x0000C4, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetDataTableValueFromHandle_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, K2Node_Select_Default) == 0x0000C8, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_GetStrengthThroughBalanceScalar_Res) == 0x0000CC, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_GetStrengthThroughBalanceScalar_Res' has a wrong offset!");
static_assert(offsetof(Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000D0, "Member 'Init_Minigun_DamageCalc_C_CalculateAttributeInitialValue::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

}

