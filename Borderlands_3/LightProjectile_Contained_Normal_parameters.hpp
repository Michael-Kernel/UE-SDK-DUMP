#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Contained_Normal

#include "Basic.hpp"


namespace SDK::Params
{

// Function LightProjectile_Contained_Normal.LightProjectile_Contained_Normal_C.Split
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_Contained_Normal_C_Split final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Contained_Normal_C_Split) == 0x000008, "Wrong alignment on LightProjectile_Contained_Normal_C_Split");
static_assert(sizeof(LightProjectile_Contained_Normal_C_Split) == 0x000010, "Wrong size on LightProjectile_Contained_Normal_C_Split");
static_assert(offsetof(LightProjectile_Contained_Normal_C_Split, Projectile) == 0x000000, "Member 'LightProjectile_Contained_Normal_C_Split::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Contained_Normal_C_Split, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'LightProjectile_Contained_Normal_C_Split::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function LightProjectile_Contained_Normal.LightProjectile_Contained_Normal_C.OnBegin
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_Contained_Normal_C_OnBegin final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Contained_Normal_C_OnBegin) == 0x000008, "Wrong alignment on LightProjectile_Contained_Normal_C_OnBegin");
static_assert(sizeof(LightProjectile_Contained_Normal_C_OnBegin) == 0x000010, "Wrong size on LightProjectile_Contained_Normal_C_OnBegin");
static_assert(offsetof(LightProjectile_Contained_Normal_C_OnBegin, Projectile) == 0x000000, "Member 'LightProjectile_Contained_Normal_C_OnBegin::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Contained_Normal_C_OnBegin, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'LightProjectile_Contained_Normal_C_OnBegin::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

}

