#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Door_ScalableForcefield

#include "Basic.hpp"

#include "IO_Door_Parent_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_Door_ReasonForTimeline_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_Door_ScalableForcefield.IO_Door_ScalableForcefield_C
// 0x00D0 (0x0868 - 0x0798)
class AIO_Door_ScalableForcefield_C final : public AIO_Door_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_IO_Door_ScalableForcefield_C;       // 0x0798(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ForceField;                                        // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Audio_Force_Field_Locations;                       // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          NavMeshBox_Closed;                                 // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_B90D3DD841C49DAE2239959F281CF4B1; // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_B90D3DD841C49DAE2239959F281CF4B1; // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NumColumns;                                        // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NumRows;                                           // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusScaler;                                      // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ColumnCount;                                       // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingLocation;                                  // 0x07E0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EC[0x4];                                      // 0x07EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWwiseLocationOverride>         Audio_Locations;                                   // 0x07F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                NewLocation;                                       // 0x0800(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousLocation;                                  // 0x080C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RowCount;                                          // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterRadius;                                     // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldWidth;                                       // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldHeight;                                      // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AStaticMeshActor*>               SourceMeshArray;                                   // 0x0828(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	struct FLinearColor                           SourceMeshEmissiveColor;                           // 0x0838(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceMeshIntensity;                               // 0x0848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProvingGroundDoor;                               // 0x084C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D[0x3];                                      // 0x084D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 ClosedAudioInstance;                               // 0x0850(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UserConstructionScript();
	void PlayDoorMovement(Enum_Door_ReasonForTimeline Reason);
	void Audio_SetLocations();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void SourceMeshesOn();
	void SourceMeshesOff();
	void Flicker_OnOrOff(bool On);
	void ZeroStabsDoor();
	void ExecuteUbergraph_IO_Door_ScalableForcefield(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_Door_ScalableForcefield_C">();
	}
	static class AIO_Door_ScalableForcefield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_Door_ScalableForcefield_C>();
	}
};
static_assert(alignof(AIO_Door_ScalableForcefield_C) == 0x000008, "Wrong alignment on AIO_Door_ScalableForcefield_C");
static_assert(sizeof(AIO_Door_ScalableForcefield_C) == 0x000868, "Wrong size on AIO_Door_ScalableForcefield_C");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, UberGraphFrame_IO_Door_ScalableForcefield_C) == 0x000798, "Member 'AIO_Door_ScalableForcefield_C::UberGraphFrame_IO_Door_ScalableForcefield_C' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, ForceField) == 0x0007A0, "Member 'AIO_Door_ScalableForcefield_C::ForceField' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, Audio_Force_Field_Locations) == 0x0007A8, "Member 'AIO_Door_ScalableForcefield_C::Audio_Force_Field_Locations' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, NavMeshBox_Closed) == 0x0007B0, "Member 'AIO_Door_ScalableForcefield_C::NavMeshBox_Closed' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, Scene) == 0x0007B8, "Member 'AIO_Door_ScalableForcefield_C::Scene' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, Timeline_0_NewTrack_0_B90D3DD841C49DAE2239959F281CF4B1) == 0x0007C0, "Member 'AIO_Door_ScalableForcefield_C::Timeline_0_NewTrack_0_B90D3DD841C49DAE2239959F281CF4B1' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, Timeline_0__Direction_B90D3DD841C49DAE2239959F281CF4B1) == 0x0007C4, "Member 'AIO_Door_ScalableForcefield_C::Timeline_0__Direction_B90D3DD841C49DAE2239959F281CF4B1' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, Timeline_0) == 0x0007C8, "Member 'AIO_Door_ScalableForcefield_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, NumColumns) == 0x0007D0, "Member 'AIO_Door_ScalableForcefield_C::NumColumns' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, NumRows) == 0x0007D4, "Member 'AIO_Door_ScalableForcefield_C::NumRows' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, RadiusScaler) == 0x0007D8, "Member 'AIO_Door_ScalableForcefield_C::RadiusScaler' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, ColumnCount) == 0x0007DC, "Member 'AIO_Door_ScalableForcefield_C::ColumnCount' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, StartingLocation) == 0x0007E0, "Member 'AIO_Door_ScalableForcefield_C::StartingLocation' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, Audio_Locations) == 0x0007F0, "Member 'AIO_Door_ScalableForcefield_C::Audio_Locations' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, NewLocation) == 0x000800, "Member 'AIO_Door_ScalableForcefield_C::NewLocation' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, PreviousLocation) == 0x00080C, "Member 'AIO_Door_ScalableForcefield_C::PreviousLocation' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, RowCount) == 0x000818, "Member 'AIO_Door_ScalableForcefield_C::RowCount' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, EmitterRadius) == 0x00081C, "Member 'AIO_Door_ScalableForcefield_C::EmitterRadius' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, ShieldWidth) == 0x000820, "Member 'AIO_Door_ScalableForcefield_C::ShieldWidth' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, ShieldHeight) == 0x000824, "Member 'AIO_Door_ScalableForcefield_C::ShieldHeight' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, SourceMeshArray) == 0x000828, "Member 'AIO_Door_ScalableForcefield_C::SourceMeshArray' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, SourceMeshEmissiveColor) == 0x000838, "Member 'AIO_Door_ScalableForcefield_C::SourceMeshEmissiveColor' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, SourceMeshIntensity) == 0x000848, "Member 'AIO_Door_ScalableForcefield_C::SourceMeshIntensity' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, IsProvingGroundDoor) == 0x00084C, "Member 'AIO_Door_ScalableForcefield_C::IsProvingGroundDoor' has a wrong offset!");
static_assert(offsetof(AIO_Door_ScalableForcefield_C, ClosedAudioInstance) == 0x000850, "Member 'AIO_Door_ScalableForcefield_C::ClosedAudioInstance' has a wrong offset!");

}

