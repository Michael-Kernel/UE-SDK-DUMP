#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_Global_Sliding

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.ExecuteUbergraph_ControlledMove_Global_Sliding
// 0x0338 (0x0338 - 0x0000)
struct ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MoveDuration1;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_TargetActor1;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInterrupted1;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal1;                           // 0x0030(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0048(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle;            // 0x0068(0x0018)(NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F8(0x0008)(NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPerformingSpecificControlledMove_ReturnValue; // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal;                      // 0x0120(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_MoveDuration;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Instigator;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0190(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue1;           // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInterrupted;                         // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0228(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue1;                 // 0x02B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Player_C*                       K2Node_DynamicCast_AsBPChar_Player;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x02E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceBetweenVectors_Distance;       // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0318(0x0020)(NoDestructor)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding");
static_assert(sizeof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding) == 0x000338, "Wrong size on ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, EntryPoint) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_MoveDuration1) == 0x000004, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_MoveDuration1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_TargetActor1) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_TargetActor1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_bInterrupted1) == 0x000010, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_bInterrupted1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000018, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsLocalController_ReturnValue) == 0x000021, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_HitActor1) == 0x000028, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_HitActor1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_HitNormal1) == 0x000030, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_HitNormal1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_HitActor) == 0x000040, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_HitNormal) == 0x000048, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000054, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_RandomFloatInRange_ReturnValue) == 0x000060, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000064, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_MakeStruct_DataTableValueHandle) == 0x000068, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_MakeStruct_DataTableValueHandle' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetVelocity_ReturnValue) == 0x000080, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x00008C, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, Temp_class_Variable) == 0x0000A0, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_BreakVector_X) == 0x0000A8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_BreakVector_Y) == 0x0000AC, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, Temp_bool_Variable) == 0x0000B8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000CC, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CreateDelegate_OutputDelegate1) == 0x0000E8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000100, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_Character) == 0x000108, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_PrevMovementMode) == 0x000110, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_PreviousCustomMode) == 0x000111, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsPerformingSpecificControlledMove_ReturnValue) == 0x000112, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsPerformingSpecificControlledMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_HitActor) == 0x000118, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_HitNormal) == 0x000120, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_HitNormal' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Normal_ReturnValue1) == 0x00012C, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CreateDelegate_OutputDelegate2) == 0x000140, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetDataTableValue_OutValue) == 0x000150, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetDataTableValue_ReturnValue) == 0x000154, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_MoveDuration) == 0x000158, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_TargetActor) == 0x000160, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_Instigator) == 0x000168, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_OverlappedComponent) == 0x000170, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_OtherActor) == 0x000178, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_OtherComp) == 0x000180, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_OtherBodyIndex) == 0x000188, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_bFromSweep) == 0x00018C, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_CustomEvent_SweepResult) == 0x000190, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsValid_ReturnValue1) == 0x000220, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsValid_ReturnValue2) == 0x000221, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsLocalController_ReturnValue1) == 0x000222, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsLocalController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Event_bInterrupted) == 0x000223, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Event_bInterrupted' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, Temp_struct_Variable) == 0x000228, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetVelocity_ReturnValue1) == 0x0002B8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetVelocity_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_DynamicCast_AsBPChar_Player) == 0x0002C8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_DynamicCast_AsBPChar_Player' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_IsValidClass_ReturnValue) == 0x0002D1, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002D4, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, K2Node_Select_Default) == 0x0002E0, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0002E8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetDistanceBetweenVectors_Distance) == 0x0002F4, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetDistanceBetweenVectors_Distance' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_FMin_ReturnValue) == 0x0002F8, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002FC, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_GetFloatValue_ReturnValue) == 0x000300, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000304, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000308, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00030C, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000310, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000318, "Member 'ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnServerStop
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnServerStop final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnServerStop) == 0x000001, "Wrong alignment on ControlledMove_Global_Sliding_C_OnServerStop");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnServerStop) == 0x000001, "Wrong size on ControlledMove_Global_Sliding_C_OnServerStop");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnServerStop, bInterrupted) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnServerStop::bInterrupted' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnCapsuleBeginOverlap
// 0x00B0 (0x00B0 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap) == 0x0000B0, "Wrong size on ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap, OverlappedComponent) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap, OtherActor) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap, OtherComp) == 0x000010, "Member 'ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap, bFromSweep) == 0x00001C, "Member 'ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap, SweepResult) == 0x000020, "Member 'ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap::SweepResult' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnServerStart
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnServerStart final
{
public:
	float                                         MoveDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnServerStart) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_OnServerStart");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnServerStart) == 0x000018, "Wrong size on ControlledMove_Global_Sliding_C_OnServerStart");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnServerStart, MoveDuration) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnServerStart::MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnServerStart, TargetActor) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_OnServerStart::TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnServerStart, Instigator) == 0x000010, "Member 'ControlledMove_Global_Sliding_C_OnServerStart::Instigator' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnHitDamageable
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnHitDamageable final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnHitDamageable) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_OnHitDamageable");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnHitDamageable) == 0x000018, "Wrong size on ControlledMove_Global_Sliding_C_OnHitDamageable");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnHitDamageable, HitActor) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnHitDamageable::HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnHitDamageable, HitNormal) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_OnHitDamageable::HitNormal' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.MovementChanged
// 0x0010 (0x0010 - 0x0000)
struct ControlledMove_Global_Sliding_C_MovementChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_MovementChanged) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_MovementChanged");
static_assert(sizeof(ControlledMove_Global_Sliding_C_MovementChanged) == 0x000010, "Wrong size on ControlledMove_Global_Sliding_C_MovementChanged");
static_assert(offsetof(ControlledMove_Global_Sliding_C_MovementChanged, Character) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_MovementChanged::Character' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_MovementChanged, PrevMovementMode) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_MovementChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_MovementChanged, PreviousCustomMode) == 0x000009, "Member 'ControlledMove_Global_Sliding_C_MovementChanged::PreviousCustomMode' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnHitWorld
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnHitWorld final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnHitWorld) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_OnHitWorld");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnHitWorld) == 0x000018, "Wrong size on ControlledMove_Global_Sliding_C_OnHitWorld");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnHitWorld, HitActor) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnHitWorld::HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnHitWorld, HitNormal) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_OnHitWorld::HitNormal' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnHitTargetable
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnHitTargetable final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnHitTargetable) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_OnHitTargetable");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnHitTargetable) == 0x000018, "Wrong size on ControlledMove_Global_Sliding_C_OnHitTargetable");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnHitTargetable, HitActor) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnHitTargetable::HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnHitTargetable, HitNormal) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_OnHitTargetable::HitNormal' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnStop
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnStop final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnStop) == 0x000001, "Wrong alignment on ControlledMove_Global_Sliding_C_OnStop");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnStop) == 0x000001, "Wrong size on ControlledMove_Global_Sliding_C_OnStop");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnStop, bInterrupted) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnStop::bInterrupted' has a wrong offset!");

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnStart
// 0x0010 (0x0010 - 0x0000)
struct ControlledMove_Global_Sliding_C_OnStart final
{
public:
	float                                         MoveDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Global_Sliding_C_OnStart) == 0x000008, "Wrong alignment on ControlledMove_Global_Sliding_C_OnStart");
static_assert(sizeof(ControlledMove_Global_Sliding_C_OnStart) == 0x000010, "Wrong size on ControlledMove_Global_Sliding_C_OnStart");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnStart, MoveDuration) == 0x000000, "Member 'ControlledMove_Global_Sliding_C_OnStart::MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_Global_Sliding_C_OnStart, TargetActor) == 0x000008, "Member 'ControlledMove_Global_Sliding_C_OnStart::TargetActor' has a wrong offset!");

}

