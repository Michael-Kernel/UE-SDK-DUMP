#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDynamicRoom

#include "Basic.hpp"

#include "GbxDynamicRoom_classes.hpp"
#include "GbxDynamicRoom_parameters.hpp"


namespace SDK
{

// Function GbxDynamicRoom.DynamicRoomBase.AllPlayerVisibilityTest
// (Final, Native, Private)

void ADynamicRoomBase::AllPlayerVisibilityTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "AllPlayerVisibilityTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.GetAvailableRoomData
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDynamicRoomBaseData*>     AvailableRooms                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ADynamicRoomBase::GetAvailableRoomData(TArray<class UDynamicRoomBaseData*>* AvailableRooms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "GetAvailableRoomData");

	Params::DynamicRoomBase_GetAvailableRoomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AvailableRooms != nullptr)
		*AvailableRooms = std::move(Parms.AvailableRooms);
}


// Function GbxDynamicRoom.DynamicRoomBase.GetCurrentRoomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDynamicRoomBaseData*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDynamicRoomBaseData* ADynamicRoomBase::GetCurrentRoomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "GetCurrentRoomData");

	Params::DynamicRoomBase_GetCurrentRoomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDynamicRoom.DynamicRoomBase.GetPlayersInLevel
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AGbxCharacter*>            Players                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ADynamicRoomBase::GetPlayersInLevel(TArray<class AGbxCharacter*>* Players)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "GetPlayersInLevel");

	Params::DynamicRoomBase_GetPlayersInLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Players != nullptr)
		*Players = std::move(Parms.Players);
}


// Function GbxDynamicRoom.DynamicRoomBase.InstanceRandomRoom
// (Native, Public, BlueprintCallable)

void ADynamicRoomBase::InstanceRandomRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "InstanceRandomRoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.InstanceRoom
// (Native, Public, BlueprintCallable)
// Parameters:
// class UDynamicRoomBaseData*             RoomToLoad                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADynamicRoomBase::InstanceRoom(class UDynamicRoomBaseData* RoomToLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "InstanceRoom");

	Params::DynamicRoomBase_InstanceRoom Parms{};

	Parms.RoomToLoad = RoomToLoad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.OnRep_RoomInfoToLoad
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FDynamicRoomReplicationInfo      OldRoomInfoToLoad                                      (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ADynamicRoomBase::OnRep_RoomInfoToLoad(struct FDynamicRoomReplicationInfo* OldRoomInfoToLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "OnRep_RoomInfoToLoad");

	Params::DynamicRoomBase_OnRep_RoomInfoToLoad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OldRoomInfoToLoad != nullptr)
		*OldRoomInfoToLoad = std::move(Parms.OldRoomInfoToLoad);
}


// Function GbxDynamicRoom.DynamicRoomBase.SelectedRoomClassLoaded
// (Final, Native, Public)

void ADynamicRoomBase::SelectedRoomClassLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "SelectedRoomClassLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.SelectedRoomLoaded
// (Final, Native, Public)

void ADynamicRoomBase::SelectedRoomLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "SelectedRoomLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.SelectedRoomVisible
// (Final, Native, Public)

void ADynamicRoomBase::SelectedRoomVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "SelectedRoomVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.UnloadRoom
// (Native, Public, BlueprintCallable)

void ADynamicRoomBase::UnloadRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "UnloadRoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDynamicRoom.DynamicRoomBase.VisibleForAllPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADynamicRoomBase::VisibleForAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomBase", "VisibleForAllPlayers");

	Params::DynamicRoomBase_VisibleForAllPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDynamicRoom.DynamicRoomActorData.HandleDynamicRoomActorSpawned
// (Final, Native, Private)
// Parameters:
// class AActor*                           SpawnedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicRoomActorData::HandleDynamicRoomActorSpawned(class AActor* SpawnedActor, int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicRoomActorData", "HandleDynamicRoomActorSpawned");

	Params::DynamicRoomActorData_HandleDynamicRoomActorSpawned Parms{};

	Parms.SpawnedActor = SpawnedActor;
	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

