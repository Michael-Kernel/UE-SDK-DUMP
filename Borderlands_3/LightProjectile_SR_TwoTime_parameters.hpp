#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_SR_TwoTime

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_SR_TwoTime.LightProjectile_SR_TwoTime_C.Split
// 0x0230 (0x0230 - 0x0000)
struct LightProjectile_SR_TwoTime_C_Split final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x00B8(0x0020)(NoDestructor)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00E8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_SR_TwoTime_C_Split) == 0x000010, "Wrong alignment on LightProjectile_SR_TwoTime_C_Split");
static_assert(sizeof(LightProjectile_SR_TwoTime_C_Split) == 0x000230, "Wrong size on LightProjectile_SR_TwoTime_C_Split");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, Projectile) == 0x000000, "Member 'LightProjectile_SR_TwoTime_C_Split::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, StartLocation) == 0x000008, "Member 'LightProjectile_SR_TwoTime_C_Split::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, Temp_int_Array_Index_Variable) == 0x000014, "Member 'LightProjectile_SR_TwoTime_C_Split::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000018, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Array_Get_Item) == 0x000030, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_BreakTransform_Location) == 0x000064, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'LightProjectile_SR_TwoTime_C_Split::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_GetModifierValue_ReturnValue) == 0x000094, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_GetModifierType_ReturnValue) == 0x0000A4, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x0000B8, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_GetSource_ReturnValue) == 0x0000D8, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, CallFunc_GetInstigator_ReturnValue) == 0x0000E0, "Member 'LightProjectile_SR_TwoTime_C_Split::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_SR_TwoTime_C_Split, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000E8, "Member 'LightProjectile_SR_TwoTime_C_Split::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

