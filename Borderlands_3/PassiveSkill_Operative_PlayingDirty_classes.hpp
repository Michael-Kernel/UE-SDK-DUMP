#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkill_Operative_PlayingDirty

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "PassiveSkill_Operative_KillSkillParent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PassiveSkill_Operative_PlayingDirty.PassiveSkill_Operative_PlayingDirty_C
// 0x0070 (0x0250 - 0x01E0)
class UPassiveSkill_Operative_PlayingDirty_C final : public UPassiveSkill_Operative_KillSkillParent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PassiveSkill_Operative_PlayingDirty_C; // 0x01E0(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_PassiveSkill_Operative_PlayingDirty; // 0x01E8(0x0028)()
	struct FDataTableValueHandle                  ExtraShotChance;                                   // 0x0210(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         ExtraShots;                                        // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  KillSkillTime;                                     // 0x0230(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           RicochetTimer;                                     // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_PassiveSkill_Operative_PlayingDirty(int32 EntryPoint);
	void PlayingDirtyOnWeaponUsed(class AWeapon* EventWeapon);
	void OperativeTriggerKillSkillEffect(const struct FVector& KillLocation, class AActor* KilledEnemy);

	void GetManualHUDIconValues(int32* OutStackCount, float* OutDuration, float* OutTimeRemaining) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PassiveSkill_Operative_PlayingDirty_C">();
	}
	static class UPassiveSkill_Operative_PlayingDirty_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassiveSkill_Operative_PlayingDirty_C>();
	}
};
static_assert(alignof(UPassiveSkill_Operative_PlayingDirty_C) == 0x000008, "Wrong alignment on UPassiveSkill_Operative_PlayingDirty_C");
static_assert(sizeof(UPassiveSkill_Operative_PlayingDirty_C) == 0x000250, "Wrong size on UPassiveSkill_Operative_PlayingDirty_C");
static_assert(offsetof(UPassiveSkill_Operative_PlayingDirty_C, UberGraphFrame_PassiveSkill_Operative_PlayingDirty_C) == 0x0001E0, "Member 'UPassiveSkill_Operative_PlayingDirty_C::UberGraphFrame_PassiveSkill_Operative_PlayingDirty_C' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_PlayingDirty_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_PassiveSkill_Operative_PlayingDirty) == 0x0001E8, "Member 'UPassiveSkill_Operative_PlayingDirty_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_PassiveSkill_Operative_PlayingDirty' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_PlayingDirty_C, ExtraShotChance) == 0x000210, "Member 'UPassiveSkill_Operative_PlayingDirty_C::ExtraShotChance' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_PlayingDirty_C, ExtraShots) == 0x000228, "Member 'UPassiveSkill_Operative_PlayingDirty_C::ExtraShots' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_PlayingDirty_C, KillSkillTime) == 0x000230, "Member 'UPassiveSkill_Operative_PlayingDirty_C::KillSkillTime' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_PlayingDirty_C, RicochetTimer) == 0x000248, "Member 'UPassiveSkill_Operative_PlayingDirty_C::RicochetTimer' has a wrong offset!");

}

