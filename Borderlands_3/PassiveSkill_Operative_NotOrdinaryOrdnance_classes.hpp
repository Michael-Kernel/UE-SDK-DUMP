#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkill_Operative_NotOrdinaryOrdnance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "PassiveSkill_Operative_KillSkillParent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PassiveSkill_Operative_NotOrdinaryOrdnance.PassiveSkill_Operative_NotOrdinaryOrdnance_C
// 0x0068 (0x0248 - 0x01E0)
class UPassiveSkill_Operative_NotOrdinaryOrdnance_C final : public UPassiveSkill_Operative_KillSkillParent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PassiveSkill_Operative_NotOrdinaryOrdnance_C; // 0x01E0(0x0008)(Transient, DuplicateTransient)
	struct FDataTableValueHandle                  DamageCalc;                                        // 0x01E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  Radius;                                            // 0x0200(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  CooldownTime;                                      // 0x0218(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  ActiveSkillTime;                                   // 0x0230(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_PassiveSkill_Operative_NotOrdinaryOrdnance(int32 EntryPoint);
	void OperativeTriggerKillSkillEffect(const struct FVector& KillLocation, class AActor* KilledEnemy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PassiveSkill_Operative_NotOrdinaryOrdnance_C">();
	}
	static class UPassiveSkill_Operative_NotOrdinaryOrdnance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassiveSkill_Operative_NotOrdinaryOrdnance_C>();
	}
};
static_assert(alignof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C) == 0x000008, "Wrong alignment on UPassiveSkill_Operative_NotOrdinaryOrdnance_C");
static_assert(sizeof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C) == 0x000248, "Wrong size on UPassiveSkill_Operative_NotOrdinaryOrdnance_C");
static_assert(offsetof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C, UberGraphFrame_PassiveSkill_Operative_NotOrdinaryOrdnance_C) == 0x0001E0, "Member 'UPassiveSkill_Operative_NotOrdinaryOrdnance_C::UberGraphFrame_PassiveSkill_Operative_NotOrdinaryOrdnance_C' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C, DamageCalc) == 0x0001E8, "Member 'UPassiveSkill_Operative_NotOrdinaryOrdnance_C::DamageCalc' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C, Radius) == 0x000200, "Member 'UPassiveSkill_Operative_NotOrdinaryOrdnance_C::Radius' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C, CooldownTime) == 0x000218, "Member 'UPassiveSkill_Operative_NotOrdinaryOrdnance_C::CooldownTime' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Operative_NotOrdinaryOrdnance_C, ActiveSkillTime) == 0x000230, "Member 'UPassiveSkill_Operative_NotOrdinaryOrdnance_C::ActiveSkillTime' has a wrong offset!");

}

