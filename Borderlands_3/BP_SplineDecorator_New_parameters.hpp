#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineDecorator_New

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_SplineDecoratorPointOverride_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_SplineDecoratorParams_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.GetResampledSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineDecorator_New_C_GetResampledSpline final
{
public:
	class USplineComponent*                       NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineDecorator_New_C_GetResampledSpline) == 0x000008, "Wrong alignment on BP_SplineDecorator_New_C_GetResampledSpline");
static_assert(sizeof(BP_SplineDecorator_New_C_GetResampledSpline) == 0x000008, "Wrong size on BP_SplineDecorator_New_C_GetResampledSpline");
static_assert(offsetof(BP_SplineDecorator_New_C_GetResampledSpline, NewParam) == 0x000000, "Member 'BP_SplineDecorator_New_C_GetResampledSpline::NewParam' has a wrong offset!");

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Check Overrides
// 0x0058 (0x0058 - 0x0000)
struct BP_SplineDecorator_New_C_Check_Overrides final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Static_Mesh;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point_Offset;                                      // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_SplineDecoratorPointOverride   CallFunc_Array_Get_Item;                           // 0x0030(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineDecorator_New_C_Check_Overrides) == 0x000008, "Wrong alignment on BP_SplineDecorator_New_C_Check_Overrides");
static_assert(sizeof(BP_SplineDecorator_New_C_Check_Overrides) == 0x000058, "Wrong size on BP_SplineDecorator_New_C_Check_Overrides");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, Index_0) == 0x000000, "Member 'BP_SplineDecorator_New_C_Check_Overrides::Index_0' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, Static_Mesh) == 0x000008, "Member 'BP_SplineDecorator_New_C_Check_Overrides::Static_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, Point_Offset) == 0x000010, "Member 'BP_SplineDecorator_New_C_Check_Overrides::Point_Offset' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, NewLocalVar_0) == 0x00001C, "Member 'BP_SplineDecorator_New_C_Check_Overrides::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_SplineDecorator_New_C_Check_Overrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SplineDecorator_New_C_Check_Overrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineDecorator_New_C_Check_Overrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SplineDecorator_New_C_Check_Overrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SplineDecorator_New_C_Check_Overrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_SplineDecorator_New_C_Check_Overrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_SplineDecorator_New_C_Check_Overrides::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Check_Overrides, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000052, "Member 'BP_SplineDecorator_New_C_Check_Overrides::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Show Spline Point Index
// 0x0090 (0x0090 - 0x0000)
struct BP_SplineDecorator_New_C_Show_Spline_Point_Index final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineDecorator_New_C_Show_Spline_Point_Index) == 0x000010, "Wrong alignment on BP_SplineDecorator_New_C_Show_Spline_Point_Index");
static_assert(sizeof(BP_SplineDecorator_New_C_Show_Spline_Point_Index) == 0x000090, "Wrong size on BP_SplineDecorator_New_C_Show_Spline_Point_Index");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, Temp_int_Variable) == 0x000000, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000024, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000030, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Show_Spline_Point_Index, CallFunc_AddComponent_ReturnValue) == 0x000088, "Member 'BP_SplineDecorator_New_C_Show_Spline_Point_Index::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Place Decoration
// 0x06F0 (0x06F0 - 0x0000)
struct BP_SplineDecorator_New_C_Place_Decoration final
{
public:
	struct FStruct_SplineDecoratorParams          Spline_Decoration_Params;                          // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         Distance_Along_Spline;                             // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Spline_Direction;                                  // 0x00B4(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               Impact_Normal_Rotator;                             // 0x00C0(0x000C)(Edit, BlueprintVisible, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHierarchicalInstancedStaticMeshComponent* InstancedMeshComponent;                            // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_SplineDecoratorParams          Decoration_Params;                                 // 0x00D8(0x00B0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue1;             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x01A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue;                 // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x01D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue1;       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x01F0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0208(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue1;             // 0x0218(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0224(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue2;             // 0x0230(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x023C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue1;               // 0x0248(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0254(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0260(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue2;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02B0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x02C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromY_ReturnValue;                 // 0x02E0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue1;       // 0x02F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0304(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0310(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0350(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x035C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0368(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0374(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeightFromStream_ReturnValue; // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0388(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0424(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0430(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x043C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0448(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0480(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x048C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromY_ReturnValue1;                // 0x049C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue1;                // 0x04AC(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue1;        // 0x04B8(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x04C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0xC];                                      // 0x04D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x04E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue;        // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue2;       // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue3;       // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue1;  // 0x052C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue1;                       // 0x0538(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue3;             // 0x0544(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeightFromStream_ReturnValue1; // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue1;                       // 0x0554(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue2;       // 0x0564(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue4;            // 0x0570(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue1;                      // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue; // 0x05BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x05DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue3;       // 0x05EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue4;         // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x05FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608[0x8];                                      // 0x0608(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue1; // 0x0610(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x3];                                      // 0x0641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformDirection_ReturnValue1;          // 0x0644(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0654(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x0660(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x066C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue4;             // 0x0678(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue5;            // 0x0684(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue5;             // 0x0690(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue2;               // 0x069C(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x06B0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x06ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineDecorator_New_C_Place_Decoration) == 0x000010, "Wrong alignment on BP_SplineDecorator_New_C_Place_Decoration");
static_assert(sizeof(BP_SplineDecorator_New_C_Place_Decoration) == 0x0006F0, "Wrong size on BP_SplineDecorator_New_C_Place_Decoration");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Spline_Decoration_Params) == 0x000000, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Spline_Decoration_Params' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Distance_Along_Spline) == 0x0000B0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Distance_Along_Spline' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Spline_Direction) == 0x0000B4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Spline_Direction' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Impact_Normal_Rotator) == 0x0000C0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Impact_Normal_Rotator' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, InstancedMeshComponent) == 0x0000D0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Decoration_Params) == 0x0000D8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Decoration_Params' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetSplineLength_ReturnValue) == 0x000188, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Temp_int_Variable) == 0x00018C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetSplineLength_ReturnValue1) == 0x000190, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetSplineLength_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_IntInt_ReturnValue) == 0x000194, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Temp_int_Variable1) == 0x000198, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_IntInt_ReturnValue1) == 0x00019C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, Temp_struct_Variable) == 0x0001A0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_AddComponent_ReturnValue) == 0x0001D0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x0001D8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomFloatFromStream_ReturnValue) == 0x0001E4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, K2Node_SwitchEnum_CmpSuccess) == 0x0001E8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomFloatFromStream_ReturnValue1) == 0x0001EC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomFloatFromStream_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RLerp_ReturnValue) == 0x0001F0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_VLerp_ReturnValue) == 0x0001FC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_ComposeRotators_ReturnValue) == 0x000208, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, K2Node_SwitchEnum1_CmpSuccess) == 0x000214, "Member 'BP_SplineDecorator_New_C_Place_Decoration::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_ComposeRotators_ReturnValue1) == 0x000218, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_ComposeRotators_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SelectRotator_ReturnValue) == 0x000224, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_ComposeRotators_ReturnValue2) == 0x000230, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_ComposeRotators_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00023C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SelectRotator_ReturnValue1) == 0x000248, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SelectRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_VectorVector_ReturnValue) == 0x000254, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000260, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000270, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetSplineLength_ReturnValue2) == 0x0002A0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetSplineLength_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakTransform_Location) == 0x0002A4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakTransform_Rotation) == 0x0002B0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakTransform_Scale) == 0x0002BC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x0002C8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakVector_X) == 0x0002D4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakVector_Y) == 0x0002D8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakVector_Z) == 0x0002DC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeRotFromY_ReturnValue) == 0x0002E0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeRotFromY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeVector_ReturnValue) == 0x0002EC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_VectorVector_ReturnValue1) == 0x0002F8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeRotFromZ_ReturnValue) == 0x000304, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000310, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeTransform_ReturnValue) == 0x000320, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000350, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_TransformDirection_ReturnValue) == 0x00035C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_VectorVector_ReturnValue1) == 0x000368, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_VectorVector_ReturnValue2) == 0x000374, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomBoolWithWeightFromStream_ReturnValue) == 0x000380, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomBoolWithWeightFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SphereTraceSingle_OutHit) == 0x000388, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SphereTraceSingle_ReturnValue) == 0x000418, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Not_PreBool_ReturnValue) == 0x000419, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_bBlockingHit) == 0x00041A, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_bInitialOverlap) == 0x00041B, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_Time) == 0x00041C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_Distance) == 0x000420, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_Location) == 0x000424, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_ImpactPoint) == 0x000430, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_Normal) == 0x00043C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_ImpactNormal) == 0x000448, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_PhysMat) == 0x000458, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_HitActor) == 0x000460, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_HitComponent) == 0x000468, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_HitBoneName) == 0x000470, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_HitItem) == 0x000478, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_FaceIndex) == 0x00047C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_TraceStart) == 0x000480, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakHitResult_TraceEnd) == 0x00048C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000498, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeRotFromY_ReturnValue1) == 0x00049C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeRotFromY_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0004A8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeRotFromZ_ReturnValue1) == 0x0004AC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeRotFromZ_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Conv_VectorToRotator_ReturnValue1) == 0x0004B8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Conv_VectorToRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_VectorVector_ReturnValue3) == 0x0004C4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0004D0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeTransform_ReturnValue1) == 0x0004E0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MapRangeClamped_ReturnValue) == 0x000510, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_AddInstanceWorldSpace_ReturnValue) == 0x000514, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_AddInstanceWorldSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000518, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_FFloor_ReturnValue) == 0x00051C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomFloatFromStream_ReturnValue2) == 0x000520, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomFloatFromStream_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000524, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomFloatFromStream_ReturnValue3) == 0x000528, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomFloatFromStream_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomUnitVectorFromStream_ReturnValue1) == 0x00052C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomUnitVectorFromStream_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RLerp_ReturnValue1) == 0x000538, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RLerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_ComposeRotators_ReturnValue3) == 0x000544, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_ComposeRotators_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_RandomBoolWithWeightFromStream_ReturnValue1) == 0x000550, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_RandomBoolWithWeightFromStream_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_VLerp_ReturnValue1) == 0x000554, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_VLerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Not_PreBool_ReturnValue1) == 0x000560, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_VectorVector_ReturnValue2) == 0x000564, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_VectorVector_ReturnValue4) == 0x000570, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00057C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000580, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000584, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_FloatFloat_ReturnValue) == 0x000588, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x00058C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Less_FloatFloat_ReturnValue) == 0x000590, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_FFloor_ReturnValue1) == 0x000594, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_FFloor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MapRangeClamped_ReturnValue1) == 0x000598, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x00059C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x0005A0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0005A4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_FClamp_ReturnValue) == 0x0005A8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SelectFloat_ReturnValue) == 0x0005AC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x0005B0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MapRangeClamped_ReturnValue2) == 0x0005B4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SelectFloat_ReturnValue1) == 0x0005B8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue) == 0x0005BC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0005C8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakVector_X1) == 0x0005CC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakVector_Y1) == 0x0005D0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakVector_Z1) == 0x0005D4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0005D8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeVector_ReturnValue1) == 0x0005DC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0005E8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_VectorVector_ReturnValue3) == 0x0005EC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Subtract_FloatFloat_ReturnValue4) == 0x0005F8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Subtract_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x0005FC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue1) == 0x000610, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000640, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_TransformDirection_ReturnValue1) == 0x000644, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_TransformDirection_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BooleanOR_ReturnValue) == 0x000650, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakTransform_Location1) == 0x000654, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakTransform_Rotation1) == 0x000660, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_BreakTransform_Scale1) == 0x00066C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_ComposeRotators_ReturnValue4) == 0x000678, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_ComposeRotators_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_Add_VectorVector_ReturnValue5) == 0x000684, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_Add_VectorVector_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_ComposeRotators_ReturnValue5) == 0x000690, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_ComposeRotators_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SelectRotator_ReturnValue2) == 0x00069C, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SelectRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_MakeTransform_ReturnValue2) == 0x0006B0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_FTrunc_ReturnValue) == 0x0006E0, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_AddInstance_ReturnValue) == 0x0006E4, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_FTrunc_ReturnValue1) == 0x0006E8, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_IsValid_ReturnValue) == 0x0006EC, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Place_Decoration, CallFunc_SetStaticMesh_ReturnValue) == 0x0006ED, "Member 'BP_SplineDecorator_New_C_Place_Decoration::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Genereate Spline Mesh Segments
// 0x0170 (0x0170 - 0x0000)
struct BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments final
{
public:
	struct FVector                                Tangent;                                           // 0x0000(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   New_Spline_Mesh;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Check_Overrides_Static_Mesh;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Check_Overrides_Point_Offset;             // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Check_Overrides_Static_Mesh1;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Check_Overrides_Point_Offset1;            // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue1;     // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue1;    // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue2;    // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue1;     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0xA];                                       // 0x00B6(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue; // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_ReturnValue; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x011C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue1; // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_ReturnValue1; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x014C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue1;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0158(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue1;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue1;   // 0x0164(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments) == 0x000010, "Wrong alignment on BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments");
static_assert(sizeof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments) == 0x000170, "Wrong size on BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, Tangent) == 0x000000, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::Tangent' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, New_Spline_Mesh) == 0x000010, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::New_Spline_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, Temp_int_Variable) == 0x000018, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, Temp_int_Variable1) == 0x00001C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Check_Overrides_Static_Mesh) == 0x000020, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Check_Overrides_Static_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Check_Overrides_Point_Offset) == 0x000028, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Check_Overrides_Point_Offset' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Check_Overrides_Static_Mesh1) == 0x000038, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Check_Overrides_Static_Mesh1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Check_Overrides_Point_Offset1) == 0x000040, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Check_Overrides_Point_Offset1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Add_IntInt_ReturnValue1) == 0x00004C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Add_IntInt_ReturnValue2) == 0x000050, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_SetStaticMesh_ReturnValue) == 0x000054, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000058, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000060, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x00007C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetTangentAtSplinePoint_ReturnValue1) == 0x000088, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetTangentAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetLocationAtSplinePoint_ReturnValue1) == 0x000094, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetLocationAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetLocationAtSplinePoint_ReturnValue2) == 0x0000A0, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetLocationAtSplinePoint_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetNumberOfSplinePoints_ReturnValue1) == 0x0000AC, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetNumberOfSplinePoints_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000B0, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x0000B4, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B5, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_AddComponent_ReturnValue) == 0x0000F0, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000F8, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue) == 0x0000FC, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetRollAtDistanceAlongSpline_ReturnValue) == 0x000108, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetRollAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BreakVector_X) == 0x00010C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BreakVector_Y) == 0x000110, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BreakVector_Z) == 0x000114, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Add_FloatFloat_ReturnValue) == 0x000118, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_MakeVector2D_ReturnValue) == 0x00011C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_DegreesToRadians_ReturnValue) == 0x000124, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000128, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue1) == 0x00012C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_GetRollAtDistanceAlongSpline_ReturnValue1) == 0x000138, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_GetRollAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BreakVector_X1) == 0x00013C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BreakVector_Y1) == 0x000140, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BreakVector_Z1) == 0x000144, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000148, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_MakeVector2D_ReturnValue1) == 0x00014C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_DegreesToRadians_ReturnValue1) == 0x000154, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_DegreesToRadians_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000158, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_BooleanAND_ReturnValue) == 0x000160, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_SetStaticMesh_ReturnValue1) == 0x000161, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_SetStaticMesh_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_Multiply_Vector2DVector2D_ReturnValue1) == 0x000164, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_Multiply_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments, CallFunc_IsValid_ReturnValue1) == 0x00016C, "Member 'BP_SplineDecorator_New_C_Genereate_Spline_Mesh_Segments::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.Resample Builder Spline
// 0x0220 (0x0220 - 0x0000)
struct BP_SplineDecorator_New_C_Resample_Builder_Spline final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0080(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x00BC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00E0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x017C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x01F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0208(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineDecorator_New_C_Resample_Builder_Spline) == 0x000010, "Wrong alignment on BP_SplineDecorator_New_C_Resample_Builder_Spline");
static_assert(sizeof(BP_SplineDecorator_New_C_Resample_Builder_Spline) == 0x000220, "Wrong size on BP_SplineDecorator_New_C_Resample_Builder_Spline");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, Temp_int_Variable) == 0x000000, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_GetTransform_ReturnValue1) == 0x000040, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, Temp_object_Variable) == 0x000080, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000090, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000094, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_GetSplineLength_ReturnValue) == 0x00009C, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_FFloor_ReturnValue) == 0x0000A4, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Not_PreBool_ReturnValue1) == 0x0000AB, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_SelectFloat_ReturnValue) == 0x0000AC, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000B0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x0000BC, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_TransformLocation_ReturnValue) == 0x0000C8, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000E0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000170, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_bBlockingHit) == 0x000171, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_bInitialOverlap) == 0x000172, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_Time) == 0x000174, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_Distance) == 0x000178, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_Location) == 0x00017C, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_Normal) == 0x000194, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_PhysMat) == 0x0001B0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_HitActor) == 0x0001B8, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_HitComponent) == 0x0001C0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_HitBoneName) == 0x0001C8, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_FaceIndex) == 0x0001D4, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_BreakHitResult_TraceEnd) == 0x0001E4, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_InverseTransformLocation_ReturnValue) == 0x0001F0, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_SelectVector_ReturnValue) == 0x0001FC, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_Resample_Builder_Spline, CallFunc_Add_VectorVector_ReturnValue1) == 0x000208, "Member 'BP_SplineDecorator_New_C_Resample_Builder_Spline::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function BP_SplineDecorator_New.BP_SplineDecorator_New_C.UserConstructionScript
// 0x0158 (0x0158 - 0x0000)
struct BP_SplineDecorator_New_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0010(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FStruct_SplineDecoratorParams          CallFunc_Array_Get_Item;                           // 0x00A0(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineDecorator_New_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SplineDecorator_New_C_UserConstructionScript");
static_assert(sizeof(BP_SplineDecorator_New_C_UserConstructionScript) == 0x000158, "Wrong size on BP_SplineDecorator_New_C_UserConstructionScript");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000010, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineDecorator_New_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BP_SplineDecorator_New_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

