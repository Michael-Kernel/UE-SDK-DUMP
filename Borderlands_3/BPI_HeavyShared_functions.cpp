#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HeavyShared

#include "Basic.hpp"

#include "BPI_HeavyShared_classes.hpp"
#include "BPI_HeavyShared_parameters.hpp"


namespace SDK
{

// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BackpackExplosion_TriggerFriendlyDodge
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Heavy_BackpackExplosion_TriggerFriendlyDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BackpackExplosion_TriggerFriendlyDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BackpackExplosion_TriggerExplosion
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Heavy_BackpackExplosion_TriggerExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BackpackExplosion_TriggerExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BackpackExplosion_TriggerDeath
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Heavy_BackpackExplosion_TriggerDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BackpackExplosion_TriggerDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_FireBeam_Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_Heavy_WeaponSocket                 WeaponSocket                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsNavAnim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::Heavy_FireBeam_Start(Enum_Heavy_WeaponSocket WeaponSocket, bool IsNavAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_FireBeam_Start");

	Params::BPI_HeavyShared_C_Heavy_FireBeam_Start Parms{};

	Parms.WeaponSocket = WeaponSocket;
	Parms.IsNavAnim = IsNavAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_FireBeam_Stop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNavAnim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::Heavy_FireBeam_Stop(bool IsNavAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_FireBeam_Stop");

	Params::BPI_HeavyShared_C_Heavy_FireBeam_Stop Parms{};

	Parms.IsNavAnim = IsNavAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_ElementalTrap_Spawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Obstruction1                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Obstruction2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_ElementalTrap_Spawn(class AActor** Obstruction1, class AActor** Obstruction2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_ElementalTrap_Spawn");

	Params::BPI_HeavyShared_C_Heavy_ElementalTrap_Spawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Obstruction1 != nullptr)
		*Obstruction1 = Parms.Obstruction1;

	if (Obstruction2 != nullptr)
		*Obstruction2 = Parms.Obstruction2;
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BlastWave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_BlastWave(class AActor* AttackTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BlastWave");

	Params::BPI_HeavyShared_C_Heavy_BlastWave Parms{};

	Parms.AttackTarget = AttackTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BlastShot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ProjectileTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             WeaponSocket                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_BlastShot(class AActor* ProjectileTarget, class FName WeaponSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BlastShot");

	Params::BPI_HeavyShared_C_Heavy_BlastShot Parms{};

	Parms.ProjectileTarget = ProjectileTarget;
	Parms.WeaponSocket = WeaponSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_FaceMedic
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Heavy_FaceMedic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_FaceMedic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BackpackDeathBegan
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_BackpackDeathBegan(class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BackpackDeathBegan");

	Params::BPI_HeavyShared_C_Heavy_BackpackDeathBegan Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_WasBackpackExplosionThresholdTriggered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ThresholdReached                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::Heavy_WasBackpackExplosionThresholdTriggered(bool* ThresholdReached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_WasBackpackExplosionThresholdTriggered");

	Params::BPI_HeavyShared_C_Heavy_WasBackpackExplosionThresholdTriggered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThresholdReached != nullptr)
		*ThresholdReached = Parms.ThresholdReached;
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BackpackExplosion_TriggerExplosion_PostDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ExplosionLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_BackpackExplosion_TriggerExplosion_PostDeath(const struct FVector& ExplosionLocation, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BackpackExplosion_TriggerExplosion_PostDeath");

	Params::BPI_HeavyShared_C_Heavy_BackpackExplosion_TriggerExplosion_PostDeath Parms{};

	Parms.ExplosionLocation = std::move(ExplosionLocation);
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_GetMaxHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxHealth                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_GetMaxHealth(float* MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_GetMaxHealth");

	Params::BPI_HeavyShared_C_Heavy_GetMaxHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxHealth != nullptr)
		*MaxHealth = Parms.MaxHealth;
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Wwise_BlastPump_PwrUp
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Wwise_BlastPump_PwrUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Wwise_BlastPump_PwrUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_StompImpact
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Heavy_StompImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_StompImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_GroundPoundTrail
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OptionalStartingSocket                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalImpactsAlongPath                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OptionalDamageAlongPath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OptionalDamageAtTargetLocation                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  PathFX                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  TargetFX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathFXStartScale                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathFXEndScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_GroundPoundTrail(class AActor* MyTarget, class FName OptionalStartingSocket, int32 TotalImpactsAlongPath, float Duration, class UClass* OptionalDamageAlongPath, class UClass* OptionalDamageAtTargetLocation, class UParticleSystem* PathFX, class UParticleSystem* TargetFX, float PathFXStartScale, float PathFXEndScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_GroundPoundTrail");

	Params::BPI_HeavyShared_C_Heavy_GroundPoundTrail Parms{};

	Parms.MyTarget = MyTarget;
	Parms.OptionalStartingSocket = OptionalStartingSocket;
	Parms.TotalImpactsAlongPath = TotalImpactsAlongPath;
	Parms.Duration = Duration;
	Parms.OptionalDamageAlongPath = OptionalDamageAlongPath;
	Parms.OptionalDamageAtTargetLocation = OptionalDamageAtTargetLocation;
	Parms.PathFX = PathFX;
	Parms.TargetFX = TargetFX;
	Parms.PathFXStartScale = PathFXStartScale;
	Parms.PathFXEndScale = PathFXEndScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_Powerhouse_LaunchPole
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::Heavy_Powerhouse_LaunchPole(class AActor* MyTarget, bool IsLeftHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_Powerhouse_LaunchPole");

	Params::BPI_HeavyShared_C_Heavy_Powerhouse_LaunchPole Parms{};

	Parms.MyTarget = MyTarget;
	Parms.IsLeftHand = IsLeftHand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_BombLaunch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EOakElementalType                       OverrideElementType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_BombLaunch(class AActor* MyTarget, bool IsLeftHand, EOakElementalType OverrideElementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_BombLaunch");

	Params::BPI_HeavyShared_C_Heavy_BombLaunch Parms{};

	Parms.MyTarget = MyTarget;
	Parms.IsLeftHand = IsLeftHand;
	Parms.OverrideElementType = OverrideElementType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_WeaponChargeFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::Heavy_WeaponChargeFX(bool IsLeftHand, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_WeaponChargeFX");

	Params::BPI_HeavyShared_C_Heavy_WeaponChargeFX Parms{};

	Parms.IsLeftHand = IsLeftHand;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_GetElementalMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOakElementalType                       ElementalMode                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_GetElementalMode(EOakElementalType* ElementalMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_GetElementalMode");

	Params::BPI_HeavyShared_C_Heavy_GetElementalMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ElementalMode != nullptr)
		*ElementalMode = Parms.ElementalMode;
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Wwise_FireBeam_PwrUp
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HeavyShared_C::Wwise_FireBeam_PwrUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Wwise_FireBeam_PwrUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_FistChargeFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeftHand                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::Heavy_FistChargeFX(bool IsLeftHand, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_FistChargeFX");

	Params::BPI_HeavyShared_C_Heavy_FistChargeFX Parms{};

	Parms.IsLeftHand = IsLeftHand;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.Heavy_TargetChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HeavyShared_C::Heavy_TargetChanged(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "Heavy_TargetChanged");

	Params::BPI_HeavyShared_C_Heavy_TargetChanged Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HeavyShared.BPI_HeavyShared_C.HeavyLoot_FleeBeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HeavyShared_C::HeavyLoot_FleeBeam(bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HeavyShared_C", "HeavyLoot_FleeBeam");

	Params::BPI_HeavyShared_C_HeavyLoot_FleeBeam Parms{};

	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}

}

