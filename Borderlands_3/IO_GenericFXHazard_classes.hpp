#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_GenericFXHazard

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "OakGame_classes.hpp"
#include "Enum_GenericFXHazardState_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_GenericFXHazard.IO_GenericFXHazard_C
// 0x00D0 (0x0620 - 0x0550)
class AIO_GenericFXHazard_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class ULightAudioComponent*                   Audio;                                             // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavBoxComponent*                    GbxNavBox;                                         // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URegionBalanceStateComponent*           RegionBalanceState;                                // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavMeshPainterComponent*            GbxNavMeshPainter;                                 // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UElementalInteractionComponent*         ElementalInteraction;                              // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle;                                          // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDA_GenericFXHazard_C*                  DataAsset;                                         // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Active_on_Start;                                   // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	Enum_GenericFXHazardState                     FireState;                                         // 0x05B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UElementalInteractionData*              ElementalInteractionData;                          // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   Event_BeginPlayerOverlap;                          // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          FireBeginOverlapDispatchEvents;                    // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALight*>                         AssociatedLights;                                  // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	float                                         ActiveLightIntensity;                              // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InactiveLightIntensity;                            // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 Audio_WarmupInstance;                              // 0x05F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FWwiseLocationOverride>         Audio_WorldLocations;                              // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UGbxCondition*                          Cond_FireState_NewEnumerator1;                     // 0x0618(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ConvertRelativeLocationsToWorld();
	void Audio_PlayShutdown(class UDA_GenericFXHazard_C* Self3);
	void Audio_PlayWarmup(class UDA_GenericFXHazard_C* DataAsset_0);
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void __UserState_FireState_0(bool bFromLoad);
	void __UserState_FireState_1(bool bFromLoad);
	void OnActivate();
	void OnDeactivate();
	void SetPlaceableFireState(bool On);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_IO_GenericFXHazard(int32 EntryPoint);
	void Event_BeginPlayerOverlap__DelegateSignature(class AGbxPlayerController* GbxPlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_GenericFXHazard_C">();
	}
	static class AIO_GenericFXHazard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_GenericFXHazard_C>();
	}
};
static_assert(alignof(AIO_GenericFXHazard_C) == 0x000008, "Wrong alignment on AIO_GenericFXHazard_C");
static_assert(sizeof(AIO_GenericFXHazard_C) == 0x000620, "Wrong size on AIO_GenericFXHazard_C");
static_assert(offsetof(AIO_GenericFXHazard_C, UberGraphFrame) == 0x000550, "Member 'AIO_GenericFXHazard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Audio) == 0x000558, "Member 'AIO_GenericFXHazard_C::Audio' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, GbxNavBox) == 0x000560, "Member 'AIO_GenericFXHazard_C::GbxNavBox' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, RegionBalanceState) == 0x000568, "Member 'AIO_GenericFXHazard_C::RegionBalanceState' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, GbxNavMeshPainter) == 0x000570, "Member 'AIO_GenericFXHazard_C::GbxNavMeshPainter' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Arrow) == 0x000578, "Member 'AIO_GenericFXHazard_C::Arrow' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Box) == 0x000580, "Member 'AIO_GenericFXHazard_C::Box' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Scene) == 0x000588, "Member 'AIO_GenericFXHazard_C::Scene' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, ElementalInteraction) == 0x000590, "Member 'AIO_GenericFXHazard_C::ElementalInteraction' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Particle) == 0x000598, "Member 'AIO_GenericFXHazard_C::Particle' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, DefaultSceneRoot) == 0x0005A0, "Member 'AIO_GenericFXHazard_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, DataAsset) == 0x0005A8, "Member 'AIO_GenericFXHazard_C::DataAsset' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Active_on_Start) == 0x0005B0, "Member 'AIO_GenericFXHazard_C::Active_on_Start' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, FireState) == 0x0005B1, "Member 'AIO_GenericFXHazard_C::FireState' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, ElementalInteractionData) == 0x0005B8, "Member 'AIO_GenericFXHazard_C::ElementalInteractionData' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Event_BeginPlayerOverlap) == 0x0005C0, "Member 'AIO_GenericFXHazard_C::Event_BeginPlayerOverlap' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, FireBeginOverlapDispatchEvents) == 0x0005D0, "Member 'AIO_GenericFXHazard_C::FireBeginOverlapDispatchEvents' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, AssociatedLights) == 0x0005D8, "Member 'AIO_GenericFXHazard_C::AssociatedLights' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, ActiveLightIntensity) == 0x0005E8, "Member 'AIO_GenericFXHazard_C::ActiveLightIntensity' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, InactiveLightIntensity) == 0x0005EC, "Member 'AIO_GenericFXHazard_C::InactiveLightIntensity' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Audio_WarmupInstance) == 0x0005F0, "Member 'AIO_GenericFXHazard_C::Audio_WarmupInstance' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Audio_WorldLocations) == 0x000608, "Member 'AIO_GenericFXHazard_C::Audio_WorldLocations' has a wrong offset!");
static_assert(offsetof(AIO_GenericFXHazard_C, Cond_FireState_NewEnumerator1) == 0x000618, "Member 'AIO_GenericFXHazard_C::Cond_FireState_NewEnumerator1' has a wrong offset!");

}

