#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Gunner_MatchedSet

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "Enum_Gunner_MatchedSet_InentorySlots_structs.hpp"


namespace SDK::Params
{

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.ExecuteUbergraph_Passive_Gunner_MatchedSet
// 0x0198 (0x0198 - 0x0000)
struct Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_EquippedActor;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     K2Node_CustomEvent_SlotData1;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_UnequippedActor;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     K2Node_CustomEvent_SlotData;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventorySlotData*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_NewModifiedActor;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     K2Node_CustomEvent_NewSlotData;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Add_;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsNewRightHandWeapon__ItIs_;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* UnequippedActor, class UInventorySlotData* SlotData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* EquippedActor, class UInventorySlotData* SlotData)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class AWeapon*                                K2Node_CustomEvent_NewWeapon;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_CustomEvent_LastWeapon;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0088(0x0028)(NoDestructor)
	TDelegate<void(class AWeapon* NewWeapon, class AWeapon* LastWeapon)> K2Node_CreateDelegate_OutputDelegate2;             // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1; // 0x00C0(0x0028)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate2; // 0x00F0(0x0028)(NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate3; // 0x0118(0x0028)(NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate4; // 0x0140(0x0028)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate5; // 0x0170(0x0028)(NoDestructor)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet) == 0x000198, "Wrong size on Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, EntryPoint) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_EquippedActor) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_EquippedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_SlotData1) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_SlotData1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_UnequippedActor) == 0x000018, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_UnequippedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_SlotData) == 0x000020, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_SlotData' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, CallFunc_Array_Get_Item) == 0x000030, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_NewModifiedActor) == 0x000040, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_NewModifiedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_NewSlotData) == 0x000048, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_NewSlotData' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_Add_) == 0x000050, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_Add_' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, CallFunc_GetIsNewRightHandWeapon__ItIs_) == 0x000051, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::CallFunc_GetIsNewRightHandWeapon__ItIs_' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CreateDelegate_OutputDelegate1) == 0x000068, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_NewWeapon) == 0x000078, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_NewWeapon' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CustomEvent_LastWeapon) == 0x000080, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CustomEvent_LastWeapon' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000088, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_CreateDelegate_OutputDelegate2) == 0x0000B0, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1) == 0x0000C0, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate2) == 0x0000F0, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate2' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate3) == 0x000118, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate3' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate4) == 0x000140, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate4' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate5) == 0x000170, "Member 'Passive_Gunner_MatchedSet_C_ExecuteUbergraph_Passive_Gunner_MatchedSet::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate5' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.MatchedSet_OnWeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged final
{
public:
	class AWeapon*                                NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                LastWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged) == 0x000010, "Wrong size on Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged, NewWeapon) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged, LastWeapon) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_MatchedSet_OnWeaponChanged::LastWeapon' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.HandleNewEquippedItem
// 0x0018 (0x0018 - 0x0000)
struct Passive_Gunner_MatchedSet_C_HandleNewEquippedItem final
{
public:
	class AActor*                                 NewModifiedActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     NewSlotData;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_HandleNewEquippedItem) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_HandleNewEquippedItem");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_HandleNewEquippedItem) == 0x000018, "Wrong size on Passive_Gunner_MatchedSet_C_HandleNewEquippedItem");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_HandleNewEquippedItem, NewModifiedActor) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_HandleNewEquippedItem::NewModifiedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_HandleNewEquippedItem, NewSlotData) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_HandleNewEquippedItem::NewSlotData' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_HandleNewEquippedItem, Add_) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_HandleNewEquippedItem::Add_' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.MatchedSet_UnequippedItem
// 0x0010 (0x0010 - 0x0000)
struct Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem final
{
public:
	class AActor*                                 UnequippedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     SlotData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem) == 0x000010, "Wrong size on Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem, UnequippedActor) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem::UnequippedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem, SlotData) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_MatchedSet_UnequippedItem::SlotData' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.MatchedSet_EquippedItem
// 0x0010 (0x0010 - 0x0000)
struct Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem final
{
public:
	class AActor*                                 EquippedActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventorySlotData*                     SlotData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem) == 0x000010, "Wrong size on Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem, EquippedActor) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem::EquippedActor' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem, SlotData) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_MatchedSet_EquippedItem::SlotData' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.TryToModifyIndividualGearBonus
// 0x0030 (0x0030 - 0x0000)
struct Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus final
{
public:
	class UInventorySlotData*                     NewSlot;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewModifyValue;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventorySlotData*                     NewInSlot;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEquippedInventoryForSlot_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManufacturerData*                      CallFunc_GetItemManufacturer_Manufacturer;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus) == 0x000030, "Wrong size on Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, NewSlot) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::NewSlot' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, Add_) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::Add_' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, NewModifyValue) == 0x000009, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::NewModifyValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, NewInSlot) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::NewInSlot' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, CallFunc_GetEquippedInventoryForSlot_ReturnValue) == 0x000018, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::CallFunc_GetEquippedInventoryForSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, CallFunc_GetItemManufacturer_Manufacturer) == 0x000020, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::CallFunc_GetItemManufacturer_Manufacturer' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'Passive_Gunner_MatchedSet_C_TryToModifyIndividualGearBonus::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.GetItemManufacturer
// 0x0028 (0x0028 - 0x0000)
struct Passive_Gunner_MatchedSet_C_GetItemManufacturer final
{
public:
	class AActor*                                 GearToTest;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManufacturerData*                      Manufacturer;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UManufacturerData*                      CallFunc_GetManufacturer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_GetItemManufacturer) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_GetItemManufacturer");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_GetItemManufacturer) == 0x000028, "Wrong size on Passive_Gunner_MatchedSet_C_GetItemManufacturer");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetItemManufacturer, GearToTest) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_GetItemManufacturer::GearToTest' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetItemManufacturer, Manufacturer) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_GetItemManufacturer::Manufacturer' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetItemManufacturer, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_GetItemManufacturer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetItemManufacturer, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Passive_Gunner_MatchedSet_C_GetItemManufacturer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetItemManufacturer, CallFunc_IsValid_ReturnValue1) == 0x000019, "Member 'Passive_Gunner_MatchedSet_C_GetItemManufacturer::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetItemManufacturer, CallFunc_GetManufacturer_ReturnValue) == 0x000020, "Member 'Passive_Gunner_MatchedSet_C_GetItemManufacturer::CallFunc_GetManufacturer_ReturnValue' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.SetRightHandManufacturer
// 0x0010 (0x0010 - 0x0000)
struct Passive_Gunner_MatchedSet_C_SetRightHandManufacturer final
{
public:
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManufacturerData*                      CallFunc_GetItemManufacturer_Manufacturer;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_SetRightHandManufacturer) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_SetRightHandManufacturer");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_SetRightHandManufacturer) == 0x000010, "Wrong size on Passive_Gunner_MatchedSet_C_SetRightHandManufacturer");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetRightHandManufacturer, CallFunc_GetWeapon_ReturnValue) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_SetRightHandManufacturer::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetRightHandManufacturer, CallFunc_GetItemManufacturer_Manufacturer) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_SetRightHandManufacturer::CallFunc_GetItemManufacturer_Manufacturer' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.GetIsNewRightHandWeapon?
// 0x0028 (0x0028 - 0x0000)
struct Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_ final
{
public:
	class AActor*                                 ModifiedEquipment;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItIs_;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManufacturerData*                      CallFunc_GetItemManufacturer_Manufacturer;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_) == 0x000028, "Wrong size on Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_, ModifiedEquipment) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_::ModifiedEquipment' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_, ItIs_) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_::ItIs_' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_, CallFunc_GetWeapon_ReturnValue) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_, CallFunc_GetItemManufacturer_Manufacturer) == 0x000018, "Member 'Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_::CallFunc_GetItemManufacturer_Manufacturer' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'Passive_Gunner_MatchedSet_C_GetIsNewRightHandWeapon_::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.CalculateTotalGearModifierBonus
// 0x0014 (0x0014 - 0x0000)
struct Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus) == 0x000004, "Wrong alignment on Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus) == 0x000014, "Wrong size on Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000004, "Member 'Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus, CallFunc_Add_FloatFloat_ReturnValue3) == 0x00000C, "Member 'Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus, CallFunc_Add_FloatFloat_ReturnValue4) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_CalculateTotalGearModifierBonus::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.SetGearModifierPerInventorySlot
// 0x0028 (0x0028 - 0x0000)
struct Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot final
{
public:
	const class UInventorySlotData*               SlotToUse;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewModifyValue;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewModifierToUse;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Gunner_MatchedSet_InentorySlots          CallFunc_Map_Find_Value;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot) == 0x000028, "Wrong size on Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, SlotToUse) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::SlotToUse' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, NewModifyValue) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::NewModifyValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, NewModifierToUse) == 0x00000C, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::NewModifierToUse' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, Temp_bool_Variable) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, Temp_float_Variable) == 0x000014, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, Temp_float_Variable1) == 0x000018, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, K2Node_Select_Default) == 0x00001C, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, CallFunc_Map_Find_Value) == 0x000020, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, CallFunc_Map_Find_ReturnValue) == 0x000021, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'Passive_Gunner_MatchedSet_C_SetGearModifierPerInventorySlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Passive_Gunner_MatchedSet.Passive_Gunner_MatchedSet_C.CalculateAbilityState
// 0x0018 (0x0018 - 0x0000)
struct Passive_Gunner_MatchedSet_C_CalculateAbilityState final
{
public:
	EGbxAbilityState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxAbilityState                              CallFunc_CalculateAbilityState_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Gunner_MatchedSet_C_CalculateAbilityState) == 0x000008, "Wrong alignment on Passive_Gunner_MatchedSet_C_CalculateAbilityState");
static_assert(sizeof(Passive_Gunner_MatchedSet_C_CalculateAbilityState) == 0x000018, "Wrong size on Passive_Gunner_MatchedSet_C_CalculateAbilityState");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateAbilityState, ReturnValue) == 0x000000, "Member 'Passive_Gunner_MatchedSet_C_CalculateAbilityState::ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateAbilityState, CallFunc_CalculateAbilityState_ReturnValue) == 0x000001, "Member 'Passive_Gunner_MatchedSet_C_CalculateAbilityState::CallFunc_CalculateAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateAbilityState, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Passive_Gunner_MatchedSet_C_CalculateAbilityState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateAbilityState, CallFunc_GetWeapon_ReturnValue) == 0x000008, "Member 'Passive_Gunner_MatchedSet_C_CalculateAbilityState::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_MatchedSet_C_CalculateAbilityState, CallFunc_IsValid_ReturnValue1) == 0x000010, "Member 'Passive_Gunner_MatchedSet_C_CalculateAbilityState::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

}

