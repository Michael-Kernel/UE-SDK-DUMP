#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Operative

#include "Basic.hpp"

#include "BPChar_Operative_classes.hpp"
#include "BPChar_Operative_parameters.hpp"


namespace SDK
{

// Function BPChar_Operative.BPChar_Operative_C.ExecuteUbergraph_BPChar_Operative
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::ExecuteUbergraph_BPChar_Operative(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "ExecuteUbergraph_BPChar_Operative");

	Params::BPChar_Operative_C_ExecuteUbergraph_BPChar_Operative Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Operative.BPChar_Operative_C.SpawnCannonEmitterMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  CannonEmitter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           CannonComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::SpawnCannonEmitterMulticast(class UParticleSystem* CannonEmitter, class USkeletalMeshComponent* CannonComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "SpawnCannonEmitterMulticast");

	Params::BPChar_Operative_C_SpawnCannonEmitterMulticast Parms{};

	Parms.CannonEmitter = CannonEmitter;
	Parms.CannonComponent = CannonComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Operative.BPChar_Operative_C.SetOperativeDeviceVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Operative_C::SetOperativeDeviceVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "SetOperativeDeviceVisible");

	Params::BPChar_Operative_C_SetOperativeDeviceVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Operative.BPChar_Operative_C.DoOperativeCryoNovaAtLocation
// (Net, NetMulticast, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::DoOperativeCryoNovaAtLocation(const struct FVector& Location, float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "DoOperativeCryoNovaAtLocation");

	Params::BPChar_Operative_C_DoOperativeCryoNovaAtLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Operative.BPChar_Operative_C.HideOperativeDroneSpawnAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Operative_C::HideOperativeDroneSpawnAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "HideOperativeDroneSpawnAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Operative.BPChar_Operative_C.PlayerOperativeDroneSpawnAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Operative_C::PlayerOperativeDroneSpawnAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "PlayerOperativeDroneSpawnAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Operative.BPChar_Operative_C.DigistructSNTRY__UpdateFunc
// (BlueprintEvent)

void ABPChar_Operative_C::DigistructSNTRY__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "DigistructSNTRY__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Operative.BPChar_Operative_C.DigistructSNTRY__FinishedFunc
// (BlueprintEvent)

void ABPChar_Operative_C::DigistructSNTRY__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "DigistructSNTRY__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Operative.BPChar_Operative_C.InnerDoCryoNovaAtLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDamage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::InnerDoCryoNovaAtLocation(const struct FVector& InLocation, float InDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "InnerDoCryoNovaAtLocation");

	Params::BPChar_Operative_C_InnerDoCryoNovaAtLocation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InDamage = InDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Materials TP Gun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor)

void ABPChar_Operative_C::Get_Materials_TP_Gun(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Materials TP Gun");

	Params::BPChar_Operative_C_Get_Materials_TP_Gun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Materials FP Gun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor)

void ABPChar_Operative_C::Get_Materials_FP_Gun(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Materials FP Gun");

	Params::BPChar_Operative_C_Get_Materials_FP_Gun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Materials Skeletal Mesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor)

void ABPChar_Operative_C::Get_Materials_Skeletal_Mesh(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Materials Skeletal Mesh");

	Params::BPChar_Operative_C_Get_Materials_Skeletal_Mesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Materials Legs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor)

void ABPChar_Operative_C::Get_Materials_Legs(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Materials Legs");

	Params::BPChar_Operative_C_Get_Materials_Legs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Materials Arms
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor)

void ABPChar_Operative_C::Get_Materials_Arms(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Materials Arms");

	Params::BPChar_Operative_C_Get_Materials_Arms Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Materials Head
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor)

void ABPChar_Operative_C::Get_Materials_Head(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Materials Head");

	Params::BPChar_Operative_C_Get_Materials_Head Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);
}


// Function BPChar_Operative.BPChar_Operative_C.Get Skeletal Mesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Skeletal_Mesh                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::Get_Skeletal_Mesh(class USkeletalMeshComponent** Skeletal_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Skeletal Mesh");

	Params::BPChar_Operative_C_Get_Skeletal_Mesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Skeletal_Mesh != nullptr)
		*Skeletal_Mesh = Parms.Skeletal_Mesh;
}


// Function BPChar_Operative.BPChar_Operative_C.Get Skeletal Mesh Legs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGbxSkeletalMeshComponent*        Legs                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::Get_Skeletal_Mesh_Legs(class UGbxSkeletalMeshComponent** Legs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Skeletal Mesh Legs");

	Params::BPChar_Operative_C_Get_Skeletal_Mesh_Legs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Legs != nullptr)
		*Legs = Parms.Legs;
}


// Function BPChar_Operative.BPChar_Operative_C.Get Skeletal Mesh Arms
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Arms_Mesh                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::Get_Skeletal_Mesh_Arms(class USkeletalMeshComponent** Arms_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Skeletal Mesh Arms");

	Params::BPChar_Operative_C_Get_Skeletal_Mesh_Arms Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Arms_Mesh != nullptr)
		*Arms_Mesh = Parms.Arms_Mesh;
}


// Function BPChar_Operative.BPChar_Operative_C.Get Skeletal Mesh Head
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGbxSkeletalMeshComponent*        Head_Mesh                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::Get_Skeletal_Mesh_Head(class UGbxSkeletalMeshComponent** Head_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "Get Skeletal Mesh Head");

	Params::BPChar_Operative_C_Get_Skeletal_Mesh_Head Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Head_Mesh != nullptr)
		*Head_Mesh = Parms.Head_Mesh;
}


// Function BPChar_Operative.BPChar_Operative_C.GetDroneSpawnLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABPChar_Operative_C::GetDroneSpawnLocation(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetDroneSpawnLocation");

	Params::BPChar_Operative_C_GetDroneSpawnLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BPChar_Operative.BPChar_Operative_C.BlockOperativeActionSkillActivation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldBlock                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Operative_C::BlockOperativeActionSkillActivation(bool* ShouldBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "BlockOperativeActionSkillActivation");

	Params::BPChar_Operative_C_BlockOperativeActionSkillActivation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldBlock != nullptr)
		*ShouldBlock = Parms.ShouldBlock;
}


// Function BPChar_Operative.BPChar_Operative_C.SpawnAndThrowOperativeGrenade
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SpawnFromActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SpawnFromSocket                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Grenade                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::SpawnAndThrowOperativeGrenade(class AActor* SpawnFromActor, class FName SpawnFromSocket, bool* Res, class AActor** Grenade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "SpawnAndThrowOperativeGrenade");

	Params::BPChar_Operative_C_SpawnAndThrowOperativeGrenade Parms{};

	Parms.SpawnFromActor = SpawnFromActor;
	Parms.SpawnFromSocket = SpawnFromSocket;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;

	if (Grenade != nullptr)
		*Grenade = Parms.Grenade;
}


// Function BPChar_Operative.BPChar_Operative_C.GetDigiCloneShieldRemainingPercent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ShieldPercentRemaining                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::GetDigiCloneShieldRemainingPercent(float* ShieldPercentRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetDigiCloneShieldRemainingPercent");

	Params::BPChar_Operative_C_GetDigiCloneShieldRemainingPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShieldPercentRemaining != nullptr)
		*ShieldPercentRemaining = Parms.ShieldPercentRemaining;
}


// Function BPChar_Operative.BPChar_Operative_C.GetOperativeShieldRemainingPercent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ShieldPercentRemaining                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::GetOperativeShieldRemainingPercent(float* ShieldPercentRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetOperativeShieldRemainingPercent");

	Params::BPChar_Operative_C_GetOperativeShieldRemainingPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShieldPercentRemaining != nullptr)
		*ShieldPercentRemaining = Parms.ShieldPercentRemaining;
}


// Function BPChar_Operative.BPChar_Operative_C.GetOperativeStatusEffectOverrides
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCauseDamageStatusEffectOverridesOverrides                                              (Parm, OutParm, NoDestructor)

void ABPChar_Operative_C::GetOperativeStatusEffectOverrides(struct FCauseDamageStatusEffectOverrides* Overrides)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetOperativeStatusEffectOverrides");

	Params::BPChar_Operative_C_GetOperativeStatusEffectOverrides Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Overrides != nullptr)
		*Overrides = std::move(Parms.Overrides);
}


// Function BPChar_Operative.BPChar_Operative_C.GetBarrierActionAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOakActionAbility_Barrier*        Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::GetBarrierActionAbility(class UOakActionAbility_Barrier** Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetBarrierActionAbility");

	Params::BPChar_Operative_C_GetBarrierActionAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function BPChar_Operative.BPChar_Operative_C.CanActivateTrapCard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Operative_C::CanActivateTrapCard(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "CanActivateTrapCard");

	Params::BPChar_Operative_C_CanActivateTrapCard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function BPChar_Operative.BPChar_Operative_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Operative_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Operative.BPChar_Operative_C.GetHeadMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    HeadMesh                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::GetHeadMesh(class USkeletalMesh** HeadMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetHeadMesh");

	Params::BPChar_Operative_C_GetHeadMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HeadMesh != nullptr)
		*HeadMesh = Parms.HeadMesh;
}


// Function BPChar_Operative.BPChar_Operative_C.GetPrimaryActionAbility
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UOakActionAbility*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UOakActionAbility* ABPChar_Operative_C::GetPrimaryActionAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetPrimaryActionAbility");

	Params::BPChar_Operative_C_GetPrimaryActionAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPChar_Operative.BPChar_Operative_C.GetSecondaryActionAbility
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UOakActionAbility*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UOakActionAbility* ABPChar_Operative_C::GetSecondaryActionAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetSecondaryActionAbility");

	Params::BPChar_Operative_C_GetSecondaryActionAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPChar_Operative.BPChar_Operative_C.GetDigicloneActionAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UOakActionAbility_Digiclone*      Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::GetDigicloneActionAbility(class UOakActionAbility_Digiclone** Res) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetDigicloneActionAbility");

	Params::BPChar_Operative_C_GetDigicloneActionAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function BPChar_Operative.BPChar_Operative_C.GetGRMLNActionAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UOakActionAbility_GRMLN*          Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Operative_C::GetGRMLNActionAbility(class UOakActionAbility_GRMLN** Res) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Operative_C", "GetGRMLNActionAbility");

	Params::BPChar_Operative_C_GetGRMLNActionAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}

}

