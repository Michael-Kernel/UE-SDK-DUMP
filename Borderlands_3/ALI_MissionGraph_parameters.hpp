#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALI_MissionGraph

#include "Basic.hpp"


namespace SDK::Params
{

// Function ALI_MissionGraph.ALI_MissionGraph_C.[A Good Egg]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__A_Good_Egg_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__A_Good_Egg_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__A_Good_Egg_");
static_assert(sizeof(ALI_MissionGraph_C__A_Good_Egg_) == 0x000010, "Wrong size on ALI_MissionGraph_C__A_Good_Egg_");
static_assert(offsetof(ALI_MissionGraph_C__A_Good_Egg_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__A_Good_Egg_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__A_Good_Egg_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__A_Good_Egg_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Blast Requests]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Blast_Requests_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Blast_Requests_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Blast_Requests_");
static_assert(sizeof(ALI_MissionGraph_C__Blast_Requests_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Blast_Requests_");
static_assert(offsetof(ALI_MissionGraph_C__Blast_Requests_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Blast_Requests_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Blast_Requests_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Blast_Requests_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Brainstorm]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Brainstorm_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Brainstorm_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Brainstorm_");
static_assert(sizeof(ALI_MissionGraph_C__Brainstorm_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Brainstorm_");
static_assert(offsetof(ALI_MissionGraph_C__Brainstorm_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Brainstorm_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Brainstorm_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Brainstorm_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Check, Please]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Check__Please_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Check__Please_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Check__Please_");
static_assert(sizeof(ALI_MissionGraph_C__Check__Please_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Check__Please_");
static_assert(offsetof(ALI_MissionGraph_C__Check__Please_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Check__Please_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Check__Please_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Check__Please_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Does a Body Good]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Does_a_Body_Good_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Does_a_Body_Good_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Does_a_Body_Good_");
static_assert(sizeof(ALI_MissionGraph_C__Does_a_Body_Good_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Does_a_Body_Good_");
static_assert(offsetof(ALI_MissionGraph_C__Does_a_Body_Good_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Does_a_Body_Good_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Does_a_Body_Good_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Does_a_Body_Good_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Don't Call it a Rorschach]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_");
static_assert(sizeof(ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_");
static_assert(offsetof(ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Don_t_Call_it_a_Rorschach_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Enter the Psychoscape]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Enter_the_Psychoscape_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Enter_the_Psychoscape_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Enter_the_Psychoscape_");
static_assert(sizeof(ALI_MissionGraph_C__Enter_the_Psychoscape_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Enter_the_Psychoscape_");
static_assert(offsetof(ALI_MissionGraph_C__Enter_the_Psychoscape_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Enter_the_Psychoscape_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Enter_the_Psychoscape_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Enter_the_Psychoscape_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Hot and Unbothered]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Hot_and_Unbothered_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Hot_and_Unbothered_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Hot_and_Unbothered_");
static_assert(sizeof(ALI_MissionGraph_C__Hot_and_Unbothered_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Hot_and_Unbothered_");
static_assert(offsetof(ALI_MissionGraph_C__Hot_and_Unbothered_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Hot_and_Unbothered_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Hot_and_Unbothered_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Hot_and_Unbothered_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Inhuman Trials]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Inhuman_Trials_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Inhuman_Trials_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Inhuman_Trials_");
static_assert(sizeof(ALI_MissionGraph_C__Inhuman_Trials_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Inhuman_Trials_");
static_assert(offsetof(ALI_MissionGraph_C__Inhuman_Trials_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Inhuman_Trials_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Inhuman_Trials_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Inhuman_Trials_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[It's an Allegory]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__It_s_an_Allegory_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__It_s_an_Allegory_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__It_s_an_Allegory_");
static_assert(sizeof(ALI_MissionGraph_C__It_s_an_Allegory_) == 0x000010, "Wrong size on ALI_MissionGraph_C__It_s_an_Allegory_");
static_assert(offsetof(ALI_MissionGraph_C__It_s_an_Allegory_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__It_s_an_Allegory_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__It_s_an_Allegory_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__It_s_an_Allegory_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Krieg's on Parade]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Krieg_s_on_Parade_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Krieg_s_on_Parade_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Krieg_s_on_Parade_");
static_assert(sizeof(ALI_MissionGraph_C__Krieg_s_on_Parade_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Krieg_s_on_Parade_");
static_assert(offsetof(ALI_MissionGraph_C__Krieg_s_on_Parade_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Krieg_s_on_Parade_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Krieg_s_on_Parade_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Krieg_s_on_Parade_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Laid to Rust]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Laid_to_Rust_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Laid_to_Rust_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Laid_to_Rust_");
static_assert(sizeof(ALI_MissionGraph_C__Laid_to_Rust_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Laid_to_Rust_");
static_assert(offsetof(ALI_MissionGraph_C__Laid_to_Rust_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Laid_to_Rust_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Laid_to_Rust_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Laid_to_Rust_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Locus of Rage]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Locus_of_Rage_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Locus_of_Rage_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Locus_of_Rage_");
static_assert(sizeof(ALI_MissionGraph_C__Locus_of_Rage_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Locus_of_Rage_");
static_assert(offsetof(ALI_MissionGraph_C__Locus_of_Rage_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Locus_of_Rage_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Locus_of_Rage_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Locus_of_Rage_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Remodel Behavior]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Remodel_Behavior_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Remodel_Behavior_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Remodel_Behavior_");
static_assert(sizeof(ALI_MissionGraph_C__Remodel_Behavior_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Remodel_Behavior_");
static_assert(offsetof(ALI_MissionGraph_C__Remodel_Behavior_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Remodel_Behavior_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Remodel_Behavior_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Remodel_Behavior_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Scratch, Don't Sniff]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Scratch__Don_t_Sniff_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Scratch__Don_t_Sniff_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Scratch__Don_t_Sniff_");
static_assert(sizeof(ALI_MissionGraph_C__Scratch__Don_t_Sniff_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Scratch__Don_t_Sniff_");
static_assert(offsetof(ALI_MissionGraph_C__Scratch__Don_t_Sniff_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Scratch__Don_t_Sniff_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Scratch__Don_t_Sniff_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Scratch__Don_t_Sniff_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[Siege of Castle Crimson]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__Siege_of_Castle_Crimson_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__Siege_of_Castle_Crimson_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__Siege_of_Castle_Crimson_");
static_assert(sizeof(ALI_MissionGraph_C__Siege_of_Castle_Crimson_) == 0x000010, "Wrong size on ALI_MissionGraph_C__Siege_of_Castle_Crimson_");
static_assert(offsetof(ALI_MissionGraph_C__Siege_of_Castle_Crimson_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__Siege_of_Castle_Crimson_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__Siege_of_Castle_Crimson_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__Siege_of_Castle_Crimson_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[That Rings a Something]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__That_Rings_a_Something_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__That_Rings_a_Something_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__That_Rings_a_Something_");
static_assert(sizeof(ALI_MissionGraph_C__That_Rings_a_Something_) == 0x000010, "Wrong size on ALI_MissionGraph_C__That_Rings_a_Something_");
static_assert(offsetof(ALI_MissionGraph_C__That_Rings_a_Something_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__That_Rings_a_Something_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__That_Rings_a_Something_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__That_Rings_a_Something_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.[What Love Remains]
// 0x0010 (0x0010 - 0x0000)
struct ALI_MissionGraph_C__What_Love_Remains_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C__What_Love_Remains_) == 0x000008, "Wrong alignment on ALI_MissionGraph_C__What_Love_Remains_");
static_assert(sizeof(ALI_MissionGraph_C__What_Love_Remains_) == 0x000010, "Wrong size on ALI_MissionGraph_C__What_Love_Remains_");
static_assert(offsetof(ALI_MissionGraph_C__What_Love_Remains_, Unlocks) == 0x000000, "Member 'ALI_MissionGraph_C__What_Love_Remains_::Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C__What_Love_Remains_, Next_Mission) == 0x000008, "Member 'ALI_MissionGraph_C__What_Love_Remains_::Next_Mission' has a wrong offset!");

// Function ALI_MissionGraph.ALI_MissionGraph_C.ExecuteUbergraph_ALI_MissionGraph
// 0x0128 (0x0128 - 0x0000)
struct ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks17;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission17;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks16;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission16;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks15;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission15;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks14;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission14;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks13;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission13;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks12;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission12;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks11;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission11;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks10;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission10;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks9;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission9;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks8;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission8;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks7;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission7;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks6;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission6;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks5;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission5;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks4;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission4;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks3;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission3;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks2;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission2;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks1;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission1;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph) == 0x000008, "Wrong alignment on ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph");
static_assert(sizeof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph) == 0x000128, "Wrong size on ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, EntryPoint) == 0x000000, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks) == 0x000008, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission) == 0x000010, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks17) == 0x000018, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks17' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission17) == 0x000020, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission17' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks16) == 0x000028, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks16' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission16) == 0x000030, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission16' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks15) == 0x000038, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks15' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission15) == 0x000040, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission15' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks14) == 0x000048, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks14' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission14) == 0x000050, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission14' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks13) == 0x000058, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks13' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission13) == 0x000060, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission13' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks12) == 0x000068, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks12' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission12) == 0x000070, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission12' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks11) == 0x000078, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks11' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission11) == 0x000080, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission11' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks10) == 0x000088, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks10' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission10) == 0x000090, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission10' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks9) == 0x000098, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks9' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission9) == 0x0000A0, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission9' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks8) == 0x0000A8, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks8' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission8) == 0x0000B0, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission8' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks7) == 0x0000B8, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks7' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission7) == 0x0000C0, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission7' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks6) == 0x0000C8, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks6' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission6) == 0x0000D0, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission6' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks5) == 0x0000D8, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks5' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission5) == 0x0000E0, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission5' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks4) == 0x0000E8, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks4' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission4) == 0x0000F0, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission4' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks3) == 0x0000F8, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks3' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission3) == 0x000100, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission3' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks2) == 0x000108, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks2' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission2) == 0x000110, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission2' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Unlocks1) == 0x000118, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Unlocks1' has a wrong offset!");
static_assert(offsetof(ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph, MissionK2Node_MissionRefEvent_Next_Mission1) == 0x000120, "Member 'ALI_MissionGraph_C_ExecuteUbergraph_ALI_MissionGraph::MissionK2Node_MissionRefEvent_Next_Mission1' has a wrong offset!");

}

