#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_Ranged10_NEW

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Passive_Beastmaster_Ranged10_NEW.Passive_Beastmaster_Ranged10_NEW_C
// 0x0098 (0x0248 - 0x01B0)
class UPassive_Beastmaster_Ranged10_NEW_C final : public UOakPassiveAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Ranged10_NEW; // 0x01B8(0x0028)()
	struct FRandomStream                          Stream_RandomChance;                               // 0x01E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWeaponFireProjectileComponent*         NewVar_0;                                          // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeEffectData                   AttEffect_AddedProjectilesPerShot;                 // 0x01F0(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGbxAttributeModifierHandle            AttEffectHandle_AddedProjPerShot;                  // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Passive_Beastmaster_Ranged10_NEW(int32 EntryPoint);
	void OnDeactivated();
	void OnPaused();
	void TryAddProjectileToNextShot(class AWeapon* InWeapon);
	void OnActivated();
	void OnWeaponChanged_Ranged10(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnWeaponUsed_Ranged10(class AWeapon* EventWeapon);
	bool RandomChanceByGrade();
	void GetProjectileComponent(class AWeapon* InWeapon, class UWeaponFireProjectileComponent** FireComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Passive_Beastmaster_Ranged10_NEW_C">();
	}
	static class UPassive_Beastmaster_Ranged10_NEW_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassive_Beastmaster_Ranged10_NEW_C>();
	}
};
static_assert(alignof(UPassive_Beastmaster_Ranged10_NEW_C) == 0x000008, "Wrong alignment on UPassive_Beastmaster_Ranged10_NEW_C");
static_assert(sizeof(UPassive_Beastmaster_Ranged10_NEW_C) == 0x000248, "Wrong size on UPassive_Beastmaster_Ranged10_NEW_C");
static_assert(offsetof(UPassive_Beastmaster_Ranged10_NEW_C, UberGraphFrame) == 0x0001B0, "Member 'UPassive_Beastmaster_Ranged10_NEW_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged10_NEW_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Ranged10_NEW) == 0x0001B8, "Member 'UPassive_Beastmaster_Ranged10_NEW_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Ranged10_NEW' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged10_NEW_C, Stream_RandomChance) == 0x0001E0, "Member 'UPassive_Beastmaster_Ranged10_NEW_C::Stream_RandomChance' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged10_NEW_C, NewVar_0) == 0x0001E8, "Member 'UPassive_Beastmaster_Ranged10_NEW_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged10_NEW_C, AttEffect_AddedProjectilesPerShot) == 0x0001F0, "Member 'UPassive_Beastmaster_Ranged10_NEW_C::AttEffect_AddedProjectilesPerShot' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Ranged10_NEW_C, AttEffectHandle_AddedProjPerShot) == 0x000238, "Member 'UPassive_Beastmaster_Ranged10_NEW_C::AttEffectHandle_AddedProjPerShot' has a wrong offset!");

}

