#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_ElectricSlide

#include "Basic.hpp"

#include "BP_InventoryAbility_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Artifact_ElectricSlide.Ability_Artifact_ElectricSlide_C
// 0x0120 (0x0240 - 0x0120)
class UAbility_Artifact_ElectricSlide_C final : public UBP_InventoryAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Ability_Artifact_ElectricSlide_C;   // 0x0120(0x0008)(Transient, DuplicateTransient)
	bool                                          SlideProjectileAvaialable;                         // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CooldownTime;                                      // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Artifact_ElectricSlide; // 0x0130(0x0028)()
	struct FEnvQueryParams                        BeamQuery;                                         // 0x0158(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           QueryTimer;                                        // 0x0210(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class AActor*>                         CurrentTargets;                                    // 0x0218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         TargetList;                                        // 0x0228(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UClass*                                 BeamData;                                          // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Artifact_ElectricSlide(int32 EntryPoint);
	void OnActivated();
	void QueryEnemies();
	void StartSlide();
	void StopSlide(const struct FSlideEndedDetails& Details);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Artifact_ElectricSlide_C">();
	}
	static class UAbility_Artifact_ElectricSlide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Artifact_ElectricSlide_C>();
	}
};
static_assert(alignof(UAbility_Artifact_ElectricSlide_C) == 0x000008, "Wrong alignment on UAbility_Artifact_ElectricSlide_C");
static_assert(sizeof(UAbility_Artifact_ElectricSlide_C) == 0x000240, "Wrong size on UAbility_Artifact_ElectricSlide_C");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, UberGraphFrame_Ability_Artifact_ElectricSlide_C) == 0x000120, "Member 'UAbility_Artifact_ElectricSlide_C::UberGraphFrame_Ability_Artifact_ElectricSlide_C' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, SlideProjectileAvaialable) == 0x000128, "Member 'UAbility_Artifact_ElectricSlide_C::SlideProjectileAvaialable' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, CooldownTime) == 0x00012C, "Member 'UAbility_Artifact_ElectricSlide_C::CooldownTime' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Artifact_ElectricSlide) == 0x000130, "Member 'UAbility_Artifact_ElectricSlide_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_Artifact_ElectricSlide' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, BeamQuery) == 0x000158, "Member 'UAbility_Artifact_ElectricSlide_C::BeamQuery' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, QueryTimer) == 0x000210, "Member 'UAbility_Artifact_ElectricSlide_C::QueryTimer' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, CurrentTargets) == 0x000218, "Member 'UAbility_Artifact_ElectricSlide_C::CurrentTargets' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, TargetList) == 0x000228, "Member 'UAbility_Artifact_ElectricSlide_C::TargetList' has a wrong offset!");
static_assert(offsetof(UAbility_Artifact_ElectricSlide_C, BeamData) == 0x000238, "Member 'UAbility_Artifact_ElectricSlide_C::BeamData' has a wrong offset!");

}

