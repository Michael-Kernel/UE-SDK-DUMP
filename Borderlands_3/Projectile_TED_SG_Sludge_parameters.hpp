#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_TED_SG_Sludge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Projectile_TED_SG_Sludge.Projectile_TED_SG_Sludge_C.ExecuteUbergraph_Projectile_TED_SG_Sludge
// 0x02F0 (0x02F0 - 0x0000)
struct Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit2;                                 // 0x0010(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x00E0(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeap_Tediore_BaseWeapon_C*           K2Node_DynamicCast_AsBPWeap_Tediore_Base_Weapon;   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x01B8(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0254(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0260(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x026C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0278(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectile_TED_SG_Sludge_C*            K2Node_DynamicCast_AsProjectile_TED_SG_Sludge;     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge) == 0x000008, "Wrong alignment on Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge");
static_assert(sizeof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge) == 0x0002F0, "Wrong size on Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, EntryPoint) == 0x000000, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::EntryPoint' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_Hit2) == 0x000010, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_Hit2' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_MyComp) == 0x0000A0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_Other) == 0x0000A8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_OtherComp) == 0x0000B0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_bSelfMoved) == 0x0000B8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_HitLocation) == 0x0000BC, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_HitNormal) == 0x0000C8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_NormalImpulse) == 0x0000D4, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_Hit1) == 0x0000E0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_CustomEvent_HitActor) == 0x000170, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_CustomEvent_HitLocation) == 0x000178, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Add_VectorVector_ReturnValue) == 0x000184, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_IsAlive_ReturnValue) == 0x000190, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_GetOwner_ReturnValue) == 0x000198, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_DynamicCast_AsBPWeap_Tediore_Base_Weapon) == 0x0001A0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_DynamicCast_AsBPWeap_Tediore_Base_Weapon' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Array_AddUnique_ReturnValue) == 0x0001AC, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001B0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_Event_Hit) == 0x0001B8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_bBlockingHit) == 0x000248, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_bInitialOverlap) == 0x000249, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_Time) == 0x00024C, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_Distance) == 0x000250, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_Location) == 0x000254, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_ImpactPoint) == 0x000260, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_Normal) == 0x00026C, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_ImpactNormal) == 0x000278, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_PhysMat) == 0x000288, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_HitActor) == 0x000290, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_HitComponent) == 0x000298, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_HitBoneName) == 0x0002A0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_HitItem) == 0x0002A8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_FaceIndex) == 0x0002AC, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_TraceStart) == 0x0002B0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_BreakHitResult_TraceEnd) == 0x0002BC, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_IsAlive_ReturnValue1) == 0x0002C8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_IsAlive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Array_Get_Item) == 0x0002D0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_DynamicCast_AsProjectile_TED_SG_Sludge) == 0x0002D8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_DynamicCast_AsProjectile_TED_SG_Sludge' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, K2Node_DynamicCast_bSuccess1) == 0x0002E0, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Array_Length_ReturnValue) == 0x0002E4, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge, CallFunc_Less_IntInt_ReturnValue) == 0x0002E8, "Member 'Projectile_TED_SG_Sludge_C_ExecuteUbergraph_Projectile_TED_SG_Sludge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Projectile_TED_SG_Sludge.Projectile_TED_SG_Sludge_C.OnHitEnemy
// 0x0090 (0x0090 - 0x0000)
struct Projectile_TED_SG_Sludge_C_OnHitEnemy final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_TED_SG_Sludge_C_OnHitEnemy) == 0x000008, "Wrong alignment on Projectile_TED_SG_Sludge_C_OnHitEnemy");
static_assert(sizeof(Projectile_TED_SG_Sludge_C_OnHitEnemy) == 0x000090, "Wrong size on Projectile_TED_SG_Sludge_C_OnHitEnemy");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_OnHitEnemy, Hit) == 0x000000, "Member 'Projectile_TED_SG_Sludge_C_OnHitEnemy::Hit' has a wrong offset!");

// Function Projectile_TED_SG_Sludge.Projectile_TED_SG_Sludge_C.GoToTarget
// 0x0018 (0x0018 - 0x0000)
struct Projectile_TED_SG_Sludge_C_GoToTarget final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_TED_SG_Sludge_C_GoToTarget) == 0x000008, "Wrong alignment on Projectile_TED_SG_Sludge_C_GoToTarget");
static_assert(sizeof(Projectile_TED_SG_Sludge_C_GoToTarget) == 0x000018, "Wrong size on Projectile_TED_SG_Sludge_C_GoToTarget");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_GoToTarget, HitActor) == 0x000000, "Member 'Projectile_TED_SG_Sludge_C_GoToTarget::HitActor' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_GoToTarget, HitLocation) == 0x000008, "Member 'Projectile_TED_SG_Sludge_C_GoToTarget::HitLocation' has a wrong offset!");

// Function Projectile_TED_SG_Sludge.Projectile_TED_SG_Sludge_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct Projectile_TED_SG_Sludge_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_TED_SG_Sludge_C_ReceiveHit) == 0x000008, "Wrong alignment on Projectile_TED_SG_Sludge_C_ReceiveHit");
static_assert(sizeof(Projectile_TED_SG_Sludge_C_ReceiveHit) == 0x0000D0, "Wrong size on Projectile_TED_SG_Sludge_C_ReceiveHit");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, MyComp) == 0x000000, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, Other) == 0x000008, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, HitNormal) == 0x000028, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_ReceiveHit, Hit) == 0x000040, "Member 'Projectile_TED_SG_Sludge_C_ReceiveHit::Hit' has a wrong offset!");

// Function Projectile_TED_SG_Sludge.Projectile_TED_SG_Sludge_C.OnHitWorld
// 0x0090 (0x0090 - 0x0000)
struct Projectile_TED_SG_Sludge_C_OnHitWorld final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_TED_SG_Sludge_C_OnHitWorld) == 0x000008, "Wrong alignment on Projectile_TED_SG_Sludge_C_OnHitWorld");
static_assert(sizeof(Projectile_TED_SG_Sludge_C_OnHitWorld) == 0x000090, "Wrong size on Projectile_TED_SG_Sludge_C_OnHitWorld");
static_assert(offsetof(Projectile_TED_SG_Sludge_C_OnHitWorld, Hit) == 0x000000, "Member 'Projectile_TED_SG_Sludge_C_OnHitWorld::Hit' has a wrong offset!");

}

