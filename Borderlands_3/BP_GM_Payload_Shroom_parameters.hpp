#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GM_Payload_Shroom

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GM_Payload_Shroom.BP_GM_Payload_Shroom_C.K2_GrenadeStuckTo
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 StickTarget;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0018(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FHitResult                             HitResult;                                         // 0x0048(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x00D8(0x0018)()
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo) == 0x000008, "Wrong alignment on BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo");
static_assert(sizeof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo) == 0x0000F8, "Wrong size on BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, Grenade) == 0x000000, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, StickTarget) == 0x000010, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::StickTarget' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, InstanceData) == 0x000018, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, HitResult) == 0x000048, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::HitResult' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, CallFunc_PostAttachedEvent_ReturnValue) == 0x0000D8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000F0, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeStuckTo::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_Shroom.BP_GM_Payload_Shroom_C.K2_GrenadeExplode
// 0x04D0 (0x04D0 - 0x0000)
struct BP_GM_Payload_Shroom_C_K2_GrenadeExplode final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x0100(0x0230)(ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0330(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0350(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0368(0x0020)(NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0390(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode) == 0x000010, "Wrong alignment on BP_GM_Payload_Shroom_C_K2_GrenadeExplode");
static_assert(sizeof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode) == 0x0004D0, "Wrong size on BP_GM_Payload_Shroom_C_K2_GrenadeExplode");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, Grenade) == 0x000000, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, InstanceData) == 0x000010, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_GetUpVector_ReturnValue) == 0x000040, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00004C, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000060, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_BreakTransform_Location) == 0x0000A4, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_BreakTransform_Scale) == 0x0000BC, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_GetForwardVector_ReturnValue) == 0x0000CC, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_GetOwner_ReturnValue) == 0x0000F8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x000100, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000330, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_SpawnActorAsync_ReturnValue) == 0x00033C, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_BreakVector_X) == 0x000340, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_BreakVector_Y) == 0x000344, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_BreakVector_Z) == 0x000348, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Add_FloatFloat_ReturnValue) == 0x00034C, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_MakeVector_ReturnValue) == 0x000350, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_GetOwner_ReturnValue1) == 0x000360, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000368, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000388, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeExplode, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000390, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeExplode::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function BP_GM_Payload_Shroom.BP_GM_Payload_Shroom_C.K2_GrenadeImpact
// 0x0150 (0x0150 - 0x0000)
struct BP_GM_Payload_Shroom_C_K2_GrenadeImpact final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0010(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x00A0(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact) == 0x000008, "Wrong alignment on BP_GM_Payload_Shroom_C_K2_GrenadeImpact");
static_assert(sizeof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact) == 0x000150, "Wrong size on BP_GM_Payload_Shroom_C_K2_GrenadeImpact");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, Grenade) == 0x000000, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, HitResult) == 0x000010, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::HitResult' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, InstanceData) == 0x0000A0, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D0, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D1, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_GrenadeImpact, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'BP_GM_Payload_Shroom_C_K2_GrenadeImpact::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_GM_Payload_Shroom.BP_GM_Payload_Shroom_C.K2_NativeDelayCallback
// 0x0048 (0x0048 - 0x0000)
struct BP_GM_Payload_Shroom_C_K2_NativeDelayCallback final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   DelayName;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_Shroom_C_K2_NativeDelayCallback) == 0x000008, "Wrong alignment on BP_GM_Payload_Shroom_C_K2_NativeDelayCallback");
static_assert(sizeof(BP_GM_Payload_Shroom_C_K2_NativeDelayCallback) == 0x000048, "Wrong size on BP_GM_Payload_Shroom_C_K2_NativeDelayCallback");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_NativeDelayCallback, Grenade) == 0x000000, "Member 'BP_GM_Payload_Shroom_C_K2_NativeDelayCallback::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_NativeDelayCallback, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Shroom_C_K2_NativeDelayCallback::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_NativeDelayCallback, InstanceData) == 0x000010, "Member 'BP_GM_Payload_Shroom_C_K2_NativeDelayCallback::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Shroom_C_K2_NativeDelayCallback, DelayName) == 0x000040, "Member 'BP_GM_Payload_Shroom_C_K2_NativeDelayCallback::DelayName' has a wrong offset!");

}

