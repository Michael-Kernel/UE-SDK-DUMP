#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HangingLights

#include "Basic.hpp"

#include "EHangingLightEmissiveLayer_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Decorator_HangingSpline_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HangingLights.BP_HangingLights_C
// 0x0048 (0x0590 - 0x0548)
class ABP_HangingLights_C final : public ABP_Decorator_HangingSpline_C
{
public:
	EHangingLightEmissiveLayer                    Material_Emissive_Layer;                           // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Light_Color;                                       // 0x054C(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Light_Intensity;                                   // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Light_Attenuation_Radius;                          // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Light_Location_Offset;                             // 0x0564(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lens_Flare_Intensity;                              // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lens_Flare_Offset;                                 // 0x0574(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Lens_Flares;                                       // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Lens_Flare_Mat;                                    // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HangingLights_C">();
	}
	static class ABP_HangingLights_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HangingLights_C>();
	}
};
static_assert(alignof(ABP_HangingLights_C) == 0x000008, "Wrong alignment on ABP_HangingLights_C");
static_assert(sizeof(ABP_HangingLights_C) == 0x000590, "Wrong size on ABP_HangingLights_C");
static_assert(offsetof(ABP_HangingLights_C, Material_Emissive_Layer) == 0x000548, "Member 'ABP_HangingLights_C::Material_Emissive_Layer' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Light_Color) == 0x00054C, "Member 'ABP_HangingLights_C::Light_Color' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Light_Intensity) == 0x00055C, "Member 'ABP_HangingLights_C::Light_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Light_Attenuation_Radius) == 0x000560, "Member 'ABP_HangingLights_C::Light_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Light_Location_Offset) == 0x000564, "Member 'ABP_HangingLights_C::Light_Location_Offset' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Lens_Flare_Intensity) == 0x000570, "Member 'ABP_HangingLights_C::Lens_Flare_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Lens_Flare_Offset) == 0x000574, "Member 'ABP_HangingLights_C::Lens_Flare_Offset' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Lens_Flares) == 0x000580, "Member 'ABP_HangingLights_C::Lens_Flares' has a wrong offset!");
static_assert(offsetof(ABP_HangingLights_C, Lens_Flare_Mat) == 0x000588, "Member 'ABP_HangingLights_C::Lens_Flare_Mat' has a wrong offset!");

}

