#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_OPQ

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_OPQ.Ability_OPQ_C
// 0x0038 (0x0130 - 0x00F8)
class UAbility_OPQ_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AmberManagement; // 0x0100(0x0028)()
	bool                                          IsReset;                                           // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Ability_OPQ(int32 EntryPoint);
	void Reset();
	void DealtDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnActivated();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_OPQ_C">();
	}
	static class UAbility_OPQ_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_OPQ_C>();
	}
};
static_assert(alignof(UAbility_OPQ_C) == 0x000008, "Wrong alignment on UAbility_OPQ_C");
static_assert(sizeof(UAbility_OPQ_C) == 0x000130, "Wrong size on UAbility_OPQ_C");
static_assert(offsetof(UAbility_OPQ_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_OPQ_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_OPQ_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AmberManagement) == 0x000100, "Member 'UAbility_OPQ_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AmberManagement' has a wrong offset!");
static_assert(offsetof(UAbility_OPQ_C, IsReset) == 0x000128, "Member 'UAbility_OPQ_C::IsReset' has a wrong offset!");

}

