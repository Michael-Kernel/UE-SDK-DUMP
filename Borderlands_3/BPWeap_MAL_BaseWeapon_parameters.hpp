#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_MAL_BaseWeapon

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxWeapon_structs.hpp"


namespace SDK::Params
{

// Function BPWeap_MAL_BaseWeapon.BPWeap_MAL_BaseWeapon_C.ExecuteUbergraph_BPWeap_MAL_BaseWeapon
// 0x0568 (0x0568 - 0x0000)
struct BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AWeapon* EventWeapon)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           K2Node_Event_BaseColor1;                           // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_HighlightColor1;                      // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue1;             // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponChargeComponent*                 CallFunc_GetUseModeComponentByClass_ReturnValue;   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponChargeComponent*                 CallFunc_GetUseModeComponentByClass_ReturnValue1;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAutoReload;                          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponMaterialEffectData              K2Node_MakeStruct_WeaponMaterialEffectData;        // 0x0078(0x0060)(NoDestructor)
	struct FWeaponMaterialEffectData              K2Node_MakeStruct_WeaponMaterialEffectData1;       // 0x00D8(0x0060)(NoDestructor)
	int32                                         CallFunc_PlayDynamicMaterialEffect_ReturnValue;    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayDynamicMaterialEffect_ReturnValue1;   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponMaterialEffectData              K2Node_MakeStruct_WeaponMaterialEffectData2;       // 0x0140(0x0060)(NoDestructor)
	struct FWeaponMaterialEffectData              K2Node_MakeStruct_WeaponMaterialEffectData3;       // 0x01A0(0x0060)(NoDestructor)
	int32                                         CallFunc_PlayDynamicMaterialEffect_ReturnValue2;   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayDynamicMaterialEffect_ReturnValue3;   // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           K2Node_MakeStruct_AttributeInitializationData;     // 0x0208(0x0038)(NoDestructor)
	struct FWeaponMaterialEffectData              K2Node_MakeStruct_WeaponMaterialEffectData4;       // 0x0240(0x0060)(NoDestructor)
	struct FWeaponRegisterMaterialEffectData      K2Node_MakeStruct_WeaponRegisterMaterialEffectData; // 0x02A0(0x00A8)(NoDestructor)
	int32                                         CallFunc_PlayDynamicMaterialEffect_ReturnValue4;   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttributeInitializationData           K2Node_MakeStruct_AttributeInitializationData1;    // 0x0350(0x0038)(NoDestructor)
	struct FAttributeInitializationData           K2Node_MakeStruct_AttributeInitializationData2;    // 0x0388(0x0038)(NoDestructor)
	struct FWeaponRegisterMaterialEffectData      K2Node_MakeStruct_WeaponRegisterMaterialEffectData1; // 0x03C0(0x00A8)(NoDestructor)
	struct FWeaponRegisterMaterialEffectData      K2Node_MakeStruct_WeaponRegisterMaterialEffectData2; // 0x0468(0x00A8)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0518(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0528(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           K2Node_Event_BaseColor;                            // 0x0538(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_HighlightColor;                       // 0x0548(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_CustomEvent_EventWeapon;                    // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon) == 0x000008, "Wrong alignment on BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon");
static_assert(sizeof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon) == 0x000568, "Wrong size on BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, EntryPoint) == 0x000000, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_Event_BaseColor1) == 0x000018, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_Event_BaseColor1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_Event_HighlightColor1) == 0x000028, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_Event_HighlightColor1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_LinearColorLerp_ReturnValue1) == 0x000048, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_LinearColorLerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_GetUseModeComponentByClass_ReturnValue) == 0x000060, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_GetUseModeComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_GetUseModeComponentByClass_ReturnValue1) == 0x000068, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_GetUseModeComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_Event_bAutoReload) == 0x000070, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_Event_bAutoReload' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000074, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponMaterialEffectData) == 0x000078, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponMaterialEffectData' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponMaterialEffectData1) == 0x0000D8, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponMaterialEffectData1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_PlayDynamicMaterialEffect_ReturnValue) == 0x000138, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_PlayDynamicMaterialEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_PlayDynamicMaterialEffect_ReturnValue1) == 0x00013C, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_PlayDynamicMaterialEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponMaterialEffectData2) == 0x000140, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponMaterialEffectData2' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponMaterialEffectData3) == 0x0001A0, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponMaterialEffectData3' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_PlayDynamicMaterialEffect_ReturnValue2) == 0x000200, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_PlayDynamicMaterialEffect_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_PlayDynamicMaterialEffect_ReturnValue3) == 0x000204, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_PlayDynamicMaterialEffect_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_AttributeInitializationData) == 0x000208, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_AttributeInitializationData' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponMaterialEffectData4) == 0x000240, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponMaterialEffectData4' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponRegisterMaterialEffectData) == 0x0002A0, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponRegisterMaterialEffectData' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_PlayDynamicMaterialEffect_ReturnValue4) == 0x000348, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_PlayDynamicMaterialEffect_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_AttributeInitializationData1) == 0x000350, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_AttributeInitializationData1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_AttributeInitializationData2) == 0x000388, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_AttributeInitializationData2' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponRegisterMaterialEffectData1) == 0x0003C0, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponRegisterMaterialEffectData1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_MakeStruct_WeaponRegisterMaterialEffectData2) == 0x000468, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_MakeStruct_WeaponRegisterMaterialEffectData2' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000510, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_CreateDelegate_OutputDelegate1) == 0x000518, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_CreateDelegate_OutputDelegate2) == 0x000528, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_Event_BaseColor) == 0x000538, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_Event_BaseColor' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_Event_HighlightColor) == 0x000548, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_Event_HighlightColor' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, K2Node_CustomEvent_EventWeapon) == 0x000558, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::K2Node_CustomEvent_EventWeapon' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000560, "Member 'BPWeap_MAL_BaseWeapon_C_ExecuteUbergraph_BPWeap_MAL_BaseWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");

// Function BPWeap_MAL_BaseWeapon.BPWeap_MAL_BaseWeapon_C.PutDown_Event
// 0x0008 (0x0008 - 0x0000)
struct BPWeap_MAL_BaseWeapon_C_PutDown_Event final
{
public:
	class AWeapon*                                EventWeapon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_MAL_BaseWeapon_C_PutDown_Event) == 0x000008, "Wrong alignment on BPWeap_MAL_BaseWeapon_C_PutDown_Event");
static_assert(sizeof(BPWeap_MAL_BaseWeapon_C_PutDown_Event) == 0x000008, "Wrong size on BPWeap_MAL_BaseWeapon_C_PutDown_Event");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_PutDown_Event, EventWeapon) == 0x000000, "Member 'BPWeap_MAL_BaseWeapon_C_PutDown_Event::EventWeapon' has a wrong offset!");

// Function BPWeap_MAL_BaseWeapon.BPWeap_MAL_BaseWeapon_C.SetSecondaryElementalData
// 0x0020 (0x0020 - 0x0000)
struct BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData final
{
public:
	struct FLinearColor                           BaseColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData) == 0x000004, "Wrong alignment on BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData");
static_assert(sizeof(BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData) == 0x000020, "Wrong size on BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData, BaseColor) == 0x000000, "Member 'BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData::BaseColor' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData, HighlightColor) == 0x000010, "Member 'BPWeap_MAL_BaseWeapon_C_SetSecondaryElementalData::HighlightColor' has a wrong offset!");

// Function BPWeap_MAL_BaseWeapon.BPWeap_MAL_BaseWeapon_C.SetPrimaryElementalData
// 0x0020 (0x0020 - 0x0000)
struct BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData final
{
public:
	struct FLinearColor                           BaseColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData) == 0x000004, "Wrong alignment on BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData");
static_assert(sizeof(BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData) == 0x000020, "Wrong size on BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData, BaseColor) == 0x000000, "Member 'BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData::BaseColor' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData, HighlightColor) == 0x000010, "Member 'BPWeap_MAL_BaseWeapon_C_SetPrimaryElementalData::HighlightColor' has a wrong offset!");

// Function BPWeap_MAL_BaseWeapon.BPWeap_MAL_BaseWeapon_C.Notify_ReloadStarted
// 0x0001 (0x0001 - 0x0000)
struct BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted final
{
public:
	bool                                          bAutoReload;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted) == 0x000001, "Wrong alignment on BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted");
static_assert(sizeof(BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted) == 0x000001, "Wrong size on BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted, bAutoReload) == 0x000000, "Member 'BPWeap_MAL_BaseWeapon_C_Notify_ReloadStarted::bAutoReload' has a wrong offset!");

// Function BPWeap_MAL_BaseWeapon.BPWeap_MAL_BaseWeapon_C.GetChargePercent
// 0x0010 (0x0010 - 0x0000)
struct BPWeap_MAL_BaseWeapon_C_GetChargePercent final
{
public:
	float                                         ChargePercent;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChargePercent_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChargePercent_ReturnValue1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_MAL_BaseWeapon_C_GetChargePercent) == 0x000004, "Wrong alignment on BPWeap_MAL_BaseWeapon_C_GetChargePercent");
static_assert(sizeof(BPWeap_MAL_BaseWeapon_C_GetChargePercent) == 0x000010, "Wrong size on BPWeap_MAL_BaseWeapon_C_GetChargePercent");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_GetChargePercent, ChargePercent) == 0x000000, "Member 'BPWeap_MAL_BaseWeapon_C_GetChargePercent::ChargePercent' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_GetChargePercent, CallFunc_GetChargePercent_ReturnValue) == 0x000004, "Member 'BPWeap_MAL_BaseWeapon_C_GetChargePercent::CallFunc_GetChargePercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_GetChargePercent, CallFunc_GetChargePercent_ReturnValue1) == 0x000008, "Member 'BPWeap_MAL_BaseWeapon_C_GetChargePercent::CallFunc_GetChargePercent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeap_MAL_BaseWeapon_C_GetChargePercent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BPWeap_MAL_BaseWeapon_C_GetChargePercent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

