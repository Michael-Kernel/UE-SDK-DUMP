#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPIO_SlotMachine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "Struct_SlotMachinePrizes_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_SlotMachineWheelIcons_structs.hpp"
#include "Enum_SlotMachinePrizePresentation_structs.hpp"


namespace SDK::Params
{

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Wheel3_Stop
// 0x0018 (0x0018 - 0x0000)
struct BPIO_SlotMachine_C_Wheel3_Stop final
{
public:
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(BPIO_SlotMachine_C_Wheel3_Stop) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Wheel3_Stop");
static_assert(sizeof(BPIO_SlotMachine_C_Wheel3_Stop) == 0x000018, "Wrong size on BPIO_SlotMachine_C_Wheel3_Stop");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel3_Stop, CallFunc_PostWwiseEvent_ReturnValue) == 0x000000, "Member 'BPIO_SlotMachine_C_Wheel3_Stop::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Wheel2_Stop
// 0x0018 (0x0018 - 0x0000)
struct BPIO_SlotMachine_C_Wheel2_Stop final
{
public:
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(BPIO_SlotMachine_C_Wheel2_Stop) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Wheel2_Stop");
static_assert(sizeof(BPIO_SlotMachine_C_Wheel2_Stop) == 0x000018, "Wrong size on BPIO_SlotMachine_C_Wheel2_Stop");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel2_Stop, CallFunc_PostWwiseEvent_ReturnValue) == 0x000000, "Member 'BPIO_SlotMachine_C_Wheel2_Stop::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Wheel1_Stop
// 0x0018 (0x0018 - 0x0000)
struct BPIO_SlotMachine_C_Wheel1_Stop final
{
public:
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(BPIO_SlotMachine_C_Wheel1_Stop) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Wheel1_Stop");
static_assert(sizeof(BPIO_SlotMachine_C_Wheel1_Stop) == 0x000018, "Wrong size on BPIO_SlotMachine_C_Wheel1_Stop");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel1_Stop, CallFunc_PostWwiseEvent_ReturnValue) == 0x000000, "Member 'BPIO_SlotMachine_C_Wheel1_Stop::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Win_SetPrizeMinLevel
// 0x0050 (0x0050 - 0x0000)
struct BPIO_SlotMachine_C_Win_SetPrizeMinLevel final
{
public:
	struct FStruct_SlotMachinePrizes              Struct_SlotMachinePrizes;                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameStage_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Win_SetPrizeMinLevel");
static_assert(sizeof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel) == 0x000050, "Wrong size on BPIO_SlotMachine_C_Win_SetPrizeMinLevel");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, Struct_SlotMachinePrizes) == 0x000000, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::Struct_SlotMachinePrizes' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, CallFunc_GetGameStage_ReturnValue) == 0x000038, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::CallFunc_GetGameStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000044, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeMinLevel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'BPIO_SlotMachine_C_Win_SetPrizeMinLevel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Win_SetPrizeWheels
// 0x00F0 (0x00F0 - 0x0000)
struct BPIO_SlotMachine_C_Win_SetPrizeWheels final
{
public:
	struct FStruct_SlotMachinePrizes              Prize_0;                                           // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FStruct_SlotMachinePrizes              MyPrize;                                           // 0x0038(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<Enum_SlotMachineWheelIcons>            MyShuffledWheels;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<Enum_SlotMachineWheelIcons>            MyAnyWheels;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachineWheelIcons                    CallFunc_Array_Get_Item;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachineWheelIcons                    CallFunc_Array_Get_Item1;                          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachineWheelIcons                    CallFunc_Array_Get_Item2;                          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_SlotMachineWheelIcons>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SlotMachineWheelIcons                    CallFunc_Array_Get_Item3;                          // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SlotMachineWheelIcons                    CallFunc_Array_Get_Item4;                          // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachineWheelIcons                    CallFunc_Array_Get_Item5;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_Win_SetPrizeWheels) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Win_SetPrizeWheels");
static_assert(sizeof(BPIO_SlotMachine_C_Win_SetPrizeWheels) == 0x0000F0, "Wrong size on BPIO_SlotMachine_C_Win_SetPrizeWheels");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Prize_0) == 0x000000, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Prize_0' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, MyPrize) == 0x000038, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::MyPrize' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, MyShuffledWheels) == 0x000070, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::MyShuffledWheels' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, MyAnyWheels) == 0x000080, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::MyAnyWheels' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Add_IntInt_ReturnValue1) == 0x00009C, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Temp_int_Array_Index_Variable1) == 0x0000A0, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Add_IntInt_ReturnValue2) == 0x0000A4, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Get_Item1) == 0x0000A9, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Get_Item2) == 0x0000AA, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Temp_int_Variable) == 0x0000C0, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Temp_bool_Variable) == 0x0000C4, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Get_Item3) == 0x0000C5, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C6, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x0000C7, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, K2Node_Select_Default) == 0x0000C8, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_BooleanOR_ReturnValue) == 0x0000CC, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Get_Item4) == 0x0000CD, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Get_Item5) == 0x0000D8, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Array_Length_ReturnValue1) == 0x0000DC, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Less_IntInt_ReturnValue) == 0x0000E1, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, Temp_int_Loop_Counter_Variable1) == 0x0000E4, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Less_IntInt_ReturnValue1) == 0x0000E8, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_SetPrizeWheels, CallFunc_Add_IntInt_ReturnValue3) == 0x0000EC, "Member 'BPIO_SlotMachine_C_Win_SetPrizeWheels::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Win_Presentation_End
// 0x0020 (0x0020 - 0x0000)
struct BPIO_SlotMachine_C_Win_Presentation_End final
{
public:
	Enum_SlotMachinePrizePresentation             MyPresentation;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BPIO_SlotMachine_C_Win_Presentation_End) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Win_Presentation_End");
static_assert(sizeof(BPIO_SlotMachine_C_Win_Presentation_End) == 0x000020, "Wrong size on BPIO_SlotMachine_C_Win_Presentation_End");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_End, MyPresentation) == 0x000000, "Member 'BPIO_SlotMachine_C_Win_Presentation_End::MyPresentation' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_End, CallFunc_PostWwiseEvent_ReturnValue) == 0x000008, "Member 'BPIO_SlotMachine_C_Win_Presentation_End::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Win_Presentation_Start
// 0x00D0 (0x00D0 - 0x0000)
struct BPIO_SlotMachine_C_Win_Presentation_Start final
{
public:
	class UMaterialInterface*                     MyWheelHologram;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MyHolograms;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachinePrizePresentation             MyPresentation;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachinePrizePresentation             Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable1;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable2;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable3;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachinePrizePresentation             Temp_byte_Variable1;                               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWwiseEvent*                            Temp_object_Variable4;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Temp_object_Variable5;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Temp_object_Variable6;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Temp_object_Variable7;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachinePrizePresentation             Temp_byte_Variable2;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            K2Node_Select1_Default;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select2_Default;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue2;              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x00B8(0x0018)()
};
static_assert(alignof(BPIO_SlotMachine_C_Win_Presentation_Start) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Win_Presentation_Start");
static_assert(sizeof(BPIO_SlotMachine_C_Win_Presentation_Start) == 0x0000D0, "Wrong size on BPIO_SlotMachine_C_Win_Presentation_Start");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, MyWheelHologram) == 0x000000, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::MyWheelHologram' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, MyHolograms) == 0x000008, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::MyHolograms' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, MyPresentation) == 0x000010, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::MyPresentation' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_int_Variable) == 0x000014, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_byte_Variable) == 0x000018, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable) == 0x000020, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable1) == 0x000028, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable2) == 0x000030, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable3) == 0x000038, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_byte_Variable1) == 0x000040, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable4) == 0x000048, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable5) == 0x000050, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable6) == 0x000058, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_object_Variable7) == 0x000060, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_byte_Variable2) == 0x000068, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_float_Variable) == 0x00006C, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_float_Variable1) == 0x000070, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_float_Variable2) == 0x000074, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_float_Variable3) == 0x000078, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000080, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_int_Variable1) == 0x00008C, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, Temp_int_Variable2) == 0x000090, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, K2Node_Select_Default) == 0x000094, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, K2Node_Select1_Default) == 0x000098, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, K2Node_Select2_Default) == 0x0000A8, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_IsValid_ReturnValue1) == 0x0000B0, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_Array_Contains_ReturnValue) == 0x0000B1, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_Array_Contains_ReturnValue1) == 0x0000B2, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_Array_Contains_ReturnValue2) == 0x0000B3, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_Array_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Win_Presentation_Start, CallFunc_PostWwiseEvent_ReturnValue) == 0x0000B8, "Member 'BPIO_SlotMachine_C_Win_Presentation_Start::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Play_AwardPrize
// 0x00D0 (0x00D0 - 0x0000)
struct BPIO_SlotMachine_C_Play_AwardPrize final
{
public:
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0008(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0020(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x0038(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue3;              // 0x0050(0x0018)()
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProj_SlotMachine_Grenade_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_SpawnAndAttachLoot_SelectedConfigurationName; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C_Play_AwardPrize) == 0x000010, "Wrong alignment on BPIO_SlotMachine_C_Play_AwardPrize");
static_assert(sizeof(BPIO_SlotMachine_C_Play_AwardPrize) == 0x0000D0, "Wrong size on BPIO_SlotMachine_C_Play_AwardPrize");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x000000, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_PostWwiseEvent_ReturnValue) == 0x000008, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000020, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_PostWwiseEvent_ReturnValue2) == 0x000038, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_PostWwiseEvent_ReturnValue3) == 0x000050, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_PostWwiseEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_GetAssociatedCharacter_ReturnValue1) == 0x0000B8, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_GetAssociatedCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_SpawnAndAttachLoot_SelectedConfigurationName) == 0x0000C0, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_SpawnAndAttachLoot_SelectedConfigurationName' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_AwardPrize, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C8, "Member 'BPIO_SlotMachine_C_Play_AwardPrize::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.OnRep_Prize
// 0x0001 (0x0001 - 0x0000)
struct BPIO_SlotMachine_C_OnRep_Prize final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C_OnRep_Prize) == 0x000001, "Wrong alignment on BPIO_SlotMachine_C_OnRep_Prize");
static_assert(sizeof(BPIO_SlotMachine_C_OnRep_Prize) == 0x000001, "Wrong size on BPIO_SlotMachine_C_OnRep_Prize");
static_assert(offsetof(BPIO_SlotMachine_C_OnRep_Prize, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'BPIO_SlotMachine_C_OnRep_Prize::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Play_Interact
// 0x0038 (0x0038 - 0x0000)
struct BPIO_SlotMachine_C_Play_Interact final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          MyOakChar;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          CallFunc_GetAssociatedPrimaryCharacter_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_Play_Interact) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Play_Interact");
static_assert(sizeof(BPIO_SlotMachine_C_Play_Interact) == 0x000038, "Wrong size on BPIO_SlotMachine_C_Play_Interact");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, Success) == 0x000000, "Member 'BPIO_SlotMachine_C_Play_Interact::Success' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, MyOakChar) == 0x000008, "Member 'BPIO_SlotMachine_C_Play_Interact::MyOakChar' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x000010, "Member 'BPIO_SlotMachine_C_Play_Interact::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, CallFunc_GetAssociatedPrimaryCharacter_ReturnValue) == 0x000018, "Member 'BPIO_SlotMachine_C_Play_Interact::CallFunc_GetAssociatedPrimaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000020, "Member 'BPIO_SlotMachine_C_Play_Interact::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, K2Node_DynamicCast_AsOak_Character) == 0x000028, "Member 'BPIO_SlotMachine_C_Play_Interact::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPIO_SlotMachine_C_Play_Interact::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_Interact, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'BPIO_SlotMachine_C_Play_Interact::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Wheel_UpdateRotations
// 0x0048 (0x0048 - 0x0000)
struct BPIO_SlotMachine_C_Wheel_UpdateRotations final
{
public:
	float                                         CallFunc_Wheel_GetTargetRotation_Rotation;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Wheel_GetTargetRotation_Rotation1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Wheel_GetTargetRotation_Rotation2;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_Wheel_UpdateRotations) == 0x000004, "Wrong alignment on BPIO_SlotMachine_C_Wheel_UpdateRotations");
static_assert(sizeof(BPIO_SlotMachine_C_Wheel_UpdateRotations) == 0x000048, "Wrong size on BPIO_SlotMachine_C_Wheel_UpdateRotations");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_Wheel_GetTargetRotation_Rotation) == 0x000000, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_Wheel_GetTargetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_Wheel_GetTargetRotation_Rotation1) == 0x000010, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_Wheel_GetTargetRotation_Rotation1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_Wheel_GetTargetRotation_Rotation2) == 0x000014, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_Wheel_GetTargetRotation_Rotation2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Roll1) == 0x000024, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Pitch1) == 0x000028, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Yaw1) == 0x00002C, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Roll2) == 0x000030, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Pitch2) == 0x000034, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_BreakRotator_Yaw2) == 0x000038, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_UpdateRotations, CallFunc_MakeVector_ReturnValue1) == 0x00003C, "Member 'BPIO_SlotMachine_C_Wheel_UpdateRotations::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Wheel_GetTargetRotation
// 0x004C (0x004C - 0x0000)
struct BPIO_SlotMachine_C_Wheel_GetTargetRotation final
{
public:
	Enum_SlotMachineWheelIcons                    Icon;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rotation;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SlotMachineWheelIcons                    Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable4;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable6;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable7;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable8;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable9;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable10;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable11;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_Wheel_GetTargetRotation) == 0x000004, "Wrong alignment on BPIO_SlotMachine_C_Wheel_GetTargetRotation");
static_assert(sizeof(BPIO_SlotMachine_C_Wheel_GetTargetRotation) == 0x00004C, "Wrong size on BPIO_SlotMachine_C_Wheel_GetTargetRotation");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Icon) == 0x000000, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Icon' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Rotation) == 0x000004, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_byte_Variable) == 0x000008, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable) == 0x00000C, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable1) == 0x000010, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable2) == 0x000014, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable3) == 0x000018, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable4) == 0x00001C, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable5) == 0x000020, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable6) == 0x000024, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable6' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable7) == 0x000028, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable7' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable8) == 0x00002C, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable8' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable9) == 0x000030, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable9' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable10) == 0x000034, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable10' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, Temp_float_Variable11) == 0x000038, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::Temp_float_Variable11' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, K2Node_Select_Default) == 0x00003C, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Wheel_GetTargetRotation, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000048, "Member 'BPIO_SlotMachine_C_Wheel_GetTargetRotation::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.Play_GetResults
// 0x00F8 (0x00F8 - 0x0000)
struct BPIO_SlotMachine_C_Play_GetResults final
{
public:
	class UDataTable*                             MyPrizeTable;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyWeight;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_EvaluateCondition_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames1;        // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_SlotMachinePrizes              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_SlotMachinePrizes              CallFunc_GetDataTableRowFromName_OutRow1;          // 0x00A0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue1;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_Play_GetResults) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_Play_GetResults");
static_assert(sizeof(BPIO_SlotMachine_C_Play_GetResults) == 0x0000F8, "Wrong size on BPIO_SlotMachine_C_Play_GetResults");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, MyPrizeTable) == 0x000000, "Member 'BPIO_SlotMachine_C_Play_GetResults::MyPrizeTable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, MyWeight) == 0x000008, "Member 'BPIO_SlotMachine_C_Play_GetResults::MyWeight' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BPIO_SlotMachine_C_Play_GetResults::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BPIO_SlotMachine_C_Play_GetResults::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_K2_EvaluateCondition_ReturnValue) == 0x000018, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_K2_EvaluateCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_GetDataTableRowNames_OutRowNames1) == 0x000038, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_GetDataTableRowNames_OutRowNames1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Array_Length_ReturnValue1) == 0x000050, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, Temp_int_Array_Index_Variable1) == 0x000094, "Member 'BPIO_SlotMachine_C_Play_GetResults::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Array_Get_Item1) == 0x000098, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_GetDataTableRowFromName_OutRow1) == 0x0000A0, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_GetDataTableRowFromName_OutRow1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_GetDataTableRowFromName_ReturnValue1) == 0x0000D8, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_GetDataTableRowFromName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, Temp_int_Loop_Counter_Variable1) == 0x0000DC, "Member 'BPIO_SlotMachine_C_Play_GetResults::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Less_IntInt_ReturnValue1) == 0x0000E0, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Add_IntInt_ReturnValue1) == 0x0000E4, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000F0, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_Play_GetResults, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BPIO_SlotMachine_C_Play_GetResults::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine
// 0x0010 (0x0010 - 0x0000)
struct BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine");
static_assert(sizeof(BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine) == 0x000010, "Wrong size on BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine, UserController) == 0x000000, "Member 'BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine::UserController' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine, UsedComponent) == 0x000008, "Member 'BPIO_SlotMachine_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BPIO_SlotMachine::UsedComponent' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine
// 0x0010 (0x0010 - 0x0000)
struct BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine final
{
public:
	class ADroppedInventoryItemPickup*            Pickup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PickedUpBy;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine");
static_assert(sizeof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine) == 0x000010, "Wrong size on BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine, Pickup) == 0x000000, "Member 'BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine::Pickup' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine, PickedUpBy) == 0x000008, "Member 'BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine::PickedUpBy' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine
// 0x0008 (0x0008 - 0x0000)
struct BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine final
{
public:
	class ADroppedInventoryItemPickup*            Pickup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine");
static_assert(sizeof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine) == 0x000008, "Wrong size on BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine, Pickup) == 0x000000, "Member 'BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_0_PickupAttachedDelegate__DelegateSignature_BPIO_SlotMachine::Pickup' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine
// 0x0010 (0x0010 - 0x0000)
struct BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine final
{
public:
	class ADroppedInventoryItemPickup*            Pickup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PickedUpBy;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine");
static_assert(sizeof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine) == 0x000010, "Wrong size on BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine, Pickup) == 0x000000, "Member 'BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine::Pickup' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine, PickedUpBy) == 0x000008, "Member 'BPIO_SlotMachine_C_BndEvt__OakLootable_K2Node_ComponentBoundEvent_1_PickupDetachedDelegate__DelegateSignature_BPIO_SlotMachine::PickedUpBy' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.__UserState_SlotMachineState_1
// 0x0001 (0x0001 - 0x0000)
struct BPIO_SlotMachine_C___UserState_SlotMachineState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C___UserState_SlotMachineState_1) == 0x000001, "Wrong alignment on BPIO_SlotMachine_C___UserState_SlotMachineState_1");
static_assert(sizeof(BPIO_SlotMachine_C___UserState_SlotMachineState_1) == 0x000001, "Wrong size on BPIO_SlotMachine_C___UserState_SlotMachineState_1");
static_assert(offsetof(BPIO_SlotMachine_C___UserState_SlotMachineState_1, bFromLoad) == 0x000000, "Member 'BPIO_SlotMachine_C___UserState_SlotMachineState_1::bFromLoad' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.__UserState_SlotMachineState_2
// 0x0001 (0x0001 - 0x0000)
struct BPIO_SlotMachine_C___UserState_SlotMachineState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C___UserState_SlotMachineState_2) == 0x000001, "Wrong alignment on BPIO_SlotMachine_C___UserState_SlotMachineState_2");
static_assert(sizeof(BPIO_SlotMachine_C___UserState_SlotMachineState_2) == 0x000001, "Wrong size on BPIO_SlotMachine_C___UserState_SlotMachineState_2");
static_assert(offsetof(BPIO_SlotMachine_C___UserState_SlotMachineState_2, bFromLoad) == 0x000000, "Member 'BPIO_SlotMachine_C___UserState_SlotMachineState_2::bFromLoad' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.__UserState_SlotMachineState_3
// 0x0001 (0x0001 - 0x0000)
struct BPIO_SlotMachine_C___UserState_SlotMachineState_3 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C___UserState_SlotMachineState_3) == 0x000001, "Wrong alignment on BPIO_SlotMachine_C___UserState_SlotMachineState_3");
static_assert(sizeof(BPIO_SlotMachine_C___UserState_SlotMachineState_3) == 0x000001, "Wrong size on BPIO_SlotMachine_C___UserState_SlotMachineState_3");
static_assert(offsetof(BPIO_SlotMachine_C___UserState_SlotMachineState_3, bFromLoad) == 0x000000, "Member 'BPIO_SlotMachine_C___UserState_SlotMachineState_3::bFromLoad' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.__UserState_SlotMachineState_4
// 0x0001 (0x0001 - 0x0000)
struct BPIO_SlotMachine_C___UserState_SlotMachineState_4 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C___UserState_SlotMachineState_4) == 0x000001, "Wrong alignment on BPIO_SlotMachine_C___UserState_SlotMachineState_4");
static_assert(sizeof(BPIO_SlotMachine_C___UserState_SlotMachineState_4) == 0x000001, "Wrong size on BPIO_SlotMachine_C___UserState_SlotMachineState_4");
static_assert(offsetof(BPIO_SlotMachine_C___UserState_SlotMachineState_4, bFromLoad) == 0x000000, "Member 'BPIO_SlotMachine_C___UserState_SlotMachineState_4::bFromLoad' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.__UserState_SlotMachineState_0
// 0x0001 (0x0001 - 0x0000)
struct BPIO_SlotMachine_C___UserState_SlotMachineState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C___UserState_SlotMachineState_0) == 0x000001, "Wrong alignment on BPIO_SlotMachine_C___UserState_SlotMachineState_0");
static_assert(sizeof(BPIO_SlotMachine_C___UserState_SlotMachineState_0) == 0x000001, "Wrong size on BPIO_SlotMachine_C___UserState_SlotMachineState_0");
static_assert(offsetof(BPIO_SlotMachine_C___UserState_SlotMachineState_0, bFromLoad) == 0x000000, "Member 'BPIO_SlotMachine_C___UserState_SlotMachineState_0::bFromLoad' has a wrong offset!");

// Function BPIO_SlotMachine.BPIO_SlotMachine_C.ExecuteUbergraph_BPIO_SlotMachine
// 0x04C8 (0x04C8 - 0x0000)
struct BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0048(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X1;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue1;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x00F8(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue3;                 // 0x0104(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult1;   // 0x0110(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult2;   // 0x01A0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Lerp_ReturnValue2;                        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_Interact_Success;                    // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue4;                 // 0x0238(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult3;   // 0x0248(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADroppedInventoryItemPickup*            K2Node_ComponentBoundEvent_Pickup2;                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_PickedUpBy1;            // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADroppedInventoryItemPickup*>    CallFunc_GetAttachedPickups_ReturnValue;           // 0x02F0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_SlotMachineWheelIcons>            K2Node_MakeArray_Array;                            // 0x0308(0x0010)(ZeroConstructor, ReferenceParm)
	struct FStruct_SlotMachinePrizes              K2Node_MakeStruct_Struct_SlotMachinePrizes;        // 0x0318(0x0038)(HasGetValueTypeHash)
	class ADroppedInventoryItemPickup*            K2Node_ComponentBoundEvent_Pickup1;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADroppedInventoryItemPickup*            K2Node_ComponentBoundEvent_Pickup;                 // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_PickedUpBy;             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue3;                // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad4;                  // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0370(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0400(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0418(0x0018)()
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x0438(0x0018)()
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0450(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x045C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0468(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue1;         // 0x0480(0x0018)()
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue1;           // 0x049C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue2;         // 0x04A8(0x0018)()
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine) == 0x000008, "Wrong alignment on BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine");
static_assert(sizeof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine) == 0x0004C8, "Wrong size on BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, EntryPoint) == 0x000000, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_MakeRotator_ReturnValue) == 0x00000C, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_X) == 0x000018, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_Z) == 0x000020, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_MakeRotator_ReturnValue1) == 0x000024, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_UserController) == 0x000038, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_UsedComponent) == 0x000040, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000048, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_X1) == 0x0000D8, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_Y1) == 0x0000DC, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_Z1) == 0x0000E0, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_X2) == 0x0000E4, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_Y2) == 0x0000E8, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_BreakVector_Z2) == 0x0000EC, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Lerp_ReturnValue) == 0x0000F0, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Lerp_ReturnValue1) == 0x0000F4, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Lerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_MakeRotator_ReturnValue2) == 0x0000F8, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_MakeRotator_ReturnValue3) == 0x000104, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_MakeRotator_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_K2_SetRelativeRotation_SweepHitResult1) == 0x000110, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_K2_SetRelativeRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_K2_SetRelativeRotation_SweepHitResult2) == 0x0001A0, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_K2_SetRelativeRotation_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Lerp_ReturnValue2) == 0x000230, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Lerp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Play_Interact_Success) == 0x000234, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Play_Interact_Success' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_MakeRotator_ReturnValue4) == 0x000238, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_MakeRotator_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_K2_SetRelativeRotation_SweepHitResult3) == 0x000248, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_K2_SetRelativeRotation_SweepHitResult3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_HasAuthority_ReturnValue1) == 0x0002D8, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_HasAuthority_ReturnValue2) == 0x0002D9, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_Pickup2) == 0x0002E0, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_Pickup2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_PickedUpBy1) == 0x0002E8, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_PickedUpBy1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_GetAttachedPickups_ReturnValue) == 0x0002F0, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_GetAttachedPickups_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Array_Length_ReturnValue) == 0x000300, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_Greater_IntInt_ReturnValue) == 0x000304, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_MakeArray_Array) == 0x000308, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_MakeStruct_Struct_SlotMachinePrizes) == 0x000318, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_MakeStruct_Struct_SlotMachinePrizes' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_Pickup1) == 0x000350, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_Pickup1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_Pickup) == 0x000358, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_Pickup' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_ComponentBoundEvent_PickedUpBy) == 0x000360, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_ComponentBoundEvent_PickedUpBy' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_HasAuthority_ReturnValue3) == 0x000368, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_HasAuthority_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_UserStateEvent_bFromLoad4) == 0x000369, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_UserStateEvent_bFromLoad4' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_UserStateEvent_bFromLoad3) == 0x00036A, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_UserStateEvent_bFromLoad2) == 0x00036B, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_UserStateEvent_bFromLoad1) == 0x00036C, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000370, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_PostWwiseEvent_ReturnValue) == 0x000400, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000418, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_RandomFloatInRange_ReturnValue) == 0x000430, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_PostWwiseEvent_ReturnValue2) == 0x000438, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000450, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_GetSocketLocation_ReturnValue) == 0x00045C, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_PostEventAtLocation_ReturnValue) == 0x000468, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_PostEventAtLocation_ReturnValue1) == 0x000480, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_PostEventAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_UserStateEvent_bFromLoad) == 0x000498, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_GetSocketLocation_ReturnValue1) == 0x00049C, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_GetSocketLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, CallFunc_PostEventAtLocation_ReturnValue2) == 0x0004A8, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::CallFunc_PostEventAtLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine, K2Node_SwitchEnum1_CmpSuccess) == 0x0004C0, "Member 'BPIO_SlotMachine_C_ExecuteUbergraph_BPIO_SlotMachine::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

}

