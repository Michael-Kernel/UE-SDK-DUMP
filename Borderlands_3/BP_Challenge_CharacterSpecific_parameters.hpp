#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Challenge_CharacterSpecific

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Challenge_CharacterSpecific.BP_Challenge_CharacterSpecific_C.ExecuteUbergraph_BP_Challenge_CharacterSpecific
// 0x0050 (0x0050 - 0x0000)
struct BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengesComponent*                   K2Node_Event_OwningChallenges;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          K2Node_Event_AssociatedCharacter;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerClassIdentifier*                 CallFunc_GetCurrentPlayerClass_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetBinds_BindSet;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific) == 0x000008, "Wrong alignment on BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific");
static_assert(sizeof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific) == 0x000050, "Wrong size on BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, EntryPoint) == 0x000000, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_Event_OwningChallenges) == 0x000010, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_Event_OwningChallenges' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_Event_AssociatedCharacter) == 0x000018, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_Event_AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000020, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_DynamicCast_AsOak_Character) == 0x000030, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_GetCurrentPlayerClass_ReturnValue) == 0x000040, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_GetCurrentPlayerClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_SetBinds_BindSet) == 0x000048, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_SetBinds_BindSet' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000049, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00004A, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x00004B, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x00004C, "Member 'BP_Challenge_CharacterSpecific_C_ExecuteUbergraph_BP_Challenge_CharacterSpecific::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");

// Function BP_Challenge_CharacterSpecific.BP_Challenge_CharacterSpecific_C.OnInitChallengeInstance
// 0x0010 (0x0010 - 0x0000)
struct BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance");
static_assert(sizeof(BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance) == 0x000010, "Wrong size on BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'BP_Challenge_CharacterSpecific_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");

// Function BP_Challenge_CharacterSpecific.BP_Challenge_CharacterSpecific_C.SetBinds
// 0x0010 (0x0010 - 0x0000)
struct BP_Challenge_CharacterSpecific_C_SetBinds final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindSet;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Challenge_CharacterSpecific_C_SetBinds) == 0x000008, "Wrong alignment on BP_Challenge_CharacterSpecific_C_SetBinds");
static_assert(sizeof(BP_Challenge_CharacterSpecific_C_SetBinds) == 0x000010, "Wrong size on BP_Challenge_CharacterSpecific_C_SetBinds");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_SetBinds, Character) == 0x000000, "Member 'BP_Challenge_CharacterSpecific_C_SetBinds::Character' has a wrong offset!");
static_assert(offsetof(BP_Challenge_CharacterSpecific_C_SetBinds, BindSet) == 0x000008, "Member 'BP_Challenge_CharacterSpecific_C_SetBinds::BindSet' has a wrong offset!");

}

