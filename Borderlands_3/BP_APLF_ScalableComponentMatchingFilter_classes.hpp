#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_APLF_ScalableComponentMatchingFilter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxAudio_structs.hpp"
#include "GbxAudio_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_APLF_ScalableComponentMatchingFilter.BP_APLF_ScalableComponentMatchingFilter_C
// 0x00B8 (0x00F0 - 0x0038)
class UBP_APLF_ScalableComponentMatchingFilter_C final : public UAudioPrepLocationFinder_Blueprint
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0038(0x0008)(Transient, DuplicateTransient)
	TArray<class FString>                         AssetNameFilter;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<EPhysicalSurface>                      SurfaceTypeFilter;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UPhysicalMaterial*>              PhysMatFilter;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UMaterialInterface*>             MaterialFilter;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FString>                         MaterialNameFilter;                                // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class AActor*>                         WithinActorBounds;                                 // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	struct FVector                                LocationOffset;                                    // 0x00A0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusAdjustmentFactor;                            // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinScale;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxScale;                                          // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LimitSearchByScale;                                // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          VisualizeSearch;                                   // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAudioPrepComponentFilter>      IgnoreFilters;                                     // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<TSoftObjectPtr<class UPhysicalMaterial>> PhysMatSoftReferences;                             // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UMaterialInterface>> MatInstanceSoftReferences;                         // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ShouldIgnoreComponent(class UPrimitiveComponent* Component, bool* bIgnore);
	void SetActorRlativeOffset(class AActor* Self2, struct FVector* Location, struct FRotator* Rotation);
	void AddFoundLocations();
	void ExecuteUbergraph_BP_APLF_ScalableComponentMatchingFilter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_APLF_ScalableComponentMatchingFilter_C">();
	}
	static class UBP_APLF_ScalableComponentMatchingFilter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_APLF_ScalableComponentMatchingFilter_C>();
	}
};
static_assert(alignof(UBP_APLF_ScalableComponentMatchingFilter_C) == 0x000008, "Wrong alignment on UBP_APLF_ScalableComponentMatchingFilter_C");
static_assert(sizeof(UBP_APLF_ScalableComponentMatchingFilter_C) == 0x0000F0, "Wrong size on UBP_APLF_ScalableComponentMatchingFilter_C");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, UberGraphFrame) == 0x000038, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, AssetNameFilter) == 0x000040, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::AssetNameFilter' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, SurfaceTypeFilter) == 0x000050, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::SurfaceTypeFilter' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, PhysMatFilter) == 0x000060, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::PhysMatFilter' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, MaterialFilter) == 0x000070, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::MaterialFilter' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, MaterialNameFilter) == 0x000080, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::MaterialNameFilter' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, WithinActorBounds) == 0x000090, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::WithinActorBounds' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, LocationOffset) == 0x0000A0, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::LocationOffset' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, RadiusAdjustmentFactor) == 0x0000AC, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::RadiusAdjustmentFactor' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, MinScale) == 0x0000B0, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::MinScale' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, MaxScale) == 0x0000B4, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::MaxScale' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, LimitSearchByScale) == 0x0000B8, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::LimitSearchByScale' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, VisualizeSearch) == 0x0000B9, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::VisualizeSearch' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, IgnoreFilters) == 0x0000C0, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::IgnoreFilters' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, PhysMatSoftReferences) == 0x0000D0, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::PhysMatSoftReferences' has a wrong offset!");
static_assert(offsetof(UBP_APLF_ScalableComponentMatchingFilter_C, MatInstanceSoftReferences) == 0x0000E0, "Member 'UBP_APLF_ScalableComponentMatchingFilter_C::MatInstanceSoftReferences' has a wrong offset!");

}

