#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxPerfAnalytics

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GbxPerfAnalytics_structs.hpp"


namespace SDK
{

// Class GbxPerfAnalytics.GbxTelemetryBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxTelemetryBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FK2EventRef DefineTelemetryEventRef(const class FString& EventName, const class FString& TableDesc);
	static bool EmitTelemetryEvent(const struct FK2EventRef& Event, const class FString& EventContext, class UObject* EventContextObject, class UObject* EventInstigatorObject, class UObject* WorldContextObject, const struct FGuid& Guid, bool bRunOnClient);
	static bool EmitTelemetryValues(const class FString& EventContext, const struct FK2TelemetryValues& Values, class UObject* WorldContextObject, const struct FGuid& Guid, bool bRunOnClient);
	static bool IsValid(const struct FK2EventRef& EventRef);
	static struct FK2EventRef MakeTelemetryEventRef(const class FString& EventName);
	static struct FK2TelemetryValues SetNamedTelemetryBool(struct FK2TelemetryValues& StatArray, const class FString& Key, const bool Value, ESetTelemetryValue Opt);
	static struct FK2TelemetryValues SetNamedTelemetryByte(struct FK2TelemetryValues& StatArray, const class FString& Key, const uint8 Value, ESetTelemetryValue Opt);
	static struct FK2TelemetryValues SetNamedTelemetryFloat(struct FK2TelemetryValues& StatArray, const class FString& Key, const float Value, ESetTelemetryValue Opt);
	static struct FK2TelemetryValues SetNamedTelemetryInt(struct FK2TelemetryValues& StatArray, const class FString& Key, const int32 Value, ESetTelemetryValue Opt);
	static struct FK2TelemetryValues SetNamedTelemetryRotator(struct FK2TelemetryValues& StatArray, const class FString& Key, const struct FRotator& Value, ESetTelemetryValue Opt);
	static struct FK2TelemetryValues SetNamedTelemetryString(struct FK2TelemetryValues& StatArray, const class FString& Key, const class FString& Value, ESetTelemetryValue Opt);
	static struct FK2TelemetryValues SetNamedTelemetryVector(struct FK2TelemetryValues& StatArray, const class FString& Key, const struct FVector& Value, ESetTelemetryValue Opt);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxTelemetryBlueprintLibrary">();
	}
	static class UGbxTelemetryBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTelemetryBlueprintLibrary>();
	}
};
static_assert(alignof(UGbxTelemetryBlueprintLibrary) == 0x000008, "Wrong alignment on UGbxTelemetryBlueprintLibrary");
static_assert(sizeof(UGbxTelemetryBlueprintLibrary) == 0x000028, "Wrong size on UGbxTelemetryBlueprintLibrary");

}

