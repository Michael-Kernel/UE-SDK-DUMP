#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_PetJabbermon_GunEquip

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function A_PetJabbermon_GunEquip.A_PetJabbermon_GunEquip_C.ExecuteUbergraph_A_PetJabbermon_GunEquip
// 0x0038 (0x0038 - 0x0000)
struct A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            K2Node_Event_ActionEndState;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBPChar_Pet_C>        K2Node_DynamicCast_AsIBPChar_Pet;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip) == 0x000008, "Wrong alignment on A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip");
static_assert(sizeof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip) == 0x000038, "Wrong size on A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, EntryPoint) == 0x000000, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::EntryPoint' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, K2Node_Event_ActionEndState) == 0x000004, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::K2Node_Event_ActionEndState' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, K2Node_Event_Actor) == 0x000008, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, Temp_bool_Has_Been_Initd_Variable) == 0x000010, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, Temp_bool_IsClosed_Variable) == 0x000011, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, CallFunc_K2_GetActor_ReturnValue) == 0x000018, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::CallFunc_K2_GetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, K2Node_DynamicCast_AsIBPChar_Pet) == 0x000020, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::K2Node_DynamicCast_AsIBPChar_Pet' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'A_PetJabbermon_GunEquip_C_ExecuteUbergraph_A_PetJabbermon_GunEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function A_PetJabbermon_GunEquip.A_PetJabbermon_GunEquip_C.OnServerEnd
// 0x0010 (0x0010 - 0x0000)
struct A_PetJabbermon_GunEquip_C_OnServerEnd final
{
public:
	EGbxActionEndState                            ActionEndState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_PetJabbermon_GunEquip_C_OnServerEnd) == 0x000008, "Wrong alignment on A_PetJabbermon_GunEquip_C_OnServerEnd");
static_assert(sizeof(A_PetJabbermon_GunEquip_C_OnServerEnd) == 0x000010, "Wrong size on A_PetJabbermon_GunEquip_C_OnServerEnd");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_OnServerEnd, ActionEndState) == 0x000000, "Member 'A_PetJabbermon_GunEquip_C_OnServerEnd::ActionEndState' has a wrong offset!");
static_assert(offsetof(A_PetJabbermon_GunEquip_C_OnServerEnd, Actor) == 0x000008, "Member 'A_PetJabbermon_GunEquip_C_OnServerEnd::Actor' has a wrong offset!");

}

