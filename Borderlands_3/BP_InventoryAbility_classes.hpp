#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryAbility

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_InventoryRarity_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InventoryAbility.BP_InventoryAbility_C
// 0x0028 (0x0120 - 0x00F8)
class UBP_InventoryAbility_C : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class AOakInventoryItem*                      InventoryAbility_Item;                             // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          InventoryAbility_Character;                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakPlayerAbilityEventHub*              InventoryAbility_EventHub;                         // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause_OnInjured;                                   // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	Enum_InventoryRarity                          InvetoryAbility_ItemRarity;                        // 0x0119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_InventoryAbility(int32 EntryPoint);
	void OnActivated();
	EGbxAbilityState CalculateAbilityState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InventoryAbility_C">();
	}
	static class UBP_InventoryAbility_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_InventoryAbility_C>();
	}
};
static_assert(alignof(UBP_InventoryAbility_C) == 0x000008, "Wrong alignment on UBP_InventoryAbility_C");
static_assert(sizeof(UBP_InventoryAbility_C) == 0x000120, "Wrong size on UBP_InventoryAbility_C");
static_assert(offsetof(UBP_InventoryAbility_C, UberGraphFrame) == 0x0000F8, "Member 'UBP_InventoryAbility_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_InventoryAbility_C, InventoryAbility_Item) == 0x000100, "Member 'UBP_InventoryAbility_C::InventoryAbility_Item' has a wrong offset!");
static_assert(offsetof(UBP_InventoryAbility_C, InventoryAbility_Character) == 0x000108, "Member 'UBP_InventoryAbility_C::InventoryAbility_Character' has a wrong offset!");
static_assert(offsetof(UBP_InventoryAbility_C, InventoryAbility_EventHub) == 0x000110, "Member 'UBP_InventoryAbility_C::InventoryAbility_EventHub' has a wrong offset!");
static_assert(offsetof(UBP_InventoryAbility_C, Pause_OnInjured) == 0x000118, "Member 'UBP_InventoryAbility_C::Pause_OnInjured' has a wrong offset!");
static_assert(offsetof(UBP_InventoryAbility_C, InvetoryAbility_ItemRarity) == 0x000119, "Member 'UBP_InventoryAbility_C::InvetoryAbility_ItemRarity' has a wrong offset!");

}

