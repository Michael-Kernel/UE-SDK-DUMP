#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionSkill_Siren_Phasetrance

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActionSkill_Siren_Phasetrance.ActionSkill_Siren_Phasetrance_C
// 0x0110 (0x0418 - 0x0308)
class UActionSkill_Siren_Phasetrance_C final : public UOakActionAbility_PhaseTrance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(Transient, DuplicateTransient)
	bool                                          Web_Missed;                                        // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnvQueryParams                        SpreadGraspEQS;                                    // 0x0318(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_ActionSkill_Siren_Phasetrance; // 0x03D0(0x0028)()
	int32                                         GraspKillCount;                                    // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EssenceProjectilesRemaining;                       // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProj_Siren_DLCSkill_WalkingPotato_Base_C* DLCSkillOrb;                                       // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   Phasetrance_RecallOrb;                             // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Phasetrance_RecallOrb__DelegateSignature();
	void ExecuteUbergraph_ActionSkill_Siren_Phasetrance(int32 EntryPoint);
	void RecallOrb();
	void OnActivated();
	void OnStartActionAbility();
	float Calculate_Leech_Heal_Amount(float Damage, bool Don_t_Adjust);
	void StartAttack();
	void FindSpreadTarget(class AActor** Res);
	void ResetCounters();
	void CreateAttackActionRegisters(TArray<struct FGbxActionRegister>* Res);
	void GetLeechTarget(class AActor** Res);
	void OnKilledGraspedEnemy(class AActor* Killer, class AGbxCharacter* Target);
	void OnWebGraspMissed();
	void TryFindNewEssenceGraspTarget(class AActor* LastGraspTarget);
	void GetEssenceDurationAdjust(float* Res);
	EGbxAbilityState CalculateAbilityState();
	void RegisterDLCSkillOrb(class AProj_Siren_DLCSkill_WalkingPotato_Base_C* Orb, bool* Res);
	void GetDLCSkillOrb(class AProj_Siren_DLCSkill_WalkingPotato_Base_C** Res);

	float GetCooldownRestartPercent() const;
	bool GetMaxCooldownModifier(EGbxAttributeModifierType* ModifierType, float* Value) const;
	class FString GetActionSkillWidgetKeyframe() const;
	bool ShouldAbortActivation(uint8* OutAbortCode) const;
	bool DoEffect(const struct FOakPhaseTranceEffectSpec& Spec) const;
	void DoEffect_Glamour(const struct FOakPhaseTranceEffectSpec& Spec, bool* bRes) const;
	void DoEffect_BrightStar(const struct FOakPhaseTranceEffectSpec& Spec, bool* bRes) const;
	void DoEffect_StillnessOfMind(const struct FOakPhaseTranceEffectSpec& Spec, bool* bRes) const;
	void DoEffect_Allure(const struct FOakPhaseTranceEffectSpec& Spec, bool* bRes) const;
	void DoEffect_SoulSap(const struct FOakPhaseTranceEffectSpec& Spec, bool* bRes) const;
	void FindLeechTarget(class AActor** Res) const;
	void AdjustLeechDamage(float StartingDamage, float* FinalDamage) const;
	void GetSingularityRadius(const struct FPhaseTranceActivationComboData& ComboData, float* Res) const;
	void DoEffect_Quicken(const struct FOakPhaseTranceEffectSpec& Spec, bool* Res) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActionSkill_Siren_Phasetrance_C">();
	}
	static class UActionSkill_Siren_Phasetrance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionSkill_Siren_Phasetrance_C>();
	}
};
static_assert(alignof(UActionSkill_Siren_Phasetrance_C) == 0x000008, "Wrong alignment on UActionSkill_Siren_Phasetrance_C");
static_assert(sizeof(UActionSkill_Siren_Phasetrance_C) == 0x000418, "Wrong size on UActionSkill_Siren_Phasetrance_C");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, UberGraphFrame) == 0x000308, "Member 'UActionSkill_Siren_Phasetrance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, Web_Missed) == 0x000310, "Member 'UActionSkill_Siren_Phasetrance_C::Web_Missed' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, SpreadGraspEQS) == 0x000318, "Member 'UActionSkill_Siren_Phasetrance_C::SpreadGraspEQS' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_ActionSkill_Siren_Phasetrance) == 0x0003D0, "Member 'UActionSkill_Siren_Phasetrance_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_ActionSkill_Siren_Phasetrance' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, GraspKillCount) == 0x0003F8, "Member 'UActionSkill_Siren_Phasetrance_C::GraspKillCount' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, EssenceProjectilesRemaining) == 0x0003FC, "Member 'UActionSkill_Siren_Phasetrance_C::EssenceProjectilesRemaining' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, DLCSkillOrb) == 0x000400, "Member 'UActionSkill_Siren_Phasetrance_C::DLCSkillOrb' has a wrong offset!");
static_assert(offsetof(UActionSkill_Siren_Phasetrance_C, Phasetrance_RecallOrb) == 0x000408, "Member 'UActionSkill_Siren_Phasetrance_C::Phasetrance_RecallOrb' has a wrong offset!");

}

