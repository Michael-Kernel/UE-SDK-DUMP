#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RailingsAndWalls

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_BP_RailingEndType_structs.hpp"


namespace SDK::Params
{

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SpawnMainMeshes
// 0x0530 (0x0530 - 0x0000)
struct BP_RailingsAndWalls_C_SpawnMainMeshes final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0038(0x001C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue1;              // 0x0060(0x001C)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetInstanceCount_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInstanceCount_ReturnValue1;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform1; // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue1;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInstanceCount_ReturnValue2;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x0144(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X3;                           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform2; // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue2;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x01B4(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X4;                           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y4;                           // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z4;                           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue2;              // 0x01E8(0x001C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X5;                           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y5;                           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z5;                           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X6;                           // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y6;                           // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z6;                           // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0228(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue1;  // 0x0238(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0248(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue2;  // 0x0258(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue3;  // 0x0268(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue4;  // 0x0288(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue5;  // 0x02A0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X7;                           // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y7;                           // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z7;                           // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X8;                           // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y8;                           // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z8;                           // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor1;                    // 0x02E4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor2;                    // 0x02F8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0308(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0xC];                                      // 0x0314(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X9;                           // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y9;                           // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z9;                           // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X10;                          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y10;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z10;                          // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor3;                    // 0x037C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor4;                    // 0x038C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor5;                    // 0x039C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x03AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue1;                 // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInstanceCount_ReturnValue3;            // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue4;             // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform3; // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue3;        // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location3;                 // 0x0434(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation3;                 // 0x0440(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale3;                    // 0x044C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X11;                          // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y11;                          // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z11;                          // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x0468(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0xB];                                      // 0x0475(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue2;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue4;                  // 0x04BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue3;               // 0x04D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0500(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue3;                 // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X12;                          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y12;                          // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z12;                          // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue5;             // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_SpawnMainMeshes) == 0x000010, "Wrong alignment on BP_RailingsAndWalls_C_SpawnMainMeshes");
static_assert(sizeof(BP_RailingsAndWalls_C_SpawnMainMeshes) == 0x000530, "Wrong size on BP_RailingsAndWalls_C_SpawnMainMeshes");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, Temp_struct_Variable) == 0x000000, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetBoundingBox_ReturnValue) == 0x000038, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X) == 0x000054, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z) == 0x00005C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetBoundingBox_ReturnValue1) == 0x000060, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetBoundingBox_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceCount_ReturnValue) == 0x00007C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X1) == 0x000084, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y1) == 0x000088, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z1) == 0x00008C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x000090, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_ReturnValue) == 0x0000C0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Location) == 0x0000C4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Scale) == 0x0000DC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceCount_ReturnValue1) == 0x0000E8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X2) == 0x0000EC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y2) == 0x0000F0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z2) == 0x0000F4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000F8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_OutInstanceTransform1) == 0x000100, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_OutInstanceTransform1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_ReturnValue1) == 0x000130, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceCount_ReturnValue2) == 0x000134, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceCount_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Location1) == 0x000138, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Rotation1) == 0x000144, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Scale1) == 0x000150, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_IntInt_ReturnValue2) == 0x00015C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X3) == 0x000160, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y3) == 0x000164, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z3) == 0x000168, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_OutInstanceTransform2) == 0x000170, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_OutInstanceTransform2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_ReturnValue2) == 0x0001A0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Location2) == 0x0001A8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Rotation2) == 0x0001B4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Scale2) == 0x0001C0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeVector_ReturnValue) == 0x0001CC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X4) == 0x0001D8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y4) == 0x0001DC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z4) == 0x0001E0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, Temp_int_Variable) == 0x0001E4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetBoundingBox_ReturnValue2) == 0x0001E8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetBoundingBox_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X5) == 0x000204, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y5) == 0x000208, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z5) == 0x00020C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000210, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X6) == 0x000218, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X6' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y6) == 0x00021C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y6' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z6) == 0x000220, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z6' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000224, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000228, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_K2_GetVectorParameterValue_ReturnValue1) == 0x000238, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_K2_GetVectorParameterValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, K2Node_MakeStruct_LinearColor) == 0x000248, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_K2_GetVectorParameterValue_ReturnValue2) == 0x000258, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_K2_GetVectorParameterValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_K2_GetVectorParameterValue_ReturnValue3) == 0x000268, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_K2_GetVectorParameterValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_SetStaticMesh_ReturnValue) == 0x000278, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000280, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_K2_GetVectorParameterValue_ReturnValue4) == 0x000288, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_K2_GetVectorParameterValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000298, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_K2_GetVectorParameterValue_ReturnValue5) == 0x0002A0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_K2_GetVectorParameterValue_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002B0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X7) == 0x0002BC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X7' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y7) == 0x0002C0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y7' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z7) == 0x0002C4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z7' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0002C8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X8) == 0x0002CC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X8' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y8) == 0x0002D0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y8' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z8) == 0x0002D4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z8' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_FTrunc_ReturnValue) == 0x0002D8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x0002DC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_IntInt_ReturnValue3) == 0x0002E0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, K2Node_MakeStruct_LinearColor1) == 0x0002E4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::K2Node_MakeStruct_LinearColor1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Greater_IntInt_ReturnValue) == 0x0002F4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, K2Node_MakeStruct_LinearColor2) == 0x0002F8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::K2Node_MakeStruct_LinearColor2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeVector_ReturnValue1) == 0x000308, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeTransform_ReturnValue) == 0x000320, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_AddInstance_ReturnValue) == 0x000350, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X9) == 0x000354, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X9' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y9) == 0x000358, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y9' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z9) == 0x00035C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z9' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000360, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X10) == 0x000364, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X10' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y10) == 0x000368, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y10' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z10) == 0x00036C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z10' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000370, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000374, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000378, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, K2Node_MakeStruct_LinearColor3) == 0x00037C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::K2Node_MakeStruct_LinearColor3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, K2Node_MakeStruct_LinearColor4) == 0x00038C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::K2Node_MakeStruct_LinearColor4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, K2Node_MakeStruct_LinearColor5) == 0x00039C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::K2Node_MakeStruct_LinearColor5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeVector_ReturnValue2) == 0x0003AC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeTransform_ReturnValue1) == 0x0003C0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_AddInstance_ReturnValue1) == 0x0003F0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_AddInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceCount_ReturnValue3) == 0x0003F4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceCount_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_IntInt_ReturnValue4) == 0x0003F8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_OutInstanceTransform3) == 0x000400, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_OutInstanceTransform3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_GetInstanceTransform_ReturnValue3) == 0x000430, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_GetInstanceTransform_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Location3) == 0x000434, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Location3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Rotation3) == 0x000440, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Rotation3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakTransform_Scale3) == 0x00044C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakTransform_Scale3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000458, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X11) == 0x00045C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X11' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y11) == 0x000460, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y11' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z11) == 0x000464, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z11' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeVector_ReturnValue3) == 0x000468, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000474, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeTransform_ReturnValue2) == 0x000480, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_AddInstance_ReturnValue2) == 0x0004B0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_AddInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Add_IntInt_ReturnValue1) == 0x0004B4, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x0004B8, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeVector_ReturnValue4) == 0x0004BC, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_MakeTransform_ReturnValue3) == 0x0004D0, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_MakeTransform_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000500, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_AddInstance_ReturnValue3) == 0x00050C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_AddInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_X12) == 0x000510, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_X12' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Y12) == 0x000514, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Y12' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_BreakVector_Z12) == 0x000518, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_BreakVector_Z12' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x00051C, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_FTrunc_ReturnValue1) == 0x000520, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_Subtract_IntInt_ReturnValue5) == 0x000524, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_Subtract_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnMainMeshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000528, "Member 'BP_RailingsAndWalls_C_SpawnMainMeshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SpawnPostsAlongRail
// 0x0190 (0x0190 - 0x0000)
struct BP_RailingsAndWalls_C_SpawnPostsAlongRail final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0010(0x001C)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetInstanceCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0094(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X3;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X4;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y4;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z4;                           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue1;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_SpawnPostsAlongRail) == 0x000010, "Wrong alignment on BP_RailingsAndWalls_C_SpawnPostsAlongRail");
static_assert(sizeof(BP_RailingsAndWalls_C_SpawnPostsAlongRail) == 0x000190, "Wrong size on BP_RailingsAndWalls_C_SpawnPostsAlongRail");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Y) == 0x000004, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Z) == 0x000008, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_GetBoundingBox_ReturnValue) == 0x000010, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_GetInstanceCount_ReturnValue) == 0x00002C, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_GetInstanceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_X1) == 0x000040, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Y1) == 0x000044, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Z1) == 0x000048, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x000050, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_GetInstanceTransform_ReturnValue) == 0x000080, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000084, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakTransform_Location) == 0x000088, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakTransform_Rotation) == 0x000094, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0000AC, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_X2) == 0x0000B0, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Y2) == 0x0000B4, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Z2) == 0x0000B8, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, Temp_int_Variable) == 0x0000BC, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_X3) == 0x0000C8, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Y3) == 0x0000CC, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Z3) == 0x0000D0, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0000D4, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_AddInstance_ReturnValue) == 0x000120, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000124, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_X4) == 0x000128, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_X4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Y4) == 0x00012C, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Y4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_BreakVector_Z4) == 0x000130, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_BreakVector_Z4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000134, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_FloatFloat_ReturnValue4) == 0x000138, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_MakeVector_ReturnValue1) == 0x00013C, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Add_FloatFloat_ReturnValue5) == 0x000148, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_MakeTransform_ReturnValue1) == 0x000150, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_AddInstance_ReturnValue1) == 0x000180, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_AddInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000184, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_Round_ReturnValue) == 0x000188, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SpawnPostsAlongRail, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00018C, "Member 'BP_RailingsAndWalls_C_SpawnPostsAlongRail::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.InitializeMainMeshWidth
// 0x003C (0x003C - 0x0000)
struct BP_RailingsAndWalls_C_InitializeMainMeshWidth final
{
public:
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0004(0x001C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RailingsAndWalls_C_InitializeMainMeshWidth) == 0x000004, "Wrong alignment on BP_RailingsAndWalls_C_InitializeMainMeshWidth");
static_assert(sizeof(BP_RailingsAndWalls_C_InitializeMainMeshWidth) == 0x00003C, "Wrong size on BP_RailingsAndWalls_C_InitializeMainMeshWidth");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_GetBoundingBox_ReturnValue) == 0x000004, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_BreakVector_X1) == 0x00002C, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_BreakVector_Y1) == 0x000030, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_BreakVector_Z1) == 0x000034, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_InitializeMainMeshWidth, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_RailingsAndWalls_C_InitializeMainMeshWidth::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpPostInstance
// 0x0040 (0x0040 - 0x0000)
struct BP_RailingsAndWalls_C_SetUpPostInstance final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_SetUpPostInstance) == 0x000010, "Wrong alignment on BP_RailingsAndWalls_C_SetUpPostInstance");
static_assert(sizeof(BP_RailingsAndWalls_C_SetUpPostInstance) == 0x000040, "Wrong size on BP_RailingsAndWalls_C_SetUpPostInstance");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpPostInstance, Temp_struct_Variable) == 0x000000, "Member 'BP_RailingsAndWalls_C_SetUpPostInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpPostInstance, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'BP_RailingsAndWalls_C_SetUpPostInstance::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpPostInstance, CallFunc_SetStaticMesh_ReturnValue) == 0x000038, "Member 'BP_RailingsAndWalls_C_SetUpPostInstance::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpMainInstance
// 0x0050 (0x0050 - 0x0000)
struct BP_RailingsAndWalls_C_SetUpMainInstance final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_SetUpMainInstance) == 0x000010, "Wrong alignment on BP_RailingsAndWalls_C_SetUpMainInstance");
static_assert(sizeof(BP_RailingsAndWalls_C_SetUpMainInstance) == 0x000050, "Wrong size on BP_RailingsAndWalls_C_SetUpMainInstance");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpMainInstance, Temp_struct_Variable) == 0x000000, "Member 'BP_RailingsAndWalls_C_SetUpMainInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpMainInstance, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_RailingsAndWalls_C_SetUpMainInstance::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpMainInstance, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'BP_RailingsAndWalls_C_SetUpMainInstance::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpMainInstance, CallFunc_SetStaticMesh_ReturnValue) == 0x000040, "Member 'BP_RailingsAndWalls_C_SetUpMainInstance::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.LockYandZLocations
// 0x0030 (0x0030 - 0x0000)
struct BP_RailingsAndWalls_C_LockYandZLocations final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RailingsAndWalls_C_LockYandZLocations) == 0x000004, "Wrong alignment on BP_RailingsAndWalls_C_LockYandZLocations");
static_assert(sizeof(BP_RailingsAndWalls_C_LockYandZLocations) == 0x000030, "Wrong size on BP_RailingsAndWalls_C_LockYandZLocations");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_BreakVector_Y) == 0x000004, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_BreakVector_Z) == 0x000008, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_BreakVector_X1) == 0x00000C, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_BreakVector_Y1) == 0x000010, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_BreakVector_Z1) == 0x000014, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_LockYandZLocations, CallFunc_MakeVector_ReturnValue1) == 0x000024, "Member 'BP_RailingsAndWalls_C_LockYandZLocations::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.FindNewTransfromFromType
// 0x0020 (0x0020 - 0x0000)
struct BP_RailingsAndWalls_C_FindNewTransfromFromType final
{
public:
	Enum_BP_RailingEndType                        Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NewRotation;                                       // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FRotator                               Rotation_FindRotation;                             // 0x0010(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_FindNewTransfromFromType) == 0x000004, "Wrong alignment on BP_RailingsAndWalls_C_FindNewTransfromFromType");
static_assert(sizeof(BP_RailingsAndWalls_C_FindNewTransfromFromType) == 0x000020, "Wrong size on BP_RailingsAndWalls_C_FindNewTransfromFromType");
static_assert(offsetof(BP_RailingsAndWalls_C_FindNewTransfromFromType, Type) == 0x000000, "Member 'BP_RailingsAndWalls_C_FindNewTransfromFromType::Type' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_FindNewTransfromFromType, IsEnd) == 0x000001, "Member 'BP_RailingsAndWalls_C_FindNewTransfromFromType::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_FindNewTransfromFromType, NewRotation) == 0x000004, "Member 'BP_RailingsAndWalls_C_FindNewTransfromFromType::NewRotation' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_FindNewTransfromFromType, Rotation_FindRotation) == 0x000010, "Member 'BP_RailingsAndWalls_C_FindNewTransfromFromType::Rotation_FindRotation' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_FindNewTransfromFromType, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'BP_RailingsAndWalls_C_FindNewTransfromFromType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpEndInstance
// 0x00C0 (0x00C0 - 0x0000)
struct BP_RailingsAndWalls_C_SetUpEndInstance final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0038(0x001C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindNewTransfromFromType_NewRotation;     // 0x00AC(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_SetUpEndInstance) == 0x000010, "Wrong alignment on BP_RailingsAndWalls_C_SetUpEndInstance");
static_assert(sizeof(BP_RailingsAndWalls_C_SetUpEndInstance) == 0x0000C0, "Wrong size on BP_RailingsAndWalls_C_SetUpEndInstance");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, Temp_struct_Variable) == 0x000000, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_GetBoundingBox_ReturnValue) == 0x000038, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_AddInstance_ReturnValue) == 0x000090, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000094, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_FindNewTransfromFromType_NewRotation) == 0x0000AC, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_FindNewTransfromFromType_NewRotation' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpEndInstance, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B8, "Member 'BP_RailingsAndWalls_C_SetUpEndInstance::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_RailingsAndWalls.BP_RailingsAndWalls_C.SetUpStartInstance
// 0x00C0 (0x00C0 - 0x0000)
struct BP_RailingsAndWalls_C_SetUpStartInstance final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0038(0x001C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindNewTransfromFromType_NewRotation;     // 0x00AC(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RailingsAndWalls_C_SetUpStartInstance) == 0x000010, "Wrong alignment on BP_RailingsAndWalls_C_SetUpStartInstance");
static_assert(sizeof(BP_RailingsAndWalls_C_SetUpStartInstance) == 0x0000C0, "Wrong size on BP_RailingsAndWalls_C_SetUpStartInstance");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, Temp_struct_Variable) == 0x000000, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_GetBoundingBox_ReturnValue) == 0x000038, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_BreakVector_X) == 0x00009C, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_AddInstance_ReturnValue) == 0x0000A8, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_FindNewTransfromFromType_NewRotation) == 0x0000AC, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_FindNewTransfromFromType_NewRotation' has a wrong offset!");
static_assert(offsetof(BP_RailingsAndWalls_C_SetUpStartInstance, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B8, "Member 'BP_RailingsAndWalls_C_SetUpStartInstance::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

