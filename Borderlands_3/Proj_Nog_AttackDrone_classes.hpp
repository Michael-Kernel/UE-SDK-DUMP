#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Nog_AttackDrone

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_Nog_AttackDrone.Proj_Nog_AttackDrone_C
// 0x0150 (0x0880 - 0x0730)
class AProj_Nog_AttackDrone_C : public AOakDroneProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0730(0x0008)(Transient, DuplicateTransient)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       FireSocket;                                        // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   Engine_Idle_Audio;                                 // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_NogDrone;                                       // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ExternalSpecialBuffRequest;                        // 0x0758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DroneColor_MI;                                     // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DroneColor_Active;                                 // 0x0768(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DroneColor_Inactive;                               // 0x0778(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        Query_ShootRange;                                  // 0x0788(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         ShootCooldown;                                     // 0x0840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShootBurst;                                        // 0x0844(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShootBurstDelay;                                   // 0x0848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84C[0x4];                                      // 0x084C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DefenseTarget;                                     // 0x0850(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableWarnRange;                                   // 0x0858(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_859[0x7];                                      // 0x0859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AttackDamageTypeOverride;                          // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WarnRange;                                         // 0x0868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShootRange;                                        // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    NogBuff;                                           // 0x0870(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_Proj_Nog_AttackDrone(int32 EntryPoint);
	void Nog_BuffDrone_RegisterBuffData(const struct FDataTableRowHandle& NogBuff_0, class AActor* BuffTarget);
	void OnBuffReceiverEnd(class AActor* Actor, EEndPlayReason EndPlayReason);
	void InitializeElement(EOakElementalType ElementType);
	void OnExplode();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_TakeAnyPipelineDamageDelegate__DelegateSignature_Proj_Nog_BuffDrone(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void Nog_BuffDrone_Detonate(bool WasDestroyed);
	void OnBuffReceiverDied(class AActor* DamageReceiver, class AActor* DamageCauser);
	void BeginShooting();
	void Nog_BuffDrone_SpecialBuff_Stop();
	void Nog_BuffDrone_SpecialBuff_Start();
	void Nog_BuffDrone_SupplyPath(const TArray<class AActor*>& PathNodeList);
	void Nog_BuffDrone_SwarmState(const class FString& StateName);
	void Nog_BuffDrone_NotifyBuffTarget();
	void Nog_BuffDrone_ReceiverInfo(class AActor* BuffReceiver);
	void UserConstructionScript();
	void SetupMaterials();
	void SetDroneColor(const struct FLinearColor& EmissiveColor);
	void SetDroneFaceTarget(bool FaceTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_Nog_AttackDrone_C">();
	}
	static class AProj_Nog_AttackDrone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_Nog_AttackDrone_C>();
	}
};
static_assert(alignof(AProj_Nog_AttackDrone_C) == 0x000008, "Wrong alignment on AProj_Nog_AttackDrone_C");
static_assert(sizeof(AProj_Nog_AttackDrone_C) == 0x000880, "Wrong size on AProj_Nog_AttackDrone_C");
static_assert(offsetof(AProj_Nog_AttackDrone_C, UberGraphFrame) == 0x000730, "Member 'AProj_Nog_AttackDrone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, RotatingMovement) == 0x000738, "Member 'AProj_Nog_AttackDrone_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, FireSocket) == 0x000740, "Member 'AProj_Nog_AttackDrone_C::FireSocket' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, Engine_Idle_Audio) == 0x000748, "Member 'AProj_Nog_AttackDrone_C::Engine_Idle_Audio' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, SM_NogDrone) == 0x000750, "Member 'AProj_Nog_AttackDrone_C::SM_NogDrone' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, ExternalSpecialBuffRequest) == 0x000758, "Member 'AProj_Nog_AttackDrone_C::ExternalSpecialBuffRequest' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, DroneColor_MI) == 0x000760, "Member 'AProj_Nog_AttackDrone_C::DroneColor_MI' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, DroneColor_Active) == 0x000768, "Member 'AProj_Nog_AttackDrone_C::DroneColor_Active' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, DroneColor_Inactive) == 0x000778, "Member 'AProj_Nog_AttackDrone_C::DroneColor_Inactive' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, Query_ShootRange) == 0x000788, "Member 'AProj_Nog_AttackDrone_C::Query_ShootRange' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, ShootCooldown) == 0x000840, "Member 'AProj_Nog_AttackDrone_C::ShootCooldown' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, ShootBurst) == 0x000844, "Member 'AProj_Nog_AttackDrone_C::ShootBurst' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, ShootBurstDelay) == 0x000848, "Member 'AProj_Nog_AttackDrone_C::ShootBurstDelay' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, DefenseTarget) == 0x000850, "Member 'AProj_Nog_AttackDrone_C::DefenseTarget' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, EnableWarnRange) == 0x000858, "Member 'AProj_Nog_AttackDrone_C::EnableWarnRange' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, AttackDamageTypeOverride) == 0x000860, "Member 'AProj_Nog_AttackDrone_C::AttackDamageTypeOverride' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, WarnRange) == 0x000868, "Member 'AProj_Nog_AttackDrone_C::WarnRange' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, ShootRange) == 0x00086C, "Member 'AProj_Nog_AttackDrone_C::ShootRange' has a wrong offset!");
static_assert(offsetof(AProj_Nog_AttackDrone_C, NogBuff) == 0x000870, "Member 'AProj_Nog_AttackDrone_C::NogBuff' has a wrong offset!");

}

