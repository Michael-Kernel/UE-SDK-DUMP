#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_SlotMachine_Grenade

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_SlotMachine_Grenade.Proj_SlotMachine_Grenade_C
// 0x0040 (0x0720 - 0x06E0)
class AProj_SlotMachine_Grenade_C final : public AOakProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               WarningLight;                                      // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereCollision;                                   // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Grenade;                                           // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABPIO_SlotMachine_C*                    SlotMachine;                                       // 0x0710(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DamageRadius;                                      // 0x0718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void OnExplode();
	void BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature_Proj_SlotMachine_Grenade(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_Proj_SlotMachine_Grenade(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_SlotMachine_Grenade_C">();
	}
	static class AProj_SlotMachine_Grenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_SlotMachine_Grenade_C>();
	}
};
static_assert(alignof(AProj_SlotMachine_Grenade_C) == 0x000008, "Wrong alignment on AProj_SlotMachine_Grenade_C");
static_assert(sizeof(AProj_SlotMachine_Grenade_C) == 0x000720, "Wrong size on AProj_SlotMachine_Grenade_C");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_SlotMachine_Grenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, WarningLight) == 0x0006E8, "Member 'AProj_SlotMachine_Grenade_C::WarningLight' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, WwiseAudio) == 0x0006F0, "Member 'AProj_SlotMachine_Grenade_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, SphereCollision) == 0x0006F8, "Member 'AProj_SlotMachine_Grenade_C::SphereCollision' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, Grenade) == 0x000700, "Member 'AProj_SlotMachine_Grenade_C::Grenade' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, GbxProjectileMovement) == 0x000708, "Member 'AProj_SlotMachine_Grenade_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, SlotMachine) == 0x000710, "Member 'AProj_SlotMachine_Grenade_C::SlotMachine' has a wrong offset!");
static_assert(offsetof(AProj_SlotMachine_Grenade_C, DamageRadius) == 0x000718, "Member 'AProj_SlotMachine_Grenade_C::DamageRadius' has a wrong offset!");

}

