#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_IO_Combat_Barrel

#include "Basic.hpp"

#include "BPI_IO_Combat_Barrel_classes.hpp"
#include "BPI_IO_Combat_Barrel_parameters.hpp"


namespace SDK
{

// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_StartFuse
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_IO_Combat_Barrel_C::BPI_StartFuse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_Combat_Barrel_C", "BPI_StartFuse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_Explode
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_IO_Combat_Barrel_C::BPI_Explode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_Combat_Barrel_C", "BPI_Explode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_SetSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PhysicsOn_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_IO_Combat_Barrel_C::BPI_SetSimulatePhysics(bool PhysicsOn_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_Combat_Barrel_C", "BPI_SetSimulatePhysics");

	Params::BPI_IO_Combat_Barrel_C_BPI_SetSimulatePhysics Parms{};

	Parms.PhysicsOn_ = PhysicsOn_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_ImpulseThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ThrowVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         RotatorForSpin                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   FuseSpeedScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          AdditiveVector                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_IO_Combat_Barrel_C::BPI_ImpulseThrow(const struct FVector& ThrowVector, float Force, const struct FRotator& RotatorForSpin, float FuseSpeedScale, const struct FVector& AdditiveVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_Combat_Barrel_C", "BPI_ImpulseThrow");

	Params::BPI_IO_Combat_Barrel_C_BPI_ImpulseThrow Parms{};

	Parms.ThrowVector = std::move(ThrowVector);
	Parms.Force = Force;
	Parms.RotatorForSpin = std::move(RotatorForSpin);
	Parms.FuseSpeedScale = FuseSpeedScale;
	Parms.AdditiveVector = std::move(AdditiveVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_ResetHealth
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_IO_Combat_Barrel_C::BPI_ResetHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_Combat_Barrel_C", "BPI_ResetHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_IO_Combat_Barrel.BPI_IO_Combat_Barrel_C.BPI_SetNavPainterEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_IO_Combat_Barrel_C::BPI_SetNavPainterEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_IO_Combat_Barrel_C", "BPI_SetNavPainterEnabled");

	Params::BPI_IO_Combat_Barrel_C_BPI_SetNavPainterEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}

}

