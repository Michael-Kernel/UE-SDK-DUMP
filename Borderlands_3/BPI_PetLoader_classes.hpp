#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PetLoader

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Enum_PetLoader_Variations_structs.hpp"
#include "Enum_PetLoader_ProjectedIcons_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_PetLoader.BPI_PetLoader_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_PetLoader_C final : public IInterface
{
public:
	void PetLoader_JumpStart();
	void PetLoader_JumpEnd();
	void PetLoader_EnterCrawlingState();
	void PetLoader_StartLaser();
	void PetLoaderEXP_Explode();
	void PetLoaderEXP_SelfDestruct();
	void PetLoader_SetProjectedIcon(Enum_PetLoader_ProjectedIcons Icon);
	void PetLoaderRIOT_ThrowShield();
	void PetLoaderRIOT_ShieldDestroyed();
	void PetLoaderRPG_isMissileBarrageDone(bool* IsDone_);
	void PetLoaderRPG_ShootMissile();
	void PetLoaderRIOT_ChargeStart();
	void PetLoaderRIOT_ChargeEnd();
	void PetLoaderBadass_LaserGround();
	void PetLoader_StartSpawningSurveyor();
	void PetLoader_StopSpawningSurveyor(bool FinishedWithSuccess);
	void PetLoader_isSpawningSurveyor(bool* IsSpawningSurveyor);
	void PetLoader_ToggleHandGrip(bool IsActive);
	void PetLoaderBadass_ThrowLaserBall();
	void PetLoaderBadass_AnticipateLaserBall();
	void PetLoader_IsUnboxSpawning(bool IsUnboxing);
	void PetLoaderRIOT_ShieldHit();
	void PetLoader_StartLaserCharge();
	void PetLoader_SetImmuneToPhaselock(bool bIsImmune);
	void PetLoader_GetType(Enum_PetLoader_Variations* LoaderType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_PetLoader_C">();
	}
	static class IBPI_PetLoader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_PetLoader_C>();
	}
};
static_assert(alignof(IBPI_PetLoader_C) == 0x000008, "Wrong alignment on IBPI_PetLoader_C");
static_assert(sizeof(IBPI_PetLoader_C) == 0x000028, "Wrong size on IBPI_PetLoader_C");

}

