#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_IsItemSlottedForTypeInvNotFull

#include "Basic.hpp"


namespace SDK::Params
{

// Function Condition_IsItemSlottedForTypeInvNotFull.Condition_IsItemSlottedForTypeInvNotFull_C.EvaluateCondition
// 0x0060 (0x0060 - 0x0000)
struct Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OptionalContext;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_OakInventoryItemPickup_C*           K2Node_DynamicCast_AsBP_Oak_Inventory_Item_Pickup; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryListComponent*                CallFunc_GetInventoryComponent_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotOpenInventoryCategory_ReturnValue;  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInventoryFull_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition) == 0x000008, "Wrong alignment on Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition");
static_assert(sizeof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition) == 0x000060, "Wrong size on Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, Context) == 0x000000, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::Context' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, OptionalContext) == 0x000008, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::OptionalContext' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, ReturnValue) == 0x000010, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000018, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, K2Node_DynamicCast_AsBP_Oak_Inventory_Item_Pickup) == 0x000028, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::K2Node_DynamicCast_AsBP_Oak_Inventory_Item_Pickup' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x000038, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, K2Node_DynamicCast_AsOak_Character) == 0x000040, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_GetInventoryComponent_ReturnValue) == 0x000050, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_IsSlotOpenInventoryCategory_ReturnValue) == 0x000058, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_IsSlotOpenInventoryCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_IsInventoryFull_ReturnValue) == 0x000059, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_IsInventoryFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_Not_PreBool_ReturnValue1) == 0x00005B, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'Condition_IsItemSlottedForTypeInvNotFull_C_EvaluateCondition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

