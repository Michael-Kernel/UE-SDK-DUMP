#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPBeastmasterComponent

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPBeastmasterComponent.BPBeastmasterComponent_C
// 0x00C0 (0x04D0 - 0x0410)
class UBPBeastmasterComponent_C final : public UBeastmasterCharacterComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(Transient, DuplicateTransient)
	struct FEnvQueryParams                        PetSpawnLocationEQS;                               // 0x0418(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BPBeastmasterComponent(int32 EntryPoint);
	void TryOrderPetAttack();
	void ReceiveBeginPlay();
	void OnReleasedPet(bool bForced, EPetReleaseReason ReleaseReason);
	class AOakCharacter* SpawnNewPet(class UOakPlayerCharacterAugmentData_Pet* PetAugment, const struct FVector& SpawnLocation);
	void CheckForSpawnCollisions(const struct FVector& SpawnLocation, bool* bCollisionsDetected);

	void GetPetSpawnClass(class UOakPlayerCharacterAugmentData_Pet* InAugment, class UClass** Res) const;
	struct FVector GetFallbackPetSpawnLocation() const;
	float GetPetCooldownRefundPercent(EPetRespawnCooldownRefundType RefundType) const;
	bool ValidateCurrentPetAugment(class UOakPlayerCharacterAugmentData_Pet* PetAugment) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPBeastmasterComponent_C">();
	}
	static class UBPBeastmasterComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPBeastmasterComponent_C>();
	}
};
static_assert(alignof(UBPBeastmasterComponent_C) == 0x000008, "Wrong alignment on UBPBeastmasterComponent_C");
static_assert(sizeof(UBPBeastmasterComponent_C) == 0x0004D0, "Wrong size on UBPBeastmasterComponent_C");
static_assert(offsetof(UBPBeastmasterComponent_C, UberGraphFrame) == 0x000410, "Member 'UBPBeastmasterComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPBeastmasterComponent_C, PetSpawnLocationEQS) == 0x000418, "Member 'UBPBeastmasterComponent_C::PetSpawnLocationEQS' has a wrong offset!");

}

