#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_PrivateInvestigator

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_PrivateInvestigator.Ability_PrivateInvestigator_C
// 0x0040 (0x0138 - 0x00F8)
class UAbility_PrivateInvestigator_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AmberManagement; // 0x0100(0x0028)()
	class AOakCharacter*                          OakChar;                                           // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BuffDuration;                                      // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_PrivateInvestigator(int32 EntryPoint);
	void OnDeactivated();
	void OnUnregistered();
	void ModeSwitched();
	void CausedDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnActivated();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_PrivateInvestigator_C">();
	}
	static class UAbility_PrivateInvestigator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_PrivateInvestigator_C>();
	}
};
static_assert(alignof(UAbility_PrivateInvestigator_C) == 0x000008, "Wrong alignment on UAbility_PrivateInvestigator_C");
static_assert(sizeof(UAbility_PrivateInvestigator_C) == 0x000138, "Wrong size on UAbility_PrivateInvestigator_C");
static_assert(offsetof(UAbility_PrivateInvestigator_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_PrivateInvestigator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_PrivateInvestigator_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AmberManagement) == 0x000100, "Member 'UAbility_PrivateInvestigator_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AmberManagement' has a wrong offset!");
static_assert(offsetof(UAbility_PrivateInvestigator_C, OakChar) == 0x000128, "Member 'UAbility_PrivateInvestigator_C::OakChar' has a wrong offset!");
static_assert(offsetof(UAbility_PrivateInvestigator_C, BuffDuration) == 0x000130, "Member 'UAbility_PrivateInvestigator_C::BuffDuration' has a wrong offset!");

}

