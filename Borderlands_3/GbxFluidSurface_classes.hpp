#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxFluidSurface

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class GbxFluidSurface.FluidSurface
// 0x0048 (0x04A0 - 0x0458)
class AFluidSurface final : public AActor
{
public:
	int32                                         NumberOfFluidParticlesX;                           // 0x0458(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfFluidParticlesY;                           // 0x045C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetHeight;                                      // 0x0460(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FluidStiffness;                                    // 0x0464(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FluidPropagation;                                  // 0x0468(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IterationCount;                                    // 0x046C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProceduralMeshComponent*               RenderComponent;                                   // 0x0470(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_478[0x28];                                     // 0x0478(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PerturbSurface(const struct FVector& Position, float Radius, float Force);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FluidSurface">();
	}
	static class AFluidSurface* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFluidSurface>();
	}
};
static_assert(alignof(AFluidSurface) == 0x000008, "Wrong alignment on AFluidSurface");
static_assert(sizeof(AFluidSurface) == 0x0004A0, "Wrong size on AFluidSurface");
static_assert(offsetof(AFluidSurface, NumberOfFluidParticlesX) == 0x000458, "Member 'AFluidSurface::NumberOfFluidParticlesX' has a wrong offset!");
static_assert(offsetof(AFluidSurface, NumberOfFluidParticlesY) == 0x00045C, "Member 'AFluidSurface::NumberOfFluidParticlesY' has a wrong offset!");
static_assert(offsetof(AFluidSurface, TargetHeight) == 0x000460, "Member 'AFluidSurface::TargetHeight' has a wrong offset!");
static_assert(offsetof(AFluidSurface, FluidStiffness) == 0x000464, "Member 'AFluidSurface::FluidStiffness' has a wrong offset!");
static_assert(offsetof(AFluidSurface, FluidPropagation) == 0x000468, "Member 'AFluidSurface::FluidPropagation' has a wrong offset!");
static_assert(offsetof(AFluidSurface, IterationCount) == 0x00046C, "Member 'AFluidSurface::IterationCount' has a wrong offset!");
static_assert(offsetof(AFluidSurface, RenderComponent) == 0x000470, "Member 'AFluidSurface::RenderComponent' has a wrong offset!");

}

