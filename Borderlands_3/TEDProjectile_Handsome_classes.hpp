#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TEDProjectile_Handsome

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TEDProjectile_Handsome.TEDProjectile_Handsome_C
// 0x0078 (0x08B0 - 0x0838)
class ATEDProjectile_Handsome_C final : public ATedioreProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0838(0x0008)(Transient, DuplicateTransient)
	class UOakDialogComponent*                    OakDialog;                                         // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Stock_Booster;                                     // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BehaviorCurrent;                                   // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfHeight;                                        // 0x0858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0860(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnGround;                                          // 0x0890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Shooting;                                          // 0x0891(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_892[0x6];                                      // 0x0892(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               FX_Stabilizer;                                     // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Homing;                                            // 0x08A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StickY;                                            // 0x08A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Combo;                                             // 0x08A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AICanSteal;                                        // 0x08A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MIRV;                                              // 0x08A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Bouncy;                                            // 0x08A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Default;                                           // 0x08A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A7[0x1];                                      // 0x08A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FuseTime;                                          // 0x08A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FuseTriggered;                                     // 0x08AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanWalk;                                           // 0x08AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TEDProjectile_Handsome(int32 EntryPoint);
	void BndEvt__TedioreProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectilePostLastBounceDelegate__DelegateSignature_TEDProjectile_Handsome(const struct FHitResult& ImpactResult);
	void OnHitWorld(const struct FHitResult& Hit);
	void FuseExpired();
	void AIProjectile_Disarm();
	void EnableDrunk();
	void ReceiveBeginPlay();
	void AIProjectile_Arm();
	void BndEvt__TedioreProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature_TEDProjectile_Base(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void HomingThrust();
	void OnBehaviorInitialized(TSubclassOf<class UTedioreBehavior> BehaviorClass);
	void UserConstructionScript();
	void InitStabilizer();
	void InitRotation(int32 ThrowStyle);
	void InitHoming();
	void StabilizerBoost();
	void StabilizerBoostBouncy();
	void StabilizerFXandAudio();
	void InitCombo();
	void SpawnRotationandOffset(const struct FVector& Location, const struct FVector& HitNormal, const struct FVector& Normal, struct FTransform* Transform);
	void RemoveAmmo(int32* ThrowType);
	void AIProjectileDisarm();
	void AIProjectileArm();
	bool AIProjectile_CanBeStolen();
	void SetExplosionRadius();

	float CalculateExplosionDamage(float DamagePerShot, int32 BulletsPerShot) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TEDProjectile_Handsome_C">();
	}
	static class ATEDProjectile_Handsome_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATEDProjectile_Handsome_C>();
	}
};
static_assert(alignof(ATEDProjectile_Handsome_C) == 0x000010, "Wrong alignment on ATEDProjectile_Handsome_C");
static_assert(sizeof(ATEDProjectile_Handsome_C) == 0x0008B0, "Wrong size on ATEDProjectile_Handsome_C");
static_assert(offsetof(ATEDProjectile_Handsome_C, UberGraphFrame) == 0x000838, "Member 'ATEDProjectile_Handsome_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, OakDialog) == 0x000840, "Member 'ATEDProjectile_Handsome_C::OakDialog' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, Stock_Booster) == 0x000848, "Member 'ATEDProjectile_Handsome_C::Stock_Booster' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, BehaviorCurrent) == 0x000850, "Member 'ATEDProjectile_Handsome_C::BehaviorCurrent' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, HalfHeight) == 0x000858, "Member 'ATEDProjectile_Handsome_C::HalfHeight' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, SpawnTransform) == 0x000860, "Member 'ATEDProjectile_Handsome_C::SpawnTransform' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, OnGround) == 0x000890, "Member 'ATEDProjectile_Handsome_C::OnGround' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, Shooting) == 0x000891, "Member 'ATEDProjectile_Handsome_C::Shooting' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, FX_Stabilizer) == 0x000898, "Member 'ATEDProjectile_Handsome_C::FX_Stabilizer' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, Homing) == 0x0008A0, "Member 'ATEDProjectile_Handsome_C::Homing' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, StickY) == 0x0008A1, "Member 'ATEDProjectile_Handsome_C::StickY' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, Combo) == 0x0008A2, "Member 'ATEDProjectile_Handsome_C::Combo' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, AICanSteal) == 0x0008A3, "Member 'ATEDProjectile_Handsome_C::AICanSteal' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, MIRV) == 0x0008A4, "Member 'ATEDProjectile_Handsome_C::MIRV' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, Bouncy) == 0x0008A5, "Member 'ATEDProjectile_Handsome_C::Bouncy' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, Default) == 0x0008A6, "Member 'ATEDProjectile_Handsome_C::Default' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, FuseTime) == 0x0008A8, "Member 'ATEDProjectile_Handsome_C::FuseTime' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, FuseTriggered) == 0x0008AC, "Member 'ATEDProjectile_Handsome_C::FuseTriggered' has a wrong offset!");
static_assert(offsetof(ATEDProjectile_Handsome_C, CanWalk) == 0x0008AD, "Member 'ATEDProjectile_Handsome_C::CanWalk' has a wrong offset!");

}

