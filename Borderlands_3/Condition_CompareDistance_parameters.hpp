#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_CompareDistance

#include "Basic.hpp"


namespace SDK::Params
{

// Function Condition_CompareDistance.Condition_CompareDistance_C.EvaluateCondition
// 0x0098 (0x0098 - 0x0000)
struct Condition_CompareDistance_C_EvaluateCondition final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OptionalContext;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MyDistance;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyActor2;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyActor1;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController1;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue1;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Condition_CompareDistance_C_EvaluateCondition) == 0x000008, "Wrong alignment on Condition_CompareDistance_C_EvaluateCondition");
static_assert(sizeof(Condition_CompareDistance_C_EvaluateCondition) == 0x000098, "Wrong size on Condition_CompareDistance_C_EvaluateCondition");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, Context) == 0x000000, "Member 'Condition_CompareDistance_C_EvaluateCondition::Context' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, OptionalContext) == 0x000008, "Member 'Condition_CompareDistance_C_EvaluateCondition::OptionalContext' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, ReturnValue) == 0x000010, "Member 'Condition_CompareDistance_C_EvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, MyDistance) == 0x000014, "Member 'Condition_CompareDistance_C_EvaluateCondition::MyDistance' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, MyActor2) == 0x000018, "Member 'Condition_CompareDistance_C_EvaluateCondition::MyActor2' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, MyActor1) == 0x000020, "Member 'Condition_CompareDistance_C_EvaluateCondition::MyActor1' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000029, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_AsActor) == 0x000030, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_AsController) == 0x000040, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_bSuccess1) == 0x000048, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_AsActor1) == 0x000060, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_AsActor1' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_AsController1) == 0x000070, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_AsController1' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_DynamicCast_bSuccess3) == 0x000078, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_K2_GetPawn_ReturnValue1) == 0x000080, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_K2_GetPawn_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_IsValid_ReturnValue1) == 0x000089, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00008A, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00008B, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, CallFunc_GetDistanceTo_ReturnValue) == 0x00008C, "Member 'Condition_CompareDistance_C_EvaluateCondition::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_CompareDistance_C_EvaluateCondition, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'Condition_CompareDistance_C_EvaluateCondition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

