#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Tankman

#include "Basic.hpp"

#include "Ability_Tankman_classes.hpp"
#include "Ability_Tankman_parameters.hpp"


namespace SDK
{

// Function Ability_Tankman.Ability_Tankman_C.ExecuteUbergraph_Ability_Tankman
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_Tankman_C::ExecuteUbergraph_Ability_Tankman(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "ExecuteUbergraph_Ability_Tankman");

	Params::Ability_Tankman_C_ExecuteUbergraph_Ability_Tankman Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Tankman.Ability_Tankman_C.OnDownStateStart_CE
// (BlueprintCallable, BlueprintEvent)

void UAbility_Tankman_C::OnDownStateStart_CE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "OnDownStateStart_CE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Tankman.Ability_Tankman_C.OnCauseDeath_CE
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamageComponent*                 Damaged                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDeathDetails              Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UAbility_Tankman_C::OnCauseDeath_CE(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "OnCauseDeath_CE");

	Params::Ability_Tankman_C_OnCauseDeath_CE Parms{};

	Parms.Damaged = Damaged;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Tankman.Ability_Tankman_C.OnUnregistered
// (Event, Protected, BlueprintEvent)

void UAbility_Tankman_C::OnUnregistered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "OnUnregistered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Tankman.Ability_Tankman_C.ReloadEndedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          EventWeapon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCompleted                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_Tankman_C::ReloadEndedEvent(class AWeapon* EventWeapon, bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "ReloadEndedEvent");

	Params::Ability_Tankman_C_ReloadEndedEvent Parms{};

	Parms.EventWeapon = EventWeapon;
	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Tankman.Ability_Tankman_C.ReloadStartedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          EventWeapon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAutoReload                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_Tankman_C::ReloadStartedEvent(class AWeapon* EventWeapon, bool bAutoReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "ReloadStartedEvent");

	Params::Ability_Tankman_C_ReloadStartedEvent Parms{};

	Parms.EventWeapon = EventWeapon;
	Parms.bAutoReload = bAutoReload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Tankman.Ability_Tankman_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UAbility_Tankman_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Tankman.Ability_Tankman_C.OnRegistered
// (Event, Protected, BlueprintEvent)

void UAbility_Tankman_C::OnRegistered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "OnRegistered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Tankman.Ability_Tankman_C.OnResumed
// (Event, Protected, BlueprintEvent)

void UAbility_Tankman_C::OnResumed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Tankman_C", "OnResumed");

	UObject::ProcessEvent(Func, nullptr);
}

}

