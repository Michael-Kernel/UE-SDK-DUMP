#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPVehicleAnim_Emperor

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPVehicleAnim_Emperor.BPVehicleAnim_Emperor_C.OnExitVehicleStarted_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0 final
{
public:
	const class UVehicleSeatComponent*            Seat;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0) == 0x000008, "Wrong alignment on BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0");
static_assert(sizeof(BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0) == 0x000010, "Wrong size on BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0");
static_assert(offsetof(BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0, Seat) == 0x000000, "Member 'BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0::Seat' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0, Character) == 0x000008, "Member 'BPVehicleAnim_Emperor_C_OnExitVehicleStarted_Event_0::Character' has a wrong offset!");

// Function BPVehicleAnim_Emperor.BPVehicleAnim_Emperor_C.OnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct BPVehicleAnim_Emperor_C_OnEnterVehicle final
{
public:
	const class UVehicleSeatComponent*            Seat;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPVehicleAnim_Emperor_C_OnEnterVehicle) == 0x000008, "Wrong alignment on BPVehicleAnim_Emperor_C_OnEnterVehicle");
static_assert(sizeof(BPVehicleAnim_Emperor_C_OnEnterVehicle) == 0x000010, "Wrong size on BPVehicleAnim_Emperor_C_OnEnterVehicle");
static_assert(offsetof(BPVehicleAnim_Emperor_C_OnEnterVehicle, Seat) == 0x000000, "Member 'BPVehicleAnim_Emperor_C_OnEnterVehicle::Seat' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_OnEnterVehicle, Character) == 0x000008, "Member 'BPVehicleAnim_Emperor_C_OnEnterVehicle::Character' has a wrong offset!");

// Function BPVehicleAnim_Emperor.BPVehicleAnim_Emperor_C.DeployBoosterOut
// 0x0008 (0x0008 - 0x0000)
struct BPVehicleAnim_Emperor_C_DeployBoosterOut final
{
public:
	const class UPawnAttachSlotComponent*         PawnAttachSlotComponent;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPVehicleAnim_Emperor_C_DeployBoosterOut) == 0x000008, "Wrong alignment on BPVehicleAnim_Emperor_C_DeployBoosterOut");
static_assert(sizeof(BPVehicleAnim_Emperor_C_DeployBoosterOut) == 0x000008, "Wrong size on BPVehicleAnim_Emperor_C_DeployBoosterOut");
static_assert(offsetof(BPVehicleAnim_Emperor_C_DeployBoosterOut, PawnAttachSlotComponent) == 0x000000, "Member 'BPVehicleAnim_Emperor_C_DeployBoosterOut::PawnAttachSlotComponent' has a wrong offset!");

// Function BPVehicleAnim_Emperor.BPVehicleAnim_Emperor_C.ExecuteUbergraph_BPVehicleAnim_Emperor
// 0x00E8 (0x00E8 - 0x0000)
struct BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UPawnAttachSlotComponent* PawnAttachSlotComponent)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UVehicleSeatComponent* Seat, class AOakCharacter* Character)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UVehicleSeatComponent* Seat, class AOakCharacter* Character)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakVehicle*                            K2Node_DynamicCast_AsOak_Vehicle;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UVehicleSeatComponent*            K2Node_CustomEvent_Seat1;                          // 0x00A0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_CustomEvent_Character1;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlaySlotAnimation_ReturnValue;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimation_ReturnValue1;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UVehicleSeatComponent*            K2Node_CustomEvent_Seat;                           // 0x00C0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_CustomEvent_Character;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UPawnAttachSlotComponent*         K2Node_CustomEvent_PawnAttachSlotComponent;        // 0x00D0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPartEquipped_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlaySlotAnimation_ReturnValue2;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimation_ReturnValue3;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPartEquipped_ReturnValue1;              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPartEquipped_ReturnValue2;              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPartEquipped_ReturnValue3;              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor) == 0x000008, "Wrong alignment on BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor");
static_assert(sizeof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor) == 0x0000E8, "Wrong size on BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, EntryPoint) == 0x000000, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate2) == 0x000028, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate3) == 0x000038, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate4) == 0x000048, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate5) == 0x000058, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000068, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_DynamicCast_AsOak_Vehicle) == 0x000070, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_DynamicCast_AsOak_Vehicle' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CreateDelegate_OutputDelegate6) == 0x000080, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000090, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue1) == 0x000098, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CustomEvent_Seat1) == 0x0000A0, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CustomEvent_Seat1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CustomEvent_Character1) == 0x0000A8, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CustomEvent_Character1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_PlaySlotAnimation_ReturnValue) == 0x0000B4, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_PlaySlotAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_PlaySlotAnimation_ReturnValue1) == 0x0000B8, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_PlaySlotAnimation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CustomEvent_Seat) == 0x0000C0, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CustomEvent_Seat' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CustomEvent_Character) == 0x0000C8, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, K2Node_CustomEvent_PawnAttachSlotComponent) == 0x0000D0, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::K2Node_CustomEvent_PawnAttachSlotComponent' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0000D8, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_IsPartEquipped_ReturnValue) == 0x0000D9, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_IsPartEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_PlaySlotAnimation_ReturnValue2) == 0x0000DC, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_PlaySlotAnimation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_PlaySlotAnimation_ReturnValue3) == 0x0000E0, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_PlaySlotAnimation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_IsPartEquipped_ReturnValue1) == 0x0000E4, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_IsPartEquipped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_IsPartEquipped_ReturnValue2) == 0x0000E5, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_IsPartEquipped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor, CallFunc_IsPartEquipped_ReturnValue3) == 0x0000E6, "Member 'BPVehicleAnim_Emperor_C_ExecuteUbergraph_BPVehicleAnim_Emperor::CallFunc_IsPartEquipped_ReturnValue3' has a wrong offset!");

}

