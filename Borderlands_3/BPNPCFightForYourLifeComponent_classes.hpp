#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPNPCFightForYourLifeComponent

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPNPCFightForYourLifeComponent.BPNPCFightForYourLifeComponent_C
// 0x0090 (0x13F0 - 0x1360)
class UBPNPCFightForYourLifeComponent_C final : public UFightForYourLifeComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1360(0x0008)(Transient, DuplicateTransient)
	struct FGbxAttributeModifierHandle            RechargeDisabledHandle;                            // 0x1368(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	class UClass*                                 InjuredAction;                                     // 0x1378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          OwnerOakChar;                                      // 0x1380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAttributeModifierHandle            ReviveTimeDisabledHandle;                          // 0x1388(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	class UClass*                                 ReviveAction;                                      // 0x1398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthPercentageToRestore;                         // 0x13A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldPercentageToRestore;                         // 0x13A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BleedOutTime;                                      // 0x13A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DieOnBleedOut;                                     // 0x13AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13AD[0x3];                                     // 0x13AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DeathAction;                                       // 0x13B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReviveTime;                                        // 0x13B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BC[0x4];                                     // 0x13BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxAction*                             RevivingActionInst;                                // 0x13C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RevivingAction;                                    // 0x13C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAttributeData*                      HealthCurrentValue;                                // 0x13D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAttributeData*                      ShieldCurrentValue;                                // 0x13D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAttributeData*                      HealthMaxValue;                                    // 0x13E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAttributeData*                      ShieldMaxValue;                                    // 0x13E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPNPCFightForYourLifeComponent(int32 EntryPoint);
	void OnRevivingState_StartHost_Event_0(class AActor* ActorBeingRevived);
	void ReceiveBeginPlay();
	void DownState_Started_Host();
	void DownState_Stopped_Host();
	void DownState_Finished_Host();
	void BeingRevived_Started_Host();
	void BeingRevived_Stopped_Host();
	void InjuredLive();
	void InjuredStop();
	void ReplenishHealthAndShields(float HealthPercent, float ShieldPercent);
	void Reviving_Started_Host(class AActor* ActorBeingRevived);
	void Reviving_Stopped_Host(bool IsHealed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPNPCFightForYourLifeComponent_C">();
	}
	static class UBPNPCFightForYourLifeComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPNPCFightForYourLifeComponent_C>();
	}
};
static_assert(alignof(UBPNPCFightForYourLifeComponent_C) == 0x000010, "Wrong alignment on UBPNPCFightForYourLifeComponent_C");
static_assert(sizeof(UBPNPCFightForYourLifeComponent_C) == 0x0013F0, "Wrong size on UBPNPCFightForYourLifeComponent_C");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, UberGraphFrame) == 0x001360, "Member 'UBPNPCFightForYourLifeComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, RechargeDisabledHandle) == 0x001368, "Member 'UBPNPCFightForYourLifeComponent_C::RechargeDisabledHandle' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, InjuredAction) == 0x001378, "Member 'UBPNPCFightForYourLifeComponent_C::InjuredAction' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, OwnerOakChar) == 0x001380, "Member 'UBPNPCFightForYourLifeComponent_C::OwnerOakChar' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, ReviveTimeDisabledHandle) == 0x001388, "Member 'UBPNPCFightForYourLifeComponent_C::ReviveTimeDisabledHandle' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, ReviveAction) == 0x001398, "Member 'UBPNPCFightForYourLifeComponent_C::ReviveAction' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, HealthPercentageToRestore) == 0x0013A0, "Member 'UBPNPCFightForYourLifeComponent_C::HealthPercentageToRestore' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, ShieldPercentageToRestore) == 0x0013A4, "Member 'UBPNPCFightForYourLifeComponent_C::ShieldPercentageToRestore' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, BleedOutTime) == 0x0013A8, "Member 'UBPNPCFightForYourLifeComponent_C::BleedOutTime' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, DieOnBleedOut) == 0x0013AC, "Member 'UBPNPCFightForYourLifeComponent_C::DieOnBleedOut' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, DeathAction) == 0x0013B0, "Member 'UBPNPCFightForYourLifeComponent_C::DeathAction' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, ReviveTime) == 0x0013B8, "Member 'UBPNPCFightForYourLifeComponent_C::ReviveTime' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, RevivingActionInst) == 0x0013C0, "Member 'UBPNPCFightForYourLifeComponent_C::RevivingActionInst' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, RevivingAction) == 0x0013C8, "Member 'UBPNPCFightForYourLifeComponent_C::RevivingAction' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, HealthCurrentValue) == 0x0013D0, "Member 'UBPNPCFightForYourLifeComponent_C::HealthCurrentValue' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, ShieldCurrentValue) == 0x0013D8, "Member 'UBPNPCFightForYourLifeComponent_C::ShieldCurrentValue' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, HealthMaxValue) == 0x0013E0, "Member 'UBPNPCFightForYourLifeComponent_C::HealthMaxValue' has a wrong offset!");
static_assert(offsetof(UBPNPCFightForYourLifeComponent_C, ShieldMaxValue) == 0x0013E8, "Member 'UBPNPCFightForYourLifeComponent_C::ShieldMaxValue' has a wrong offset!");

}

