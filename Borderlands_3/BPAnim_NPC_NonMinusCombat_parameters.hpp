#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_NPC_NonMinusCombat

#include "Basic.hpp"

#include "Enum_AnimPostures_structs.hpp"


namespace SDK::Params
{

// Function BPAnim_NPC_Non-Combat.BPAnim_NPC_Non-Combat_C.Sort_Posture_StateMachine_TransitionRules
// 0x0005 (0x0005 - 0x0000)
struct BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules final
{
public:
	Enum_AnimPostures                             Posture_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules) == 0x000001, "Wrong alignment on BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules");
static_assert(sizeof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules) == 0x000005, "Wrong size on BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules, Posture_0) == 0x000000, "Member 'BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules::Posture_0' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000003, "Member 'BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000004, "Member 'BPAnim_NPC_NonMinusCombat_C_Sort_Posture_StateMachine_TransitionRules::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");

// Function BPAnim_NPC_Non-Combat.BPAnim_NPC_Non-Combat_C.ExecuteUbergraph_BPAnim_NPC_Non-Combat
// 0x0050 (0x0050 - 0x0000)
struct BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          CallFunc_InitCharacterComponents_Characteroutput;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxCharacterMovementComponent*         CallFunc_InitCharacterComponents_GbxCharacterMovement; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCharacterMovementComponent*         CallFunc_InitCharacterComponents_OakCharacterMovement; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAnimationStyle_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat) == 0x000008, "Wrong alignment on BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat");
static_assert(sizeof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat) == 0x000050, "Wrong size on BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, EntryPoint) == 0x000000, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid) == 0x000004, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue) == 0x000008, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_Not_PreBool_ReturnValue1) == 0x00001D, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_Not_PreBool_ReturnValue2) == 0x00001E, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_Not_PreBool_ReturnValue3) == 0x00001F, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_Not_PreBool_ReturnValue4) == 0x000020, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000028, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_InitCharacterComponents_Characteroutput) == 0x000030, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_InitCharacterComponents_Characteroutput' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_InitCharacterComponents_GbxCharacterMovement) == 0x000038, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_InitCharacterComponents_GbxCharacterMovement' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_InitCharacterComponents_OakCharacterMovement) == 0x000040, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_InitCharacterComponents_OakCharacterMovement' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000048, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_EqualEqual_NameName_ReturnValue1) == 0x000049, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_EqualEqual_NameName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x00004A, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x00004B, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_GetAnimationStyle_ReturnValue) == 0x00004C, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_GetAnimationStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_Not_PreBool_ReturnValue5) == 0x00004D, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat, CallFunc_GetValidValue_ReturnValue) == 0x00004E, "Member 'BPAnim_NPC_NonMinusCombat_C_ExecuteUbergraph_BPAnim_NPC_NonMinusCombat::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

}

