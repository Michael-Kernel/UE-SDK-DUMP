#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaRestPlugin

#include "Basic.hpp"

#include "VaRestPlugin_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VaRestPlugin.VaRestJsonObject.ConstructJsonObject
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_ConstructJsonObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_ConstructJsonObject) == 0x000008, "Wrong alignment on VaRestJsonObject_ConstructJsonObject");
static_assert(sizeof(VaRestJsonObject_ConstructJsonObject) == 0x000010, "Wrong size on VaRestJsonObject_ConstructJsonObject");
static_assert(offsetof(VaRestJsonObject_ConstructJsonObject, WorldContextObject) == 0x000000, "Member 'VaRestJsonObject_ConstructJsonObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_ConstructJsonObject, ReturnValue) == 0x000008, "Member 'VaRestJsonObject_ConstructJsonObject::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.DecodeJson
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_DecodeJson final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_DecodeJson) == 0x000008, "Wrong alignment on VaRestJsonObject_DecodeJson");
static_assert(sizeof(VaRestJsonObject_DecodeJson) == 0x000018, "Wrong size on VaRestJsonObject_DecodeJson");
static_assert(offsetof(VaRestJsonObject_DecodeJson, JsonString) == 0x000000, "Member 'VaRestJsonObject_DecodeJson::JsonString' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_DecodeJson, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_DecodeJson::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetFieldNames
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_GetFieldNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetFieldNames) == 0x000008, "Wrong alignment on VaRestJsonObject_GetFieldNames");
static_assert(sizeof(VaRestJsonObject_GetFieldNames) == 0x000010, "Wrong size on VaRestJsonObject_GetFieldNames");
static_assert(offsetof(VaRestJsonObject_GetFieldNames, ReturnValue) == 0x000000, "Member 'VaRestJsonObject_GetFieldNames::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.MergeJsonObject
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_MergeJsonObject final
{
public:
	class UVaRestJsonObject*                      InJsonObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_MergeJsonObject) == 0x000008, "Wrong alignment on VaRestJsonObject_MergeJsonObject");
static_assert(sizeof(VaRestJsonObject_MergeJsonObject) == 0x000010, "Wrong size on VaRestJsonObject_MergeJsonObject");
static_assert(offsetof(VaRestJsonObject_MergeJsonObject, InJsonObject) == 0x000000, "Member 'VaRestJsonObject_MergeJsonObject::InJsonObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_MergeJsonObject, Overwrite) == 0x000008, "Member 'VaRestJsonObject_MergeJsonObject::Overwrite' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.RemoveField
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_RemoveField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_RemoveField) == 0x000008, "Wrong alignment on VaRestJsonObject_RemoveField");
static_assert(sizeof(VaRestJsonObject_RemoveField) == 0x000010, "Wrong size on VaRestJsonObject_RemoveField");
static_assert(offsetof(VaRestJsonObject_RemoveField, FieldName) == 0x000000, "Member 'VaRestJsonObject_RemoveField::FieldName' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonValue*>               InArray;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetArrayField");
static_assert(sizeof(VaRestJsonObject_SetArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetArrayField");
static_assert(offsetof(VaRestJsonObject_SetArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetArrayField, InArray) == 0x000010, "Member 'VaRestJsonObject_SetArrayField::InArray' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  BoolArray;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetBoolArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetBoolArrayField");
static_assert(sizeof(VaRestJsonObject_SetBoolArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetBoolArrayField");
static_assert(offsetof(VaRestJsonObject_SetBoolArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetBoolArrayField, BoolArray) == 0x000010, "Member 'VaRestJsonObject_SetBoolArrayField::BoolArray' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetBoolField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_SetBoolField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetBoolField");
static_assert(sizeof(VaRestJsonObject_SetBoolField) == 0x000018, "Wrong size on VaRestJsonObject_SetBoolField");
static_assert(offsetof(VaRestJsonObject_SetBoolField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetBoolField, InValue) == 0x000010, "Member 'VaRestJsonObject_SetBoolField::InValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       JsonValue;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetField");
static_assert(sizeof(VaRestJsonObject_SetField) == 0x000018, "Wrong size on VaRestJsonObject_SetField");
static_assert(offsetof(VaRestJsonObject_SetField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetField, JsonValue) == 0x000010, "Member 'VaRestJsonObject_SetField::JsonValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 NumberArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetNumberArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetNumberArrayField");
static_assert(sizeof(VaRestJsonObject_SetNumberArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetNumberArrayField");
static_assert(offsetof(VaRestJsonObject_SetNumberArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetNumberArrayField, NumberArray) == 0x000010, "Member 'VaRestJsonObject_SetNumberArrayField::NumberArray' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetNumberField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_SetNumberField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetNumberField");
static_assert(sizeof(VaRestJsonObject_SetNumberField) == 0x000018, "Wrong size on VaRestJsonObject_SetNumberField");
static_assert(offsetof(VaRestJsonObject_SetNumberField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetNumberField, Number) == 0x000010, "Member 'VaRestJsonObject_SetNumberField::Number' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonObject*>              ObjectArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetObjectArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetObjectArrayField");
static_assert(sizeof(VaRestJsonObject_SetObjectArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetObjectArrayField");
static_assert(offsetof(VaRestJsonObject_SetObjectArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetObjectArrayField, ObjectArray) == 0x000010, "Member 'VaRestJsonObject_SetObjectArrayField::ObjectArray' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetObjectField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetObjectField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetObjectField");
static_assert(sizeof(VaRestJsonObject_SetObjectField) == 0x000018, "Wrong size on VaRestJsonObject_SetObjectField");
static_assert(offsetof(VaRestJsonObject_SetObjectField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetObjectField, JsonObject) == 0x000010, "Member 'VaRestJsonObject_SetObjectField::JsonObject' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StringArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetStringArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetStringArrayField");
static_assert(sizeof(VaRestJsonObject_SetStringArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetStringArrayField");
static_assert(offsetof(VaRestJsonObject_SetStringArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetStringArrayField, StringArray) == 0x000010, "Member 'VaRestJsonObject_SetStringArrayField::StringArray' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.SetStringField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetStringField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetStringField");
static_assert(sizeof(VaRestJsonObject_SetStringField) == 0x000020, "Wrong size on VaRestJsonObject_SetStringField");
static_assert(offsetof(VaRestJsonObject_SetStringField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetStringField, StringValue) == 0x000010, "Member 'VaRestJsonObject_SetStringField::StringValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.EncodeJson
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_EncodeJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_EncodeJson) == 0x000008, "Wrong alignment on VaRestJsonObject_EncodeJson");
static_assert(sizeof(VaRestJsonObject_EncodeJson) == 0x000010, "Wrong size on VaRestJsonObject_EncodeJson");
static_assert(offsetof(VaRestJsonObject_EncodeJson, ReturnValue) == 0x000000, "Member 'VaRestJsonObject_EncodeJson::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.EncodeJsonToSingleString
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_EncodeJsonToSingleString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_EncodeJsonToSingleString) == 0x000008, "Wrong alignment on VaRestJsonObject_EncodeJsonToSingleString");
static_assert(sizeof(VaRestJsonObject_EncodeJsonToSingleString) == 0x000010, "Wrong size on VaRestJsonObject_EncodeJsonToSingleString");
static_assert(offsetof(VaRestJsonObject_EncodeJsonToSingleString, ReturnValue) == 0x000000, "Member 'VaRestJsonObject_EncodeJsonToSingleString::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonValue*>               ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetArrayField");
static_assert(sizeof(VaRestJsonObject_GetArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetArrayField");
static_assert(offsetof(VaRestJsonObject_GetArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetArrayField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetBoolArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetBoolArrayField");
static_assert(sizeof(VaRestJsonObject_GetBoolArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetBoolArrayField");
static_assert(offsetof(VaRestJsonObject_GetBoolArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetBoolArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetBoolArrayField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetBoolField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_GetBoolField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetBoolField");
static_assert(sizeof(VaRestJsonObject_GetBoolField) == 0x000018, "Wrong size on VaRestJsonObject_GetBoolField");
static_assert(offsetof(VaRestJsonObject_GetBoolField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetBoolField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetBoolField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetField");
static_assert(sizeof(VaRestJsonObject_GetField) == 0x000018, "Wrong size on VaRestJsonObject_GetField");
static_assert(offsetof(VaRestJsonObject_GetField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetNumberArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetNumberArrayField");
static_assert(sizeof(VaRestJsonObject_GetNumberArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetNumberArrayField");
static_assert(offsetof(VaRestJsonObject_GetNumberArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetNumberArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetNumberArrayField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetNumberField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_GetNumberField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetNumberField");
static_assert(sizeof(VaRestJsonObject_GetNumberField) == 0x000018, "Wrong size on VaRestJsonObject_GetNumberField");
static_assert(offsetof(VaRestJsonObject_GetNumberField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetNumberField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetNumberField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonObject*>              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetObjectArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetObjectArrayField");
static_assert(sizeof(VaRestJsonObject_GetObjectArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetObjectArrayField");
static_assert(offsetof(VaRestJsonObject_GetObjectArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetObjectArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetObjectArrayField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetObjectField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetObjectField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetObjectField");
static_assert(sizeof(VaRestJsonObject_GetObjectField) == 0x000018, "Wrong size on VaRestJsonObject_GetObjectField");
static_assert(offsetof(VaRestJsonObject_GetObjectField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetObjectField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetObjectField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetStringArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetStringArrayField");
static_assert(sizeof(VaRestJsonObject_GetStringArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetStringArrayField");
static_assert(offsetof(VaRestJsonObject_GetStringArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetStringArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetStringArrayField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.GetStringField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetStringField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetStringField");
static_assert(sizeof(VaRestJsonObject_GetStringField) == 0x000020, "Wrong size on VaRestJsonObject_GetStringField");
static_assert(offsetof(VaRestJsonObject_GetStringField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetStringField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetStringField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonObject.HasField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_HasField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_HasField) == 0x000008, "Wrong alignment on VaRestJsonObject_HasField");
static_assert(sizeof(VaRestJsonObject_HasField) == 0x000018, "Wrong size on VaRestJsonObject_HasField");
static_assert(offsetof(VaRestJsonObject_HasField, FieldName) == 0x000000, "Member 'VaRestJsonObject_HasField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_HasField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_HasField::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.ConstructJsonValueArray
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonValue_ConstructJsonValueArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonValue*>               InArray;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_ConstructJsonValueArray) == 0x000008, "Wrong alignment on VaRestJsonValue_ConstructJsonValueArray");
static_assert(sizeof(VaRestJsonValue_ConstructJsonValueArray) == 0x000020, "Wrong size on VaRestJsonValue_ConstructJsonValueArray");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueArray, WorldContextObject) == 0x000000, "Member 'VaRestJsonValue_ConstructJsonValueArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueArray, InArray) == 0x000008, "Member 'VaRestJsonValue_ConstructJsonValueArray::InArray' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueArray, ReturnValue) == 0x000018, "Member 'VaRestJsonValue_ConstructJsonValueArray::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.ConstructJsonValueBool
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonValue_ConstructJsonValueBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_ConstructJsonValueBool) == 0x000008, "Wrong alignment on VaRestJsonValue_ConstructJsonValueBool");
static_assert(sizeof(VaRestJsonValue_ConstructJsonValueBool) == 0x000018, "Wrong size on VaRestJsonValue_ConstructJsonValueBool");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueBool, WorldContextObject) == 0x000000, "Member 'VaRestJsonValue_ConstructJsonValueBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueBool, InValue) == 0x000008, "Member 'VaRestJsonValue_ConstructJsonValueBool::InValue' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueBool, ReturnValue) == 0x000010, "Member 'VaRestJsonValue_ConstructJsonValueBool::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.ConstructJsonValueNumber
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonValue_ConstructJsonValueNumber final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_ConstructJsonValueNumber) == 0x000008, "Wrong alignment on VaRestJsonValue_ConstructJsonValueNumber");
static_assert(sizeof(VaRestJsonValue_ConstructJsonValueNumber) == 0x000018, "Wrong size on VaRestJsonValue_ConstructJsonValueNumber");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueNumber, WorldContextObject) == 0x000000, "Member 'VaRestJsonValue_ConstructJsonValueNumber::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueNumber, Number) == 0x000008, "Member 'VaRestJsonValue_ConstructJsonValueNumber::Number' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueNumber, ReturnValue) == 0x000010, "Member 'VaRestJsonValue_ConstructJsonValueNumber::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.ConstructJsonValueObject
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonValue_ConstructJsonValueObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_ConstructJsonValueObject) == 0x000008, "Wrong alignment on VaRestJsonValue_ConstructJsonValueObject");
static_assert(sizeof(VaRestJsonValue_ConstructJsonValueObject) == 0x000018, "Wrong size on VaRestJsonValue_ConstructJsonValueObject");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueObject, WorldContextObject) == 0x000000, "Member 'VaRestJsonValue_ConstructJsonValueObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueObject, JsonObject) == 0x000008, "Member 'VaRestJsonValue_ConstructJsonValueObject::JsonObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueObject, ReturnValue) == 0x000010, "Member 'VaRestJsonValue_ConstructJsonValueObject::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.ConstructJsonValueString
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonValue_ConstructJsonValueString final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_ConstructJsonValueString) == 0x000008, "Wrong alignment on VaRestJsonValue_ConstructJsonValueString");
static_assert(sizeof(VaRestJsonValue_ConstructJsonValueString) == 0x000020, "Wrong size on VaRestJsonValue_ConstructJsonValueString");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueString, WorldContextObject) == 0x000000, "Member 'VaRestJsonValue_ConstructJsonValueString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueString, StringValue) == 0x000008, "Member 'VaRestJsonValue_ConstructJsonValueString::StringValue' has a wrong offset!");
static_assert(offsetof(VaRestJsonValue_ConstructJsonValueString, ReturnValue) == 0x000018, "Member 'VaRestJsonValue_ConstructJsonValueString::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.AsObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestJsonValue_AsObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsObject) == 0x000008, "Wrong alignment on VaRestJsonValue_AsObject");
static_assert(sizeof(VaRestJsonValue_AsObject) == 0x000008, "Wrong size on VaRestJsonValue_AsObject");
static_assert(offsetof(VaRestJsonValue_AsObject, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsObject::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.AsArray
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonValue_AsArray final
{
public:
	TArray<class UVaRestJsonValue*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsArray) == 0x000008, "Wrong alignment on VaRestJsonValue_AsArray");
static_assert(sizeof(VaRestJsonValue_AsArray) == 0x000010, "Wrong size on VaRestJsonValue_AsArray");
static_assert(offsetof(VaRestJsonValue_AsArray, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsArray::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.AsBool
// 0x0001 (0x0001 - 0x0000)
struct VaRestJsonValue_AsBool final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsBool) == 0x000001, "Wrong alignment on VaRestJsonValue_AsBool");
static_assert(sizeof(VaRestJsonValue_AsBool) == 0x000001, "Wrong size on VaRestJsonValue_AsBool");
static_assert(offsetof(VaRestJsonValue_AsBool, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsBool::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.AsNumber
// 0x0004 (0x0004 - 0x0000)
struct VaRestJsonValue_AsNumber final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsNumber) == 0x000004, "Wrong alignment on VaRestJsonValue_AsNumber");
static_assert(sizeof(VaRestJsonValue_AsNumber) == 0x000004, "Wrong size on VaRestJsonValue_AsNumber");
static_assert(offsetof(VaRestJsonValue_AsNumber, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsNumber::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.AsString
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonValue_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsString) == 0x000008, "Wrong alignment on VaRestJsonValue_AsString");
static_assert(sizeof(VaRestJsonValue_AsString) == 0x000010, "Wrong size on VaRestJsonValue_AsString");
static_assert(offsetof(VaRestJsonValue_AsString, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsString::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.GetType
// 0x0001 (0x0001 - 0x0000)
struct VaRestJsonValue_GetType final
{
public:
	EVaJson                                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_GetType) == 0x000001, "Wrong alignment on VaRestJsonValue_GetType");
static_assert(sizeof(VaRestJsonValue_GetType) == 0x000001, "Wrong size on VaRestJsonValue_GetType");
static_assert(offsetof(VaRestJsonValue_GetType, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_GetType::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.GetTypeString
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonValue_GetTypeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_GetTypeString) == 0x000008, "Wrong alignment on VaRestJsonValue_GetTypeString");
static_assert(sizeof(VaRestJsonValue_GetTypeString) == 0x000010, "Wrong size on VaRestJsonValue_GetTypeString");
static_assert(offsetof(VaRestJsonValue_GetTypeString, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_GetTypeString::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestJsonValue.IsNull
// 0x0001 (0x0001 - 0x0000)
struct VaRestJsonValue_IsNull final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_IsNull) == 0x000001, "Wrong alignment on VaRestJsonValue_IsNull");
static_assert(sizeof(VaRestJsonValue_IsNull) == 0x000001, "Wrong size on VaRestJsonValue_IsNull");
static_assert(offsetof(VaRestJsonValue_IsNull, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_IsNull::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestLibrary.Base64Decode
// 0x0028 (0x0028 - 0x0000)
struct VaRestLibrary_Base64Decode final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Dest;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_Base64Decode) == 0x000008, "Wrong alignment on VaRestLibrary_Base64Decode");
static_assert(sizeof(VaRestLibrary_Base64Decode) == 0x000028, "Wrong size on VaRestLibrary_Base64Decode");
static_assert(offsetof(VaRestLibrary_Base64Decode, Source) == 0x000000, "Member 'VaRestLibrary_Base64Decode::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64Decode, Dest) == 0x000010, "Member 'VaRestLibrary_Base64Decode::Dest' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64Decode, ReturnValue) == 0x000020, "Member 'VaRestLibrary_Base64Decode::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestLibrary.Base64DecodeData
// 0x0028 (0x0028 - 0x0000)
struct VaRestLibrary_Base64DecodeData final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Dest;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_Base64DecodeData) == 0x000008, "Wrong alignment on VaRestLibrary_Base64DecodeData");
static_assert(sizeof(VaRestLibrary_Base64DecodeData) == 0x000028, "Wrong size on VaRestLibrary_Base64DecodeData");
static_assert(offsetof(VaRestLibrary_Base64DecodeData, Source) == 0x000000, "Member 'VaRestLibrary_Base64DecodeData::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64DecodeData, Dest) == 0x000010, "Member 'VaRestLibrary_Base64DecodeData::Dest' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64DecodeData, ReturnValue) == 0x000020, "Member 'VaRestLibrary_Base64DecodeData::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestLibrary.Base64Encode
// 0x0020 (0x0020 - 0x0000)
struct VaRestLibrary_Base64Encode final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_Base64Encode) == 0x000008, "Wrong alignment on VaRestLibrary_Base64Encode");
static_assert(sizeof(VaRestLibrary_Base64Encode) == 0x000020, "Wrong size on VaRestLibrary_Base64Encode");
static_assert(offsetof(VaRestLibrary_Base64Encode, Source) == 0x000000, "Member 'VaRestLibrary_Base64Encode::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64Encode, ReturnValue) == 0x000010, "Member 'VaRestLibrary_Base64Encode::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestLibrary.Base64EncodeData
// 0x0028 (0x0028 - 0x0000)
struct VaRestLibrary_Base64EncodeData final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Dest;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_Base64EncodeData) == 0x000008, "Wrong alignment on VaRestLibrary_Base64EncodeData");
static_assert(sizeof(VaRestLibrary_Base64EncodeData) == 0x000028, "Wrong size on VaRestLibrary_Base64EncodeData");
static_assert(offsetof(VaRestLibrary_Base64EncodeData, Data) == 0x000000, "Member 'VaRestLibrary_Base64EncodeData::Data' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64EncodeData, Dest) == 0x000010, "Member 'VaRestLibrary_Base64EncodeData::Dest' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64EncodeData, ReturnValue) == 0x000020, "Member 'VaRestLibrary_Base64EncodeData::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestLibrary.CallURL
// 0x0038 (0x0038 - 0x0000)
struct VaRestLibrary_CallURL final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERequestVerb                                  Verb;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERequestContentType                           ContentType;                                       // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      VaRestJson;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVaRestRequestJSON* Request)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_CallURL) == 0x000008, "Wrong alignment on VaRestLibrary_CallURL");
static_assert(sizeof(VaRestLibrary_CallURL) == 0x000038, "Wrong size on VaRestLibrary_CallURL");
static_assert(offsetof(VaRestLibrary_CallURL, WorldContextObject) == 0x000000, "Member 'VaRestLibrary_CallURL::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_CallURL, URL) == 0x000008, "Member 'VaRestLibrary_CallURL::URL' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_CallURL, Verb) == 0x000018, "Member 'VaRestLibrary_CallURL::Verb' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_CallURL, ContentType) == 0x000019, "Member 'VaRestLibrary_CallURL::ContentType' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_CallURL, VaRestJson) == 0x000020, "Member 'VaRestLibrary_CallURL::VaRestJson' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_CallURL, Callback) == 0x000028, "Member 'VaRestLibrary_CallURL::Callback' has a wrong offset!");

// Function VaRestPlugin.VaRestLibrary.PercentEncode
// 0x0020 (0x0020 - 0x0000)
struct VaRestLibrary_PercentEncode final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_PercentEncode) == 0x000008, "Wrong alignment on VaRestLibrary_PercentEncode");
static_assert(sizeof(VaRestLibrary_PercentEncode) == 0x000020, "Wrong size on VaRestLibrary_PercentEncode");
static_assert(offsetof(VaRestLibrary_PercentEncode, Source) == 0x000000, "Member 'VaRestLibrary_PercentEncode::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_PercentEncode, ReturnValue) == 0x000010, "Member 'VaRestLibrary_PercentEncode::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.ConstructRequest
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_ConstructRequest final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestRequestJSON*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_ConstructRequest) == 0x000008, "Wrong alignment on VaRestRequestJSON_ConstructRequest");
static_assert(sizeof(VaRestRequestJSON_ConstructRequest) == 0x000010, "Wrong size on VaRestRequestJSON_ConstructRequest");
static_assert(offsetof(VaRestRequestJSON_ConstructRequest, WorldContextObject) == 0x000000, "Member 'VaRestRequestJSON_ConstructRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ConstructRequest, ReturnValue) == 0x000008, "Member 'VaRestRequestJSON_ConstructRequest::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.ConstructRequestExt
// 0x0018 (0x0018 - 0x0000)
struct VaRestRequestJSON_ConstructRequestExt final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERequestVerb                                  Verb;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERequestContentType                           ContentType;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_ConstructRequestExt) == 0x000008, "Wrong alignment on VaRestRequestJSON_ConstructRequestExt");
static_assert(sizeof(VaRestRequestJSON_ConstructRequestExt) == 0x000018, "Wrong size on VaRestRequestJSON_ConstructRequestExt");
static_assert(offsetof(VaRestRequestJSON_ConstructRequestExt, WorldContextObject) == 0x000000, "Member 'VaRestRequestJSON_ConstructRequestExt::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ConstructRequestExt, Verb) == 0x000008, "Member 'VaRestRequestJSON_ConstructRequestExt::Verb' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ConstructRequestExt, ContentType) == 0x000009, "Member 'VaRestRequestJSON_ConstructRequestExt::ContentType' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ConstructRequestExt, ReturnValue) == 0x000010, "Member 'VaRestRequestJSON_ConstructRequestExt::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.AddTag
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_AddTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_AddTag) == 0x000004, "Wrong alignment on VaRestRequestJSON_AddTag");
static_assert(sizeof(VaRestRequestJSON_AddTag) == 0x000008, "Wrong size on VaRestRequestJSON_AddTag");
static_assert(offsetof(VaRestRequestJSON_AddTag, Tag) == 0x000000, "Member 'VaRestRequestJSON_AddTag::Tag' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.ApplyURL
// 0x0038 (0x0038 - 0x0000)
struct VaRestRequestJSON_ApplyURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      Result;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0020(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_ApplyURL) == 0x000008, "Wrong alignment on VaRestRequestJSON_ApplyURL");
static_assert(sizeof(VaRestRequestJSON_ApplyURL) == 0x000038, "Wrong size on VaRestRequestJSON_ApplyURL");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, URL) == 0x000000, "Member 'VaRestRequestJSON_ApplyURL::URL' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, Result) == 0x000010, "Member 'VaRestRequestJSON_ApplyURL::Result' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, WorldContextObject) == 0x000018, "Member 'VaRestRequestJSON_ApplyURL::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, LatentInfo) == 0x000020, "Member 'VaRestRequestJSON_ApplyURL::LatentInfo' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetAllResponseHeaders
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_GetAllResponseHeaders final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetAllResponseHeaders) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetAllResponseHeaders");
static_assert(sizeof(VaRestRequestJSON_GetAllResponseHeaders) == 0x000010, "Wrong size on VaRestRequestJSON_GetAllResponseHeaders");
static_assert(offsetof(VaRestRequestJSON_GetAllResponseHeaders, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetAllResponseHeaders::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetRequestObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_GetRequestObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetRequestObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetRequestObject");
static_assert(sizeof(VaRestRequestJSON_GetRequestObject) == 0x000008, "Wrong size on VaRestRequestJSON_GetRequestObject");
static_assert(offsetof(VaRestRequestJSON_GetRequestObject, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetRequestObject::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetResponseCode
// 0x0004 (0x0004 - 0x0000)
struct VaRestRequestJSON_GetResponseCode final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseCode) == 0x000004, "Wrong alignment on VaRestRequestJSON_GetResponseCode");
static_assert(sizeof(VaRestRequestJSON_GetResponseCode) == 0x000004, "Wrong size on VaRestRequestJSON_GetResponseCode");
static_assert(offsetof(VaRestRequestJSON_GetResponseCode, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseCode::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetResponseHeader
// 0x0020 (0x0020 - 0x0000)
struct VaRestRequestJSON_GetResponseHeader final
{
public:
	class FString                                 HeaderName;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseHeader) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseHeader");
static_assert(sizeof(VaRestRequestJSON_GetResponseHeader) == 0x000020, "Wrong size on VaRestRequestJSON_GetResponseHeader");
static_assert(offsetof(VaRestRequestJSON_GetResponseHeader, HeaderName) == 0x000000, "Member 'VaRestRequestJSON_GetResponseHeader::HeaderName' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_GetResponseHeader, ReturnValue) == 0x000010, "Member 'VaRestRequestJSON_GetResponseHeader::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetResponseObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_GetResponseObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseObject");
static_assert(sizeof(VaRestRequestJSON_GetResponseObject) == 0x000008, "Wrong size on VaRestRequestJSON_GetResponseObject");
static_assert(offsetof(VaRestRequestJSON_GetResponseObject, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseObject::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_GetStatus final
{
public:
	ERequestStatus                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetStatus) == 0x000001, "Wrong alignment on VaRestRequestJSON_GetStatus");
static_assert(sizeof(VaRestRequestJSON_GetStatus) == 0x000001, "Wrong size on VaRestRequestJSON_GetStatus");
static_assert(offsetof(VaRestRequestJSON_GetStatus, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetStatus::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetUrl) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetUrl");
static_assert(sizeof(VaRestRequestJSON_GetUrl) == 0x000010, "Wrong size on VaRestRequestJSON_GetUrl");
static_assert(offsetof(VaRestRequestJSON_GetUrl, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetUrl::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.ProcessURL
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_ProcessURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_ProcessURL) == 0x000008, "Wrong alignment on VaRestRequestJSON_ProcessURL");
static_assert(sizeof(VaRestRequestJSON_ProcessURL) == 0x000010, "Wrong size on VaRestRequestJSON_ProcessURL");
static_assert(offsetof(VaRestRequestJSON_ProcessURL, URL) == 0x000000, "Member 'VaRestRequestJSON_ProcessURL::URL' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.RemoveTag
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_RemoveTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestRequestJSON_RemoveTag) == 0x000004, "Wrong alignment on VaRestRequestJSON_RemoveTag");
static_assert(sizeof(VaRestRequestJSON_RemoveTag) == 0x000010, "Wrong size on VaRestRequestJSON_RemoveTag");
static_assert(offsetof(VaRestRequestJSON_RemoveTag, Tag) == 0x000000, "Member 'VaRestRequestJSON_RemoveTag::Tag' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_RemoveTag, ReturnValue) == 0x000008, "Member 'VaRestRequestJSON_RemoveTag::ReturnValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetBinaryContentType
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetBinaryContentType final
{
public:
	class FString                                 ContentType;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetBinaryContentType) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetBinaryContentType");
static_assert(sizeof(VaRestRequestJSON_SetBinaryContentType) == 0x000010, "Wrong size on VaRestRequestJSON_SetBinaryContentType");
static_assert(offsetof(VaRestRequestJSON_SetBinaryContentType, ContentType) == 0x000000, "Member 'VaRestRequestJSON_SetBinaryContentType::ContentType' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetBinaryRequestContent
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetBinaryRequestContent final
{
public:
	TArray<uint8>                                 Content;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetBinaryRequestContent) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetBinaryRequestContent");
static_assert(sizeof(VaRestRequestJSON_SetBinaryRequestContent) == 0x000010, "Wrong size on VaRestRequestJSON_SetBinaryRequestContent");
static_assert(offsetof(VaRestRequestJSON_SetBinaryRequestContent, Content) == 0x000000, "Member 'VaRestRequestJSON_SetBinaryRequestContent::Content' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetContentType
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_SetContentType final
{
public:
	ERequestContentType                           ContentType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetContentType) == 0x000001, "Wrong alignment on VaRestRequestJSON_SetContentType");
static_assert(sizeof(VaRestRequestJSON_SetContentType) == 0x000001, "Wrong size on VaRestRequestJSON_SetContentType");
static_assert(offsetof(VaRestRequestJSON_SetContentType, ContentType) == 0x000000, "Member 'VaRestRequestJSON_SetContentType::ContentType' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetCustomVerb
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetCustomVerb final
{
public:
	class FString                                 Verb;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetCustomVerb) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetCustomVerb");
static_assert(sizeof(VaRestRequestJSON_SetCustomVerb) == 0x000010, "Wrong size on VaRestRequestJSON_SetCustomVerb");
static_assert(offsetof(VaRestRequestJSON_SetCustomVerb, Verb) == 0x000000, "Member 'VaRestRequestJSON_SetCustomVerb::Verb' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetHeader
// 0x0020 (0x0020 - 0x0000)
struct VaRestRequestJSON_SetHeader final
{
public:
	class FString                                 HeaderName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HeaderValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetHeader) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetHeader");
static_assert(sizeof(VaRestRequestJSON_SetHeader) == 0x000020, "Wrong size on VaRestRequestJSON_SetHeader");
static_assert(offsetof(VaRestRequestJSON_SetHeader, HeaderName) == 0x000000, "Member 'VaRestRequestJSON_SetHeader::HeaderName' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_SetHeader, HeaderValue) == 0x000010, "Member 'VaRestRequestJSON_SetHeader::HeaderValue' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetRequestObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_SetRequestObject final
{
public:
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetRequestObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetRequestObject");
static_assert(sizeof(VaRestRequestJSON_SetRequestObject) == 0x000008, "Wrong size on VaRestRequestJSON_SetRequestObject");
static_assert(offsetof(VaRestRequestJSON_SetRequestObject, JsonObject) == 0x000000, "Member 'VaRestRequestJSON_SetRequestObject::JsonObject' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetResponseObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_SetResponseObject final
{
public:
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetResponseObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetResponseObject");
static_assert(sizeof(VaRestRequestJSON_SetResponseObject) == 0x000008, "Wrong size on VaRestRequestJSON_SetResponseObject");
static_assert(offsetof(VaRestRequestJSON_SetResponseObject, JsonObject) == 0x000000, "Member 'VaRestRequestJSON_SetResponseObject::JsonObject' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetStringRequestContent
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetStringRequestContent final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetStringRequestContent) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetStringRequestContent");
static_assert(sizeof(VaRestRequestJSON_SetStringRequestContent) == 0x000010, "Wrong size on VaRestRequestJSON_SetStringRequestContent");
static_assert(offsetof(VaRestRequestJSON_SetStringRequestContent, Content) == 0x000000, "Member 'VaRestRequestJSON_SetStringRequestContent::Content' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.SetVerb
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_SetVerb final
{
public:
	ERequestVerb                                  Verb;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetVerb) == 0x000001, "Wrong alignment on VaRestRequestJSON_SetVerb");
static_assert(sizeof(VaRestRequestJSON_SetVerb) == 0x000001, "Wrong size on VaRestRequestJSON_SetVerb");
static_assert(offsetof(VaRestRequestJSON_SetVerb, Verb) == 0x000000, "Member 'VaRestRequestJSON_SetVerb::Verb' has a wrong offset!");

// Function VaRestPlugin.VaRestRequestJSON.HasTag
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_HasTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestRequestJSON_HasTag) == 0x000004, "Wrong alignment on VaRestRequestJSON_HasTag");
static_assert(sizeof(VaRestRequestJSON_HasTag) == 0x000010, "Wrong size on VaRestRequestJSON_HasTag");
static_assert(offsetof(VaRestRequestJSON_HasTag, Tag) == 0x000000, "Member 'VaRestRequestJSON_HasTag::Tag' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_HasTag, ReturnValue) == 0x000008, "Member 'VaRestRequestJSON_HasTag::ReturnValue' has a wrong offset!");

}

