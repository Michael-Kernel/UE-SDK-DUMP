#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaRestPlugin

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "VaRestPlugin_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class VaRestPlugin.VaRestJsonObject
// 0x0010 (0x0038 - 0x0028)
class UVaRestJsonObject final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UVaRestJsonObject* ConstructJsonObject(class UObject* WorldContextObject);

	bool DecodeJson(const class FString& JsonString);
	TArray<class FString> GetFieldNames();
	void MergeJsonObject(class UVaRestJsonObject* InJsonObject, bool Overwrite);
	void RemoveField(const class FString& FieldName);
	void Reset();
	void SetArrayField(const class FString& FieldName, const TArray<class UVaRestJsonValue*>& InArray);
	void SetBoolArrayField(const class FString& FieldName, const TArray<bool>& BoolArray);
	void SetBoolField(const class FString& FieldName, bool InValue);
	void SetField(const class FString& FieldName, class UVaRestJsonValue* JsonValue);
	void SetNumberArrayField(const class FString& FieldName, const TArray<float>& NumberArray);
	void SetNumberField(const class FString& FieldName, float Number);
	void SetObjectArrayField(const class FString& FieldName, const TArray<class UVaRestJsonObject*>& ObjectArray);
	void SetObjectField(const class FString& FieldName, class UVaRestJsonObject* JsonObject);
	void SetStringArrayField(const class FString& FieldName, const TArray<class FString>& StringArray);
	void SetStringField(const class FString& FieldName, const class FString& StringValue);

	class FString EncodeJson() const;
	class FString EncodeJsonToSingleString() const;
	TArray<class UVaRestJsonValue*> GetArrayField(const class FString& FieldName) const;
	TArray<bool> GetBoolArrayField(const class FString& FieldName) const;
	bool GetBoolField(const class FString& FieldName) const;
	class UVaRestJsonValue* GetField(const class FString& FieldName) const;
	TArray<float> GetNumberArrayField(const class FString& FieldName) const;
	float GetNumberField(const class FString& FieldName) const;
	TArray<class UVaRestJsonObject*> GetObjectArrayField(const class FString& FieldName) const;
	class UVaRestJsonObject* GetObjectField(const class FString& FieldName) const;
	TArray<class FString> GetStringArrayField(const class FString& FieldName) const;
	class FString GetStringField(const class FString& FieldName) const;
	bool HasField(const class FString& FieldName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VaRestJsonObject">();
	}
	static class UVaRestJsonObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVaRestJsonObject>();
	}
};
static_assert(alignof(UVaRestJsonObject) == 0x000008, "Wrong alignment on UVaRestJsonObject");
static_assert(sizeof(UVaRestJsonObject) == 0x000038, "Wrong size on UVaRestJsonObject");

// Class VaRestPlugin.VaRestJsonValue
// 0x0010 (0x0038 - 0x0028)
class UVaRestJsonValue final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UVaRestJsonValue* ConstructJsonValueArray(class UObject* WorldContextObject, const TArray<class UVaRestJsonValue*>& InArray);
	static class UVaRestJsonValue* ConstructJsonValueBool(class UObject* WorldContextObject, bool InValue);
	static class UVaRestJsonValue* ConstructJsonValueNumber(class UObject* WorldContextObject, float Number);
	static class UVaRestJsonValue* ConstructJsonValueObject(class UObject* WorldContextObject, class UVaRestJsonObject* JsonObject);
	static class UVaRestJsonValue* ConstructJsonValueString(class UObject* WorldContextObject, const class FString& StringValue);

	class UVaRestJsonObject* AsObject();

	TArray<class UVaRestJsonValue*> AsArray() const;
	bool AsBool() const;
	float AsNumber() const;
	class FString AsString() const;
	EVaJson GetType() const;
	class FString GetTypeString() const;
	bool IsNull() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VaRestJsonValue">();
	}
	static class UVaRestJsonValue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVaRestJsonValue>();
	}
};
static_assert(alignof(UVaRestJsonValue) == 0x000008, "Wrong alignment on UVaRestJsonValue");
static_assert(sizeof(UVaRestJsonValue) == 0x000038, "Wrong size on UVaRestJsonValue");

// Class VaRestPlugin.VaRestLibrary
// 0x0000 (0x0028 - 0x0028)
class UVaRestLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool Base64Decode(const class FString& Source, class FString* Dest);
	static bool Base64DecodeData(const class FString& Source, TArray<uint8>* Dest);
	static class FString Base64Encode(const class FString& Source);
	static bool Base64EncodeData(const TArray<uint8>& Data, class FString* Dest);
	static void CallURL(class UObject* WorldContextObject, const class FString& URL, ERequestVerb Verb, ERequestContentType ContentType, class UVaRestJsonObject* VaRestJson, const TDelegate<void(class UVaRestRequestJSON* Request)>& Callback);
	static class FString PercentEncode(const class FString& Source);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VaRestLibrary">();
	}
	static class UVaRestLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVaRestLibrary>();
	}
};
static_assert(alignof(UVaRestLibrary) == 0x000008, "Wrong alignment on UVaRestLibrary");
static_assert(sizeof(UVaRestLibrary) == 0x000028, "Wrong size on UVaRestLibrary");

// Class VaRestPlugin.VaRestRequestJSON
// 0x0190 (0x01B8 - 0x0028)
class UVaRestRequestJSON final : public UObject
{
public:
	UMulticastDelegateProperty_                   OnRequestComplete;                                 // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnRequestFail;                                     // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x40];                                      // 0x0048(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ResponseContent;                                   // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValidJsonResponse;                              // 0x0098(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0xF];                                       // 0x0099(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      RequestJsonObj;                                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x30];                                      // 0x00B0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      ResponseJsonObj;                                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0xD0];                                      // 0x00E8(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UVaRestRequestJSON* ConstructRequest(class UObject* WorldContextObject);
	static class UVaRestRequestJSON* ConstructRequestExt(class UObject* WorldContextObject, ERequestVerb Verb, ERequestContentType ContentType);

	void AddTag(class FName Tag);
	void ApplyURL(const class FString& URL, class UVaRestJsonObject** Result, class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void Cancel();
	TArray<class FString> GetAllResponseHeaders();
	class UVaRestJsonObject* GetRequestObject();
	int32 GetResponseCode();
	class FString GetResponseHeader(const class FString& HeaderName);
	class UVaRestJsonObject* GetResponseObject();
	ERequestStatus GetStatus();
	class FString GetUrl();
	void ProcessURL(const class FString& URL);
	int32 RemoveTag(class FName Tag);
	void ResetData();
	void ResetRequestData();
	void ResetResponseData();
	void SetBinaryContentType(const class FString& ContentType);
	void SetBinaryRequestContent(const TArray<uint8>& Content);
	void SetContentType(ERequestContentType ContentType);
	void SetCustomVerb(const class FString& Verb);
	void SetHeader(const class FString& HeaderName, const class FString& HeaderValue);
	void SetRequestObject(class UVaRestJsonObject* JsonObject);
	void SetResponseObject(class UVaRestJsonObject* JsonObject);
	void SetStringRequestContent(const class FString& Content);
	void SetVerb(ERequestVerb Verb);

	bool HasTag(class FName Tag) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VaRestRequestJSON">();
	}
	static class UVaRestRequestJSON* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVaRestRequestJSON>();
	}
};
static_assert(alignof(UVaRestRequestJSON) == 0x000008, "Wrong alignment on UVaRestRequestJSON");
static_assert(sizeof(UVaRestRequestJSON) == 0x0001B8, "Wrong size on UVaRestRequestJSON");
static_assert(offsetof(UVaRestRequestJSON, OnRequestComplete) == 0x000028, "Member 'UVaRestRequestJSON::OnRequestComplete' has a wrong offset!");
static_assert(offsetof(UVaRestRequestJSON, OnRequestFail) == 0x000038, "Member 'UVaRestRequestJSON::OnRequestFail' has a wrong offset!");
static_assert(offsetof(UVaRestRequestJSON, ResponseContent) == 0x000088, "Member 'UVaRestRequestJSON::ResponseContent' has a wrong offset!");
static_assert(offsetof(UVaRestRequestJSON, bIsValidJsonResponse) == 0x000098, "Member 'UVaRestRequestJSON::bIsValidJsonResponse' has a wrong offset!");
static_assert(offsetof(UVaRestRequestJSON, RequestJsonObj) == 0x0000A8, "Member 'UVaRestRequestJSON::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UVaRestRequestJSON, ResponseJsonObj) == 0x0000E0, "Member 'UVaRestRequestJSON::ResponseJsonObj' has a wrong offset!");

}

