#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCont_NonPlayerCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "BPCont_AI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPCont_NonPlayerCharacter.BPCont_NonPlayerCharacter_C
// 0x00A8 (0x0820 - 0x0778)
class ABPCont_NonPlayerCharacter_C : public ABPCont_AI_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0778(0x0008)(Transient, DuplicateTransient)
	class UOakNpcGreetingComponent*               OakNpcGreeting;                                    // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FAttributeEffectData                   DamageScaleModifier0;                              // 0x0788(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   DamageScaleReset;                                  // 0x07D0(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         ActivateNerfHealthPercent;                         // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveTick(float DeltaSeconds);
	void TargetHealthCheck();
	void TargetTakesDamage(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void TargetDies(class AActor* DamageReceiver, class AActor* DamageCauser);
	void BndEvt__Targeting_K2Node_ComponentBoundEvent_6_TargetingComponentTargetListChangedSignature__DelegateSignature_BPCont_NonPlayerCharacter(class UTargetingComponent* TargetingComponent_0);
	void ExecuteUbergraph_BPCont_NonPlayerCharacter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPCont_NonPlayerCharacter_C">();
	}
	static class ABPCont_NonPlayerCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPCont_NonPlayerCharacter_C>();
	}
};
static_assert(alignof(ABPCont_NonPlayerCharacter_C) == 0x000008, "Wrong alignment on ABPCont_NonPlayerCharacter_C");
static_assert(sizeof(ABPCont_NonPlayerCharacter_C) == 0x000820, "Wrong size on ABPCont_NonPlayerCharacter_C");
static_assert(offsetof(ABPCont_NonPlayerCharacter_C, UberGraphFrame) == 0x000778, "Member 'ABPCont_NonPlayerCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPCont_NonPlayerCharacter_C, OakNpcGreeting) == 0x000780, "Member 'ABPCont_NonPlayerCharacter_C::OakNpcGreeting' has a wrong offset!");
static_assert(offsetof(ABPCont_NonPlayerCharacter_C, DamageScaleModifier0) == 0x000788, "Member 'ABPCont_NonPlayerCharacter_C::DamageScaleModifier0' has a wrong offset!");
static_assert(offsetof(ABPCont_NonPlayerCharacter_C, DamageScaleReset) == 0x0007D0, "Member 'ABPCont_NonPlayerCharacter_C::DamageScaleReset' has a wrong offset!");
static_assert(offsetof(ABPCont_NonPlayerCharacter_C, ActivateNerfHealthPercent) == 0x000818, "Member 'ABPCont_NonPlayerCharacter_C::ActivateNerfHealthPercent' has a wrong offset!");

}

