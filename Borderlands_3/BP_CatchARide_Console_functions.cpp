#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CatchARide_Console

#include "Basic.hpp"

#include "BP_CatchARide_Console_classes.hpp"
#include "BP_CatchARide_Console_parameters.hpp"


namespace SDK
{

// Function BP_CatchARide_Console.BP_CatchARide_Console_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CatchARide_Console_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnNewBodyEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// class UOakCARVehicleData*               VehicleData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CatchARide_Console_C::OnNewBodyEquipped(class UOakCARVehicleData* VehicleData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "OnNewBodyEquipped");

	Params::BP_CatchARide_Console_C_OnNewBodyEquipped Parms{};

	Parms.VehicleData = VehicleData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnNewPartEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// ECARPartType                            PartType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOakCARVehiclePartData*           PartData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CatchARide_Console_C::OnNewPartEquipped(ECARPartType PartType, class UOakCARVehiclePartData* PartData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "OnNewPartEquipped");

	Params::BP_CatchARide_Console_C_OnNewPartEquipped Parms{};

	Parms.PartType = PartType;
	Parms.PartData = PartData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnVehicleDeployedFromMenu
// (Event, Public, BlueprintEvent)

void ABP_CatchARide_Console_C::OnVehicleDeployedFromMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "OnVehicleDeployedFromMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CatchARide_Console_C::BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console");

	Params::BP_CatchARide_Console_C_BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnIStateInteractive
// (Event, Protected, BlueprintEvent)

void ABP_CatchARide_Console_C::OnIStateInteractive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "OnIStateInteractive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.OnIStateNonInteractive
// (Event, Protected, BlueprintEvent)

void ABP_CatchARide_Console_C::OnIStateNonInteractive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "OnIStateNonInteractive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CatchARide_Console.BP_CatchARide_Console_C.ExecuteUbergraph_BP_CatchARide_Console
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CatchARide_Console_C::ExecuteUbergraph_BP_CatchARide_Console(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CatchARide_Console_C", "ExecuteUbergraph_BP_CatchARide_Console");

	Params::BP_CatchARide_Console_C_ExecuteUbergraph_BP_CatchARide_Console Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

