#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_FaultyStar

#include "Basic.hpp"

#include "OakGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ShieldAug_FaultyStar.ShieldAug_FaultyStar_C
// 0x0010 (0x02C0 - 0x02B0)
class UShieldAug_FaultyStar_C final : public UShieldAugment_Damage
{
public:
	bool                                          HasMultipleNovas;                                  // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageSource;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void K2_OnDamageTaken(class AShield* Shield, struct FAugmentData& StackData, class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource_0, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details) const;
	void K2_NativeDelayCallback(class AShield* Shield, struct FAugmentData& StackData, class FName DelayName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShieldAug_FaultyStar_C">();
	}
	static class UShieldAug_FaultyStar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShieldAug_FaultyStar_C>();
	}
};
static_assert(alignof(UShieldAug_FaultyStar_C) == 0x000008, "Wrong alignment on UShieldAug_FaultyStar_C");
static_assert(sizeof(UShieldAug_FaultyStar_C) == 0x0002C0, "Wrong size on UShieldAug_FaultyStar_C");
static_assert(offsetof(UShieldAug_FaultyStar_C, HasMultipleNovas) == 0x0002B0, "Member 'UShieldAug_FaultyStar_C::HasMultipleNovas' has a wrong offset!");
static_assert(offsetof(UShieldAug_FaultyStar_C, DamageSource) == 0x0002B8, "Member 'UShieldAug_FaultyStar_C::DamageSource' has a wrong offset!");

}

