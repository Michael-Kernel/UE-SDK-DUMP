#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDestruction

#include "Basic.hpp"

#include "GbxDestruction_classes.hpp"
#include "GbxDestruction_parameters.hpp"


namespace SDK
{

// Function GbxDestruction.GbxDestructibleComponent.FractureRandomChunk
// (Final, Native, Public, BlueprintCallable)

void UGbxDestructibleComponent::FractureRandomChunk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleComponent", "FractureRandomChunk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDestruction.GbxDestructibleComponent.GetDamageRequiredToFracture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Depth                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxDestructibleComponent::GetDamageRequiredToFracture(int32 Depth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleComponent", "GetDamageRequiredToFracture");

	Params::GbxDestructibleComponent_GetDamageRequiredToFracture Parms{};

	Parms.Depth = Depth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDestruction.GbxDestructibleComponent.SetFracturable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFracturable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDestructibleComponent::SetFracturable(bool bFracturable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleComponent", "SetFracturable");

	Params::GbxDestructibleComponent_SetFracturable Parms{};

	Parms.bFracturable = bFracturable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDestruction.GbxDestructibleComponent.GetTotalPercentFractured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxDestructibleComponent::GetTotalPercentFractured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleComponent", "GetTotalPercentFractured");

	Params::GbxDestructibleComponent_GetTotalPercentFractured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDestruction.GbxDestructibleActor.OnRep_FractureBuffer
// (Final, Native, Public)

void AGbxDestructibleActor::OnRep_FractureBuffer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleActor", "OnRep_FractureBuffer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDestruction.GbxDestructibleActor.OnRep_SyncID
// (Final, Native, Public)

void AGbxDestructibleActor::OnRep_SyncID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleActor", "OnRep_SyncID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDestruction.GbxDestructibleActor.OnRep_TransformBuffer
// (Final, Native, Public)

void AGbxDestructibleActor::OnRep_TransformBuffer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleActor", "OnRep_TransformBuffer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDestruction.GbxDestructibleActor.SetFracturable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFracturable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGbxDestructibleActor::SetFracturable(bool bFracturable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDestructibleActor", "SetFracturable");

	Params::GbxDestructibleActor_SetFracturable Parms{};

	Parms.bFracturable = bFracturable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

