#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_WTF

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function ShieldAug_WTF.ShieldAug_WTF_C.K2_OnDamageTaken
// 0x03B0 (0x03B0 - 0x0000)
struct ShieldAug_WTF_C_K2_OnDamageTaken final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class UDamageComponent*                       DamageReceiver;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0048(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0050(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0068(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldForActor_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0128(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x0170(0x0230)(ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ShieldAug_WTF_C_K2_OnDamageTaken) == 0x000010, "Wrong alignment on ShieldAug_WTF_C_K2_OnDamageTaken");
static_assert(sizeof(ShieldAug_WTF_C_K2_OnDamageTaken) == 0x0003B0, "Wrong size on ShieldAug_WTF_C_K2_OnDamageTaken");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, Shield) == 0x000000, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, StackData) == 0x000008, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, DamageReceiver) == 0x000038, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::DamageReceiver' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, Damage) == 0x000040, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::Damage' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, DamageType) == 0x000048, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::DamageType' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, DamageSource) == 0x000050, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::DamageSource' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, InstigatedBy) == 0x000058, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::InstigatedBy' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, DamageCauser) == 0x000060, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::DamageCauser' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, Details) == 0x000068, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::Details' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GetValueFromStackCount_ReturnValue) == 0x0000C4, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GetWorldForActor_ReturnValue) == 0x0000C8, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GetWorldForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GetOwner_ReturnValue) == 0x0000D0, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D8, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x0000E0, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E4, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F0, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_BreakVector_X) == 0x0000F4, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_BreakVector_Y) == 0x0000F8, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_BreakVector_Z) == 0x0000FC, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GetForwardVector_ReturnValue) == 0x000100, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_Add_FloatFloat_ReturnValue) == 0x00010C, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GetDamageType_ReturnValue) == 0x000110, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000128, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_Array_Get_Item) == 0x000140, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x000170, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_Add_IntInt_ReturnValue) == 0x0003A0, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_SpawnActorAsync_ReturnValue) == 0x0003A4, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_Array_Length_ReturnValue) == 0x0003A8, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_OnDamageTaken, CallFunc_Less_IntInt_ReturnValue) == 0x0003AC, "Member 'ShieldAug_WTF_C_K2_OnDamageTaken::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ShieldAug_WTF.ShieldAug_WTF_C.K2_UntriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct ShieldAug_WTF_C_K2_UntriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ShieldAug_WTF_C_K2_UntriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_WTF_C_K2_UntriggerEffect");
static_assert(sizeof(ShieldAug_WTF_C_K2_UntriggerEffect) == 0x000050, "Wrong size on ShieldAug_WTF_C_K2_UntriggerEffect");
static_assert(offsetof(ShieldAug_WTF_C_K2_UntriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_WTF_C_K2_UntriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_UntriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_WTF_C_K2_UntriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_UntriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_WTF_C_K2_UntriggerEffect::StackData' has a wrong offset!");

// Function ShieldAug_WTF.ShieldAug_WTF_C.K2_TriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct ShieldAug_WTF_C_K2_TriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ShieldAug_WTF_C_K2_TriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_WTF_C_K2_TriggerEffect");
static_assert(sizeof(ShieldAug_WTF_C_K2_TriggerEffect) == 0x000050, "Wrong size on ShieldAug_WTF_C_K2_TriggerEffect");
static_assert(offsetof(ShieldAug_WTF_C_K2_TriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_WTF_C_K2_TriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_TriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_WTF_C_K2_TriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_WTF_C_K2_TriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_WTF_C_K2_TriggerEffect::StackData' has a wrong offset!");

}

