#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionGiver_Single

#include "Basic.hpp"


namespace SDK::Params
{

// Function IO_MissionGiver_Single.IO_MissionGiver_Single_C.MissionGiverSingle_PlacacrdTriggered__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature final
{
public:
	bool                                          MissionAvailable;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakMissionDirectorComponent*           MissionDirectorComponent;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   UserPlayerController;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature) == 0x000008, "Wrong alignment on IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature");
static_assert(sizeof(IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature) == 0x000018, "Wrong size on IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature");
static_assert(offsetof(IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature, MissionAvailable) == 0x000000, "Member 'IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature::MissionAvailable' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature, MissionDirectorComponent) == 0x000008, "Member 'IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature::MissionDirectorComponent' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature, UserPlayerController) == 0x000010, "Member 'IO_MissionGiver_Single_C_MissionGiverSingle_PlacacrdTriggered__DelegateSignature::UserPlayerController' has a wrong offset!");

// Function IO_MissionGiver_Single.IO_MissionGiver_Single_C.ExecuteUbergraph_IO_MissionGiver_Single
// 0x0028 (0x0028 - 0x0000)
struct IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TriggerMissionDeliveryPlacard_bMissionAvailable; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single) == 0x000008, "Wrong alignment on IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single");
static_assert(sizeof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single) == 0x000028, "Wrong size on IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, EntryPoint) == 0x000000, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, K2Node_ComponentBoundEvent_UserController) == 0x000008, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, K2Node_ComponentBoundEvent_UsedComponent) == 0x000010, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000018, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, CallFunc_TriggerMissionDeliveryPlacard_bMissionAvailable) == 0x000021, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::CallFunc_TriggerMissionDeliveryPlacard_bMissionAvailable' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, K2Node_UserStateEvent_bFromLoad1) == 0x000022, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single, K2Node_UserStateEvent_bFromLoad) == 0x000023, "Member 'IO_MissionGiver_Single_C_ExecuteUbergraph_IO_MissionGiver_Single::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");

// Function IO_MissionGiver_Single.IO_MissionGiver_Single_C.__UserState_MissionGiverState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionGiver_Single_C___UserState_MissionGiverState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionGiver_Single_C___UserState_MissionGiverState_1) == 0x000001, "Wrong alignment on IO_MissionGiver_Single_C___UserState_MissionGiverState_1");
static_assert(sizeof(IO_MissionGiver_Single_C___UserState_MissionGiverState_1) == 0x000001, "Wrong size on IO_MissionGiver_Single_C___UserState_MissionGiverState_1");
static_assert(offsetof(IO_MissionGiver_Single_C___UserState_MissionGiverState_1, bFromLoad) == 0x000000, "Member 'IO_MissionGiver_Single_C___UserState_MissionGiverState_1::bFromLoad' has a wrong offset!");

// Function IO_MissionGiver_Single.IO_MissionGiver_Single_C.__UserState_MissionGiverState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionGiver_Single_C___UserState_MissionGiverState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionGiver_Single_C___UserState_MissionGiverState_0) == 0x000001, "Wrong alignment on IO_MissionGiver_Single_C___UserState_MissionGiverState_0");
static_assert(sizeof(IO_MissionGiver_Single_C___UserState_MissionGiverState_0) == 0x000001, "Wrong size on IO_MissionGiver_Single_C___UserState_MissionGiverState_0");
static_assert(offsetof(IO_MissionGiver_Single_C___UserState_MissionGiverState_0, bFromLoad) == 0x000000, "Member 'IO_MissionGiver_Single_C___UserState_MissionGiverState_0::bFromLoad' has a wrong offset!");

// Function IO_MissionGiver_Single.IO_MissionGiver_Single_C.BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single
// 0x0010 (0x0010 - 0x0000)
struct IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single) == 0x000008, "Wrong alignment on IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single");
static_assert(sizeof(IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single) == 0x000010, "Wrong size on IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single");
static_assert(offsetof(IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single, UserController) == 0x000000, "Member 'IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single::UserController' has a wrong offset!");
static_assert(offsetof(IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single, UsedComponent) == 0x000008, "Member 'IO_MissionGiver_Single_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionGiver_Single::UsedComponent' has a wrong offset!");

// Function IO_MissionGiver_Single.IO_MissionGiver_Single_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionGiver_Single_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionGiver_Single_C_UserConstructionScript) == 0x000001, "Wrong alignment on IO_MissionGiver_Single_C_UserConstructionScript");
static_assert(sizeof(IO_MissionGiver_Single_C_UserConstructionScript) == 0x000001, "Wrong size on IO_MissionGiver_Single_C_UserConstructionScript");
static_assert(offsetof(IO_MissionGiver_Single_C_UserConstructionScript, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'IO_MissionGiver_Single_C_UserConstructionScript::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

}

