#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxFeedback

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum GbxFeedback.EPlatform
// NumValues: 0x0006
enum class EPlatform : uint8
{
	Windows                                  = 0,
	PS4                                      = 1,
	XBoxOne                                  = 2,
	PS5                                      = 3,
	XBoxSeriesX                              = 4,
	EPlatform_MAX                            = 5,
};

// Enum GbxFeedback.ERumbleSlot
// NumValues: 0x0005
enum class ERumbleSlot : uint8
{
	LeftSmall                                = 0,
	LeftLarge                                = 1,
	RightSmall                               = 2,
	RightLarge                               = 3,
	ERumbleSlot_MAX                          = 4,
};

// ScriptStruct GbxFeedback.RumbleSlotMapping
// 0x0080 (0x0080 - 0x0000)
struct FRumbleSlotMapping final
{
public:
	ERumbleSlot                                   MapSlotTo;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     MappingScalar;                                     // 0x0008(0x0078)(Edit, Config, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRumbleSlotMapping) == 0x000008, "Wrong alignment on FRumbleSlotMapping");
static_assert(sizeof(FRumbleSlotMapping) == 0x000080, "Wrong size on FRumbleSlotMapping");
static_assert(offsetof(FRumbleSlotMapping, MapSlotTo) == 0x000000, "Member 'FRumbleSlotMapping::MapSlotTo' has a wrong offset!");
static_assert(offsetof(FRumbleSlotMapping, MappingScalar) == 0x000008, "Member 'FRumbleSlotMapping::MappingScalar' has a wrong offset!");

// ScriptStruct GbxFeedback.RumbleRemap
// 0x0200 (0x0200 - 0x0000)
struct FRumbleRemap final
{
public:
	struct FRumbleSlotMapping                     LeftSmallScalar;                                   // 0x0000(0x0080)(Edit, Config, NativeAccessSpecifierPublic)
	struct FRumbleSlotMapping                     LeftLargeScalar;                                   // 0x0080(0x0080)(Edit, Config, NativeAccessSpecifierPublic)
	struct FRumbleSlotMapping                     RightSmallScalar;                                  // 0x0100(0x0080)(Edit, Config, NativeAccessSpecifierPublic)
	struct FRumbleSlotMapping                     RightLargeScalar;                                  // 0x0180(0x0080)(Edit, Config, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRumbleRemap) == 0x000008, "Wrong alignment on FRumbleRemap");
static_assert(sizeof(FRumbleRemap) == 0x000200, "Wrong size on FRumbleRemap");
static_assert(offsetof(FRumbleRemap, LeftSmallScalar) == 0x000000, "Member 'FRumbleRemap::LeftSmallScalar' has a wrong offset!");
static_assert(offsetof(FRumbleRemap, LeftLargeScalar) == 0x000080, "Member 'FRumbleRemap::LeftLargeScalar' has a wrong offset!");
static_assert(offsetof(FRumbleRemap, RightSmallScalar) == 0x000100, "Member 'FRumbleRemap::RightSmallScalar' has a wrong offset!");
static_assert(offsetof(FRumbleRemap, RightLargeScalar) == 0x000180, "Member 'FRumbleRemap::RightLargeScalar' has a wrong offset!");

// ScriptStruct GbxFeedback.RemapByConsole
// 0x0210 (0x0210 - 0x0000)
struct FRemapByConsole final
{
public:
	class FString                                 ConsoleName;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, Config, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRumbleRemap                           RemapValues;                                       // 0x0010(0x0200)(Edit, Config, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRemapByConsole) == 0x000008, "Wrong alignment on FRemapByConsole");
static_assert(sizeof(FRemapByConsole) == 0x000210, "Wrong size on FRemapByConsole");
static_assert(offsetof(FRemapByConsole, ConsoleName) == 0x000000, "Member 'FRemapByConsole::ConsoleName' has a wrong offset!");
static_assert(offsetof(FRemapByConsole, RemapValues) == 0x000010, "Member 'FRemapByConsole::RemapValues' has a wrong offset!");

}

