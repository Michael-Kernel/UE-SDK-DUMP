#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Kickcharger

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Kickcharger.Ability_Kickcharger_C
// 0x0048 (0x0140 - 0x00F8)
class UAbility_Kickcharger_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD; // 0x0100(0x0028)()
	struct FGbxAttributeModifierHandle            ChargeTimeAttributeModifierHandle;                 // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsCharging;                                        // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFullyCharged;                                    // 0x0139(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Ability_Kickcharger(int32 EntryPoint);
	void ChargeTicker();
	void FullyChargedAudio();
	void InstantChargeExpired();
	void OnActivated();
	void OnDeactivated();
	void StopSliding(const struct FSlideEndedDetails& Details);
	void WeaponFired(class AWeapon* EventWeapon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Kickcharger_C">();
	}
	static class UAbility_Kickcharger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Kickcharger_C>();
	}
};
static_assert(alignof(UAbility_Kickcharger_C) == 0x000008, "Wrong alignment on UAbility_Kickcharger_C");
static_assert(sizeof(UAbility_Kickcharger_C) == 0x000140, "Wrong size on UAbility_Kickcharger_C");
static_assert(offsetof(UAbility_Kickcharger_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Kickcharger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Kickcharger_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD) == 0x000100, "Member 'UAbility_Kickcharger_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_BOTD' has a wrong offset!");
static_assert(offsetof(UAbility_Kickcharger_C, ChargeTimeAttributeModifierHandle) == 0x000128, "Member 'UAbility_Kickcharger_C::ChargeTimeAttributeModifierHandle' has a wrong offset!");
static_assert(offsetof(UAbility_Kickcharger_C, IsCharging) == 0x000138, "Member 'UAbility_Kickcharger_C::IsCharging' has a wrong offset!");
static_assert(offsetof(UAbility_Kickcharger_C, IsFullyCharged) == 0x000139, "Member 'UAbility_Kickcharger_C::IsFullyCharged' has a wrong offset!");

}

