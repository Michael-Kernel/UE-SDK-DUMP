#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_DLCSkill_15

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Passive_Beastmaster_DLCSkill_15.Passive_Beastmaster_DLCSkill_15_C.ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15
// 0x0210 (0x0210 - 0x0000)
struct Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxShield_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Beastmaster_C*              K2Node_DynamicCast_AsBPEvent_Hub_Beastmaster;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOakActionAbilityPetEvolutionType             K2Node_CustomEvent_PetEvolution;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      K2Node_CustomEvent_PetType;                        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityTimerActive_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentShield_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_MakeStruct_OakAbilityTimerSpec;             // 0x0030(0x0018)(NoDestructor)
	float                                         CallFunc_GetMaxShield_ReturnValue1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0058(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IIBPChar_Beastmaster_C> K2Node_DynamicCast_AsIBPChar_Beastmaster;          // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable1;                             // 0x0100(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AOakCharacter*                          CallFunc_GetCurrentPet_Res;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EOakActionAbilityPetEvolutionType PetEvolution, EOakActionAbilityPetType PetType)> K2Node_CreateDelegate_OutputDelegate;              // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x01B0(0x0028)(NoDestructor)
	TScriptInterface<class IIBPChar_Beastmaster_C> K2Node_DynamicCast_AsIBPChar_Beastmaster1;         // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          CallFunc_GetCurrentPet_Res1;                       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxShield_ReturnValue2;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentShield_ReturnValue1;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15) == 0x000008, "Wrong alignment on Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15");
static_assert(sizeof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15) == 0x000210, "Wrong size on Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, EntryPoint) == 0x000000, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetMaxShield_ReturnValue) == 0x000004, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetMaxShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_DynamicCast_AsBPEvent_Hub_Beastmaster) == 0x000008, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_DynamicCast_AsBPEvent_Hub_Beastmaster' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_CustomEvent_PetEvolution) == 0x000011, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_CustomEvent_PetEvolution' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_CustomEvent_PetType) == 0x000012, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_CustomEvent_PetType' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000014, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_IsAbilityTimerActive_ReturnValue) == 0x000018, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_IsAbilityTimerActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x000028, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetCurrentShield_ReturnValue) == 0x00002C, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetCurrentShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_MakeStruct_OakAbilityTimerSpec) == 0x000030, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_MakeStruct_OakAbilityTimerSpec' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetMaxShield_ReturnValue1) == 0x000048, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetMaxShield_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, Temp_struct_Variable) == 0x000058, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_DynamicCast_AsIBPChar_Beastmaster) == 0x0000E8, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_DynamicCast_AsIBPChar_Beastmaster' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_DynamicCast_bSuccess1) == 0x0000F8, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, Temp_struct_Variable1) == 0x000100, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetCurrentPet_Res) == 0x000190, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetCurrentPet_Res' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_CreateDelegate_OutputDelegate) == 0x0001A0, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0001B0, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_DynamicCast_AsIBPChar_Beastmaster1) == 0x0001D8, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_DynamicCast_AsIBPChar_Beastmaster1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, K2Node_DynamicCast_bSuccess2) == 0x0001E8, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetCurrentPet_Res1) == 0x0001F0, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetCurrentPet_Res1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_IsValid_ReturnValue1) == 0x0001F8, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetMaxShield_ReturnValue2) == 0x0001FC, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetMaxShield_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_GetCurrentShield_ReturnValue1) == 0x000200, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_GetCurrentShield_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000204, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000208, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_BooleanAND_ReturnValue) == 0x000209, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_BooleanOR_ReturnValue) == 0x00020A, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15, CallFunc_BooleanAND_ReturnValue1) == 0x00020B, "Member 'Passive_Beastmaster_DLCSkill_15_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_15::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function Passive_Beastmaster_DLCSkill_15.Passive_Beastmaster_DLCSkill_15_C.DLCSkill15_UsedAttackCommand
// 0x0002 (0x0002 - 0x0000)
struct Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand final
{
public:
	EOakActionAbilityPetEvolutionType             PetEvolution;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakActionAbilityPetType                      PetType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand) == 0x000001, "Wrong alignment on Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand");
static_assert(sizeof(Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand) == 0x000002, "Wrong size on Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand, PetEvolution) == 0x000000, "Member 'Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand::PetEvolution' has a wrong offset!");
static_assert(offsetof(Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand, PetType) == 0x000001, "Member 'Passive_Beastmaster_DLCSkill_15_C_DLCSkill15_UsedAttackCommand::PetType' has a wrong offset!");

}

