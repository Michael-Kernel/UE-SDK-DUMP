#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Beastmaster_AntiGravityTrap

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_Beastmaster_AntiGravityTrap.IO_Beastmaster_AntiGravityTrap_C
// 0x0258 (0x07A8 - 0x0550)
class AIO_Beastmaster_AntiGravityTrap_C : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       UseCollision;                                      // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakUsableComponent*                    OakUsable;                                         // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TrapExplode_Large;                                 // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TrapExplode;                                       // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TrapAoE_Large;                                     // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TrapAoE;                                           // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_AntigravTrap;                                   // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility*                      OwnerActionAbility;                                // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FEnvQueryParams                        EQSFindTargets;                                    // 0x05A0(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AActor*>                         TargetList;                                        // 0x0658(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UParticleSystemComponent*               TrapAoEEffect;                                     // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TrapExplodeEffect;                                 // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        EQSFindTargets_Large;                              // 0x0678(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FGameplayTagContainer                  UnDesiredTags;                                     // 0x0730(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableValueHandle                  PulseTime;                                         // 0x0750(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                DecalLarge;                                        // 0x0768(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DecalDefault;                                      // 0x0774(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  ConfuseDuration;                                   // 0x0780(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UDecalComponent*                        AoEDecal;                                          // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMod2WideNet;                                      // 0x07A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMod4BlindWithAnger;                               // 0x07A1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMod5Forage;                                       // 0x07A2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3[0x1];                                      // 0x07A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecalLifetime;                                     // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_IO_Beastmaster_AntiGravityTrap(int32 EntryPoint);
	void BndEvt__OakUsable_K2Node_ComponentBoundEvent_2_UsableUsedSignature__DelegateSignature_IO_Beastmaster_AntiGravityTrap(const struct FUseEvent& UseEvent);
	void ReceiveBeginPlay();
	void SpawnMod5Loot(class AActor* Actor);
	void DestroyTrap();
	void SetTrapEndCondition();
	void ConfuseTargets();
	void FindAntiGravTargets();
	void ReceiveDestroyed();
	void TrapOnActionSkillEnd(class UOakActionAbility* ActionAbility);
	void KnockupTarget();
	void UserConstructionScript();
	void SetupEmitters();
	void CanKnockUpEnemy(class AActor* Actor, bool* Res);
	void CanConfuseEnemy(class AActor* Actor, bool* Res);
	void InitTrapMods();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_Beastmaster_AntiGravityTrap_C">();
	}
	static class AIO_Beastmaster_AntiGravityTrap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_Beastmaster_AntiGravityTrap_C>();
	}
};
static_assert(alignof(AIO_Beastmaster_AntiGravityTrap_C) == 0x000008, "Wrong alignment on AIO_Beastmaster_AntiGravityTrap_C");
static_assert(sizeof(AIO_Beastmaster_AntiGravityTrap_C) == 0x0007A8, "Wrong size on AIO_Beastmaster_AntiGravityTrap_C");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, UberGraphFrame) == 0x000550, "Member 'AIO_Beastmaster_AntiGravityTrap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, UseCollision) == 0x000558, "Member 'AIO_Beastmaster_AntiGravityTrap_C::UseCollision' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, OakUsable) == 0x000560, "Member 'AIO_Beastmaster_AntiGravityTrap_C::OakUsable' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, WwiseAudio) == 0x000568, "Member 'AIO_Beastmaster_AntiGravityTrap_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TrapExplode_Large) == 0x000570, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TrapExplode_Large' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TrapExplode) == 0x000578, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TrapExplode' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TrapAoE_Large) == 0x000580, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TrapAoE_Large' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TrapAoE) == 0x000588, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TrapAoE' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, SK_AntigravTrap) == 0x000590, "Member 'AIO_Beastmaster_AntiGravityTrap_C::SK_AntigravTrap' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, OwnerActionAbility) == 0x000598, "Member 'AIO_Beastmaster_AntiGravityTrap_C::OwnerActionAbility' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, EQSFindTargets) == 0x0005A0, "Member 'AIO_Beastmaster_AntiGravityTrap_C::EQSFindTargets' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TargetList) == 0x000658, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TargetList' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TrapAoEEffect) == 0x000668, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TrapAoEEffect' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, TrapExplodeEffect) == 0x000670, "Member 'AIO_Beastmaster_AntiGravityTrap_C::TrapExplodeEffect' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, EQSFindTargets_Large) == 0x000678, "Member 'AIO_Beastmaster_AntiGravityTrap_C::EQSFindTargets_Large' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, UnDesiredTags) == 0x000730, "Member 'AIO_Beastmaster_AntiGravityTrap_C::UnDesiredTags' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, PulseTime) == 0x000750, "Member 'AIO_Beastmaster_AntiGravityTrap_C::PulseTime' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, DecalLarge) == 0x000768, "Member 'AIO_Beastmaster_AntiGravityTrap_C::DecalLarge' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, DecalDefault) == 0x000774, "Member 'AIO_Beastmaster_AntiGravityTrap_C::DecalDefault' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, ConfuseDuration) == 0x000780, "Member 'AIO_Beastmaster_AntiGravityTrap_C::ConfuseDuration' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, AoEDecal) == 0x000798, "Member 'AIO_Beastmaster_AntiGravityTrap_C::AoEDecal' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, bMod2WideNet) == 0x0007A0, "Member 'AIO_Beastmaster_AntiGravityTrap_C::bMod2WideNet' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, bMod4BlindWithAnger) == 0x0007A1, "Member 'AIO_Beastmaster_AntiGravityTrap_C::bMod4BlindWithAnger' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, bMod5Forage) == 0x0007A2, "Member 'AIO_Beastmaster_AntiGravityTrap_C::bMod5Forage' has a wrong offset!");
static_assert(offsetof(AIO_Beastmaster_AntiGravityTrap_C, DecalLifetime) == 0x0007A4, "Member 'AIO_Beastmaster_AntiGravityTrap_C::DecalLifetime' has a wrong offset!");

}

