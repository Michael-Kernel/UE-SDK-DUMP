#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAmmoItem_AllAmmo

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPAmmoItem_AllAmmo.BPAmmoItem_AllAmmo_C.ReceiveBeginPlay
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) BPAmmoItem_AllAmmo_C_ReceiveBeginPlay final
{
public:
	TDelegate<void(class AOakCharacter* PickupInstigator)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BPAmmoItem_AllAmmo_C_ReceiveBeginPlay) == 0x000008, "Wrong alignment on BPAmmoItem_AllAmmo_C_ReceiveBeginPlay");
static_assert(sizeof(BPAmmoItem_AllAmmo_C_ReceiveBeginPlay) == 0x000010, "Wrong size on BPAmmoItem_AllAmmo_C_ReceiveBeginPlay");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_ReceiveBeginPlay, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BPAmmoItem_AllAmmo_C_ReceiveBeginPlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BPAmmoItem_AllAmmo.BPAmmoItem_AllAmmo_C.CanBePickedUp
// 0x0020 (0x0020 - 0x0000)
struct BPAmmoItem_AllAmmo_C_CanBePickedUp final
{
public:
	class AOakCharacter*                          PickupInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsedByInstigator;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryItemPickup*                   WorldPickupActor;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBePickedUp_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayer_ReturnValue;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_EvaluateCondition_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAmmoItem_AllAmmo_C_CanBePickedUp) == 0x000008, "Wrong alignment on BPAmmoItem_AllAmmo_C_CanBePickedUp");
static_assert(sizeof(BPAmmoItem_AllAmmo_C_CanBePickedUp) == 0x000020, "Wrong size on BPAmmoItem_AllAmmo_C_CanBePickedUp");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, PickupInstigator) == 0x000000, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::PickupInstigator' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, Quantity) == 0x000008, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::Quantity' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, UsedByInstigator) == 0x00000C, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::UsedByInstigator' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, WorldPickupActor) == 0x000010, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::WorldPickupActor' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, ReturnValue) == 0x000018, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, CallFunc_CanBePickedUp_ReturnValue) == 0x000019, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::CallFunc_CanBePickedUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, CallFunc_IsPlayer_ReturnValue) == 0x00001A, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::CallFunc_IsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, CallFunc_K2_EvaluateCondition_ReturnValue) == 0x00001C, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::CallFunc_K2_EvaluateCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_CanBePickedUp, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BPAmmoItem_AllAmmo_C_CanBePickedUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPAmmoItem_AllAmmo.BPAmmoItem_AllAmmo_C.PickedUp
// 0x0010 (0x0010 - 0x0000)
struct BPAmmoItem_AllAmmo_C_PickedUp final
{
public:
	class AOakCharacter*                          PickupInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIsPlayerExecOutput                           CallFunc_BranchOnIsPlayer_Branches;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAmmoItem_AllAmmo_C_PickedUp) == 0x000008, "Wrong alignment on BPAmmoItem_AllAmmo_C_PickedUp");
static_assert(sizeof(BPAmmoItem_AllAmmo_C_PickedUp) == 0x000010, "Wrong size on BPAmmoItem_AllAmmo_C_PickedUp");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_PickedUp, PickupInstigator) == 0x000000, "Member 'BPAmmoItem_AllAmmo_C_PickedUp::PickupInstigator' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_PickedUp, CallFunc_BranchOnIsPlayer_Branches) == 0x000008, "Member 'BPAmmoItem_AllAmmo_C_PickedUp::CallFunc_BranchOnIsPlayer_Branches' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_PickedUp, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BPAmmoItem_AllAmmo_C_PickedUp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPAmmoItem_AllAmmo.BPAmmoItem_AllAmmo_C.FillAmmo
// 0x0040 (0x0040 - 0x0000)
struct BPAmmoItem_AllAmmo_C_FillAmmo final
{
public:
	class AOakCharacter*                          PickupInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAttributeData*                      CurrentValue;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAttributeData*                      MaxValue;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxAttributeModifierActionExecOutput         CallFunc_AddModifierToGbxAttribute_ModifierActionResult; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeModifierHandle            CallFunc_AddModifierToGbxAttribute_ReturnValue;    // 0x0028(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAmmoItem_AllAmmo_C_FillAmmo) == 0x000008, "Wrong alignment on BPAmmoItem_AllAmmo_C_FillAmmo");
static_assert(sizeof(BPAmmoItem_AllAmmo_C_FillAmmo) == 0x000040, "Wrong size on BPAmmoItem_AllAmmo_C_FillAmmo");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, PickupInstigator) == 0x000000, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::PickupInstigator' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, CurrentValue) == 0x000008, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::CurrentValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, MaxValue) == 0x000010, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::MaxValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000018, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, CallFunc_GetValueOfAttribute_ReturnValue1) == 0x00001C, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::CallFunc_GetValueOfAttribute_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, CallFunc_AddModifierToGbxAttribute_ModifierActionResult) == 0x000024, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::CallFunc_AddModifierToGbxAttribute_ModifierActionResult' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, CallFunc_AddModifierToGbxAttribute_ReturnValue) == 0x000028, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::CallFunc_AddModifierToGbxAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAmmoItem_AllAmmo_C_FillAmmo, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BPAmmoItem_AllAmmo_C_FillAmmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

