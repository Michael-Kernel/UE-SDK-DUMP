#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpawnDLCScript_BloodyHarvest

#include "Basic.hpp"

#include "SpawnDLCScript_BloodyHarvest_classes.hpp"
#include "SpawnDLCScript_BloodyHarvest_parameters.hpp"


namespace SDK
{

// Function SpawnDLCScript_BloodyHarvest.SpawnDLCScript_BloodyHarvest_C.OnActorDied
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USpawnerComponent*                SpawnerComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpawnDLCScript_BloodyHarvest_C::OnActorDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnDLCScript_BloodyHarvest_C", "OnActorDied");

	Params::SpawnDLCScript_BloodyHarvest_C_OnActorDied Parms{};

	Parms.SpawnerComponent = SpawnerComponent;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpawnDLCScript_BloodyHarvest.SpawnDLCScript_BloodyHarvest_C.OnActorSpawned
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USpawnerComponent*                SpawnerComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpawnDLCScript_BloodyHarvest_C::OnActorSpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnDLCScript_BloodyHarvest_C", "OnActorSpawned");

	Params::SpawnDLCScript_BloodyHarvest_C_OnActorSpawned Parms{};

	Parms.SpawnerComponent = SpawnerComponent;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpawnDLCScript_BloodyHarvest.SpawnDLCScript_BloodyHarvest_C.SpawnEnemyAsHaunted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpawnDLCScript_BloodyHarvest_C::SpawnEnemyAsHaunted(class AActor* Enemy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnDLCScript_BloodyHarvest_C", "SpawnEnemyAsHaunted");

	Params::SpawnDLCScript_BloodyHarvest_C_SpawnEnemyAsHaunted Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpawnDLCScript_BloodyHarvest.SpawnDLCScript_BloodyHarvest_C.GetSpawnTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           ActorThatDied                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Output                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void USpawnDLCScript_BloodyHarvest_C::GetSpawnTransform(class AActor* ActorThatDied, struct FTransform* Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnDLCScript_BloodyHarvest_C", "GetSpawnTransform");

	Params::SpawnDLCScript_BloodyHarvest_C_GetSpawnTransform Parms{};

	Parms.ActorThatDied = ActorThatDied;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}

}

