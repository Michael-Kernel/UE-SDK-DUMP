#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxTwitch

#include "Basic.hpp"

#include "GbxTwitch_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GbxTwitch.GbxTwitchSettings
// 0x0050 (0x0078 - 0x0028)
class UGbxTwitchSettings final : public UObject
{
public:
	class FString                                 AppClientID;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppClientID_Stable;                                // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppClientID_Cert;                                  // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtensionID;                                       // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameID;                                            // 0x0068(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxTwitchSettings">();
	}
	static class UGbxTwitchSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTwitchSettings>();
	}
};
static_assert(alignof(UGbxTwitchSettings) == 0x000008, "Wrong alignment on UGbxTwitchSettings");
static_assert(sizeof(UGbxTwitchSettings) == 0x000078, "Wrong size on UGbxTwitchSettings");
static_assert(offsetof(UGbxTwitchSettings, AppClientID) == 0x000028, "Member 'UGbxTwitchSettings::AppClientID' has a wrong offset!");
static_assert(offsetof(UGbxTwitchSettings, AppClientID_Stable) == 0x000038, "Member 'UGbxTwitchSettings::AppClientID_Stable' has a wrong offset!");
static_assert(offsetof(UGbxTwitchSettings, AppClientID_Cert) == 0x000048, "Member 'UGbxTwitchSettings::AppClientID_Cert' has a wrong offset!");
static_assert(offsetof(UGbxTwitchSettings, ExtensionID) == 0x000058, "Member 'UGbxTwitchSettings::ExtensionID' has a wrong offset!");
static_assert(offsetof(UGbxTwitchSettings, GameID) == 0x000068, "Member 'UGbxTwitchSettings::GameID' has a wrong offset!");

// Class GbxTwitch.TwitchAPI
// 0x0110 (0x0138 - 0x0028)
class UTwitchAPI final : public UObject
{
public:
	uint8                                         Pad_28[0x110];                                     // 0x0028(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void RequestTwitchStreams(int32 MaxNbStreams, const class FString& GameName, const class FString& UserLogin, const class FString& Language, TDelegate<void(TArray<struct FTwitchStreamInfo>& Streams)> StreamInfoReceivedDelegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TwitchAPI">();
	}
	static class UTwitchAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTwitchAPI>();
	}
};
static_assert(alignof(UTwitchAPI) == 0x000008, "Wrong alignment on UTwitchAPI");
static_assert(sizeof(UTwitchAPI) == 0x000138, "Wrong size on UTwitchAPI");

// Class GbxTwitch.TwitchIRCClient
// 0x0070 (0x0098 - 0x0028)
class UTwitchIRCClient final : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTwitchChannel>                 PendingChannels;                                   // 0x0058(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTwitchChannel>                 ConnectedChannels;                                 // 0x0068(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class FString>                         IRCCommandsMessages;                               // 0x0078(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void ExitChatBot();
	static void InitChatBot();
	static void JoinChannel(const class FString& ChannelName, TDelegate<void(struct FTwitchChannelMessage& ChannelUserMessage)> OnMessageReceived);
	static void QuitChannel(const class FString& ChannelName);
	static void SendChatMessage(const class FString& ChannelName, const class FString& Message);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TwitchIRCClient">();
	}
	static class UTwitchIRCClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTwitchIRCClient>();
	}
};
static_assert(alignof(UTwitchIRCClient) == 0x000008, "Wrong alignment on UTwitchIRCClient");
static_assert(sizeof(UTwitchIRCClient) == 0x000098, "Wrong size on UTwitchIRCClient");
static_assert(offsetof(UTwitchIRCClient, PendingChannels) == 0x000058, "Member 'UTwitchIRCClient::PendingChannels' has a wrong offset!");
static_assert(offsetof(UTwitchIRCClient, ConnectedChannels) == 0x000068, "Member 'UTwitchIRCClient::ConnectedChannels' has a wrong offset!");
static_assert(offsetof(UTwitchIRCClient, IRCCommandsMessages) == 0x000078, "Member 'UTwitchIRCClient::IRCCommandsMessages' has a wrong offset!");

}

