#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxPerfScope

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "GbxPerfScope_structs.hpp"


namespace SDK
{

// Class GbxPerfScope.GbxPerfScopeOptions
// 0x0010 (0x0038 - 0x0028)
class UGbxPerfScopeOptions final : public UObject
{
public:
	class FString                                 AnalyticsURL;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxPerfScopeOptions">();
	}
	static class UGbxPerfScopeOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxPerfScopeOptions>();
	}
};
static_assert(alignof(UGbxPerfScopeOptions) == 0x000008, "Wrong alignment on UGbxPerfScopeOptions");
static_assert(sizeof(UGbxPerfScopeOptions) == 0x000038, "Wrong size on UGbxPerfScopeOptions");
static_assert(offsetof(UGbxPerfScopeOptions, AnalyticsURL) == 0x000028, "Member 'UGbxPerfScopeOptions::AnalyticsURL' has a wrong offset!");

// Class GbxPerfScope.GbxPerfScopePerfSampleData
// 0x0010 (0x0038 - 0x0028)
class UGbxPerfScopePerfSampleData final : public UObject
{
public:
	TArray<struct FPerfSample>                    Samples;                                           // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void GetMapGPUHotspots(class UObject* WorldContext, int32 NumSamples, const struct FLatentActionInfo& LatentInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxPerfScopePerfSampleData">();
	}
	static class UGbxPerfScopePerfSampleData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxPerfScopePerfSampleData>();
	}
};
static_assert(alignof(UGbxPerfScopePerfSampleData) == 0x000008, "Wrong alignment on UGbxPerfScopePerfSampleData");
static_assert(sizeof(UGbxPerfScopePerfSampleData) == 0x000038, "Wrong size on UGbxPerfScopePerfSampleData");
static_assert(offsetof(UGbxPerfScopePerfSampleData, Samples) == 0x000028, "Member 'UGbxPerfScopePerfSampleData::Samples' has a wrong offset!");

}

