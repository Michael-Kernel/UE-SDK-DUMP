#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Challenge_Console_29

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Challenge_Console_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Challenge_Console_29.BP_Challenge_Console_29_C
// 0x0020 (0x0280 - 0x0260)
class UBP_Challenge_Console_29_C final : public UBP_Challenge_Console_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class AOakCharacter*                          Player;                                            // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UInventorySlotData*>             InvSlots;                                          // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Challenge_Console_29(int32 EntryPoint);
	void OnInitChallengeInstance(class UChallengesComponent* OwningChallenges, class AGbxCharacter* AssociatedCharacter);
	void CheckInvSlotRarity(class UInventorySlotData* InvSlot, bool* IsRare);
	void CheckAllSlots(class AActor* EquippedActor, class UInventorySlotData* SlotData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Challenge_Console_29_C">();
	}
	static class UBP_Challenge_Console_29_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Challenge_Console_29_C>();
	}
};
static_assert(alignof(UBP_Challenge_Console_29_C) == 0x000008, "Wrong alignment on UBP_Challenge_Console_29_C");
static_assert(sizeof(UBP_Challenge_Console_29_C) == 0x000280, "Wrong size on UBP_Challenge_Console_29_C");
static_assert(offsetof(UBP_Challenge_Console_29_C, UberGraphFrame) == 0x000260, "Member 'UBP_Challenge_Console_29_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Challenge_Console_29_C, Player) == 0x000268, "Member 'UBP_Challenge_Console_29_C::Player' has a wrong offset!");
static_assert(offsetof(UBP_Challenge_Console_29_C, InvSlots) == 0x000270, "Member 'UBP_Challenge_Console_29_C::InvSlots' has a wrong offset!");

}

