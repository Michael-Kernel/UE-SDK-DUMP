#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadiateDamageActor_Artifact_IceSpiker

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RadiateDamageActor_Artifact_IceSpiker.RadiateDamageActor_Artifact_IceSpiker_C.ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker
// 0x0030 (0x0030 - 0x0000)
struct RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0008(0x0018)()
	class AActor*                                 K2Node_Event_EnemyActor;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker) == 0x000008, "Wrong alignment on RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker");
static_assert(sizeof(RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker) == 0x000030, "Wrong size on RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker, EntryPoint) == 0x000000, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker::EntryPoint' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker, CallFunc_PostAttachedEvent_ReturnValue) == 0x000008, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker, K2Node_Event_EnemyActor) == 0x000020, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker::K2Node_Event_EnemyActor' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker, K2Node_Event_EndPlayReason) == 0x000028, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_ExecuteUbergraph_RadiateDamageActor_Artifact_IceSpiker::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function RadiateDamageActor_Artifact_IceSpiker.RadiateDamageActor_Artifact_IceSpiker_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay");
static_assert(sizeof(RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay) == 0x000001, "Wrong size on RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function RadiateDamageActor_Artifact_IceSpiker.RadiateDamageActor_Artifact_IceSpiker_C.OnHitEnemy
// 0x0008 (0x0008 - 0x0000)
struct RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy final
{
public:
	class AActor*                                 EnemyActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy) == 0x000008, "Wrong alignment on RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy");
static_assert(sizeof(RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy) == 0x000008, "Wrong size on RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy, EnemyActor) == 0x000000, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_OnHitEnemy::EnemyActor' has a wrong offset!");

// Function RadiateDamageActor_Artifact_IceSpiker.RadiateDamageActor_Artifact_IceSpiker_C.DoAreaDamage
// 0x00A8 (0x00A8 - 0x0000)
struct RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage final
{
public:
	struct FDataTableValueHandle                  FractureRadius;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0018(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage) == 0x000008, "Wrong alignment on RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage");
static_assert(sizeof(RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage) == 0x0000A8, "Wrong size on RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage, FractureRadius) == 0x000000, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage::FractureRadius' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage, Temp_struct_Variable) == 0x000018, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoAreaDamage::Temp_struct_Variable' has a wrong offset!");

// Function RadiateDamageActor_Artifact_IceSpiker.RadiateDamageActor_Artifact_IceSpiker_C.DoDamageToEnemy
// 0x00C8 (0x00C8 - 0x0000)
struct RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy final
{
public:
	class AActor*                                 Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  FractureRadius;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor)
	class AActor*                                 EnemyTarget;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0028(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy) == 0x000008, "Wrong alignment on RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy");
static_assert(sizeof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy) == 0x0000C8, "Wrong size on RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, Enemy) == 0x000000, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, FractureRadius) == 0x000008, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::FractureRadius' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, EnemyTarget) == 0x000020, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::EnemyTarget' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, Temp_struct_Variable) == 0x000028, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, CallFunc_GetInstigator_ReturnValue) == 0x0000B8, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, CallFunc_GetValueOfAttribute_ReturnValue) == 0x0000C0, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'RadiateDamageActor_Artifact_IceSpiker_C_DoDamageToEnemy::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

