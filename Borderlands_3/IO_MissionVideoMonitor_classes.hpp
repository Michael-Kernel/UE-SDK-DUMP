#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionVideoMonitor

#include "Basic.hpp"

#include "Struct_HelperMonitorSetup_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "Struct_MissionVideoMonitorPlaylist_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "Enum_MissionVideoMonitorStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_MissionVideoMonitor.IO_MissionVideoMonitor_C
// 0x00D8 (0x06E0 - 0x0608)
class AIO_MissionVideoMonitor_C final : public AMission_InteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(Transient, DuplicateTransient)
	class USocketComponent*                       ProjectorSocket;                                   // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MonitorScreen;                                     // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MonitorMesh;                                       // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndexToOverride;                           // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OnMaterial;                                        // 0x0640(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OffMaterial;                                       // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MuteAudio;                                         // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxMediaData*                          SimpleMovieToPlay;                                 // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_HelperMonitorSetup>     SecondaryMeshes;                                   // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	Enum_MissionVideoMonitorStates                MonitorStates;                                     // 0x0670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionEventReference                 MissionEventWhenMovieCompleted;                    // 0x0678(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          UsePlaylistToChooseMovie;                          // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_MissionVideoMonitorPlaylist> MoviePlaylist;                                     // 0x0690(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UMediaPlayer*                           PlayingMedia;                                      // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SanctuaryVidScreen;                                // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitter*                               SanctuaryProjector;                                // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMissionEventReference                 SanctuaryMissionEventToUse;                        // 0x06B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<struct FWwiseLocationOverride>         AudioLocations;                                    // 0x06C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UGbxCondition*                          Cond_MonitorStates_NewEnumerator1;                 // 0x06D8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetAudioLocations();
	void OverrideSecondaryMeshes();
	void UserConstructionScript();
	void MovieEnd();
	void __UserState_MonitorStates_1(bool bFromLoad);
	void __UserState_MonitorStates_0(bool bFromLoad);
	void BreakLoop();
	void BroadcastVideoToAll(class UGbxMediaData* MediaToPlay, const struct FMissionEventReference& MissionEventOnComplete);
	void ExecuteUbergraph_IO_MissionVideoMonitor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_MissionVideoMonitor_C">();
	}
	static class AIO_MissionVideoMonitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_MissionVideoMonitor_C>();
	}
};
static_assert(alignof(AIO_MissionVideoMonitor_C) == 0x000008, "Wrong alignment on AIO_MissionVideoMonitor_C");
static_assert(sizeof(AIO_MissionVideoMonitor_C) == 0x0006E0, "Wrong size on AIO_MissionVideoMonitor_C");
static_assert(offsetof(AIO_MissionVideoMonitor_C, UberGraphFrame) == 0x000608, "Member 'AIO_MissionVideoMonitor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, ProjectorSocket) == 0x000610, "Member 'AIO_MissionVideoMonitor_C::ProjectorSocket' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, WwiseAudio) == 0x000618, "Member 'AIO_MissionVideoMonitor_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MonitorScreen) == 0x000620, "Member 'AIO_MissionVideoMonitor_C::MonitorScreen' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, DefaultSceneRoot) == 0x000628, "Member 'AIO_MissionVideoMonitor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MonitorMesh) == 0x000630, "Member 'AIO_MissionVideoMonitor_C::MonitorMesh' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MaterialIndexToOverride) == 0x000638, "Member 'AIO_MissionVideoMonitor_C::MaterialIndexToOverride' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, OnMaterial) == 0x000640, "Member 'AIO_MissionVideoMonitor_C::OnMaterial' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, OffMaterial) == 0x000648, "Member 'AIO_MissionVideoMonitor_C::OffMaterial' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MuteAudio) == 0x000650, "Member 'AIO_MissionVideoMonitor_C::MuteAudio' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, SimpleMovieToPlay) == 0x000658, "Member 'AIO_MissionVideoMonitor_C::SimpleMovieToPlay' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, SecondaryMeshes) == 0x000660, "Member 'AIO_MissionVideoMonitor_C::SecondaryMeshes' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MonitorStates) == 0x000670, "Member 'AIO_MissionVideoMonitor_C::MonitorStates' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MissionEventWhenMovieCompleted) == 0x000678, "Member 'AIO_MissionVideoMonitor_C::MissionEventWhenMovieCompleted' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, UsePlaylistToChooseMovie) == 0x000688, "Member 'AIO_MissionVideoMonitor_C::UsePlaylistToChooseMovie' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, MoviePlaylist) == 0x000690, "Member 'AIO_MissionVideoMonitor_C::MoviePlaylist' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, PlayingMedia) == 0x0006A0, "Member 'AIO_MissionVideoMonitor_C::PlayingMedia' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, SanctuaryVidScreen) == 0x0006A8, "Member 'AIO_MissionVideoMonitor_C::SanctuaryVidScreen' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, SanctuaryProjector) == 0x0006B0, "Member 'AIO_MissionVideoMonitor_C::SanctuaryProjector' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, SanctuaryMissionEventToUse) == 0x0006B8, "Member 'AIO_MissionVideoMonitor_C::SanctuaryMissionEventToUse' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, AudioLocations) == 0x0006C8, "Member 'AIO_MissionVideoMonitor_C::AudioLocations' has a wrong offset!");
static_assert(offsetof(AIO_MissionVideoMonitor_C, Cond_MonitorStates_NewEnumerator1) == 0x0006D8, "Member 'AIO_MissionVideoMonitor_C::Cond_MonitorStates_NewEnumerator1' has a wrong offset!");

}

