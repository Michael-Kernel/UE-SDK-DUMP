#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionDodge_Nog_Idle_Surfing_L

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GBXAction_EnemyVariableParent_classes.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActionDodge_Nog_Idle_Surfing_L.ActionDodge_Nog_Idle_Surfing_L_C
// 0x0020 (0x0268 - 0x0248)
class UActionDodge_Nog_Idle_Surfing_L_C final : public UGBXAction_EnemyVariableParent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ActionDodge_Nog_Idle_Surfing_L_C;   // 0x0248(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 MySelf_0;                                          // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget_0;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 MyDamageCausingComponent;                          // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ActionDodge_Nog_Idle_Surfing_L(int32 EntryPoint);
	void NotifyThrow();
	void NotifyEnableDrone();
	void OnEnd(EGbxActionEndState ActionEndState, class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActionDodge_Nog_Idle_Surfing_L_C">();
	}
	static class UActionDodge_Nog_Idle_Surfing_L_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionDodge_Nog_Idle_Surfing_L_C>();
	}
};
static_assert(alignof(UActionDodge_Nog_Idle_Surfing_L_C) == 0x000008, "Wrong alignment on UActionDodge_Nog_Idle_Surfing_L_C");
static_assert(sizeof(UActionDodge_Nog_Idle_Surfing_L_C) == 0x000268, "Wrong size on UActionDodge_Nog_Idle_Surfing_L_C");
static_assert(offsetof(UActionDodge_Nog_Idle_Surfing_L_C, UberGraphFrame_ActionDodge_Nog_Idle_Surfing_L_C) == 0x000248, "Member 'UActionDodge_Nog_Idle_Surfing_L_C::UberGraphFrame_ActionDodge_Nog_Idle_Surfing_L_C' has a wrong offset!");
static_assert(offsetof(UActionDodge_Nog_Idle_Surfing_L_C, MySelf_0) == 0x000250, "Member 'UActionDodge_Nog_Idle_Surfing_L_C::MySelf_0' has a wrong offset!");
static_assert(offsetof(UActionDodge_Nog_Idle_Surfing_L_C, MyTarget_0) == 0x000258, "Member 'UActionDodge_Nog_Idle_Surfing_L_C::MyTarget_0' has a wrong offset!");
static_assert(offsetof(UActionDodge_Nog_Idle_Surfing_L_C, MyDamageCausingComponent) == 0x000260, "Member 'UActionDodge_Nog_Idle_Surfing_L_C::MyDamageCausingComponent' has a wrong offset!");

}

