#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkill_Operative_NervesOfSteel

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function PassiveSkill_Operative_NervesOfSteel.PassiveSkill_Operative_NervesOfSteel_C.ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel
// 0x01C8 (0x01C8 - 0x0000)
struct PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakAbilityTimerSpec                   K2Node_MakeStruct_OakAbilityTimerSpec;             // 0x0008(0x0018)(NoDestructor)
	TDelegate<void(const struct FGameResourcePoolReference& ResourcePool)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue;    // 0x0030(0x0018)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakResourcePoolReference_bValid;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakResourcePoolReference_CurrentValue;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MinValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MaxValue;      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ResourcePoolDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ResourcePoolDelegate; // 0x0058(0x0030)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameResourcePoolReference             K2Node_CustomEvent_ResourcePool1;                  // 0x0090(0x0018)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameResourcePoolReference             K2Node_CustomEvent_ResourcePool;                   // 0x00B0(0x0018)(NoDestructor, ContainsInstancedReference)
	TDelegate<void(const struct FGameResourcePoolReference& ResourcePool)> K2Node_CreateDelegate_OutputDelegate1;             // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec;                                 // 0x00D8(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerResult                 K2Node_Event_Result;                               // 0x00F0(0x000C)(ConstParm, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ResourcePoolDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ResourcePoolDelegate1; // 0x0100(0x0030)(NoDestructor, ContainsInstancedReference)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0130(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0168(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FStatusEffectRemoveSpec                K2Node_MakeStruct_StatusEffectRemoveSpec;          // 0x0180(0x0010)(NoDestructor)
	bool                                          CallFunc_RemoveStatusEffect_ReturnValue;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue1;   // 0x0198(0x0018)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakResourcePoolReference_bValid1;       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakResourcePoolReference_CurrentValue1; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MinValue1;     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MaxValue1;     // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel) == 0x000008, "Wrong alignment on PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel");
static_assert(sizeof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel) == 0x0001C8, "Wrong size on PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, EntryPoint) == 0x000000, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::EntryPoint' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_MakeStruct_OakAbilityTimerSpec) == 0x000008, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_MakeStruct_OakAbilityTimerSpec' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_GetResourcePoolByResource_ReturnValue) == 0x000030, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_GetResourcePoolByResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_bValid) == 0x000048, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_bValid' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_CurrentValue) == 0x00004C, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_CurrentValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_MinValue) == 0x000050, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_MinValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_MaxValue) == 0x000054, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_MaxValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_MakeStruct_GbxAbilityResourceSpec_ResourcePoolDelegate) == 0x000058, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_MakeStruct_GbxAbilityResourceSpec_ResourcePoolDelegate' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000089, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_CustomEvent_ResourcePool1) == 0x000090, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_CustomEvent_ResourcePool1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_CustomEvent_ResourcePool) == 0x0000B0, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_CustomEvent_ResourcePool' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_CreateDelegate_OutputDelegate1) == 0x0000C8, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_Event_Spec) == 0x0000D8, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_Event_Result) == 0x0000F0, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_Event_Result' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_MakeStruct_GbxAbilityResourceSpec_ResourcePoolDelegate1) == 0x000100, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_MakeStruct_GbxAbilityResourceSpec_ResourcePoolDelegate1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_MakeStruct_StatusEffectSpec) == 0x000130, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_AddStatusEffect_ReturnValue) == 0x000168, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, K2Node_MakeStruct_StatusEffectRemoveSpec) == 0x000180, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::K2Node_MakeStruct_StatusEffectRemoveSpec' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_RemoveStatusEffect_ReturnValue) == 0x000190, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_RemoveStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_GetResourcePoolByResource_ReturnValue1) == 0x000198, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_GetResourcePoolByResource_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_bValid1) == 0x0001B0, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_bValid1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_CurrentValue1) == 0x0001B4, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_CurrentValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_MinValue1) == 0x0001B8, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_MinValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BreakResourcePoolReference_MaxValue1) == 0x0001BC, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BreakResourcePoolReference_MaxValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x0001C0, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x0001C1, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel, CallFunc_BooleanAND_ReturnValue1) == 0x0001C2, "Member 'PassiveSkill_Operative_NervesOfSteel_C_ExecuteUbergraph_PassiveSkill_Operative_NervesOfSteel::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function PassiveSkill_Operative_NervesOfSteel.PassiveSkill_Operative_NervesOfSteel_C.OnAbilityTimerEnded
// 0x0028 (0x0028 - 0x0000)
struct PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FOakAbilityTimerResult                 Result;                                            // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded) == 0x000008, "Wrong alignment on PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded");
static_assert(sizeof(PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded) == 0x000028, "Wrong size on PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded, Spec) == 0x000000, "Member 'PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded::Spec' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded, Result) == 0x000018, "Member 'PassiveSkill_Operative_NervesOfSteel_C_OnAbilityTimerEnded::Result' has a wrong offset!");

// Function PassiveSkill_Operative_NervesOfSteel.PassiveSkill_Operative_NervesOfSteel_C.InTheZone_OnResourcePoolNotFilled
// 0x0018 (0x0018 - 0x0000)
struct PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled final
{
public:
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled) == 0x000008, "Wrong alignment on PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled");
static_assert(sizeof(PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled) == 0x000018, "Wrong size on PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled, ResourcePool) == 0x000000, "Member 'PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolNotFilled::ResourcePool' has a wrong offset!");

// Function PassiveSkill_Operative_NervesOfSteel.PassiveSkill_Operative_NervesOfSteel_C.InTheZone_OnResourcePoolFilled
// 0x0018 (0x0018 - 0x0000)
struct PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled final
{
public:
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled) == 0x000008, "Wrong alignment on PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled");
static_assert(sizeof(PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled) == 0x000018, "Wrong size on PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled, ResourcePool) == 0x000000, "Member 'PassiveSkill_Operative_NervesOfSteel_C_InTheZone_OnResourcePoolFilled::ResourcePool' has a wrong offset!");

// Function PassiveSkill_Operative_NervesOfSteel.PassiveSkill_Operative_NervesOfSteel_C.CalculateAbilityState
// 0x0007 (0x0007 - 0x0000)
struct PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState final
{
public:
	EGbxAbilityState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasShieldEquipped_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              CallFunc_CalculateAbilityState_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxAbilityState                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState) == 0x000001, "Wrong alignment on PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState");
static_assert(sizeof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState) == 0x000007, "Wrong size on PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, ReturnValue) == 0x000000, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, Temp_bool_Variable) == 0x000001, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, Temp_byte_Variable) == 0x000002, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, CallFunc_HasShieldEquipped_ReturnValue) == 0x000003, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::CallFunc_HasShieldEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, CallFunc_CalculateAbilityState_ReturnValue) == 0x000005, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::CallFunc_CalculateAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState, K2Node_Select_Default) == 0x000006, "Member 'PassiveSkill_Operative_NervesOfSteel_C_CalculateAbilityState::K2Node_Select_Default' has a wrong offset!");

}

