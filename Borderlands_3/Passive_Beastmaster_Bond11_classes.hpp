#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_Bond11

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Passive_Beastmaster_Bond11.Passive_Beastmaster_Bond11_C
// 0x0060 (0x0210 - 0x01B0)
class UPassive_Beastmaster_Bond11_C final : public UOakPassiveAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Bond11; // 0x01B8(0x0028)()
	struct FGameplayTagContainer                  BossTags;                                          // 0x01E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ClampedDamage;                                     // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BossMaxHealthClamp;                                // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyMaxHealthClamp;                               // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Passive_Beastmaster_Bond11(int32 EntryPoint);
	void UnregisterDelegate(class AOakCharacter* Pet);
	void OnTakeAnyDamage_Pet_Bond11(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void DoReflectedDamage();
	void OnActivated();
	void PetReleased_Bond11(class AOakCharacter* Pet);
	void PetSpawned_Bond11(class AOakCharacter* Pet);
	void RegisterDelegate(class AOakCharacter* Pet);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Passive_Beastmaster_Bond11_C">();
	}
	static class UPassive_Beastmaster_Bond11_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassive_Beastmaster_Bond11_C>();
	}
};
static_assert(alignof(UPassive_Beastmaster_Bond11_C) == 0x000008, "Wrong alignment on UPassive_Beastmaster_Bond11_C");
static_assert(sizeof(UPassive_Beastmaster_Bond11_C) == 0x000210, "Wrong size on UPassive_Beastmaster_Bond11_C");
static_assert(offsetof(UPassive_Beastmaster_Bond11_C, UberGraphFrame) == 0x0001B0, "Member 'UPassive_Beastmaster_Bond11_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Bond11_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Bond11) == 0x0001B8, "Member 'UPassive_Beastmaster_Bond11_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Beastmaster_Bond11' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Bond11_C, BossTags) == 0x0001E0, "Member 'UPassive_Beastmaster_Bond11_C::BossTags' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Bond11_C, ClampedDamage) == 0x000200, "Member 'UPassive_Beastmaster_Bond11_C::ClampedDamage' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Bond11_C, BossMaxHealthClamp) == 0x000204, "Member 'UPassive_Beastmaster_Bond11_C::BossMaxHealthClamp' has a wrong offset!");
static_assert(offsetof(UPassive_Beastmaster_Bond11_C, EnemyMaxHealthClamp) == 0x000208, "Member 'UPassive_Beastmaster_Bond11_C::EnemyMaxHealthClamp' has a wrong offset!");

}

