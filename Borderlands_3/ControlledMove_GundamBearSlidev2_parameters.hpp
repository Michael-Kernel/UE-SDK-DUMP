#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_GundamBearSlidev2

#include "Basic.hpp"


namespace SDK::Params
{

// Function ControlledMove_GundamBearSlidev2.ControlledMove_GundamBearSlidev2_C.ExecuteUbergraph_ControlledMove_GundamBearSlidev2
// 0x0048 (0x0048 - 0x0000)
struct ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MoveDuration1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MoveDuration;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Instigator;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2) == 0x000008, "Wrong alignment on ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2");
static_assert(sizeof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2) == 0x000048, "Wrong size on ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, EntryPoint) == 0x000000, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000010, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, K2Node_Event_MoveDuration1) == 0x000018, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::K2Node_Event_MoveDuration1' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, K2Node_Event_TargetActor1) == 0x000020, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::K2Node_Event_TargetActor1' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, K2Node_Event_MoveDuration) == 0x000028, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::K2Node_Event_MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, K2Node_Event_TargetActor) == 0x000030, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, K2Node_Event_Instigator) == 0x000038, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000040, "Member 'ControlledMove_GundamBearSlidev2_C_ExecuteUbergraph_ControlledMove_GundamBearSlidev2::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function ControlledMove_GundamBearSlidev2.ControlledMove_GundamBearSlidev2_C.OnServerStart
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_GundamBearSlidev2_C_OnServerStart final
{
public:
	float                                         MoveDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_GundamBearSlidev2_C_OnServerStart) == 0x000008, "Wrong alignment on ControlledMove_GundamBearSlidev2_C_OnServerStart");
static_assert(sizeof(ControlledMove_GundamBearSlidev2_C_OnServerStart) == 0x000018, "Wrong size on ControlledMove_GundamBearSlidev2_C_OnServerStart");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_OnServerStart, MoveDuration) == 0x000000, "Member 'ControlledMove_GundamBearSlidev2_C_OnServerStart::MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_OnServerStart, TargetActor) == 0x000008, "Member 'ControlledMove_GundamBearSlidev2_C_OnServerStart::TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_OnServerStart, Instigator) == 0x000010, "Member 'ControlledMove_GundamBearSlidev2_C_OnServerStart::Instigator' has a wrong offset!");

// Function ControlledMove_GundamBearSlidev2.ControlledMove_GundamBearSlidev2_C.OnStart
// 0x0010 (0x0010 - 0x0000)
struct ControlledMove_GundamBearSlidev2_C_OnStart final
{
public:
	float                                         MoveDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_GundamBearSlidev2_C_OnStart) == 0x000008, "Wrong alignment on ControlledMove_GundamBearSlidev2_C_OnStart");
static_assert(sizeof(ControlledMove_GundamBearSlidev2_C_OnStart) == 0x000010, "Wrong size on ControlledMove_GundamBearSlidev2_C_OnStart");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_OnStart, MoveDuration) == 0x000000, "Member 'ControlledMove_GundamBearSlidev2_C_OnStart::MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_GundamBearSlidev2_C_OnStart, TargetActor) == 0x000008, "Member 'ControlledMove_GundamBearSlidev2_C_OnStart::TargetActor' has a wrong offset!");

}

