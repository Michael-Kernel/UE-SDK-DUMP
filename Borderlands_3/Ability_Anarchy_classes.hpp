#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Anarchy

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Anarchy.Ability_Anarchy_C
// 0x0048 (0x0140 - 0x00F8)
class UAbility_Anarchy_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class APlayerController*                      PlayerController;                                  // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_SleepingGiant; // 0x0108(0x0028)()
	class UParticleSystemComponent*               FX_Homicidal;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RicochetChance;                                    // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_Anarchy(int32 EntryPoint);
	void Reload_Started(class AWeapon* EventWeapon, bool bAutoReload);
	void OnCauseDeath_CE(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void OnRegistered();
	void OnUnregistered();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Anarchy_C">();
	}
	static class UAbility_Anarchy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Anarchy_C>();
	}
};
static_assert(alignof(UAbility_Anarchy_C) == 0x000008, "Wrong alignment on UAbility_Anarchy_C");
static_assert(sizeof(UAbility_Anarchy_C) == 0x000140, "Wrong size on UAbility_Anarchy_C");
static_assert(offsetof(UAbility_Anarchy_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Anarchy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Anarchy_C, PlayerController) == 0x000100, "Member 'UAbility_Anarchy_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UAbility_Anarchy_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_SleepingGiant) == 0x000108, "Member 'UAbility_Anarchy_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_SleepingGiant' has a wrong offset!");
static_assert(offsetof(UAbility_Anarchy_C, FX_Homicidal) == 0x000130, "Member 'UAbility_Anarchy_C::FX_Homicidal' has a wrong offset!");
static_assert(offsetof(UAbility_Anarchy_C, RicochetChance) == 0x000138, "Member 'UAbility_Anarchy_C::RicochetChance' has a wrong offset!");

}

