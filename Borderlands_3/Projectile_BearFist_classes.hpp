#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_BearFist

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_BearFist.Projectile_BearFist_C
// 0x0138 (0x0818 - 0x06E0)
class AProjectile_BearFist_C final : public AOakProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UOakTriggerComponent*                   DamageTrigger;                                     // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       DMGCollision;                                      // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       Fist_Projectile;                                   // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Hardpoint_Fist_Projectile;                      // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileHomingComponent*             ProjectileHoming;                                  // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExplosionComponent*                    Explosion;                                         // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedTarget;                                     // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_IronBear*                 OwningActor;                                       // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        TargetAroundReticule;                              // 0x0738(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         LifeTime;                                          // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakWeapon_IronBearHardPoint*           OwningHardpoint;                                   // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempHitLocation;                                   // 0x0800(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitFriendly;                                       // 0x080C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_80D[0x3];                                      // 0x080D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      OwningHardpointController;                         // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Projectile_BearFist(int32 EntryPoint);
	void BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_0_OakTouchedTriggerDelegate__DelegateSignature_Projectile_BearFist(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void AttachNewChain();
	void DoProjectilePostCleanup();
	void DoProjectilePreCleanup();
	void OnHitDamagableObject(const struct FHitResult& Hit);
	void OnHitWorld(const struct FHitResult& Hit);
	void OnExplode();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetIronBearArmAction(class AActor* Target, class UClass** NewAction);
	void PullEnemyToIronBear();
	void CreateBearFistLightBeam(class UClass* LightBeamData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_BearFist_C">();
	}
	static class AProjectile_BearFist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_BearFist_C>();
	}
};
static_assert(alignof(AProjectile_BearFist_C) == 0x000008, "Wrong alignment on AProjectile_BearFist_C");
static_assert(sizeof(AProjectile_BearFist_C) == 0x000818, "Wrong size on AProjectile_BearFist_C");
static_assert(offsetof(AProjectile_BearFist_C, UberGraphFrame) == 0x0006E0, "Member 'AProjectile_BearFist_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, DamageTrigger) == 0x0006E8, "Member 'AProjectile_BearFist_C::DamageTrigger' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, DMGCollision) == 0x0006F0, "Member 'AProjectile_BearFist_C::DMGCollision' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, Fist_Projectile) == 0x0006F8, "Member 'AProjectile_BearFist_C::Fist_Projectile' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, SM_Hardpoint_Fist_Projectile) == 0x000700, "Member 'AProjectile_BearFist_C::SM_Hardpoint_Fist_Projectile' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, ProjectileHoming) == 0x000708, "Member 'AProjectile_BearFist_C::ProjectileHoming' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, Explosion) == 0x000710, "Member 'AProjectile_BearFist_C::Explosion' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, GbxProjectileMovement) == 0x000718, "Member 'AProjectile_BearFist_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, Capsule) == 0x000720, "Member 'AProjectile_BearFist_C::Capsule' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, DamagedTarget) == 0x000728, "Member 'AProjectile_BearFist_C::DamagedTarget' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, OwningActor) == 0x000730, "Member 'AProjectile_BearFist_C::OwningActor' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, TargetAroundReticule) == 0x000738, "Member 'AProjectile_BearFist_C::TargetAroundReticule' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, LifeTime) == 0x0007F0, "Member 'AProjectile_BearFist_C::LifeTime' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, OwningHardpoint) == 0x0007F8, "Member 'AProjectile_BearFist_C::OwningHardpoint' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, TempHitLocation) == 0x000800, "Member 'AProjectile_BearFist_C::TempHitLocation' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, HitFriendly) == 0x00080C, "Member 'AProjectile_BearFist_C::HitFriendly' has a wrong offset!");
static_assert(offsetof(AProjectile_BearFist_C, OwningHardpointController) == 0x000810, "Member 'AProjectile_BearFist_C::OwningHardpointController' has a wrong offset!");

}

