#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_Inverse

#include "Basic.hpp"

#include "GbxGameSystemCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Condition_Inverse.Condition_Inverse_C
// 0x0008 (0x0090 - 0x0088)
class UCondition_Inverse_C final : public UGbxCondition_Blueprint
{
public:
	class UGbxCondition*                          Condition;                                         // 0x0088(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	bool EvaluateCondition(class UObject* Context, class UObject* OptionalContext) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Condition_Inverse_C">();
	}
	static class UCondition_Inverse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCondition_Inverse_C>();
	}
};
static_assert(alignof(UCondition_Inverse_C) == 0x000008, "Wrong alignment on UCondition_Inverse_C");
static_assert(sizeof(UCondition_Inverse_C) == 0x000090, "Wrong size on UCondition_Inverse_C");
static_assert(offsetof(UCondition_Inverse_C, Condition) == 0x000088, "Member 'UCondition_Inverse_C::Condition' has a wrong offset!");

}

