#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionScripted

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "MissionScriptedStates_structs.hpp"
#include "Enum_MissionScriptedState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_MissionScripted.IO_MissionScripted_C
// 0x00B8 (0x06C0 - 0x0608)
class AIO_MissionScripted_C : public AMission_InteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(Transient, DuplicateTransient)
	class UMissionObserverComponent*              MissionObserver;                                   // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FMissionEventReference                 MissionEventToSendOnScriptedAction;                // 0x0620(0x0010)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn)
	UMulticastDelegateProperty_                   MissionScripted_ScriptedActionStarted;             // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EMissionScriptedStates                        MissionScriptedState;                              // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxLevelSequenceActor*                 LevelSequenceToPlay;                               // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforePlayingSequence;                        // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionEventReference                 MissionEventToSendOnSequenceFinished;              // 0x0658(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FMissionObjectiveReference             SequenceFailsafeObjective;                         // 0x0668(0x0030)(Edit, BlueprintVisible)
	bool                                          SequenceIsMissionSafe;                             // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   MissionScripted_SequenceFinished;                  // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OnLateJoin_GoToEndAndStop;                         // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_MissionScriptedState_NewEnumerator1;          // 0x06B8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void CheckForMissionSequenceFailsafe();
	void SetMissionScriptedState(Enum_MissionScriptedState State);
	void UserConstructionScript();
	void Play_Feedback_Default(bool FromLoad);
	void Play_Feedback_ScriptedActionStarted();
	void Play_Feedback_ScriptedActionFinished();
	void __UserState_MissionScriptedState_0(bool bFromLoad);
	void __UserState_MissionScriptedState_1(bool bFromLoad);
	void BndEvt__LevelSequenceToPlay_K2Node_ComponentBoundEvent_0_OnMovieSceneSequencePlayerEvent__DelegateSignature_IO_MissionScripted();
	void ExecuteUbergraph_IO_MissionScripted(int32 EntryPoint);
	void MissionScripted_SequenceFinished__DelegateSignature();
	void MissionScripted_ScriptedActionStarted__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_MissionScripted_C">();
	}
	static class AIO_MissionScripted_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_MissionScripted_C>();
	}
};
static_assert(alignof(AIO_MissionScripted_C) == 0x000008, "Wrong alignment on AIO_MissionScripted_C");
static_assert(sizeof(AIO_MissionScripted_C) == 0x0006C0, "Wrong size on AIO_MissionScripted_C");
static_assert(offsetof(AIO_MissionScripted_C, UberGraphFrame) == 0x000608, "Member 'AIO_MissionScripted_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, MissionObserver) == 0x000610, "Member 'AIO_MissionScripted_C::MissionObserver' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, DefaultSceneRoot) == 0x000618, "Member 'AIO_MissionScripted_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, MissionEventToSendOnScriptedAction) == 0x000620, "Member 'AIO_MissionScripted_C::MissionEventToSendOnScriptedAction' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, MissionScripted_ScriptedActionStarted) == 0x000630, "Member 'AIO_MissionScripted_C::MissionScripted_ScriptedActionStarted' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, MissionScriptedState) == 0x000640, "Member 'AIO_MissionScripted_C::MissionScriptedState' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, LevelSequenceToPlay) == 0x000648, "Member 'AIO_MissionScripted_C::LevelSequenceToPlay' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, DelayBeforePlayingSequence) == 0x000650, "Member 'AIO_MissionScripted_C::DelayBeforePlayingSequence' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, MissionEventToSendOnSequenceFinished) == 0x000658, "Member 'AIO_MissionScripted_C::MissionEventToSendOnSequenceFinished' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, SequenceFailsafeObjective) == 0x000668, "Member 'AIO_MissionScripted_C::SequenceFailsafeObjective' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, SequenceIsMissionSafe) == 0x000698, "Member 'AIO_MissionScripted_C::SequenceIsMissionSafe' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, MissionScripted_SequenceFinished) == 0x0006A0, "Member 'AIO_MissionScripted_C::MissionScripted_SequenceFinished' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, OnLateJoin_GoToEndAndStop) == 0x0006B0, "Member 'AIO_MissionScripted_C::OnLateJoin_GoToEndAndStop' has a wrong offset!");
static_assert(offsetof(AIO_MissionScripted_C, Cond_MissionScriptedState_NewEnumerator1) == 0x0006B8, "Member 'AIO_MissionScripted_C::Cond_MissionScriptedState_NewEnumerator1' has a wrong offset!");

}

