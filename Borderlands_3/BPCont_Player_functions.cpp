#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCont_Player

#include "Basic.hpp"

#include "BPCont_Player_classes.hpp"
#include "BPCont_Player_parameters.hpp"


namespace SDK
{

// Function BPCont_Player.BPCont_Player_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPCont_Player_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCont_Player_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPCont_Player.BPCont_Player_C.OnJokeEULAClosedByPlayer
// (Event, Public, BlueprintEvent)

void ABPCont_Player_C::OnJokeEULAClosedByPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCont_Player_C", "OnJokeEULAClosedByPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPCont_Player.BPCont_Player_C.ExecuteUbergraph_BPCont_Player
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPCont_Player_C::ExecuteUbergraph_BPCont_Player(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCont_Player_C", "ExecuteUbergraph_BPCont_Player");

	Params::BPCont_Player_C_ExecuteUbergraph_BPCont_Player Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPCont_Player.BPCont_Player_C.OnJokeEulaClosed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABPCont_Player_C::OnJokeEulaClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCont_Player_C", "OnJokeEulaClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

