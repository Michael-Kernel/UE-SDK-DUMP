#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_All_Passive_TerrorBonus_CryoDamage

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_All_Passive_TerrorBonus_CryoDamage.Ability_All_Passive_TerrorBonus_CryoDamage_C
// 0x0070 (0x0168 - 0x00F8)
class UAbility_All_Passive_TerrorBonus_CryoDamage_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class ABPChar_Player_C*                       Player;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           GenerateTerrorRate;                                // 0x0108(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           GenerateTerrorDuration;                            // 0x0110(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGbxAbilityResourceController_ResourcePoolDelegate RsrcCntrlr_GbxAbilityResourceController_ResourcePoolDelegate_Ability_All_Passive_TerrorBonus_CryoDamage; // 0x0118(0x0028)()
	struct FGbxAbilityResourceController_ConditionalDamageModifier RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_All_Passive_TerrorBonus_CryoDamage; // 0x0140(0x0028)()

public:
	void ExecuteUbergraph_Ability_All_Passive_TerrorBonus_CryoDamage(int32 EntryPoint);
	void CheckTerror(const struct FGameResourcePoolReference& ResourcePool);
	void OnActivated();
	void TerrorDepleted(const struct FGameResourcePoolReference& ResourcePool);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_All_Passive_TerrorBonus_CryoDamage_C">();
	}
	static class UAbility_All_Passive_TerrorBonus_CryoDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_All_Passive_TerrorBonus_CryoDamage_C>();
	}
};
static_assert(alignof(UAbility_All_Passive_TerrorBonus_CryoDamage_C) == 0x000008, "Wrong alignment on UAbility_All_Passive_TerrorBonus_CryoDamage_C");
static_assert(sizeof(UAbility_All_Passive_TerrorBonus_CryoDamage_C) == 0x000168, "Wrong size on UAbility_All_Passive_TerrorBonus_CryoDamage_C");
static_assert(offsetof(UAbility_All_Passive_TerrorBonus_CryoDamage_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_All_Passive_TerrorBonus_CryoDamage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorBonus_CryoDamage_C, Player) == 0x000100, "Member 'UAbility_All_Passive_TerrorBonus_CryoDamage_C::Player' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorBonus_CryoDamage_C, GenerateTerrorRate) == 0x000108, "Member 'UAbility_All_Passive_TerrorBonus_CryoDamage_C::GenerateTerrorRate' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorBonus_CryoDamage_C, GenerateTerrorDuration) == 0x000110, "Member 'UAbility_All_Passive_TerrorBonus_CryoDamage_C::GenerateTerrorDuration' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorBonus_CryoDamage_C, RsrcCntrlr_GbxAbilityResourceController_ResourcePoolDelegate_Ability_All_Passive_TerrorBonus_CryoDamage) == 0x000118, "Member 'UAbility_All_Passive_TerrorBonus_CryoDamage_C::RsrcCntrlr_GbxAbilityResourceController_ResourcePoolDelegate_Ability_All_Passive_TerrorBonus_CryoDamage' has a wrong offset!");
static_assert(offsetof(UAbility_All_Passive_TerrorBonus_CryoDamage_C, RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_All_Passive_TerrorBonus_CryoDamage) == 0x000140, "Member 'UAbility_All_Passive_TerrorBonus_CryoDamage_C::RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_All_Passive_TerrorBonus_CryoDamage' has a wrong offset!");

}

