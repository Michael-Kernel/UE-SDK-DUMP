#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_Cauterizer

#include "Basic.hpp"

#include "Ability_Artifact_Cauterizer_classes.hpp"
#include "Ability_Artifact_Cauterizer_parameters.hpp"


namespace SDK
{

// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.ExecuteUbergraph_Ability_Artifact_Cauterizer
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_Artifact_Cauterizer_C::ExecuteUbergraph_Ability_Artifact_Cauterizer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Artifact_Cauterizer_C", "ExecuteUbergraph_Ability_Artifact_Cauterizer");

	Params::Ability_Artifact_Cauterizer_C_ExecuteUbergraph_Ability_Artifact_Cauterizer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.OnAbilityTimerEnded
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FOakAbilityTimerSpec             Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FOakAbilityTimerResult           Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UAbility_Artifact_Cauterizer_C::OnAbilityTimerEnded(const struct FOakAbilityTimerSpec& Spec, const struct FOakAbilityTimerResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Artifact_Cauterizer_C", "OnAbilityTimerEnded");

	Params::Ability_Artifact_Cauterizer_C_OnAbilityTimerEnded Parms{};

	Parms.Spec = std::move(Spec);
	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.OnAbilityTimerStarted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FOakAbilityTimerSpec             Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UAbility_Artifact_Cauterizer_C::OnAbilityTimerStarted(const struct FOakAbilityTimerSpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Artifact_Cauterizer_C", "OnAbilityTimerStarted");

	Params::Ability_Artifact_Cauterizer_C_OnAbilityTimerStarted Parms{};

	Parms.Spec = std::move(Spec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UAbility_Artifact_Cauterizer_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Artifact_Cauterizer_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Artifact_Cauterizer.Ability_Artifact_Cauterizer_C.StopSlide
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlideEndedDetails               Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UAbility_Artifact_Cauterizer_C::StopSlide(const struct FSlideEndedDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Artifact_Cauterizer_C", "StopSlide");

	Params::Ability_Artifact_Cauterizer_C_StopSlide Parms{};

	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}

}

