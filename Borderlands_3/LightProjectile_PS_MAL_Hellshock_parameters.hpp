#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_PS_MAL_Hellshock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_PS_MAL_Hellshock.LightProjectile_PS_MAL_Hellshock_C.OnRicochet
// 0x00A8 (0x00A8 - 0x0000)
struct LightProjectile_PS_MAL_Hellshock_C_OnRicochet final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0098(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_PS_MAL_Hellshock_C_OnRicochet) == 0x000008, "Wrong alignment on LightProjectile_PS_MAL_Hellshock_C_OnRicochet");
static_assert(sizeof(LightProjectile_PS_MAL_Hellshock_C_OnRicochet) == 0x0000A8, "Wrong size on LightProjectile_PS_MAL_Hellshock_C_OnRicochet");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnRicochet, Projectile) == 0x000000, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnRicochet::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnRicochet, Hit) == 0x000008, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnRicochet::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnRicochet, ImpactVelocity) == 0x000098, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnRicochet::ImpactVelocity' has a wrong offset!");

// Function LightProjectile_PS_MAL_Hellshock.LightProjectile_PS_MAL_Hellshock_C.OnLifetimeExpired
// 0x01A8 (0x01A8 - 0x0000)
struct LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImpactData*                            ImapctDefOverride;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DmgType;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0040(0x0020)(NoDestructor)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0068(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired) == 0x0001A8, "Wrong size on LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, ImapctDefOverride) == 0x000008, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::ImapctDefOverride' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, DmgType) == 0x000010, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::DmgType' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000018, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_GetInstigator_ReturnValue) == 0x000020, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_GetModifierValue_ReturnValue) == 0x000028, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_GetModifierType_ReturnValue) == 0x000038, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000040, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, CallFunc_GetSource_ReturnValue) == 0x000060, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000068, "Member 'LightProjectile_PS_MAL_Hellshock_C_OnLifetimeExpired::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

