#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_Siren_PhaseTrance_Transfer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer
// 0x0038 (0x0038 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility_PhaseTrance*          K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PackActivationComboDataForReplication_ReturnValue; // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGraspDuration_Res;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyPhaseLockToTarget_bRes;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer) == 0x000038, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, EntryPoint) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance) == 0x000008, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, CallFunc_PackActivationComboDataForReplication_ReturnValue) == 0x000020, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::CallFunc_PackActivationComboDataForReplication_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, CallFunc_GetGraspDuration_Res) == 0x00002C, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::CallFunc_GetGraspDuration_Res' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, CallFunc_ApplyPhaseLockToTarget_bRes) == 0x000030, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::CallFunc_ApplyPhaseLockToTarget_bRes' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer, CallFunc_HasAuthority_ReturnValue) == 0x000031, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_ExecuteUbergraph_Projectile_Siren_PhaseTrance_Transfer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.PlayExplosionEffect
// 0x0050 (0x0050 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect final
{
public:
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_GetPhaseTranceElementType_ReturnValue;    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect) == 0x000050, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, Temp_byte_Variable) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, Temp_object_Variable) == 0x000008, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, Temp_object_Variable1) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, Temp_object_Variable2) == 0x000018, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, Temp_object_Variable3) == 0x000020, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, Temp_object_Variable4) == 0x000028, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, CallFunc_GetPhaseTranceElementType_ReturnValue) == 0x00003C, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::CallFunc_GetPhaseTranceElementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, K2Node_Select_Default) == 0x000040, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000048, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_PlayExplosionEffect::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.SetTransferParticle
// 0x0080 (0x0080 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle final
{
public:
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_BreakPhaseTranceElementData_ElementType;  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_BreakPhaseTranceElementData_DamageType;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceElementData_DamageCoefficientData; // 0x0040(0x0038)(NoDestructor)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle) == 0x000080, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, Temp_byte_Variable) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, Temp_object_Variable) == 0x000008, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, Temp_object_Variable1) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, Temp_object_Variable2) == 0x000018, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, Temp_object_Variable3) == 0x000020, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, Temp_object_Variable4) == 0x000028, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, CallFunc_BreakPhaseTranceElementData_ElementType) == 0x000030, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::CallFunc_BreakPhaseTranceElementData_ElementType' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, CallFunc_BreakPhaseTranceElementData_DamageType) == 0x000038, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::CallFunc_BreakPhaseTranceElementData_DamageType' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, CallFunc_BreakPhaseTranceElementData_DamageCoefficientData) == 0x000040, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::CallFunc_BreakPhaseTranceElementData_DamageCoefficientData' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle, K2Node_Select_Default) == 0x000078, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetTransferParticle::K2Node_Select_Default' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.GetGraspDuration
// 0x0020 (0x0020 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration final
{
public:
	float                                         Res;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility_PhaseTrance*          K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakResourcePoolReference_bValid;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakResourcePoolReference_CurrentValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MinValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MaxValue;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration) == 0x000020, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, Res) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::Res' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance) == 0x000008, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, CallFunc_BreakResourcePoolReference_bValid) == 0x000011, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::CallFunc_BreakResourcePoolReference_bValid' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, CallFunc_BreakResourcePoolReference_CurrentValue) == 0x000014, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::CallFunc_BreakResourcePoolReference_CurrentValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, CallFunc_BreakResourcePoolReference_MinValue) == 0x000018, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::CallFunc_BreakResourcePoolReference_MinValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration, CallFunc_BreakResourcePoolReference_MaxValue) == 0x00001C, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_GetGraspDuration::CallFunc_BreakResourcePoolReference_MaxValue' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.SetNewHomingTarget
// 0x0008 (0x0008 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget final
{
public:
	class AActor*                                 NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget) == 0x000008, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget, NewTarget) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_SetNewHomingTarget::NewTarget' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.DetachFromOldHomingTarget
// 0x0020 (0x0020 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget final
{
public:
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UOakDamageComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget) == 0x000020, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_DetachFromOldHomingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.AttachToNewHomingTarget
// 0x0020 (0x0020 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget final
{
public:
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UOakDamageComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget) == 0x000020, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_AttachToNewHomingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Projectile_Siren_PhaseTrance_Transfer.Projectile_Siren_PhaseTrance_Transfer_C.OnHomingTargetDied
// 0x00D8 (0x00D8 - 0x0000)
struct Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied final
{
public:
	class AActor*                                 Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        FindNewTargetQuery;                                // 0x0010(0x00B8)(Edit, BlueprintVisible, ContainsInstancedReference)
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied) == 0x000008, "Wrong alignment on Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied");
static_assert(sizeof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied) == 0x0000D8, "Wrong size on Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied, Receiver) == 0x000000, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied::Receiver' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied, Causer) == 0x000008, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied::Causer' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied, FindNewTargetQuery) == 0x000010, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied::FindNewTargetQuery' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x0000C8, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x0000D0, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'Projectile_Siren_PhaseTrance_Transfer_C_OnHomingTargetDied::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

