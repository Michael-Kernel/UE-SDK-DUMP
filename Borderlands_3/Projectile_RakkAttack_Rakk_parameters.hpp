#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_RakkAttack_Rakk

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.ExecuteUbergraph_Projectile_RakkAttack_Rakk
// 0x0320 (0x0320 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            K2Node_CustomEvent_EndState1;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor1;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGbxActionEndState EndState, class AActor* Actor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	EGbxActionEndState                            K2Node_CustomEvent_EndState;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGbxActionEndState EndState, class AActor* Actor)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 Temp_object_Variable1;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            Temp_byte_Variable1;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0070(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0100(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0204(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WantsNiceCleanup;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0218(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 K2Node_Event_NewHomingTarget;                      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayTask_PlayGbxAction*            CallFunc_PlayGbxAction_ReturnValue;                // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageReceiver;                 // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRuntimeMod_ReturnValue;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_NewHomingTarget;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_TouchingActor;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsPlayer;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_ComponentTouched;       // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0288(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0298(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x02B0(0x0018)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Beastmaster_C*              K2Node_DynamicCast_AsBPEvent_Hub_Beastmaster;      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x02E8(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable1;                             // 0x02F8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayTask_PlayGbxAction*            CallFunc_PlayGbxAction_ReturnValue1;               // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk) == 0x000320, "Wrong size on Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, EntryPoint) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::EntryPoint' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_EndState1) == 0x000004, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_EndState1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_Actor1) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_Actor1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_object_Variable) == 0x000020, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_byte_Variable) == 0x000028, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CreateDelegate_OutputDelegate1) == 0x000030, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_EndState) == 0x000040, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_EndState' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_Actor) == 0x000048, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CreateDelegate_OutputDelegate2) == 0x000050, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_object_Variable1) == 0x000060, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_byte_Variable1) == 0x000068, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_bool_IsClosed_Variable) == 0x000069, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_bool_Has_Been_Initd_Variable) == 0x00006A, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_bool_Has_Been_Initd_Variable1) == 0x00006B, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_Event_Hit1) == 0x000070, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_Event_Hit) == 0x000100, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_bBlockingHit) == 0x000190, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_bInitialOverlap) == 0x000191, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_Time) == 0x000194, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_Distance) == 0x000198, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_Location) == 0x00019C, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_Normal) == 0x0001B4, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_FaceIndex) == 0x0001F4, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_TraceStart) == 0x0001F8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BreakHitResult_TraceEnd) == 0x000204, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_WantsNiceCleanup) == 0x000210, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_WantsNiceCleanup' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_struct_Variable) == 0x000218, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_Event_NewHomingTarget) == 0x000228, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_Event_NewHomingTarget' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_PlayGbxAction_ReturnValue) == 0x000230, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_PlayGbxAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_DamageReceiver) == 0x000240, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_DamageCauser) == 0x000248, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_IsServer_ReturnValue) == 0x000250, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_Not_PreBool_ReturnValue) == 0x000251, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BooleanAND_ReturnValue) == 0x000252, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_bool_IsClosed_Variable1) == 0x000253, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_HasRuntimeMod_ReturnValue) == 0x000254, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_HasRuntimeMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_BooleanAND_ReturnValue1) == 0x000255, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_Delay) == 0x000258, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CustomEvent_NewHomingTarget) == 0x000260, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CustomEvent_NewHomingTarget' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_Not_PreBool_ReturnValue1) == 0x000268, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_ComponentBoundEvent_TouchingActor) == 0x000270, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_ComponentBoundEvent_TouchingActor' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_ComponentBoundEvent_bIsPlayer) == 0x000278, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_ComponentBoundEvent_bIsPlayer' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_ComponentBoundEvent_ComponentTouched) == 0x000280, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_ComponentBoundEvent_ComponentTouched' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000288, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_PostEventAtLocation_ReturnValue) == 0x000298, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_PostWwiseEvent_ReturnValue) == 0x0002B0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_GetOwner_ReturnValue) == 0x0002C8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_GetComponentByClass_ReturnValue) == 0x0002D0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_DynamicCast_AsBPEvent_Hub_Beastmaster) == 0x0002D8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_DynamicCast_AsBPEvent_Hub_Beastmaster' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, K2Node_CreateDelegate_OutputDelegate3) == 0x0002E8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, Temp_struct_Variable1) == 0x0002F8, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_IsValid_ReturnValue1) == 0x000308, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_PlayGbxAction_ReturnValue1) == 0x000310, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_PlayGbxAction_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk, CallFunc_IsValid_ReturnValue2) == 0x000318, "Member 'Projectile_RakkAttack_Rakk_C_ExecuteUbergraph_Projectile_RakkAttack_Rakk::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk
// 0x0018 (0x0018 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk final
{
public:
	class AActor*                                 TouchingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayer;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        ComponentTouched;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk) == 0x000018, "Wrong size on Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk, TouchingActor) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk::TouchingActor' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk, bIsPlayer) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk::bIsPlayer' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk, ComponentTouched) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_BndEvt__DamageTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Projectile_RakkAttack_Rakk::ComponentTouched' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetNewHomingTargetWithDelay
// 0x0010 (0x0010 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NewHomingTarget;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay) == 0x000010, "Wrong size on Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay, Delay) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay::Delay' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay, NewHomingTarget) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_SetNewHomingTargetWithDelay::NewHomingTarget' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.OnDeath_ProjectileHomingTarget
// 0x0010 (0x0010 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget final
{
public:
	class AActor*                                 DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget) == 0x000010, "Wrong size on Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget, DamageReceiver) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget::DamageReceiver' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget, DamageCauser) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_OnDeath_ProjectileHomingTarget::DamageCauser' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetNewHomingTarget
// 0x0008 (0x0008 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetNewHomingTarget final
{
public:
	class AActor*                                 NewHomingTarget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetNewHomingTarget) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetNewHomingTarget");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetNewHomingTarget) == 0x000008, "Wrong size on Projectile_RakkAttack_Rakk_C_SetNewHomingTarget");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetNewHomingTarget, NewHomingTarget) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetNewHomingTarget::NewHomingTarget' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.DoRakkDestroyCleanup
// 0x0001 (0x0001 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup final
{
public:
	bool                                          WantsNiceCleanup;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup) == 0x000001, "Wrong alignment on Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup) == 0x000001, "Wrong size on Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup, WantsNiceCleanup) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDestroyCleanup::WantsNiceCleanup' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.OnHitWorld
// 0x0090 (0x0090 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_OnHitWorld final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_OnHitWorld) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_OnHitWorld");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_OnHitWorld) == 0x000090, "Wrong size on Projectile_RakkAttack_Rakk_C_OnHitWorld");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnHitWorld, Hit) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_OnHitWorld::Hit' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.OnHitDamagableObject
// 0x0090 (0x0090 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_OnHitDamagableObject final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_OnHitDamagableObject) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_OnHitDamagableObject");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_OnHitDamagableObject) == 0x000090, "Wrong size on Projectile_RakkAttack_Rakk_C_OnHitDamagableObject");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnHitDamagableObject, Hit) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_OnHitDamagableObject::Hit' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.OnEnd_D54427794086CD24870288B0EF46744B
// 0x0010 (0x0010 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B final
{
public:
	EGbxActionEndState                            EndState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B) == 0x000010, "Wrong size on Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B, EndState) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B::EndState' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B, Actor) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_OnEnd_D54427794086CD24870288B0EF46744B::Actor' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.OnEnd_A3A042B947729CE01D4C998DA75FCBF4
// 0x0010 (0x0010 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4 final
{
public:
	EGbxActionEndState                            EndState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4) == 0x000010, "Wrong size on Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4, EndState) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4::EndState' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4, Actor) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_OnEnd_A3A042B947729CE01D4C998DA75FCBF4::Actor' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.DoRakkDamage
// 0x0150 (0x0150 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_DoRakkDamage final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UExplosionData*                         Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle;            // 0x0030(0x0018)(NoDestructor)
	struct FDataTableValueHandle                  K2Node_MakeStruct_DataTableValueHandle1;           // 0x0048(0x0018)(NoDestructor)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0068(0x0010)(NoDestructor)
	struct FCauseDamageStatusEffectOverrides      K2Node_MakeStruct_CauseDamageStatusEffectOverrides; // 0x0078(0x001C)(NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0098(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasRuntimeMod_ReturnValue;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRuntimeMod_ReturnValue1;               // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UExplosionData*                         K2Node_Select_Default;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select1_Default;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromAttributeDefinedRow_ReturnValue; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_DoRakkDamage) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_DoRakkDamage");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_DoRakkDamage) == 0x000150, "Wrong size on Projectile_RakkAttack_Rakk_C_DoRakkDamage");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_bool_Variable) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_object_Variable) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_object_Variable1) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_bool_Variable1) == 0x000018, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_class_Variable) == 0x000020, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_class_Variable1) == 0x000028, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, K2Node_MakeStruct_DataTableValueHandle) == 0x000030, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::K2Node_MakeStruct_DataTableValueHandle' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, K2Node_MakeStruct_DataTableValueHandle1) == 0x000048, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::K2Node_MakeStruct_DataTableValueHandle1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000060, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x000064, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, K2Node_MakeStruct_DataTableRowHandle) == 0x000068, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, K2Node_MakeStruct_CauseDamageStatusEffectOverrides) == 0x000078, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::K2Node_MakeStruct_CauseDamageStatusEffectOverrides' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, Temp_struct_Variable) == 0x000098, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, CallFunc_HasRuntimeMod_ReturnValue) == 0x000128, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::CallFunc_HasRuntimeMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, CallFunc_HasRuntimeMod_ReturnValue1) == 0x000129, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::CallFunc_HasRuntimeMod_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, K2Node_Select_Default) == 0x000130, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, K2Node_Select1_Default) == 0x000138, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, CallFunc_GetOwner_ReturnValue) == 0x000140, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoRakkDamage, CallFunc_GetValueFromAttributeDefinedRow_ReturnValue) == 0x000148, "Member 'Projectile_RakkAttack_Rakk_C_DoRakkDamage::CallFunc_GetValueFromAttributeDefinedRow_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetHomingAndLocation
// 0x0080 (0x0080 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetHomingAndLocation final
{
public:
	class AActor*                                 NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakDamageComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetActorSocket_ReturnValue;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation) == 0x000010, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetHomingAndLocation");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation) == 0x000080, "Wrong size on Projectile_RakkAttack_Rakk_C_SetHomingAndLocation");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, NewTarget) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::NewTarget' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, CallFunc_GetActorSocket_ReturnValue) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::CallFunc_GetActorSocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, CallFunc_BreakTransform_Location) == 0x000044, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocation, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.InitAudio
// 0x0018 (0x0018 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_InitAudio final
{
public:
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_InitAudio) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_InitAudio");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_InitAudio) == 0x000018, "Wrong size on Projectile_RakkAttack_Rakk_C_InitAudio");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_InitAudio, CallFunc_PostWwiseEvent_ReturnValue) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_InitAudio::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetupMod1Transfusion
// 0x0001 (0x0001 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion final
{
public:
	bool                                          CallFunc_HasRuntimeMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion) == 0x000001, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion) == 0x000001, "Wrong size on Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion, CallFunc_HasRuntimeMod_ReturnValue) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetupMod1Transfusion::CallFunc_HasRuntimeMod_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.DoPreDestroyCleanup
// 0x0018 (0x0018 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup final
{
public:
	bool                                          CallFunc_HasRuntimeMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue1;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup) == 0x000018, "Wrong size on Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup, CallFunc_HasRuntimeMod_ReturnValue) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup::CallFunc_HasRuntimeMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup, CallFunc_SpawnEmitterAttached_ReturnValue1) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_DoPreDestroyCleanup::CallFunc_SpawnEmitterAttached_ReturnValue1' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetupElementalMaterials
// 0x0010 (0x0010 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetupElementalMaterials final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PassiveParticle;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetupElementalMaterials) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetupElementalMaterials");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetupElementalMaterials) == 0x000010, "Wrong size on Projectile_RakkAttack_Rakk_C_SetupElementalMaterials");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetupElementalMaterials, Material) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetupElementalMaterials::Material' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetupElementalMaterials, PassiveParticle) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_SetupElementalMaterials::PassiveParticle' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetupRakkElement
// 0x0001 (0x0001 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetupRakkElement final
{
public:
	bool                                          CallFunc_HasRuntimeMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetupRakkElement) == 0x000001, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetupRakkElement");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetupRakkElement) == 0x000001, "Wrong size on Projectile_RakkAttack_Rakk_C_SetupRakkElement");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetupRakkElement, CallFunc_HasRuntimeMod_ReturnValue) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetupRakkElement::CallFunc_HasRuntimeMod_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.HasHomingTarget
// 0x0002 (0x0002 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_HasHomingTarget final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_HasHomingTarget) == 0x000001, "Wrong alignment on Projectile_RakkAttack_Rakk_C_HasHomingTarget");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_HasHomingTarget) == 0x000002, "Wrong size on Projectile_RakkAttack_Rakk_C_HasHomingTarget");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_HasHomingTarget, bRes) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_HasHomingTarget::bRes' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_HasHomingTarget, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Projectile_RakkAttack_Rakk_C_HasHomingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.DoMod1Heal
// 0x00C8 (0x00C8 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_DoMod1Heal final
{
public:
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0018(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityAugmentSlotted_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_DoMod1Heal) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_DoMod1Heal");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_DoMod1Heal) == 0x0000C8, "Wrong size on Projectile_RakkAttack_Rakk_C_DoMod1Heal");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, Temp_bool_Has_Been_Initd_Variable) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, Temp_bool_IsClosed_Variable) == 0x000001, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_GetDataTableValue_OutValue) == 0x000004, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_GetDataTableValue_ReturnValue) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, Temp_struct_Variable) == 0x000018, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_GetInstigator_ReturnValue1) == 0x0000A8, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B0, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_GetValueOfAttribute_ReturnValue) == 0x0000B8, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_IsAbilityAugmentSlotted_ReturnValue) == 0x0000BC, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_IsAbilityAugmentSlotted_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_DoMod1Heal, CallFunc_BooleanAND_ReturnValue) == 0x0000C4, "Member 'Projectile_RakkAttack_Rakk_C_DoMod1Heal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.OnRep_bReturningToOwner
// 0x0002 (0x0002 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner) == 0x000001, "Wrong alignment on Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner) == 0x000002, "Wrong size on Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Projectile_RakkAttack_Rakk_C_OnRep_bReturningToOwner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.ReleaseCurrentHomingTarget
// 0x0020 (0x0020 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget final
{
public:
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UOakDamageComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget) == 0x000020, "Wrong size on Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Projectile_RakkAttack_Rakk_C_ReleaseCurrentHomingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.FindNewTarget
// 0x00E0 (0x00E0 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_FindNewTarget final
{
public:
	struct FEnvQueryParams                        EQS_NewOakCharacter;                               // 0x0000(0x00B8)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         CallFunc_RunEnvQueryForAllActors_ResultActors;     // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_RunEnvQueryForAllActors_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_ChooseTargetFromSet_Res;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_FindNewTarget) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_FindNewTarget");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_FindNewTarget) == 0x0000E0, "Wrong size on Projectile_RakkAttack_Rakk_C_FindNewTarget");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_FindNewTarget, EQS_NewOakCharacter) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_FindNewTarget::EQS_NewOakCharacter' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_FindNewTarget, CallFunc_RunEnvQueryForAllActors_ResultActors) == 0x0000B8, "Member 'Projectile_RakkAttack_Rakk_C_FindNewTarget::CallFunc_RunEnvQueryForAllActors_ResultActors' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_FindNewTarget, CallFunc_RunEnvQueryForAllActors_ReturnValue) == 0x0000C8, "Member 'Projectile_RakkAttack_Rakk_C_FindNewTarget::CallFunc_RunEnvQueryForAllActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_FindNewTarget, CallFunc_ChooseTargetFromSet_Res) == 0x0000D0, "Member 'Projectile_RakkAttack_Rakk_C_FindNewTarget::CallFunc_ChooseTargetFromSet_Res' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_FindNewTarget, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'Projectile_RakkAttack_Rakk_C_FindNewTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetHomingAndLocationWithDelay
// 0x0080 (0x0080 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay final
{
public:
	class AActor*                                 NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UOakDamageComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetActorSocket_ReturnValue;               // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay) == 0x000010, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay) == 0x000080, "Wrong size on Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, NewTarget) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::NewTarget' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, CallFunc_GetActorSocket_ReturnValue) == 0x000020, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::CallFunc_GetActorSocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, CallFunc_BreakTransform_Location) == 0x000050, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'Projectile_RakkAttack_Rakk_C_SetHomingAndLocationWithDelay::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.SetHitTarget
// 0x0010 (0x0010 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_SetHitTarget final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamAttitude                                 CallFunc_GetAttitudeTowardPlayer_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_SetHitTarget) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_SetHitTarget");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_SetHitTarget) == 0x000010, "Wrong size on Projectile_RakkAttack_Rakk_C_SetHitTarget");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, SourceActor) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::SourceActor' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, Temp_byte_Variable) == 0x000008, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, CallFunc_GetAttitudeTowardPlayer_ReturnValue) == 0x00000A, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::CallFunc_GetAttitudeTowardPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, Temp_bool_Variable) == 0x00000B, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, Temp_bool_Variable1) == 0x00000C, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, Temp_bool_Variable2) == 0x00000D, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_SetHitTarget, K2Node_Select_Default) == 0x00000E, "Member 'Projectile_RakkAttack_Rakk_C_SetHitTarget::K2Node_Select_Default' has a wrong offset!");

// Function Projectile_RakkAttack_Rakk.Projectile_RakkAttack_Rakk_C.ChooseTargetFromSet
// 0x0038 (0x0038 - 0x0000)
struct Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet final
{
public:
	TArray<class AActor*>                         SetRef;                                            // 0x0000(0x0010)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 Res;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandStream;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet) == 0x000008, "Wrong alignment on Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet");
static_assert(sizeof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet) == 0x000038, "Wrong size on Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, SetRef) == 0x000000, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::SetRef' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, Res) == 0x000010, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::Res' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, RandStream) == 0x000018, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::RandStream' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000028, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet, CallFunc_Array_Get_Item) == 0x000030, "Member 'Projectile_RakkAttack_Rakk_C_ChooseTargetFromSet::CallFunc_Array_Get_Item' has a wrong offset!");

}

