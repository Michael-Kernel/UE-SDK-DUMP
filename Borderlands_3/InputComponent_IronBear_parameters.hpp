#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputComponent_IronBear

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function InputComponent_IronBear.InputComponent_IronBear_C.ExecuteUbergraph_InputComponent_IronBear
// 0x0060 (0x0060 - 0x0000)
struct InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Val1;                           // 0x0004(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGamepad1;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Val;                            // 0x0014(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGamepad;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsePromptEnabled_Res;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsePromptEnabled_Res1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_IronBear*                 K2Node_DynamicCast_AsOak_Character_Iron_Bear;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_GbxInputEvent_OakMoveAxis_Val;              // 0x003C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_GbxInputEvent_OakMoveAxis_bGamepad;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_GbxInputEvent_OakLookAxis_Val;              // 0x004C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_GbxInputEvent_OakLookAxis_bGamepad;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear) == 0x000008, "Wrong alignment on InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear");
static_assert(sizeof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear) == 0x000060, "Wrong size on InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, EntryPoint) == 0x000000, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::EntryPoint' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_CustomEvent_Val1) == 0x000004, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_CustomEvent_Val1' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_CustomEvent_bGamepad1) == 0x000010, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_CustomEvent_bGamepad1' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_CustomEvent_Val) == 0x000014, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_CustomEvent_Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_CustomEvent_bGamepad) == 0x000020, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_CustomEvent_bGamepad' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, CallFunc_IsUsePromptEnabled_Res) == 0x000021, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::CallFunc_IsUsePromptEnabled_Res' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, CallFunc_IsUsePromptEnabled_Res1) == 0x000022, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::CallFunc_IsUsePromptEnabled_Res1' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_DynamicCast_AsOak_Character_Iron_Bear) == 0x000030, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_DynamicCast_AsOak_Character_Iron_Bear' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_GbxInputEvent_OakMoveAxis_Val) == 0x00003C, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_GbxInputEvent_OakMoveAxis_Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_GbxInputEvent_OakMoveAxis_bGamepad) == 0x000048, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_GbxInputEvent_OakMoveAxis_bGamepad' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_GbxInputEvent_OakLookAxis_Val) == 0x00004C, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_GbxInputEvent_OakLookAxis_Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear, K2Node_GbxInputEvent_OakLookAxis_bGamepad) == 0x000058, "Member 'InputComponent_IronBear_C_ExecuteUbergraph_InputComponent_IronBear::K2Node_GbxInputEvent_OakLookAxis_bGamepad' has a wrong offset!");

// Function InputComponent_IronBear.InputComponent_IronBear_C.GbxInputEvent_5
// 0x0010 (0x0010 - 0x0000)
struct InputComponent_IronBear_C_GbxInputEvent_5 final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamePad;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_IronBear_C_GbxInputEvent_5) == 0x000004, "Wrong alignment on InputComponent_IronBear_C_GbxInputEvent_5");
static_assert(sizeof(InputComponent_IronBear_C_GbxInputEvent_5) == 0x000010, "Wrong size on InputComponent_IronBear_C_GbxInputEvent_5");
static_assert(offsetof(InputComponent_IronBear_C_GbxInputEvent_5, Val) == 0x000000, "Member 'InputComponent_IronBear_C_GbxInputEvent_5::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_GbxInputEvent_5, bGamePad) == 0x00000C, "Member 'InputComponent_IronBear_C_GbxInputEvent_5::bGamePad' has a wrong offset!");

// Function InputComponent_IronBear.InputComponent_IronBear_C.GbxInputEvent_3
// 0x0010 (0x0010 - 0x0000)
struct InputComponent_IronBear_C_GbxInputEvent_3 final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamePad;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_IronBear_C_GbxInputEvent_3) == 0x000004, "Wrong alignment on InputComponent_IronBear_C_GbxInputEvent_3");
static_assert(sizeof(InputComponent_IronBear_C_GbxInputEvent_3) == 0x000010, "Wrong size on InputComponent_IronBear_C_GbxInputEvent_3");
static_assert(offsetof(InputComponent_IronBear_C_GbxInputEvent_3, Val) == 0x000000, "Member 'InputComponent_IronBear_C_GbxInputEvent_3::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_GbxInputEvent_3, bGamePad) == 0x00000C, "Member 'InputComponent_IronBear_C_GbxInputEvent_3::bGamePad' has a wrong offset!");

// Function InputComponent_IronBear.InputComponent_IronBear_C.K2Node_GbxInputEvent_OakLookAxis_6_def_exec
// 0x0010 (0x0010 - 0x0000)
struct InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamePad;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec) == 0x000004, "Wrong alignment on InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec");
static_assert(sizeof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec) == 0x000010, "Wrong size on InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec");
static_assert(offsetof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec, Val) == 0x000000, "Member 'InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec, bGamePad) == 0x00000C, "Member 'InputComponent_IronBear_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec::bGamePad' has a wrong offset!");

// Function InputComponent_IronBear.InputComponent_IronBear_C.K2Node_GbxInputEvent_OakMoveAxis_0_def_exec
// 0x0010 (0x0010 - 0x0000)
struct InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamePad;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec) == 0x000004, "Wrong alignment on InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec");
static_assert(sizeof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec) == 0x000010, "Wrong size on InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec");
static_assert(offsetof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec, Val) == 0x000000, "Member 'InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec, bGamePad) == 0x00000C, "Member 'InputComponent_IronBear_C_K2Node_GbxInputEvent_OakMoveAxis_0_def_exec::bGamePad' has a wrong offset!");

// Function InputComponent_IronBear.InputComponent_IronBear_C.IsUsePromptEnabled
// 0x0020 (0x0020 - 0x0000)
struct InputComponent_IronBear_C_IsUsePromptEnabled final
{
public:
	EUsabilityType                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Res;                                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUseComponent*                          CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanInteractWithCurrentUsable_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_IronBear_C_IsUsePromptEnabled) == 0x000008, "Wrong alignment on InputComponent_IronBear_C_IsUsePromptEnabled");
static_assert(sizeof(InputComponent_IronBear_C_IsUsePromptEnabled) == 0x000020, "Wrong size on InputComponent_IronBear_C_IsUsePromptEnabled");
static_assert(offsetof(InputComponent_IronBear_C_IsUsePromptEnabled, Type) == 0x000000, "Member 'InputComponent_IronBear_C_IsUsePromptEnabled::Type' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_IsUsePromptEnabled, Res) == 0x000001, "Member 'InputComponent_IronBear_C_IsUsePromptEnabled::Res' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_IsUsePromptEnabled, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'InputComponent_IronBear_C_IsUsePromptEnabled::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_IsUsePromptEnabled, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'InputComponent_IronBear_C_IsUsePromptEnabled::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_IsUsePromptEnabled, CallFunc_CanInteractWithCurrentUsable_ReturnValue) == 0x000018, "Member 'InputComponent_IronBear_C_IsUsePromptEnabled::CallFunc_CanInteractWithCurrentUsable_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_IronBear_C_IsUsePromptEnabled, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'InputComponent_IronBear_C_IsUsePromptEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

