#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_DoubleTap_Cryo

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_DoubleTap_Cryo.LightProjectile_DoubleTap_Cryo_C.OnLifetimeExpired
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired) == 0x000008, "Wrong size on LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_DoubleTap_Cryo_C_OnLifetimeExpired::Projectile' has a wrong offset!");

// Function LightProjectile_DoubleTap_Cryo.LightProjectile_DoubleTap_Cryo_C.OnBegin
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_DoubleTap_Cryo_C_OnBegin final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_DoubleTap_Cryo_C_OnBegin) == 0x000008, "Wrong alignment on LightProjectile_DoubleTap_Cryo_C_OnBegin");
static_assert(sizeof(LightProjectile_DoubleTap_Cryo_C_OnBegin) == 0x000008, "Wrong size on LightProjectile_DoubleTap_Cryo_C_OnBegin");
static_assert(offsetof(LightProjectile_DoubleTap_Cryo_C_OnBegin, Projectile) == 0x000000, "Member 'LightProjectile_DoubleTap_Cryo_C_OnBegin::Projectile' has a wrong offset!");

// Function LightProjectile_DoubleTap_Cryo.LightProjectile_DoubleTap_Cryo_C.OnDamage
// 0x00A0 (0x00A0 - 0x0000)
struct LightProjectile_DoubleTap_Cryo_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_DoubleTap_Cryo_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_DoubleTap_Cryo_C_OnDamage");
static_assert(sizeof(LightProjectile_DoubleTap_Cryo_C_OnDamage) == 0x0000A0, "Wrong size on LightProjectile_DoubleTap_Cryo_C_OnDamage");
static_assert(offsetof(LightProjectile_DoubleTap_Cryo_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_DoubleTap_Cryo_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_DoubleTap_Cryo_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_DoubleTap_Cryo_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_DoubleTap_Cryo_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_DoubleTap_Cryo_C_OnDamage::bCritical' has a wrong offset!");

}

