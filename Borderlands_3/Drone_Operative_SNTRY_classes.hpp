#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Drone_Operative_SNTRY

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Drone_Operative_SNTRY.Drone_Operative_SNTRY_C
// 0x00C8 (0x0D98 - 0x0CD0)
class ADrone_Operative_SNTRY_C final : public AOakDroneProjectile_GRMLN
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CD0(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   SNTRYAudioComponent;                               // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RocketL;                                           // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RightMG;                                           // 0x0CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LeftMG;                                            // 0x0CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              GbxSkeletalMesh;                                   // 0x0CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PrimaryFX;                                         // 0x0D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               StaticField;                                       // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DronePhase_Progress_B40E67134F63C129CB1640B226127C26; // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DronePhase__Direction_B40E67134F63C129CB1640B226127C26; // 0x0D14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D15[0x3];                                      // 0x0D15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DronePhase;                                        // 0x0D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DigistructOut_Progress_979B4DD94042AA50076C24A0A27F66B4; // 0x0D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DigistructOut__Direction_979B4DD94042AA50076C24A0A27F66B4; // 0x0D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D25[0x3];                                      // 0x0D25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DigistructOut;                                     // 0x0D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CalledShotTransforms;                              // 0x0D30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                         CalledShotCount;                                   // 0x0D40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CalledShotsRemaining;                              // 0x0D44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CalledShotLocation;                                // 0x0D48(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCryoEmitterEnabled;                               // 0x0D54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D55[0x3];                                      // 0x0D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  DroneDuration;                                     // 0x0D58(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UMaterialInstanceDynamic*               GlowMatInstance;                                   // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaskMatInstance;                                   // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  AlmightyOrdance_Rockets;                           // 0x0D80(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_Drone_Operative_SNTRY(int32 EntryPoint);
	void HaltDronePhase();
	void SetDronePhasing(bool bPhasing);
	void OnCalledShotKill(class AActor* KilledActor);
	void DoNextCalledShot();
	void OnCalledShotActivated(const struct FVector& Location);
	void DoDroneDelivery();
	void DoGracefulShutdown();
	void OnShutdownGracefully();
	void SetupMods();
	void ReceiveBeginPlay();
	void ApplyCollisionDamageToTarget(class AActor* Target);
	void StartDigistructOut();
	void BndEvt__DroneMovement_K2Node_ComponentBoundEvent_0_SimpleDroneMovementComponentSignature__DelegateSignature_Drone_Operative_SNTRY(bool bIsBoosting);
	void DronePhase__UpdateFunc();
	void DronePhase__FinishedFunc();
	void DigistructOut__UpdateFunc();
	void DigistructOut__FinishedFunc();
	void UserConstructionScript();
	void DropPayload();
	void SetExhaustFXEnabled(bool bIsEnabled);
	void GetMoveDelayForTarget(float* Res);
	void CauseCollisionDamageToEnemy(class AActor* Enemy);
	void SetupCryoBullets();
	void SetupStaticField();
	void SetupCalledShot(const struct FVector& Location);
	void AdvanceCalledShotCount(bool* bIsValid);
	void RefundDuration(float Val);
	void DispatchCalledShotRestorationParticles(class AActor* KilledTarget);
	void RegisterDelegates();
	void OnSimCalledShotRelease();
	void ConfigureCryoEmitter();
	void ConfigureDigistruct();

	class AActor* FindNewTargetAutonomous() const;
	void CreateBadDoseBeamToTarget(class AActor* TargetActor, class FName BeamName) const;
	void CreateStaticFieldBeamToTarget(class AActor* TargetActor, class FName BeamName) const;
	void ApplyShieldDamageRefund(class AActor* CurrentTarget, const struct FVector& LastDamageLocation, float TotalRefund) const;
	bool HasValidDroneTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Drone_Operative_SNTRY_C">();
	}
	static class ADrone_Operative_SNTRY_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADrone_Operative_SNTRY_C>();
	}
};
static_assert(alignof(ADrone_Operative_SNTRY_C) == 0x000008, "Wrong alignment on ADrone_Operative_SNTRY_C");
static_assert(sizeof(ADrone_Operative_SNTRY_C) == 0x000D98, "Wrong size on ADrone_Operative_SNTRY_C");
static_assert(offsetof(ADrone_Operative_SNTRY_C, UberGraphFrame) == 0x000CD0, "Member 'ADrone_Operative_SNTRY_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, SNTRYAudioComponent) == 0x000CD8, "Member 'ADrone_Operative_SNTRY_C::SNTRYAudioComponent' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, RocketL) == 0x000CE0, "Member 'ADrone_Operative_SNTRY_C::RocketL' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, RightMG) == 0x000CE8, "Member 'ADrone_Operative_SNTRY_C::RightMG' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, LeftMG) == 0x000CF0, "Member 'ADrone_Operative_SNTRY_C::LeftMG' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, GbxSkeletalMesh) == 0x000CF8, "Member 'ADrone_Operative_SNTRY_C::GbxSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, PrimaryFX) == 0x000D00, "Member 'ADrone_Operative_SNTRY_C::PrimaryFX' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, StaticField) == 0x000D08, "Member 'ADrone_Operative_SNTRY_C::StaticField' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DronePhase_Progress_B40E67134F63C129CB1640B226127C26) == 0x000D10, "Member 'ADrone_Operative_SNTRY_C::DronePhase_Progress_B40E67134F63C129CB1640B226127C26' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DronePhase__Direction_B40E67134F63C129CB1640B226127C26) == 0x000D14, "Member 'ADrone_Operative_SNTRY_C::DronePhase__Direction_B40E67134F63C129CB1640B226127C26' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DronePhase) == 0x000D18, "Member 'ADrone_Operative_SNTRY_C::DronePhase' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DigistructOut_Progress_979B4DD94042AA50076C24A0A27F66B4) == 0x000D20, "Member 'ADrone_Operative_SNTRY_C::DigistructOut_Progress_979B4DD94042AA50076C24A0A27F66B4' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DigistructOut__Direction_979B4DD94042AA50076C24A0A27F66B4) == 0x000D24, "Member 'ADrone_Operative_SNTRY_C::DigistructOut__Direction_979B4DD94042AA50076C24A0A27F66B4' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DigistructOut) == 0x000D28, "Member 'ADrone_Operative_SNTRY_C::DigistructOut' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, CalledShotTransforms) == 0x000D30, "Member 'ADrone_Operative_SNTRY_C::CalledShotTransforms' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, CalledShotCount) == 0x000D40, "Member 'ADrone_Operative_SNTRY_C::CalledShotCount' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, CalledShotsRemaining) == 0x000D44, "Member 'ADrone_Operative_SNTRY_C::CalledShotsRemaining' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, CalledShotLocation) == 0x000D48, "Member 'ADrone_Operative_SNTRY_C::CalledShotLocation' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, bCryoEmitterEnabled) == 0x000D54, "Member 'ADrone_Operative_SNTRY_C::bCryoEmitterEnabled' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, DroneDuration) == 0x000D58, "Member 'ADrone_Operative_SNTRY_C::DroneDuration' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, GlowMatInstance) == 0x000D70, "Member 'ADrone_Operative_SNTRY_C::GlowMatInstance' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, MaskMatInstance) == 0x000D78, "Member 'ADrone_Operative_SNTRY_C::MaskMatInstance' has a wrong offset!");
static_assert(offsetof(ADrone_Operative_SNTRY_C, AlmightyOrdance_Rockets) == 0x000D80, "Member 'ADrone_Operative_SNTRY_C::AlmightyOrdance_Rockets' has a wrong offset!");

}

