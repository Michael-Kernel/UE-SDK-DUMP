#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Player

#include "Basic.hpp"

#include "BPChar_Player_classes.hpp"
#include "BPChar_Player_parameters.hpp"


namespace SDK
{

// Function BPChar_Player.BPChar_Player_C.GroundSlam__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::GroundSlam__DelegateSignature(float Distance, float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "GroundSlam__DelegateSignature");

	Params::BPChar_Player_C_GroundSlam__DelegateSignature Parms{};

	Parms.Distance = Distance;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.ExecuteUbergraph_BPChar_Player
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::ExecuteUbergraph_BPChar_Player(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "ExecuteUbergraph_BPChar_Player");

	Params::BPChar_Player_C_ExecuteUbergraph_BPChar_Player Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.ServerStartZeroG
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::ServerStartZeroG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "ServerStartZeroG");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.EndZeroG
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::EndZeroG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "EndZeroG");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.StartZeroG
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::StartZeroG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "StartZeroG");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.Player_SpawnTransfusionProjectile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           DataBlueprint__Override_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DamageType__Override_                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer__Override_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::Player_SpawnTransfusionProjectile(class UClass* DataBlueprint__Override_, class UClass* DamageType__Override_, class AActor* SourceActor, class AActor* TargetActor, float Damage, class AActor* Causer__Override_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Player_SpawnTransfusionProjectile");

	Params::BPChar_Player_C_Player_SpawnTransfusionProjectile Parms{};

	Parms.DataBlueprint__Override_ = DataBlueprint__Override_;
	Parms.DamageType__Override_ = DamageType__Override_;
	Parms.SourceActor = SourceActor;
	Parms.TargetActor = TargetActor;
	Parms.Damage = Damage;
	Parms.Causer__Override_ = Causer__Override_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_PlayerBalanceEvent__DelegateSignature_BPChar_Player
// (BlueprintEvent)
// Parameters:
// int32                                   OldExperienceLevel                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewExperienceLevel                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_PlayerBalanceEvent__DelegateSignature_BPChar_Player(const int32 OldExperienceLevel, const int32 NewExperienceLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_PlayerBalanceEvent__DelegateSignature_BPChar_Player");

	Params::BPChar_Player_C_BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_PlayerBalanceEvent__DelegateSignature_BPChar_Player Parms{};

	Parms.OldExperienceLevel = OldExperienceLevel;
	Parms.NewExperienceLevel = NewExperienceLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.Player_LevelUp
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Old_XP_Level                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   New_XP_Level                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::Player_LevelUp(int32 Old_XP_Level, int32 New_XP_Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Player_LevelUp");

	Params::BPChar_Player_C_Player_LevelUp Parms{};

	Parms.Old_XP_Level = Old_XP_Level;
	Parms.New_XP_Level = New_XP_Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.Multikill Reset
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::Multikill_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Multikill Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.BndEvt__DamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Player
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UDamageComponent*                 Damaged                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDeathDetails              Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABPChar_Player_C::BndEvt__DamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Player(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "BndEvt__DamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Player");

	Params::BPChar_Player_C_BndEvt__DamageCauserComponent_K2Node_ComponentBoundEvent_1_CauseDeathDelegate__DelegateSignature_BPChar_Player Parms{};

	Parms.Damaged = Damaged;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_SimplePlayerBalanceEvent__DelegateSignature_BPChar_Player
// (BlueprintEvent)

void ABPChar_Player_C::BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_SimplePlayerBalanceEvent__DelegateSignature_BPChar_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "BndEvt__PlayerBalanceState_K2Node_ComponentBoundEvent_0_SimplePlayerBalanceEvent__DelegateSignature_BPChar_Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.GroundSlam_End
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::GroundSlam_End(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "GroundSlam_End");

	Params::BPChar_Player_C_GroundSlam_End Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.BndEvt__DamageComponent_K2Node_ComponentBoundEvent_11_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Player
// (BlueprintEvent)
// Parameters:
// class UDamageComponent*                 DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageCauserComponent*           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::BndEvt__DamageComponent_K2Node_ComponentBoundEvent_11_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Player(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "BndEvt__DamageComponent_K2Node_ComponentBoundEvent_11_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Player");

	Params::BPChar_Player_C_BndEvt__DamageComponent_K2Node_ComponentBoundEvent_11_DamageCompHealthDepletedDelegate__DelegateSignature_BPChar_Player Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPChar_Player_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "OnLanded");

	Params::BPChar_Player_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.OnJumped
// (Event, Public, BlueprintEvent)

void ABPChar_Player_C::OnJumped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "OnJumped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "ReceiveTick");

	Params::BPChar_Player_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPChar_Player_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.DoMelee
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::DoMelee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "DoMelee");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.OnInventoryPickedUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PickedUpActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::OnInventoryPickedUp(class AActor* PickedUpActor, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "OnInventoryPickedUp");

	Params::BPChar_Player_C_OnInventoryPickedUp Parms{};

	Parms.PickedUpActor = PickedUpActor;
	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.OnInventoryUnequipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InventoryActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventorySlotData*               SlotData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::OnInventoryUnequipped(class AActor* InventoryActor, class UInventorySlotData* SlotData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "OnInventoryUnequipped");

	Params::BPChar_Player_C_OnInventoryUnequipped Parms{};

	Parms.InventoryActor = InventoryActor;
	Parms.SlotData = SlotData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.OnInventoryEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InventoryActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventorySlotData*               SlotData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::OnInventoryEquipped(class AActor* InventoryActor, class UInventorySlotData* SlotData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "OnInventoryEquipped");

	Params::BPChar_Player_C_OnInventoryEquipped Parms{};

	Parms.InventoryActor = InventoryActor;
	Parms.SlotData = SlotData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.SetMissionDebugText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   TextSize_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     TextColor_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FacePlayer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPChar_Player_C::SetMissionDebugText(const class FText& Text_0, float TextSize_0, float Duration, const struct FLinearColor& TextColor_0, bool FacePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "SetMissionDebugText");

	Params::BPChar_Player_C_SetMissionDebugText Parms{};

	Parms.Text_0 = std::move(Text_0);
	Parms.TextSize_0 = TextSize_0;
	Parms.Duration = Duration;
	Parms.TextColor_0 = std::move(TextColor_0);
	Parms.FacePlayer = FacePlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.Enemy_OnThoughtLockStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::Enemy_OnThoughtLockStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Enemy_OnThoughtLockStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.Enemy_OnThoughtLockStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::Enemy_OnThoughtLockStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Enemy_OnThoughtLockStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.Enemy_OnPhaseLockStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::Enemy_OnPhaseLockStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Enemy_OnPhaseLockStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.Enemy_OnPhaseLockStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::Enemy_OnPhaseLockStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Enemy_OnPhaseLockStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.Player_HealthDepleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::Player_HealthDepleted(class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "Player_HealthDepleted");

	Params::BPChar_Player_C_Player_HealthDepleted Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.ClearTargetingTimers
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::ClearTargetingTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "ClearTargetingTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.GetHeadMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    HeadMesh                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::GetHeadMesh(class USkeletalMesh** HeadMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "GetHeadMesh");

	Params::BPChar_Player_C_GetHeadMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HeadMesh != nullptr)
		*HeadMesh = Parms.HeadMesh;
}


// Function BPChar_Player.BPChar_Player_C.BackupFriendlyTargeting
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::BackupFriendlyTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "BackupFriendlyTargeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.GroundSlamEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::GroundSlamEnd(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "GroundSlamEnd");

	Params::BPChar_Player_C_GroundSlamEnd Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPChar_Player.BPChar_Player_C.PlayLevelUpFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPChar_Player_C::PlayLevelUpFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "PlayLevelUpFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPChar_Player.BPChar_Player_C.GetTransfusionSpawnEndLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Res                                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::GetTransfusionSpawnEndLocation(class AActor* SourceActor, struct FVector* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "GetTransfusionSpawnEndLocation");

	Params::BPChar_Player_C_GetTransfusionSpawnEndLocation Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = std::move(Parms.Res);
}


// Function BPChar_Player.BPChar_Player_C.PreInventoryItemPickupCheck
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           PickupActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsedByInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AInventoryItemPickup*             WorldPickupActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABPChar_Player_C::PreInventoryItemPickupCheck(class AActor* PickupActor, int32 Quantity, bool UsedByInstigator, class AInventoryItemPickup* WorldPickupActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "PreInventoryItemPickupCheck");

	Params::BPChar_Player_C_PreInventoryItemPickupCheck Parms{};

	Parms.PickupActor = PickupActor;
	Parms.Quantity = Quantity;
	Parms.UsedByInstigator = UsedByInstigator;
	Parms.WorldPickupActor = WorldPickupActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPChar_Player.BPChar_Player_C.GetLevelUpFXAttachComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*                  Res                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Player_C::GetLevelUpFXAttachComponent(class USceneComponent** Res) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Player_C", "GetLevelUpFXAttachComponent");

	Params::BPChar_Player_C_GetLevelUpFXAttachComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}

}

