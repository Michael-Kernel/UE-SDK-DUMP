#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_HOTSpring

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Proj_HOTSpring.Proj_HOTSpring_C.ExecuteUbergraph_Proj_HOTSpring
// 0x0248 (0x0248 - 0x0000)
struct Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0018(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x00A8(0x0018)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0110(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x01A8(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring) == 0x000008, "Wrong alignment on Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring");
static_assert(sizeof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring) == 0x000248, "Wrong size on Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, EntryPoint) == 0x000000, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, Temp_struct_Variable) == 0x000018, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_PostAttachedEvent_ReturnValue) == 0x0000A8, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_GetOwner_ReturnValue2) == 0x0000C0, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_GetValueOfAttribute_ReturnValue) == 0x0000C8, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_MyComp) == 0x0000D0, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_Other) == 0x0000D8, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_OtherComp) == 0x0000E0, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_bSelfMoved) == 0x0000E8, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_HitLocation) == 0x0000EC, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_HitNormal) == 0x0000F8, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_NormalImpulse) == 0x000104, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_Hit1) == 0x000110, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A0, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, K2Node_Event_Hit) == 0x0001A8, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_GetOwner_ReturnValue3) == 0x000238, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring, CallFunc_GetOwner_ReturnValue4) == 0x000240, "Member 'Proj_HOTSpring_C_ExecuteUbergraph_Proj_HOTSpring::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");

// Function Proj_HOTSpring.Proj_HOTSpring_C.OnHitWorld
// 0x0090 (0x0090 - 0x0000)
struct Proj_HOTSpring_C_OnHitWorld final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_HOTSpring_C_OnHitWorld) == 0x000008, "Wrong alignment on Proj_HOTSpring_C_OnHitWorld");
static_assert(sizeof(Proj_HOTSpring_C_OnHitWorld) == 0x000090, "Wrong size on Proj_HOTSpring_C_OnHitWorld");
static_assert(offsetof(Proj_HOTSpring_C_OnHitWorld, Hit) == 0x000000, "Member 'Proj_HOTSpring_C_OnHitWorld::Hit' has a wrong offset!");

// Function Proj_HOTSpring.Proj_HOTSpring_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct Proj_HOTSpring_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_HOTSpring_C_ReceiveHit) == 0x000008, "Wrong alignment on Proj_HOTSpring_C_ReceiveHit");
static_assert(sizeof(Proj_HOTSpring_C_ReceiveHit) == 0x0000D0, "Wrong size on Proj_HOTSpring_C_ReceiveHit");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, MyComp) == 0x000000, "Member 'Proj_HOTSpring_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, Other) == 0x000008, "Member 'Proj_HOTSpring_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Proj_HOTSpring_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Proj_HOTSpring_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'Proj_HOTSpring_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, HitNormal) == 0x000028, "Member 'Proj_HOTSpring_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'Proj_HOTSpring_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_HOTSpring_C_ReceiveHit, Hit) == 0x000040, "Member 'Proj_HOTSpring_C_ReceiveHit::Hit' has a wrong offset!");

}

