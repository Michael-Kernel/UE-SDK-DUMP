#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BpChar_Claptrap

#include "Basic.hpp"

#include "BpChar_Claptrap_classes.hpp"
#include "BpChar_Claptrap_parameters.hpp"


namespace SDK
{

// Function BpChar_Claptrap.BPChar_Claptrap_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.BndEvt__Usable_K2Node_ComponentBoundEvent_24_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Typhon_UNIX1509007700
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Claptrap_C::BndEvt__Usable_K2Node_ComponentBoundEvent_24_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Typhon_UNIX1509007700(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_24_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Typhon_UNIX1509007700");

	Params::BPChar_Claptrap_C_BndEvt__Usable_K2Node_ComponentBoundEvent_24_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Typhon_UNIX1509007700 Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.OnRep_AntennaChoiceIndex
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::OnRep_AntennaChoiceIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "OnRep_AntennaChoiceIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.OnRep_ClapNoAntennaActive
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::OnRep_ClapNoAntennaActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "OnRep_ClapNoAntennaActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.ClaptrapComments
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AntennaChoice_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Claptrap_C::ClaptrapComments(int32 AntennaChoice_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "ClaptrapComments");

	Params::BPChar_Claptrap_C_ClaptrapComments Parms{};

	Parms.AntennaChoice_0 = AntennaChoice_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Claptrap
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Claptrap_C::BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Claptrap(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Claptrap");

	Params::BPChar_Claptrap_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Claptrap Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.CE_TimerToSwitchAntenna
// (BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::CE_TimerToSwitchAntenna()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "CE_TimerToSwitchAntenna");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.ForceClaptrapDownstate
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::ForceClaptrapDownstate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "ForceClaptrapDownstate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.DisableClaptrapAntenna
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::DisableClaptrapAntenna()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "DisableClaptrapAntenna");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.EnableClaptrapAntenna
// (Public, BlueprintCallable, BlueprintEvent)

void ABPChar_Claptrap_C::EnableClaptrapAntenna()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "EnableClaptrapAntenna");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_1_FightForYourLifeEvent__DelegateSignature_BPChar_Claptrap
// (BlueprintEvent)

void ABPChar_Claptrap_C::BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_1_FightForYourLifeEvent__DelegateSignature_BPChar_Claptrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "BndEvt__BPNPCFightForYourLifeComponent_K2Node_ComponentBoundEvent_1_FightForYourLifeEvent__DelegateSignature_BPChar_Claptrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.BndEvt__MissionObserver_K2Node_ComponentBoundEvent_0_MissionObserverMissionsInitialized__DelegateSignature_BPChar_Claptrap
// (BlueprintEvent)

void ABPChar_Claptrap_C::BndEvt__MissionObserver_K2Node_ComponentBoundEvent_0_MissionObserverMissionsInitialized__DelegateSignature_BPChar_Claptrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "BndEvt__MissionObserver_K2Node_ComponentBoundEvent_0_MissionObserverMissionsInitialized__DelegateSignature_BPChar_Claptrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BpChar_Claptrap.BPChar_Claptrap_C.ExecuteUbergraph_BPChar_Claptrap
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPChar_Claptrap_C::ExecuteUbergraph_BPChar_Claptrap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPChar_Claptrap_C", "ExecuteUbergraph_BPChar_Claptrap");

	Params::BPChar_Claptrap_C_ExecuteUbergraph_BPChar_Claptrap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

