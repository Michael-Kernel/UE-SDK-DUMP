#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Nog_ThrowDrone_Surfing_L

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "GbxDialog_structs.hpp"


namespace SDK::Params
{

// Function Action_Nog_ThrowDrone_Surfing_L.Action_Nog_ThrowDrone_Surfing_L_C.ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L
// 0x0288 (0x0288 - 0x0000)
struct Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxActionEndState                            K2Node_Event_ActionEndState;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Nog_C>            K2Node_DynamicCast_AsBPI_Nog;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Nog_C>            K2Node_DynamicCast_AsBPI_Nog1;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0040(0x0218)()
	struct FDialogConversation                    CallFunc_FinishTriggerDialog_Conversation;         // 0x0258(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishTriggerDialog_SequenceID;           // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishTriggerDialog_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Nog_C>            K2Node_DynamicCast_AsBPI_Nog2;                     // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L) == 0x000008, "Wrong alignment on Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L");
static_assert(sizeof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L) == 0x000288, "Wrong size on Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, EntryPoint) == 0x000000, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::EntryPoint' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_Event_ActionEndState) == 0x000007, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_Event_ActionEndState' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_Event_Actor) == 0x000008, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_DynamicCast_AsBPI_Nog) == 0x000010, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_DynamicCast_AsBPI_Nog' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_DynamicCast_AsBPI_Nog1) == 0x000028, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_DynamicCast_AsBPI_Nog1' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, CallFunc_NewDialogContext_ReturnValue) == 0x000040, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, CallFunc_FinishTriggerDialog_Conversation) == 0x000258, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::CallFunc_FinishTriggerDialog_Conversation' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, CallFunc_FinishTriggerDialog_SequenceID) == 0x000264, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::CallFunc_FinishTriggerDialog_SequenceID' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, CallFunc_FinishTriggerDialog_ReturnValue) == 0x000268, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::CallFunc_FinishTriggerDialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_DynamicCast_AsBPI_Nog2) == 0x000270, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_DynamicCast_AsBPI_Nog2' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, K2Node_DynamicCast_bSuccess2) == 0x000280, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L, CallFunc_Conv_IntToBool_ReturnValue) == 0x000281, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_L::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");

// Function Action_Nog_ThrowDrone_Surfing_L.Action_Nog_ThrowDrone_Surfing_L_C.OnEnd
// 0x0010 (0x0010 - 0x0000)
struct Action_Nog_ThrowDrone_Surfing_L_C_OnEnd final
{
public:
	EGbxActionEndState                            ActionEndState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Nog_ThrowDrone_Surfing_L_C_OnEnd) == 0x000008, "Wrong alignment on Action_Nog_ThrowDrone_Surfing_L_C_OnEnd");
static_assert(sizeof(Action_Nog_ThrowDrone_Surfing_L_C_OnEnd) == 0x000010, "Wrong size on Action_Nog_ThrowDrone_Surfing_L_C_OnEnd");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_OnEnd, ActionEndState) == 0x000000, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_OnEnd::ActionEndState' has a wrong offset!");
static_assert(offsetof(Action_Nog_ThrowDrone_Surfing_L_C_OnEnd, Actor) == 0x000008, "Member 'Action_Nog_ThrowDrone_Surfing_L_C_OnEnd::Actor' has a wrong offset!");

}

