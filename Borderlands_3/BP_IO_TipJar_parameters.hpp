#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IO_TipJar

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_IO_TipJar.BP_IO_TipJar_C.StealTip
// 0x0010 (0x0010 - 0x0000)
struct BP_IO_TipJar_C_StealTip final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryListComponent*                CallFunc_GetInventoryComponent_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_StealTip) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_StealTip");
static_assert(sizeof(BP_IO_TipJar_C_StealTip) == 0x000010, "Wrong size on BP_IO_TipJar_C_StealTip");
static_assert(offsetof(BP_IO_TipJar_C_StealTip, Character) == 0x000000, "Member 'BP_IO_TipJar_C_StealTip::Character' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_StealTip, CallFunc_GetInventoryComponent_ReturnValue) == 0x000008, "Member 'BP_IO_TipJar_C_StealTip::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.Tip
// 0x0050 (0x0050 - 0x0000)
struct BP_IO_TipJar_C_Tip final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0040(0x0010)(NoDestructor)
};
static_assert(alignof(BP_IO_TipJar_C_Tip) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_Tip");
static_assert(sizeof(BP_IO_TipJar_C_Tip) == 0x000050, "Wrong size on BP_IO_TipJar_C_Tip");
static_assert(offsetof(BP_IO_TipJar_C_Tip, Character) == 0x000000, "Member 'BP_IO_TipJar_C_Tip::Character' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, Value) == 0x000008, "Member 'BP_IO_TipJar_C_Tip::Value' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_IO_TipJar_C_Tip::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_IO_TipJar_C_Tip::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000018, "Member 'BP_IO_TipJar_C_Tip::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000020, "Member 'BP_IO_TipJar_C_Tip::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_IO_TipJar_C_Tip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_GetStatValue_ReturnValue) == 0x00002C, "Member 'BP_IO_TipJar_C_Tip::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_IO_TipJar_C_Tip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_RandomFloat_ReturnValue) == 0x000034, "Member 'BP_IO_TipJar_C_Tip::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_IO_TipJar_C_Tip::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_Tip, K2Node_MakeStruct_DataTableRowHandle) == 0x000040, "Member 'BP_IO_TipJar_C_Tip::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar
// 0x0010 (0x0010 - 0x0000)
struct BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar");
static_assert(sizeof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar) == 0x000010, "Wrong size on BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar");
static_assert(offsetof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar, UserController) == 0x000000, "Member 'BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar::UserController' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar, UsedComponent) == 0x000008, "Member 'BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar::UsedComponent' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar
// 0x0010 (0x0010 - 0x0000)
struct BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar");
static_assert(sizeof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar) == 0x000010, "Wrong size on BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar");
static_assert(offsetof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar, UserController) == 0x000000, "Member 'BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar::UserController' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar, UsedComponent) == 0x000008, "Member 'BP_IO_TipJar_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_TipJar::UsedComponent' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.ExecuteUbergraph_BP_IO_TipJar
// 0x0070 (0x0070 - 0x0000)
struct BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_UserController1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent1;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          CallFunc_GetAssociatedPrimaryCharacter_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          CallFunc_GetAssociatedPrimaryCharacter_ReturnValue1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryListComponent*                CallFunc_GetInventoryComponent_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCategoryItemQuantity_ReturnValue;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar");
static_assert(sizeof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar) == 0x000070, "Wrong size on BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, EntryPoint) == 0x000000, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_ComponentBoundEvent_UserController) == 0x000008, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_ComponentBoundEvent_UsedComponent) == 0x000010, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_ComponentBoundEvent_UserController1) == 0x000018, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_ComponentBoundEvent_UserController1' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_ComponentBoundEvent_UsedComponent1) == 0x000020, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_ComponentBoundEvent_UsedComponent1' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, CallFunc_GetAssociatedPrimaryCharacter_ReturnValue) == 0x000028, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::CallFunc_GetAssociatedPrimaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, CallFunc_GetAssociatedPrimaryCharacter_ReturnValue1) == 0x000030, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::CallFunc_GetAssociatedPrimaryCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_DynamicCast_AsOak_Character) == 0x000038, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_DynamicCast_AsOak_Character1) == 0x000048, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_DynamicCast_AsOak_Character1' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, CallFunc_GetInventoryComponent_ReturnValue) == 0x000058, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, CallFunc_GetCategoryItemQuantity_ReturnValue) == 0x000060, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::CallFunc_GetCategoryItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar, CallFunc_Min_ReturnValue) == 0x000068, "Member 'BP_IO_TipJar_C_ExecuteUbergraph_BP_IO_TipJar::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.Tip_Stolen__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_IO_TipJar_C_Tip_Stolen__DelegateSignature final
{
public:
	class AActor*                                 Tipper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_Tip_Stolen__DelegateSignature) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_Tip_Stolen__DelegateSignature");
static_assert(sizeof(BP_IO_TipJar_C_Tip_Stolen__DelegateSignature) == 0x000008, "Wrong size on BP_IO_TipJar_C_Tip_Stolen__DelegateSignature");
static_assert(offsetof(BP_IO_TipJar_C_Tip_Stolen__DelegateSignature, Tipper) == 0x000000, "Member 'BP_IO_TipJar_C_Tip_Stolen__DelegateSignature::Tipper' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.Tip_Large__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_IO_TipJar_C_Tip_Large__DelegateSignature final
{
public:
	class AActor*                                 Tipper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_Tip_Large__DelegateSignature) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_Tip_Large__DelegateSignature");
static_assert(sizeof(BP_IO_TipJar_C_Tip_Large__DelegateSignature) == 0x000008, "Wrong size on BP_IO_TipJar_C_Tip_Large__DelegateSignature");
static_assert(offsetof(BP_IO_TipJar_C_Tip_Large__DelegateSignature, Tipper) == 0x000000, "Member 'BP_IO_TipJar_C_Tip_Large__DelegateSignature::Tipper' has a wrong offset!");

// Function BP_IO_TipJar.BP_IO_TipJar_C.Tip_Small__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_IO_TipJar_C_Tip_Small__DelegateSignature final
{
public:
	class AActor*                                 Tipper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_TipJar_C_Tip_Small__DelegateSignature) == 0x000008, "Wrong alignment on BP_IO_TipJar_C_Tip_Small__DelegateSignature");
static_assert(sizeof(BP_IO_TipJar_C_Tip_Small__DelegateSignature) == 0x000008, "Wrong size on BP_IO_TipJar_C_Tip_Small__DelegateSignature");
static_assert(offsetof(BP_IO_TipJar_C_Tip_Small__DelegateSignature, Tipper) == 0x000000, "Member 'BP_IO_TipJar_C_Tip_Small__DelegateSignature::Tipper' has a wrong offset!");

}

