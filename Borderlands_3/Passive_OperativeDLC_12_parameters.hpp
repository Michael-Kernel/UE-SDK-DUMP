#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_OperativeDLC_12

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Passive_OperativeDLC_12.Passive_OperativeDLC_12_C.ExecuteUbergraph_Passive_OperativeDLC_12
// 0x0138 (0x0138 - 0x0000)
struct Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0040(0x0060)(ContainsInstancedReference)
	struct FGbxAbilityResourceSpec_ConditionalDamageModifier K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier; // 0x00A0(0x0028)(NoDestructor, ContainsInstancedReference)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue1;       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue2;       // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue3;       // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue4;       // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_TriggerElementalEffect_ReturnValue;       // 0x00E0(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FStatusEffectInstanceReference         CallFunc_TriggerElementalEffect_ReturnValue1;      // 0x00F8(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0110(0x0028)(NoDestructor)
};
static_assert(alignof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12) == 0x000008, "Wrong alignment on Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12");
static_assert(sizeof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12) == 0x000138, "Wrong size on Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, EntryPoint) == 0x000000, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CustomEvent_DamageInstigator) == 0x000018, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CustomEvent_Damage) == 0x000020, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CustomEvent_DamageType) == 0x000028, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CustomEvent_DamageSource) == 0x000030, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CustomEvent_DamagedActor) == 0x000038, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_CustomEvent_Details) == 0x000040, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier) == 0x0000A0, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_GetObjectClass_ReturnValue) == 0x0000C8, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000D0, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_EqualEqual_ClassClass_ReturnValue1) == 0x0000D1, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_EqualEqual_ClassClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_EqualEqual_ClassClass_ReturnValue2) == 0x0000D2, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_EqualEqual_ClassClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_EqualEqual_ClassClass_ReturnValue3) == 0x0000D3, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_EqualEqual_ClassClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_EqualEqual_ClassClass_ReturnValue4) == 0x0000D4, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_EqualEqual_ClassClass_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_TriggerElementalEffect_ReturnValue) == 0x0000E0, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_TriggerElementalEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, CallFunc_TriggerElementalEffect_ReturnValue1) == 0x0000F8, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::CallFunc_TriggerElementalEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000110, "Member 'Passive_OperativeDLC_12_C_ExecuteUbergraph_Passive_OperativeDLC_12::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");

// Function Passive_OperativeDLC_12.Passive_OperativeDLC_12_C.DLCSkill12_OnCausedAnyDamage
// 0x0088 (0x0088 - 0x0000)
struct Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage) == 0x000008, "Wrong alignment on Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage");
static_assert(sizeof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage) == 0x000088, "Wrong size on Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage");
static_assert(offsetof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage, DamageInstigator) == 0x000000, "Member 'Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage, Damage) == 0x000008, "Member 'Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage, DamageType) == 0x000010, "Member 'Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage, DamageSource) == 0x000018, "Member 'Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage, DamagedActor) == 0x000020, "Member 'Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage, Details) == 0x000028, "Member 'Passive_OperativeDLC_12_C_DLCSkill12_OnCausedAnyDamage::Details' has a wrong offset!");

// Function Passive_OperativeDLC_12.Passive_OperativeDLC_12_C.CalculateAbilityState
// 0x0007 (0x0007 - 0x0000)
struct Passive_OperativeDLC_12_C_CalculateAbilityState final
{
public:
	EGbxAbilityState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsZoomed_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              CallFunc_CalculateAbilityState_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxAbilityState                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_OperativeDLC_12_C_CalculateAbilityState) == 0x000001, "Wrong alignment on Passive_OperativeDLC_12_C_CalculateAbilityState");
static_assert(sizeof(Passive_OperativeDLC_12_C_CalculateAbilityState) == 0x000007, "Wrong size on Passive_OperativeDLC_12_C_CalculateAbilityState");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, ReturnValue) == 0x000000, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, Temp_bool_Variable) == 0x000001, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, Temp_byte_Variable) == 0x000002, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, CallFunc_IsZoomed_ReturnValue) == 0x000004, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::CallFunc_IsZoomed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, CallFunc_CalculateAbilityState_ReturnValue) == 0x000005, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::CallFunc_CalculateAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_12_C_CalculateAbilityState, K2Node_Select_Default) == 0x000006, "Member 'Passive_OperativeDLC_12_C_CalculateAbilityState::K2Node_Select_Default' has a wrong offset!");

}

