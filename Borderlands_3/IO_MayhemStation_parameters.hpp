#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MayhemStation

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Usability_0
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Usability_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Usability_0) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Usability_0");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Usability_0) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Usability_0");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Usability_0, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Usability_0::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Usability_1
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Usability_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Usability_1) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Usability_1");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Usability_1) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Usability_1");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Usability_1, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Usability_1::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Difficulty_0
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Difficulty_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Difficulty_0) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Difficulty_0");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Difficulty_0) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Difficulty_0");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Difficulty_0, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Difficulty_0::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Difficulty_1
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Difficulty_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Difficulty_1) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Difficulty_1");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Difficulty_1) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Difficulty_1");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Difficulty_1, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Difficulty_1::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Difficulty_2
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Difficulty_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Difficulty_2) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Difficulty_2");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Difficulty_2) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Difficulty_2");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Difficulty_2, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Difficulty_2::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Difficulty_3
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Difficulty_3 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Difficulty_3) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Difficulty_3");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Difficulty_3) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Difficulty_3");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Difficulty_3, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Difficulty_3::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation
// 0x0010 (0x0010 - 0x0000)
struct IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation) == 0x000008, "Wrong alignment on IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation");
static_assert(sizeof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation) == 0x000010, "Wrong size on IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation");
static_assert(offsetof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation, UserController) == 0x000000, "Member 'IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation::UserController' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation, UsedComponent) == 0x000008, "Member 'IO_MayhemStation_C_BndEvt__Usable_Difficulty_1_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation::UsedComponent' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation
// 0x0010 (0x0010 - 0x0000)
struct IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation) == 0x000008, "Wrong alignment on IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation");
static_assert(sizeof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation) == 0x000010, "Wrong size on IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation");
static_assert(offsetof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation, UserController) == 0x000000, "Member 'IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation::UserController' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation, UsedComponent) == 0x000008, "Member 'IO_MayhemStation_C_BndEvt__Usable_Difficulty_2_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation::UsedComponent' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation
// 0x0010 (0x0010 - 0x0000)
struct IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation) == 0x000008, "Wrong alignment on IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation");
static_assert(sizeof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation) == 0x000010, "Wrong size on IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation");
static_assert(offsetof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation, UserController) == 0x000000, "Member 'IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation::UserController' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation, UsedComponent) == 0x000008, "Member 'IO_MayhemStation_C_BndEvt__Usable_Difficulty_3_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_IO_MayhemStation::UsedComponent' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Visibility_1
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Visibility_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Visibility_1) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Visibility_1");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Visibility_1) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Visibility_1");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Visibility_1, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Visibility_1::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.SetMayhemState
// 0x0008 (0x0008 - 0x0000)
struct IO_MayhemStation_C_SetMayhemState final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MayhemLevel;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MayhemStation_C_SetMayhemState) == 0x000004, "Wrong alignment on IO_MayhemStation_C_SetMayhemState");
static_assert(sizeof(IO_MayhemStation_C_SetMayhemState) == 0x000008, "Wrong size on IO_MayhemStation_C_SetMayhemState");
static_assert(offsetof(IO_MayhemStation_C_SetMayhemState, Active) == 0x000000, "Member 'IO_MayhemStation_C_SetMayhemState::Active' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_SetMayhemState, MayhemLevel) == 0x000004, "Member 'IO_MayhemStation_C_SetMayhemState::MayhemLevel' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.__UserState_State_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct IO_MayhemStation_C___UserState_State_Visibility_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C___UserState_State_Visibility_0) == 0x000001, "Wrong alignment on IO_MayhemStation_C___UserState_State_Visibility_0");
static_assert(sizeof(IO_MayhemStation_C___UserState_State_Visibility_0) == 0x000001, "Wrong size on IO_MayhemStation_C___UserState_State_Visibility_0");
static_assert(offsetof(IO_MayhemStation_C___UserState_State_Visibility_0, bFromLoad) == 0x000000, "Member 'IO_MayhemStation_C___UserState_State_Visibility_0::bFromLoad' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.ActivateAudioInstance
// 0x0010 (0x0010 - 0x0000)
struct IO_MayhemStation_C_ActivateAudioInstance final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            WwiseEvent;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MayhemStation_C_ActivateAudioInstance) == 0x000008, "Wrong alignment on IO_MayhemStation_C_ActivateAudioInstance");
static_assert(sizeof(IO_MayhemStation_C_ActivateAudioInstance) == 0x000010, "Wrong size on IO_MayhemStation_C_ActivateAudioInstance");
static_assert(offsetof(IO_MayhemStation_C_ActivateAudioInstance, Component) == 0x000000, "Member 'IO_MayhemStation_C_ActivateAudioInstance::Component' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ActivateAudioInstance, WwiseEvent) == 0x000008, "Member 'IO_MayhemStation_C_ActivateAudioInstance::WwiseEvent' has a wrong offset!");

// Function IO_MayhemStation.IO_MayhemStation_C.ExecuteUbergraph_IO_MayhemStation
// 0x0350 (0x0350 - 0x0000)
struct IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad7;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad5;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad4;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController2;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent2;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_UserController1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent1;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0080(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue1;        // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult1;  // 0x0140(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue2;        // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult2;  // 0x0200(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMayhemLevel_ReturnValue;               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMayhemModeActive_ReturnValue;           // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Active;                         // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_MayhemLevel;                    // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_Component;                      // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            K2Node_CustomEvent_WwiseEvent;                     // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x02B8(0x0018)()
	class UWwiseAudioComponent*                   CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue; // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAudioPlaying_ReturnValue;               // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x02E0(0x0018)()
	class UWwiseAudioComponent*                   CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue1; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAudioPlaying_ReturnValue1;              // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0308(0x0018)()
	bool                                          K2Node_UserStateEvent_bFromLoad6;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SM_Wall_Console_V2_C*               K2Node_DynamicCast_AsBP_SM_Wall_Console_V2;        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SM_Wall_Console_V2_C*               K2Node_DynamicCast_AsBP_SM_Wall_Console_V21;       // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation) == 0x000010, "Wrong alignment on IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation");
static_assert(sizeof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation) == 0x000350, "Wrong size on IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, EntryPoint) == 0x000000, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad7) == 0x000004, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad7' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad5) == 0x000005, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad5' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad4) == 0x000006, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad4' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad3) == 0x000007, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad2) == 0x000008, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_ComponentBoundEvent_UserController2) == 0x000010, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_ComponentBoundEvent_UserController2' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_ComponentBoundEvent_UsedComponent2) == 0x000018, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_ComponentBoundEvent_UsedComponent2' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_ComponentBoundEvent_UserController1) == 0x000020, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_ComponentBoundEvent_UserController1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_ComponentBoundEvent_UsedComponent1) == 0x000028, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_ComponentBoundEvent_UsedComponent1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_ComponentBoundEvent_UserController) == 0x000038, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_ComponentBoundEvent_UsedComponent) == 0x000040, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_SwitchEnum1_CmpSuccess) == 0x000048, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_SwitchEnum2_CmpSuccess) == 0x000049, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_GetRelativeTransform_ReturnValue) == 0x000050, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000080, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_GetRelativeTransform_ReturnValue1) == 0x000110, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_GetRelativeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_K2_SetRelativeTransform_SweepHitResult1) == 0x000140, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_K2_SetRelativeTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_GetRelativeTransform_ReturnValue2) == 0x0001D0, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_GetRelativeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_K2_SetRelativeTransform_SweepHitResult2) == 0x000200, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_K2_SetRelativeTransform_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad1) == 0x000290, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_GetMayhemLevel_ReturnValue) == 0x000294, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_GetMayhemLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_IsMayhemModeActive_ReturnValue) == 0x000298, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_IsMayhemModeActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000299, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00029A, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_CustomEvent_Active) == 0x00029B, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_CustomEvent_MayhemLevel) == 0x00029C, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_CustomEvent_MayhemLevel' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad) == 0x0002A0, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_CustomEvent_Component) == 0x0002A8, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_CustomEvent_WwiseEvent) == 0x0002B0, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_CustomEvent_WwiseEvent' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_PostAttachedEvent_ReturnValue) == 0x0002B8, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue) == 0x0002D0, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_IsAudioPlaying_ReturnValue) == 0x0002D8, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_IsAudioPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_PostWwiseEvent_ReturnValue) == 0x0002E0, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue1) == 0x0002F8, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_GetAudioComponentFromPlaybackInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_IsAudioPlaying_ReturnValue1) == 0x000300, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_IsAudioPlaying_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000308, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_UserStateEvent_bFromLoad6) == 0x000320, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_UserStateEvent_bFromLoad6' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_DynamicCast_AsBP_SM_Wall_Console_V2) == 0x000328, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_DynamicCast_AsBP_SM_Wall_Console_V2' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_DynamicCast_bSuccess) == 0x000330, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_DynamicCast_AsBP_SM_Wall_Console_V21) == 0x000338, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_DynamicCast_AsBP_SM_Wall_Console_V21' has a wrong offset!");
static_assert(offsetof(IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation, K2Node_DynamicCast_bSuccess1) == 0x000340, "Member 'IO_MayhemStation_C_ExecuteUbergraph_IO_MayhemStation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

}

