#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALI_Challenge_Crew

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"


namespace SDK::Params
{

// Function ALI_Challenge_Crew.ALI_Challenge_Crew_C.ExecuteUbergraph_ALI_Challenge_Crew
// 0x0048 (0x0048 - 0x0000)
struct ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AGbxPlayerController*             K2Node_Event_CompletedPlayer;                      // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_PlayVO_Conversation;                      // 0x0010(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_PlayVO_Conversation1;                     // 0x001C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_PlayVO_Conversation2;                     // 0x0028(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_PlayVO_Conversation3;                     // 0x0034(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew) == 0x000008, "Wrong alignment on ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew");
static_assert(sizeof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew) == 0x000048, "Wrong size on ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, EntryPoint) == 0x000000, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, K2Node_Event_CompletedPlayer) == 0x000008, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::K2Node_Event_CompletedPlayer' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, CallFunc_PlayVO_Conversation) == 0x000010, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::CallFunc_PlayVO_Conversation' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, CallFunc_PlayVO_Conversation1) == 0x00001C, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::CallFunc_PlayVO_Conversation1' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, CallFunc_PlayVO_Conversation2) == 0x000028, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::CallFunc_PlayVO_Conversation2' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, CallFunc_PlayVO_Conversation3) == 0x000034, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::CallFunc_PlayVO_Conversation3' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, CallFunc_GetStatValue_ReturnValue) == 0x000040, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'ALI_Challenge_Crew_C_ExecuteUbergraph_ALI_Challenge_Crew::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ALI_Challenge_Crew.ALI_Challenge_Crew_C.CompletedChallenge
// 0x0008 (0x0008 - 0x0000)
struct ALI_Challenge_Crew_C_CompletedChallenge final
{
public:
	const class AGbxPlayerController*             CompletedPlayer;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALI_Challenge_Crew_C_CompletedChallenge) == 0x000008, "Wrong alignment on ALI_Challenge_Crew_C_CompletedChallenge");
static_assert(sizeof(ALI_Challenge_Crew_C_CompletedChallenge) == 0x000008, "Wrong size on ALI_Challenge_Crew_C_CompletedChallenge");
static_assert(offsetof(ALI_Challenge_Crew_C_CompletedChallenge, CompletedPlayer) == 0x000000, "Member 'ALI_Challenge_Crew_C_CompletedChallenge::CompletedPlayer' has a wrong offset!");

// Function ALI_Challenge_Crew.ALI_Challenge_Crew_C.ShowTutorialPopup
// 0x0040 (0x0040 - 0x0000)
struct ALI_Challenge_Crew_C_ShowTutorialPopup final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   TargetPlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          CallFunc_GetAssociatedPrimaryCharacter_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetAssociatedVehicle_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakCharacter_Player*>           CallFunc_GetAllPlayerCharacters_Characters;        // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALI_Challenge_Crew_C_ShowTutorialPopup) == 0x000008, "Wrong alignment on ALI_Challenge_Crew_C_ShowTutorialPopup");
static_assert(sizeof(ALI_Challenge_Crew_C_ShowTutorialPopup) == 0x000040, "Wrong size on ALI_Challenge_Crew_C_ShowTutorialPopup");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, GameInstance) == 0x000000, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::GameInstance' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, TargetPlayer) == 0x000008, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::TargetPlayer' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_GetAssociatedPrimaryCharacter_ReturnValue) == 0x000010, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_GetAssociatedPrimaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_GetAssociatedVehicle_ReturnValue) == 0x000018, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_GetAssociatedVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_GetAllPlayerCharacters_Characters) == 0x000020, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_GetAllPlayerCharacters_Characters' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_ShowTutorialPopup, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'ALI_Challenge_Crew_C_ShowTutorialPopup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ALI_Challenge_Crew.ALI_Challenge_Crew_C.PlayVO
// 0x0288 (0x0288 - 0x0000)
struct ALI_Challenge_Crew_C_PlayVO final
{
public:
	struct FDialogTimeSlotReference               Dialog;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 CompletedPlayer;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    Conversation;                                      // 0x0048(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         K2Node_MakeStruct_DialogContext;                   // 0x0058(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0270(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALI_Challenge_Crew_C_PlayVO) == 0x000008, "Wrong alignment on ALI_Challenge_Crew_C_PlayVO");
static_assert(sizeof(ALI_Challenge_Crew_C_PlayVO) == 0x000288, "Wrong size on ALI_Challenge_Crew_C_PlayVO");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, Dialog) == 0x000000, "Member 'ALI_Challenge_Crew_C_PlayVO::Dialog' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, CompletedPlayer) == 0x000040, "Member 'ALI_Challenge_Crew_C_PlayVO::CompletedPlayer' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, Conversation) == 0x000048, "Member 'ALI_Challenge_Crew_C_PlayVO::Conversation' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, K2Node_MakeStruct_DialogContext) == 0x000058, "Member 'ALI_Challenge_Crew_C_PlayVO::K2Node_MakeStruct_DialogContext' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, CallFunc_FinishSpeak_Conversation) == 0x000270, "Member 'ALI_Challenge_Crew_C_PlayVO::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, CallFunc_FinishSpeak_SequenceID) == 0x00027C, "Member 'ALI_Challenge_Crew_C_PlayVO::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(ALI_Challenge_Crew_C_PlayVO, CallFunc_FinishSpeak_ReturnValue) == 0x000280, "Member 'ALI_Challenge_Crew_C_PlayVO::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");

}

