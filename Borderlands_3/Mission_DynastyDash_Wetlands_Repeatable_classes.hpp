#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_DynastyDash_Wetlands_Repeatable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_OakMission_classes.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_DynastyDash_Wetlands_Repeatable.Mission_DynastyDash_Wetlands_Repeatable_C
// 0x0070 (0x0580 - 0x0510)
class UMission_DynastyDash_Wetlands_Repeatable_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_DynastyDash_Wetlands_Repeatable_C; // 0x0510(0x0008)(Transient, DuplicateTransient)
	int32                                         TimerSecondsRemaining;                             // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimerSecondsInitial;                               // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimerSecondsComputedTime;                          // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjectiveSet*                   SET_AcquireBurgers_ObjSetVar;                      // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_AcquireBurgers_ObjVar;                         // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_DeliverBurgers_ObjSetVar;                      // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_DeliverBurgers_ObjVar;                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_CompleteDeliveryFast_ObjVar;                   // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_CompleteDeliveryMed_ObjVar;                    // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_CompleteDeliverySlow_ObjVar;                   // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_SignTest_ObjVar;                               // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   SET_ReturnToStart_ObjSetVar;                       // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      OBJ_ReturnToStart_ObjVar;                          // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FastAchieved;                                      // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MediumAchieved;                                    // 0x0579(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SlowAchieved;                                      // 0x057A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Mission_DynastyDash_Wetlands_Repeatable(int32 EntryPoint);
	void MissionKickoff();
	void MCE_ShotSign(class UObject* Context);
	void OBJ_SignTest(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_DetermineResults(class UObject* Context);
	void MCE_ReturnToStart(class UObject* Context);
	void OBJ_ReturnToStart(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_AcquireBurgers(class UObject* Context);
	void _OBJ_CompleteDeliverySlow_Objective__PROXY_1();
	void _OBJ_CompleteDeliveryMed_Objective__PROXY_0();
	void _OBJ_CompleteDeliveryFast_Objective__PROXY();
	void OBJ_CompleteDeliverySlow(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OBJ_CompleteDeliveryMed(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OBJ_CompleteDeliveryFast(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_ReturnToStart(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void MCE_DeliverBurgers(class UObject* Context);
	void OBJ_DeliverBurgers(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void SET_DeliverBurgers(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void SET_AcquireBurgers(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OBJ_AcquireBurgers(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OnDialogSequenceFinished_10();
	void OnDialogSequenceFinished_11();
	void OnDialogSequenceFinished_12();
	void OnDialogSequenceFinished_7();
	void OnDialogSequenceFinished_8();
	void OnDialogSequenceFinished_9();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_DynastyDash_Wetlands_Repeatable_C">();
	}
	static class UMission_DynastyDash_Wetlands_Repeatable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_DynastyDash_Wetlands_Repeatable_C>();
	}
};
static_assert(alignof(UMission_DynastyDash_Wetlands_Repeatable_C) == 0x000008, "Wrong alignment on UMission_DynastyDash_Wetlands_Repeatable_C");
static_assert(sizeof(UMission_DynastyDash_Wetlands_Repeatable_C) == 0x000580, "Wrong size on UMission_DynastyDash_Wetlands_Repeatable_C");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, UberGraphFrame_Mission_DynastyDash_Wetlands_Repeatable_C) == 0x000510, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::UberGraphFrame_Mission_DynastyDash_Wetlands_Repeatable_C' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, TimerSecondsRemaining) == 0x000518, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::TimerSecondsRemaining' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, TimerSecondsInitial) == 0x00051C, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::TimerSecondsInitial' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, TimerSecondsComputedTime) == 0x000520, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::TimerSecondsComputedTime' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, SET_AcquireBurgers_ObjSetVar) == 0x000528, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::SET_AcquireBurgers_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_AcquireBurgers_ObjVar) == 0x000530, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_AcquireBurgers_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, SET_DeliverBurgers_ObjSetVar) == 0x000538, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::SET_DeliverBurgers_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_DeliverBurgers_ObjVar) == 0x000540, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_DeliverBurgers_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_CompleteDeliveryFast_ObjVar) == 0x000548, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_CompleteDeliveryFast_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_CompleteDeliveryMed_ObjVar) == 0x000550, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_CompleteDeliveryMed_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_CompleteDeliverySlow_ObjVar) == 0x000558, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_CompleteDeliverySlow_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_SignTest_ObjVar) == 0x000560, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_SignTest_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, SET_ReturnToStart_ObjSetVar) == 0x000568, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::SET_ReturnToStart_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, OBJ_ReturnToStart_ObjVar) == 0x000570, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::OBJ_ReturnToStart_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, FastAchieved) == 0x000578, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::FastAchieved' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, MediumAchieved) == 0x000579, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::MediumAchieved' has a wrong offset!");
static_assert(offsetof(UMission_DynastyDash_Wetlands_Repeatable_C, SlowAchieved) == 0x00057A, "Member 'UMission_DynastyDash_Wetlands_Repeatable_C::SlowAchieved' has a wrong offset!");

}

