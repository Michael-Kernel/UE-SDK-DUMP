#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_TechSlaughter1

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "GbxDialog_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_TechSlaughter1.Mission_TechSlaughter1_C
// 0x0128 (0x0638 - 0x0510)
class UMission_TechSlaughter1_C final : public UOakMissionCircleOfSlaughter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UMissionObjectiveSet*                   Set_Round1_ObjSetVar;                              // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_TurnIn_ObjSetVar;                              // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_TurnIn_ObjVar;                                 // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASlaughterGameMode*                     Slaughter_Game_Mode;                               // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_Rounds_ObjVar;                                 // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoundCounter;                                      // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjective*                      Obj_INVIS_AssembleRound1_ObjVar;                   // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_StartRound_1_ObjVar;                           // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteWave_1_ObjVar;                         // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_OptionalObjective_Round1_ObjVar;               // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Round_2_ObjSetVar;                             // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Round_3_ObjSetVar;                             // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Round_4_ObjSetVar;                             // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_Round_5_ObjSetVar;                             // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_INVIS_Assemble2_ObjVar;                        // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_StartRound_2_ObjVar;                           // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_StartRound_3_ObjVar;                           // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_StartRound_4_ObjVar;                           // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_StartRound_5_ObjVar;                           // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_INVIS_Assemble3_ObjVar;                        // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_INVIS_Assemble4_ObjVar;                        // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_INVIS_Assemble5_ObjVar;                        // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteWave_2_ObjVar;                         // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_OptionalObjective_Round2_ObjVar;               // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteWave_3_ObjVar;                         // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_OptionalObjective_Round3_ObjVar;               // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteWave_4_ObjVar;                         // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_OptionalObjective_Round4_ObjVar;               // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteWave_5_ObjVar;                         // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_OptionalObjective_Round5_ObjVar;               // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SlaughterGameState_C*               SlaughterGameState;                                // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_LightSwitchMover_ObjVar;                       // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    TorgueVO_StartSlaughter;                           // 0x0618(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjective*                      Obj_INVIS_PlayersDiedinRound_ObjVar;               // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerUsedButton;                                  // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Mission_TechSlaughter1(int32 EntryPoint);
	void MCE_BC_NotAllAssembled(class UObject* Context);
	void MissionKickoff();
	void MCE_UpdateOptionals(class UObject* Context);
	void MissionActive();
	void MissionActiveLoad();
	void _Obj_INVIS_PlayersDiedinRound_Objective__PROXY_10();
	void _Obj_INVIS_PlayersDiedinRound_Objective__PROXY_9();
	void _Obj_INVIS_PlayersDiedinRound_Objective__PROXY_8();
	void _Obj_INVIS_PlayersDiedinRound_Objective__PROXY_7();
	void MCE_PlayersAllDiedInRound(class UObject* Context);
	void Obj_INVIS_PlayersDiedinRound(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_TorgueBossVO(class UObject* Context);
	void _Obj_LightSwitchMover_Objective__PROXY_6();
	void _Obj_LightSwitchMover_Objective__PROXY_5();
	void _Obj_LightSwitchMover_Objective__PROXY_4();
	void _Obj_LightSwitchMover_Objective__PROXY_3();
	void MCE_ResetLights(class UObject* Context);
	void MCE_ChangeLights(class UObject* Context);
	void Obj_LightSwitchMover(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_PlayerDied(class UObject* Context);
	void MCE_PlayersAssembled(class UObject* Context);
	void MCE_PlayersNotAssembled(class UObject* Context);
	void Obj_OptionalObjective_Round5(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_CompleteWave_5(class UObject* Context);
	void Obj_CompleteWave_5(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_OptionalObjective_Round4(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_CompleteWave_4(class UObject* Context);
	void Obj_CompleteWave_4(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_OptionalObjective_Round3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_CompleteWave_3(class UObject* Context);
	void Obj_CompleteWave_3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_OptionalObjective_Round2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_Obj_CompleteWave_2(class UObject* Context);
	void Obj_CompleteWave_2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_INVIS_Assemble5(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_INVIS_Assemble4(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_INVIS_Assemble3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_StartRound_5(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_StartRound_4(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_StartRound_3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_StartRound_2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_Rounds_Objective__PROXY_2();
	void _Obj_Rounds_Objective__PROXY_1();
	void _Obj_Rounds_Objective__PROXY_0();
	void _Obj_Rounds_Objective__PROXY();
	void Obj_INVIS_Assemble2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_Round_5(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_Round_4(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_Round_3(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_Round_2(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_OptionalObjective_Round1(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_CompleteWave_1(class UObject* Context);
	void Obj_CompleteWave_1(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_StartRound_1(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_INVIS_AssembleRound1(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_SwitchUsed(class UObject* Context);
	void MCE_PlayersAllDied(class UObject* Context);
	void MCE_Update_RoundCount(class UObject* Context);
	void Obj_Rounds(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void MCE_Update_TurnIn(class UObject* Context);
	void Set_TurnIn(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_TurnIn(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_Round1(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void OnDialogSequenceFinished_5();
	void OnDialogSequenceFinished_6();
	void OnDialogSequenceFinished_7();
	void OnDialogSequenceFinished_8();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_TechSlaughter1_C">();
	}
	static class UMission_TechSlaughter1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_TechSlaughter1_C>();
	}
};
static_assert(alignof(UMission_TechSlaughter1_C) == 0x000008, "Wrong alignment on UMission_TechSlaughter1_C");
static_assert(sizeof(UMission_TechSlaughter1_C) == 0x000638, "Wrong size on UMission_TechSlaughter1_C");
static_assert(offsetof(UMission_TechSlaughter1_C, UberGraphFrame) == 0x000510, "Member 'UMission_TechSlaughter1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Set_Round1_ObjSetVar) == 0x000518, "Member 'UMission_TechSlaughter1_C::Set_Round1_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Set_TurnIn_ObjSetVar) == 0x000520, "Member 'UMission_TechSlaughter1_C::Set_TurnIn_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_TurnIn_ObjVar) == 0x000528, "Member 'UMission_TechSlaughter1_C::Obj_TurnIn_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Slaughter_Game_Mode) == 0x000530, "Member 'UMission_TechSlaughter1_C::Slaughter_Game_Mode' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_Rounds_ObjVar) == 0x000538, "Member 'UMission_TechSlaughter1_C::Obj_Rounds_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, RoundCounter) == 0x000540, "Member 'UMission_TechSlaughter1_C::RoundCounter' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_INVIS_AssembleRound1_ObjVar) == 0x000548, "Member 'UMission_TechSlaughter1_C::Obj_INVIS_AssembleRound1_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_StartRound_1_ObjVar) == 0x000550, "Member 'UMission_TechSlaughter1_C::Obj_StartRound_1_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_CompleteWave_1_ObjVar) == 0x000558, "Member 'UMission_TechSlaughter1_C::Obj_CompleteWave_1_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_OptionalObjective_Round1_ObjVar) == 0x000560, "Member 'UMission_TechSlaughter1_C::Obj_OptionalObjective_Round1_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Set_Round_2_ObjSetVar) == 0x000568, "Member 'UMission_TechSlaughter1_C::Set_Round_2_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Set_Round_3_ObjSetVar) == 0x000570, "Member 'UMission_TechSlaughter1_C::Set_Round_3_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Set_Round_4_ObjSetVar) == 0x000578, "Member 'UMission_TechSlaughter1_C::Set_Round_4_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Set_Round_5_ObjSetVar) == 0x000580, "Member 'UMission_TechSlaughter1_C::Set_Round_5_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_INVIS_Assemble2_ObjVar) == 0x000588, "Member 'UMission_TechSlaughter1_C::Obj_INVIS_Assemble2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_StartRound_2_ObjVar) == 0x000590, "Member 'UMission_TechSlaughter1_C::Obj_StartRound_2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_StartRound_3_ObjVar) == 0x000598, "Member 'UMission_TechSlaughter1_C::Obj_StartRound_3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_StartRound_4_ObjVar) == 0x0005A0, "Member 'UMission_TechSlaughter1_C::Obj_StartRound_4_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_StartRound_5_ObjVar) == 0x0005A8, "Member 'UMission_TechSlaughter1_C::Obj_StartRound_5_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_INVIS_Assemble3_ObjVar) == 0x0005B0, "Member 'UMission_TechSlaughter1_C::Obj_INVIS_Assemble3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_INVIS_Assemble4_ObjVar) == 0x0005B8, "Member 'UMission_TechSlaughter1_C::Obj_INVIS_Assemble4_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_INVIS_Assemble5_ObjVar) == 0x0005C0, "Member 'UMission_TechSlaughter1_C::Obj_INVIS_Assemble5_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_CompleteWave_2_ObjVar) == 0x0005C8, "Member 'UMission_TechSlaughter1_C::Obj_CompleteWave_2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_OptionalObjective_Round2_ObjVar) == 0x0005D0, "Member 'UMission_TechSlaughter1_C::Obj_OptionalObjective_Round2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_CompleteWave_3_ObjVar) == 0x0005D8, "Member 'UMission_TechSlaughter1_C::Obj_CompleteWave_3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_OptionalObjective_Round3_ObjVar) == 0x0005E0, "Member 'UMission_TechSlaughter1_C::Obj_OptionalObjective_Round3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_CompleteWave_4_ObjVar) == 0x0005E8, "Member 'UMission_TechSlaughter1_C::Obj_CompleteWave_4_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_OptionalObjective_Round4_ObjVar) == 0x0005F0, "Member 'UMission_TechSlaughter1_C::Obj_OptionalObjective_Round4_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_CompleteWave_5_ObjVar) == 0x0005F8, "Member 'UMission_TechSlaughter1_C::Obj_CompleteWave_5_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_OptionalObjective_Round5_ObjVar) == 0x000600, "Member 'UMission_TechSlaughter1_C::Obj_OptionalObjective_Round5_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, SlaughterGameState) == 0x000608, "Member 'UMission_TechSlaughter1_C::SlaughterGameState' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_LightSwitchMover_ObjVar) == 0x000610, "Member 'UMission_TechSlaughter1_C::Obj_LightSwitchMover_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, TorgueVO_StartSlaughter) == 0x000618, "Member 'UMission_TechSlaughter1_C::TorgueVO_StartSlaughter' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, Obj_INVIS_PlayersDiedinRound_ObjVar) == 0x000628, "Member 'UMission_TechSlaughter1_C::Obj_INVIS_PlayersDiedinRound_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_TechSlaughter1_C, PlayerUsedButton) == 0x000630, "Member 'UMission_TechSlaughter1_C::PlayerUsedButton' has a wrong offset!");

}

