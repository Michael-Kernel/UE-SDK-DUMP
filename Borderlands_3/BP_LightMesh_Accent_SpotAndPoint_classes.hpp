#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightMesh_Accent_SpotAndPoint

#include "Basic.hpp"

#include "BP_LightMesh_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightMesh_Accent_SpotAndPoint.BP_LightMesh_Accent_SpotAndPoint_C
// 0x0010 (0x0570 - 0x0560)
class ABP_LightMesh_Accent_SpotAndPoint_C : public ABP_LightMesh_Base_C
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightMesh_Accent_SpotAndPoint_C">();
	}
	static class ABP_LightMesh_Accent_SpotAndPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightMesh_Accent_SpotAndPoint_C>();
	}
};
static_assert(alignof(ABP_LightMesh_Accent_SpotAndPoint_C) == 0x000008, "Wrong alignment on ABP_LightMesh_Accent_SpotAndPoint_C");
static_assert(sizeof(ABP_LightMesh_Accent_SpotAndPoint_C) == 0x000570, "Wrong size on ABP_LightMesh_Accent_SpotAndPoint_C");
static_assert(offsetof(ABP_LightMesh_Accent_SpotAndPoint_C, SpotLight) == 0x000560, "Member 'ABP_LightMesh_Accent_SpotAndPoint_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_LightMesh_Accent_SpotAndPoint_C, PointLight) == 0x000568, "Member 'ABP_LightMesh_Accent_SpotAndPoint_C::PointLight' has a wrong offset!");

}

