#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OakAbility_Siren_ClassMod_Unique_02

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass OakAbility_Siren_ClassMod_Unique_02.OakAbility_Siren_ClassMod_Unique_02_C
// 0x01C0 (0x02B8 - 0x00F8)
class UOakAbility_Siren_ClassMod_Unique_02_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_OakAbility_Siren_ClassMod_Unique_02; // 0x0100(0x0028)()
	struct FPhaseTranceActivationComboData        PhasetranceActivationData;                         // 0x0128(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FEnvQueryParams                        FindNearbyTargetsEQS;                              // 0x0140(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FEnvQueryParams                        FindNearbyPlayersEQS;                              // 0x01F8(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Result;                                            // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_OakAbility_Siren_ClassMod_Unique_02(int32 EntryPoint);
	void OnCausedDeath(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void OnActivated();
	void DoEffectAllure(const struct FTransform& Transform, bool* Res);
	void DoEffectSoulSap(class AActor* SourceActor, float Damage, bool* Res);
	void DoEffectGlamour(bool* Res);
	void DoEffectBrightStar(const struct FTransform& Transform, bool* Res);
	void DoEffectStillnessofMind(bool* Res);
	void FindNearbyPlayer(class AActor** Player, bool* Res);
	void FindNearbyEnemies(TArray<class AActor*>* Targets, bool* Res);
	void CheckAscendant(bool* Res);
	EGbxAbilityState CalculateAbilityState();
	void DoEffectQuicken(bool* Res);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OakAbility_Siren_ClassMod_Unique_02_C">();
	}
	static class UOakAbility_Siren_ClassMod_Unique_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOakAbility_Siren_ClassMod_Unique_02_C>();
	}
};
static_assert(alignof(UOakAbility_Siren_ClassMod_Unique_02_C) == 0x000008, "Wrong alignment on UOakAbility_Siren_ClassMod_Unique_02_C");
static_assert(sizeof(UOakAbility_Siren_ClassMod_Unique_02_C) == 0x0002B8, "Wrong size on UOakAbility_Siren_ClassMod_Unique_02_C");
static_assert(offsetof(UOakAbility_Siren_ClassMod_Unique_02_C, UberGraphFrame) == 0x0000F8, "Member 'UOakAbility_Siren_ClassMod_Unique_02_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOakAbility_Siren_ClassMod_Unique_02_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_OakAbility_Siren_ClassMod_Unique_02) == 0x000100, "Member 'UOakAbility_Siren_ClassMod_Unique_02_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_OakAbility_Siren_ClassMod_Unique_02' has a wrong offset!");
static_assert(offsetof(UOakAbility_Siren_ClassMod_Unique_02_C, PhasetranceActivationData) == 0x000128, "Member 'UOakAbility_Siren_ClassMod_Unique_02_C::PhasetranceActivationData' has a wrong offset!");
static_assert(offsetof(UOakAbility_Siren_ClassMod_Unique_02_C, FindNearbyTargetsEQS) == 0x000140, "Member 'UOakAbility_Siren_ClassMod_Unique_02_C::FindNearbyTargetsEQS' has a wrong offset!");
static_assert(offsetof(UOakAbility_Siren_ClassMod_Unique_02_C, FindNearbyPlayersEQS) == 0x0001F8, "Member 'UOakAbility_Siren_ClassMod_Unique_02_C::FindNearbyPlayersEQS' has a wrong offset!");
static_assert(offsetof(UOakAbility_Siren_ClassMod_Unique_02_C, Result) == 0x0002B0, "Member 'UOakAbility_Siren_ClassMod_Unique_02_C::Result' has a wrong offset!");

}

