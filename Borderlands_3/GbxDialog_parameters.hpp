#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDialog

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GbxDialog.DialogActionBlueprintImplementation.Execute
// 0x0218 (0x0218 - 0x0000)
struct DialogActionBlueprintImplementation_Execute final
{
public:
	struct FDialogContext                         Context;                                           // 0x0000(0x0218)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DialogActionBlueprintImplementation_Execute) == 0x000008, "Wrong alignment on DialogActionBlueprintImplementation_Execute");
static_assert(sizeof(DialogActionBlueprintImplementation_Execute) == 0x000218, "Wrong size on DialogActionBlueprintImplementation_Execute");
static_assert(offsetof(DialogActionBlueprintImplementation_Execute, Context) == 0x000000, "Member 'DialogActionBlueprintImplementation_Execute::Context' has a wrong offset!");

// Function GbxDialog.DialogEnumValueInterface.GetEnumValue
// 0x0010 (0x0010 - 0x0000)
struct DialogEnumValueInterface_GetEnumValue final
{
public:
	const class UDialogEnumType*                  EnumType;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEnumValue*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DialogEnumValueInterface_GetEnumValue) == 0x000008, "Wrong alignment on DialogEnumValueInterface_GetEnumValue");
static_assert(sizeof(DialogEnumValueInterface_GetEnumValue) == 0x000010, "Wrong size on DialogEnumValueInterface_GetEnumValue");
static_assert(offsetof(DialogEnumValueInterface_GetEnumValue, EnumType) == 0x000000, "Member 'DialogEnumValueInterface_GetEnumValue::EnumType' has a wrong offset!");
static_assert(offsetof(DialogEnumValueInterface_GetEnumValue, ReturnValue) == 0x000008, "Member 'DialogEnumValueInterface_GetEnumValue::ReturnValue' has a wrong offset!");

// Function GbxDialog.DialogSelectorImplementation.PerformTest
// 0x0220 (0x0220 - 0x0000)
struct DialogSelectorImplementation_PerformTest final
{
public:
	struct FDialogContext                         Context;                                           // 0x0000(0x0218)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EDialogDecisionTestResult                     Result;                                            // 0x0218(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DialogSelectorImplementation_PerformTest) == 0x000008, "Wrong alignment on DialogSelectorImplementation_PerformTest");
static_assert(sizeof(DialogSelectorImplementation_PerformTest) == 0x000220, "Wrong size on DialogSelectorImplementation_PerformTest");
static_assert(offsetof(DialogSelectorImplementation_PerformTest, Context) == 0x000000, "Member 'DialogSelectorImplementation_PerformTest::Context' has a wrong offset!");
static_assert(offsetof(DialogSelectorImplementation_PerformTest, Result) == 0x000218, "Member 'DialogSelectorImplementation_PerformTest::Result' has a wrong offset!");

// Function GbxDialog.DialogSpeakerInterface.CanPerformThisDialog
// 0x0010 (0x0010 - 0x0000)
struct DialogSpeakerInterface_CanPerformThisDialog final
{
public:
	class UDialogPerformanceData*                 Performance;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DialogSpeakerInterface_CanPerformThisDialog) == 0x000008, "Wrong alignment on DialogSpeakerInterface_CanPerformThisDialog");
static_assert(sizeof(DialogSpeakerInterface_CanPerformThisDialog) == 0x000010, "Wrong size on DialogSpeakerInterface_CanPerformThisDialog");
static_assert(offsetof(DialogSpeakerInterface_CanPerformThisDialog, Performance) == 0x000000, "Member 'DialogSpeakerInterface_CanPerformThisDialog::Performance' has a wrong offset!");
static_assert(offsetof(DialogSpeakerInterface_CanPerformThisDialog, ReturnValue) == 0x000008, "Member 'DialogSpeakerInterface_CanPerformThisDialog::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.ActivateDialogScript
// 0x0038 (0x0038 - 0x0000)
struct GbxDialogBlueprintLibrary_ActivateDialogScript final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDialogScriptData>       SoftScript;                                        // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogScriptData*                      Script;                                            // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_ActivateDialogScript) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_ActivateDialogScript");
static_assert(sizeof(GbxDialogBlueprintLibrary_ActivateDialogScript) == 0x000038, "Wrong size on GbxDialogBlueprintLibrary_ActivateDialogScript");
static_assert(offsetof(GbxDialogBlueprintLibrary_ActivateDialogScript, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_ActivateDialogScript::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_ActivateDialogScript, SoftScript) == 0x000008, "Member 'GbxDialogBlueprintLibrary_ActivateDialogScript::SoftScript' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_ActivateDialogScript, Script) == 0x000030, "Member 'GbxDialogBlueprintLibrary_ActivateDialogScript::Script' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.BindToDialogNotify
// 0x0028 (0x0028 - 0x0000)
struct GbxDialogBlueprintLibrary_BindToDialogNotify final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayingSequenceID;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NotifyName;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             Delegate;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_BindToDialogNotify) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_BindToDialogNotify");
static_assert(sizeof(GbxDialogBlueprintLibrary_BindToDialogNotify) == 0x000028, "Wrong size on GbxDialogBlueprintLibrary_BindToDialogNotify");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogNotify, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_BindToDialogNotify::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogNotify, PlayingSequenceID) == 0x000008, "Member 'GbxDialogBlueprintLibrary_BindToDialogNotify::PlayingSequenceID' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogNotify, NotifyName) == 0x000010, "Member 'GbxDialogBlueprintLibrary_BindToDialogNotify::NotifyName' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogNotify, Delegate) == 0x000018, "Member 'GbxDialogBlueprintLibrary_BindToDialogNotify::Delegate' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.BindToDialogSequenceFinished
// 0x0020 (0x0020 - 0x0000)
struct GbxDialogBlueprintLibrary_BindToDialogSequenceFinished final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayingSequenceID;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Delegate;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_BindToDialogSequenceFinished) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_BindToDialogSequenceFinished");
static_assert(sizeof(GbxDialogBlueprintLibrary_BindToDialogSequenceFinished) == 0x000020, "Wrong size on GbxDialogBlueprintLibrary_BindToDialogSequenceFinished");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogSequenceFinished, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_BindToDialogSequenceFinished::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogSequenceFinished, PlayingSequenceID) == 0x000008, "Member 'GbxDialogBlueprintLibrary_BindToDialogSequenceFinished::PlayingSequenceID' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_BindToDialogSequenceFinished, Delegate) == 0x000010, "Member 'GbxDialogBlueprintLibrary_BindToDialogSequenceFinished::Delegate' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.CancelDialogBlockingHold
// 0x0010 (0x0010 - 0x0000)
struct GbxDialogBlueprintLibrary_CancelDialogBlockingHold final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HoldName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_CancelDialogBlockingHold) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_CancelDialogBlockingHold");
static_assert(sizeof(GbxDialogBlueprintLibrary_CancelDialogBlockingHold) == 0x000010, "Wrong size on GbxDialogBlueprintLibrary_CancelDialogBlockingHold");
static_assert(offsetof(GbxDialogBlueprintLibrary_CancelDialogBlockingHold, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_CancelDialogBlockingHold::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_CancelDialogBlockingHold, HoldName) == 0x000008, "Member 'GbxDialogBlueprintLibrary_CancelDialogBlockingHold::HoldName' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.ConvertBoolToDialogTestResult
// 0x0002 (0x0002 - 0x0000)
struct GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDialogDecisionTestResult                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult) == 0x000001, "Wrong alignment on GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult");
static_assert(sizeof(GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult) == 0x000002, "Wrong size on GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult");
static_assert(offsetof(GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult, bValue) == 0x000000, "Member 'GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult::bValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult, ReturnValue) == 0x000001, "Member 'GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.DeactivateDialogScript
// 0x0038 (0x0038 - 0x0000)
struct GbxDialogBlueprintLibrary_DeactivateDialogScript final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDialogScriptData>       SoftScript;                                        // 0x0008(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogScriptData*                      Script;                                            // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_DeactivateDialogScript) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_DeactivateDialogScript");
static_assert(sizeof(GbxDialogBlueprintLibrary_DeactivateDialogScript) == 0x000038, "Wrong size on GbxDialogBlueprintLibrary_DeactivateDialogScript");
static_assert(offsetof(GbxDialogBlueprintLibrary_DeactivateDialogScript, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_DeactivateDialogScript::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_DeactivateDialogScript, SoftScript) == 0x000008, "Member 'GbxDialogBlueprintLibrary_DeactivateDialogScript::SoftScript' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_DeactivateDialogScript, Script) == 0x000030, "Member 'GbxDialogBlueprintLibrary_DeactivateDialogScript::Script' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.EnqueueDialogPerformance
// 0x0040 (0x0040 - 0x0000)
struct GbxDialogBlueprintLibrary_EnqueueDialogPerformance final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxDialogComponent*                    Speaker;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogPerformanceData*                 Performance;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelay;                                        // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogConversation                    ContinueConversation;                              // 0x001C(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogConversation                    Conversation;                                      // 0x0028(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DialogPlaybackSequence;                            // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_EnqueueDialogPerformance");
static_assert(sizeof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance) == 0x000040, "Wrong size on GbxDialogBlueprintLibrary_EnqueueDialogPerformance");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, Speaker) == 0x000008, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::Speaker' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, Performance) == 0x000010, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::Performance' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, StartDelay) == 0x000018, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::StartDelay' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, ContinueConversation) == 0x00001C, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::ContinueConversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, Conversation) == 0x000028, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::Conversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, DialogPlaybackSequence) == 0x000034, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::DialogPlaybackSequence' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_EnqueueDialogPerformance, ReturnValue) == 0x000038, "Member 'GbxDialogBlueprintLibrary_EnqueueDialogPerformance::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.FindOrCreateNamedSpeaker
// 0x0020 (0x0020 - 0x0000)
struct GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker final
{
public:
	class UDialogNameTag*                         NameTag;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludePureEchoSpeakers;                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateIfNotFound;                                 // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxDialogComponent*                    Speaker;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker");
static_assert(sizeof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker) == 0x000020, "Wrong size on GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker");
static_assert(offsetof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker, NameTag) == 0x000000, "Member 'GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker::NameTag' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker, bIncludePureEchoSpeakers) == 0x000008, "Member 'GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker::bIncludePureEchoSpeakers' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker, bCreateIfNotFound) == 0x000009, "Member 'GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker::bCreateIfNotFound' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker, Speaker) == 0x000010, "Member 'GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker::Speaker' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker, ReturnValue) == 0x000018, "Member 'GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.FinishSpeak
// 0x0290 (0x0290 - 0x0000)
struct GbxDialogBlueprintLibrary_FinishSpeak final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference               TimeSlotRef;                                       // 0x0008(0x0040)(ConstParm, Parm, NativeAccessSpecifierPublic)
	class UGbxDialogComponent*                    OptionalSpeaker;                                   // 0x0048(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogContext                         Context;                                           // 0x0050(0x0218)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDialogConversation                    ContinueConversation;                              // 0x0268(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogConversation                    Conversation;                                      // 0x0274(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelay;                                        // 0x0280(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SequenceID;                                        // 0x0284(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverrideMaxWait;                                   // 0x0288(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x028C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_FinishSpeak) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_FinishSpeak");
static_assert(sizeof(GbxDialogBlueprintLibrary_FinishSpeak) == 0x000290, "Wrong size on GbxDialogBlueprintLibrary_FinishSpeak");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, TimeSlotRef) == 0x000008, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::TimeSlotRef' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, OptionalSpeaker) == 0x000048, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::OptionalSpeaker' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, Context) == 0x000050, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::Context' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, ContinueConversation) == 0x000268, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::ContinueConversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, Conversation) == 0x000274, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::Conversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, StartDelay) == 0x000280, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::StartDelay' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, SequenceID) == 0x000284, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::SequenceID' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, OverrideMaxWait) == 0x000288, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::OverrideMaxWait' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishSpeak, ReturnValue) == 0x00028C, "Member 'GbxDialogBlueprintLibrary_FinishSpeak::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.FinishTriggerDialog
// 0x0250 (0x0250 - 0x0000)
struct GbxDialogBlueprintLibrary_FinishTriggerDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                           Event;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogContext                         Context;                                           // 0x0010(0x0218)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDialogConversation                    ContinueConversation;                              // 0x0228(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogConversation                    Conversation;                                      // 0x0234(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelay;                                        // 0x0240(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SequenceID;                                        // 0x0244(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0248(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_FinishTriggerDialog) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_FinishTriggerDialog");
static_assert(sizeof(GbxDialogBlueprintLibrary_FinishTriggerDialog) == 0x000250, "Wrong size on GbxDialogBlueprintLibrary_FinishTriggerDialog");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, Event) == 0x000008, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::Event' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, Context) == 0x000010, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::Context' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, ContinueConversation) == 0x000228, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::ContinueConversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, Conversation) == 0x000234, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::Conversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, StartDelay) == 0x000240, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::StartDelay' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, SequenceID) == 0x000244, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::SequenceID' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_FinishTriggerDialog, ReturnValue) == 0x000248, "Member 'GbxDialogBlueprintLibrary_FinishTriggerDialog::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.GetConversationStatus
// 0x0010 (0x0010 - 0x0000)
struct GbxDialogBlueprintLibrary_GetConversationStatus final
{
public:
	struct FDialogConversation                    Conversation;                                      // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDialogConversationStatus                  ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_GetConversationStatus) == 0x000004, "Wrong alignment on GbxDialogBlueprintLibrary_GetConversationStatus");
static_assert(sizeof(GbxDialogBlueprintLibrary_GetConversationStatus) == 0x000010, "Wrong size on GbxDialogBlueprintLibrary_GetConversationStatus");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetConversationStatus, Conversation) == 0x000000, "Member 'GbxDialogBlueprintLibrary_GetConversationStatus::Conversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetConversationStatus, ReturnValue) == 0x00000C, "Member 'GbxDialogBlueprintLibrary_GetConversationStatus::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.GetDialogContextParameter
// 0x0230 (0x0230 - 0x0000)
struct GbxDialogBlueprintLibrary_GetDialogContextParameter final
{
public:
	struct FDialogContext                         Context;                                           // 0x0000(0x0218)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDialogParameter*                       Parameter;                                         // 0x0218(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ObjectValue;                                       // 0x0220(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0228(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBoolValue;                                        // 0x022C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_GetDialogContextParameter) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_GetDialogContextParameter");
static_assert(sizeof(GbxDialogBlueprintLibrary_GetDialogContextParameter) == 0x000230, "Wrong size on GbxDialogBlueprintLibrary_GetDialogContextParameter");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameter, Context) == 0x000000, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameter::Context' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameter, Parameter) == 0x000218, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameter::Parameter' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameter, ObjectValue) == 0x000220, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameter::ObjectValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameter, FloatValue) == 0x000228, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameter::FloatValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameter, bBoolValue) == 0x00022C, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameter::bBoolValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.GetDialogContextParameterSummary
// 0x0228 (0x0228 - 0x0000)
struct GbxDialogBlueprintLibrary_GetDialogContextParameterSummary final
{
public:
	struct FDialogContext                         Context;                                           // 0x0000(0x0218)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0218(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_GetDialogContextParameterSummary) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_GetDialogContextParameterSummary");
static_assert(sizeof(GbxDialogBlueprintLibrary_GetDialogContextParameterSummary) == 0x000228, "Wrong size on GbxDialogBlueprintLibrary_GetDialogContextParameterSummary");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameterSummary, Context) == 0x000000, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameterSummary::Context' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogContextParameterSummary, ReturnValue) == 0x000218, "Member 'GbxDialogBlueprintLibrary_GetDialogContextParameterSummary::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.GetDialogFlag
// 0x0018 (0x0018 - 0x0000)
struct GbxDialogBlueprintLibrary_GetDialogFlag final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEnumValue*                       DialogEnumValue;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_GetDialogFlag) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_GetDialogFlag");
static_assert(sizeof(GbxDialogBlueprintLibrary_GetDialogFlag) == 0x000018, "Wrong size on GbxDialogBlueprintLibrary_GetDialogFlag");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogFlag, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_GetDialogFlag::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogFlag, DialogEnumValue) == 0x000008, "Member 'GbxDialogBlueprintLibrary_GetDialogFlag::DialogEnumValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_GetDialogFlag, ReturnValue) == 0x000010, "Member 'GbxDialogBlueprintLibrary_GetDialogFlag::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.InterruptConversation
// 0x000C (0x000C - 0x0000)
struct GbxDialogBlueprintLibrary_InterruptConversation final
{
public:
	struct FDialogConversation                    Conversation;                                      // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_InterruptConversation) == 0x000004, "Wrong alignment on GbxDialogBlueprintLibrary_InterruptConversation");
static_assert(sizeof(GbxDialogBlueprintLibrary_InterruptConversation) == 0x00000C, "Wrong size on GbxDialogBlueprintLibrary_InterruptConversation");
static_assert(offsetof(GbxDialogBlueprintLibrary_InterruptConversation, Conversation) == 0x000000, "Member 'GbxDialogBlueprintLibrary_InterruptConversation::Conversation' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.InterruptDialogInRadius
// 0x0018 (0x0018 - 0x0000)
struct GbxDialogBlueprintLibrary_InterruptDialogInRadius final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Origin;                                            // 0x0008(0x000C)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_InterruptDialogInRadius) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_InterruptDialogInRadius");
static_assert(sizeof(GbxDialogBlueprintLibrary_InterruptDialogInRadius) == 0x000018, "Wrong size on GbxDialogBlueprintLibrary_InterruptDialogInRadius");
static_assert(offsetof(GbxDialogBlueprintLibrary_InterruptDialogInRadius, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_InterruptDialogInRadius::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_InterruptDialogInRadius, Origin) == 0x000008, "Member 'GbxDialogBlueprintLibrary_InterruptDialogInRadius::Origin' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_InterruptDialogInRadius, Radius) == 0x000014, "Member 'GbxDialogBlueprintLibrary_InterruptDialogInRadius::Radius' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.NewDialogContext
// 0x0218 (0x0218 - 0x0000)
struct GbxDialogBlueprintLibrary_NewDialogContext final
{
public:
	struct FDialogContext                         ReturnValue;                                       // 0x0000(0x0218)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_NewDialogContext) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_NewDialogContext");
static_assert(sizeof(GbxDialogBlueprintLibrary_NewDialogContext) == 0x000218, "Wrong size on GbxDialogBlueprintLibrary_NewDialogContext");
static_assert(offsetof(GbxDialogBlueprintLibrary_NewDialogContext, ReturnValue) == 0x000000, "Member 'GbxDialogBlueprintLibrary_NewDialogContext::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.NewDialogConversation
// 0x0030 (0x0030 - 0x0000)
struct GbxDialogBlueprintLibrary_NewDialogConversation final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 KeyActor;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogNameTag*                         KeySpeakerName;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                KeyLocation;                                       // 0x0018(0x000C)(Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogConversation                    ReturnValue;                                       // 0x0024(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_NewDialogConversation) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_NewDialogConversation");
static_assert(sizeof(GbxDialogBlueprintLibrary_NewDialogConversation) == 0x000030, "Wrong size on GbxDialogBlueprintLibrary_NewDialogConversation");
static_assert(offsetof(GbxDialogBlueprintLibrary_NewDialogConversation, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_NewDialogConversation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_NewDialogConversation, KeyActor) == 0x000008, "Member 'GbxDialogBlueprintLibrary_NewDialogConversation::KeyActor' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_NewDialogConversation, KeySpeakerName) == 0x000010, "Member 'GbxDialogBlueprintLibrary_NewDialogConversation::KeySpeakerName' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_NewDialogConversation, KeyLocation) == 0x000018, "Member 'GbxDialogBlueprintLibrary_NewDialogConversation::KeyLocation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_NewDialogConversation, ReturnValue) == 0x000024, "Member 'GbxDialogBlueprintLibrary_NewDialogConversation::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.PlaceGlobalDialogHold
// 0x0020 (0x0020 - 0x0000)
struct GbxDialogBlueprintLibrary_PlaceGlobalDialogHold final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HoldName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuietTimePredicate*                    Rules;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_PlaceGlobalDialogHold) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_PlaceGlobalDialogHold");
static_assert(sizeof(GbxDialogBlueprintLibrary_PlaceGlobalDialogHold) == 0x000020, "Wrong size on GbxDialogBlueprintLibrary_PlaceGlobalDialogHold");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceGlobalDialogHold, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_PlaceGlobalDialogHold::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceGlobalDialogHold, HoldName) == 0x000008, "Member 'GbxDialogBlueprintLibrary_PlaceGlobalDialogHold::HoldName' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceGlobalDialogHold, Rules) == 0x000010, "Member 'GbxDialogBlueprintLibrary_PlaceGlobalDialogHold::Rules' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceGlobalDialogHold, Duration) == 0x000018, "Member 'GbxDialogBlueprintLibrary_PlaceGlobalDialogHold::Duration' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.PlaceRegionalDialogHold
// 0x0030 (0x0030 - 0x0000)
struct GbxDialogBlueprintLibrary_PlaceRegionalDialogHold final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HoldName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuietTimePredicate*                    Rules;                                             // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_PlaceRegionalDialogHold");
static_assert(sizeof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold) == 0x000030, "Wrong size on GbxDialogBlueprintLibrary_PlaceRegionalDialogHold");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_PlaceRegionalDialogHold::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold, HoldName) == 0x000008, "Member 'GbxDialogBlueprintLibrary_PlaceRegionalDialogHold::HoldName' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold, Location) == 0x000010, "Member 'GbxDialogBlueprintLibrary_PlaceRegionalDialogHold::Location' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold, Radius) == 0x00001C, "Member 'GbxDialogBlueprintLibrary_PlaceRegionalDialogHold::Radius' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold, Rules) == 0x000020, "Member 'GbxDialogBlueprintLibrary_PlaceRegionalDialogHold::Rules' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_PlaceRegionalDialogHold, Duration) == 0x000028, "Member 'GbxDialogBlueprintLibrary_PlaceRegionalDialogHold::Duration' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.ResolveDialogTimeSlotReference
// 0x0050 (0x0050 - 0x0000)
struct GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference final
{
public:
	struct FDialogTimeSlotReference               Reference;                                         // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UDialogTimeSlotData*                    TimeSlot;                                          // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogScriptData*                      Script;                                            // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference");
static_assert(sizeof(GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference) == 0x000050, "Wrong size on GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference");
static_assert(offsetof(GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference, Reference) == 0x000000, "Member 'GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference::Reference' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference, TimeSlot) == 0x000040, "Member 'GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference::TimeSlot' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference, Script) == 0x000048, "Member 'GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference::Script' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.SetConversationPlayerHints
// 0x0030 (0x0030 - 0x0000)
struct GbxDialogBlueprintLibrary_SetConversationPlayerHints final
{
public:
	struct FDialogConversation                    Conversation;                                      // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogNameTag*                         NameTag;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0020(0x000C)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_SetConversationPlayerHints) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_SetConversationPlayerHints");
static_assert(sizeof(GbxDialogBlueprintLibrary_SetConversationPlayerHints) == 0x000030, "Wrong size on GbxDialogBlueprintLibrary_SetConversationPlayerHints");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetConversationPlayerHints, Conversation) == 0x000000, "Member 'GbxDialogBlueprintLibrary_SetConversationPlayerHints::Conversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetConversationPlayerHints, Actor) == 0x000010, "Member 'GbxDialogBlueprintLibrary_SetConversationPlayerHints::Actor' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetConversationPlayerHints, NameTag) == 0x000018, "Member 'GbxDialogBlueprintLibrary_SetConversationPlayerHints::NameTag' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetConversationPlayerHints, Location) == 0x000020, "Member 'GbxDialogBlueprintLibrary_SetConversationPlayerHints::Location' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.SetDialogContextParameter
// 0x0230 (0x0230 - 0x0000)
struct GbxDialogBlueprintLibrary_SetDialogContextParameter final
{
public:
	struct FDialogContext                         Context;                                           // 0x0000(0x0218)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDialogParameter*                       Parameter;                                         // 0x0218(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ObjectValue;                                       // 0x0220(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0228(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBoolValue;                                        // 0x022C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_SetDialogContextParameter) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_SetDialogContextParameter");
static_assert(sizeof(GbxDialogBlueprintLibrary_SetDialogContextParameter) == 0x000230, "Wrong size on GbxDialogBlueprintLibrary_SetDialogContextParameter");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogContextParameter, Context) == 0x000000, "Member 'GbxDialogBlueprintLibrary_SetDialogContextParameter::Context' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogContextParameter, Parameter) == 0x000218, "Member 'GbxDialogBlueprintLibrary_SetDialogContextParameter::Parameter' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogContextParameter, ObjectValue) == 0x000220, "Member 'GbxDialogBlueprintLibrary_SetDialogContextParameter::ObjectValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogContextParameter, FloatValue) == 0x000228, "Member 'GbxDialogBlueprintLibrary_SetDialogContextParameter::FloatValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogContextParameter, bBoolValue) == 0x00022C, "Member 'GbxDialogBlueprintLibrary_SetDialogContextParameter::bBoolValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.SetDialogFlag
// 0x0018 (0x0018 - 0x0000)
struct GbxDialogBlueprintLibrary_SetDialogFlag final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEnumValue*                       DialogEnumValue;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_SetDialogFlag) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_SetDialogFlag");
static_assert(sizeof(GbxDialogBlueprintLibrary_SetDialogFlag) == 0x000018, "Wrong size on GbxDialogBlueprintLibrary_SetDialogFlag");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogFlag, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_SetDialogFlag::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogFlag, DialogEnumValue) == 0x000008, "Member 'GbxDialogBlueprintLibrary_SetDialogFlag::DialogEnumValue' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogFlag, Value) == 0x000010, "Member 'GbxDialogBlueprintLibrary_SetDialogFlag::Value' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogFlag, Duration) == 0x000014, "Member 'GbxDialogBlueprintLibrary_SetDialogFlag::Duration' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.SetDialogGameCustomizationMetadata
// 0x0020 (0x0020 - 0x0000)
struct GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SequenceID;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Cookie;                                            // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata");
static_assert(sizeof(GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata) == 0x000020, "Wrong size on GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata, SequenceID) == 0x000008, "Member 'GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata::SequenceID' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata, Object) == 0x000010, "Member 'GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata::Object' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata, Cookie) == 0x000018, "Member 'GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata::Cookie' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.SetNextDialogPlayerHints
// 0x0028 (0x0028 - 0x0000)
struct GbxDialogBlueprintLibrary_SetNextDialogPlayerHints final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogNameTag*                         NameTag;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x000C)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_SetNextDialogPlayerHints) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_SetNextDialogPlayerHints");
static_assert(sizeof(GbxDialogBlueprintLibrary_SetNextDialogPlayerHints) == 0x000028, "Wrong size on GbxDialogBlueprintLibrary_SetNextDialogPlayerHints");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetNextDialogPlayerHints, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_SetNextDialogPlayerHints::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetNextDialogPlayerHints, Actor) == 0x000008, "Member 'GbxDialogBlueprintLibrary_SetNextDialogPlayerHints::Actor' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetNextDialogPlayerHints, NameTag) == 0x000010, "Member 'GbxDialogBlueprintLibrary_SetNextDialogPlayerHints::NameTag' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_SetNextDialogPlayerHints, Location) == 0x000018, "Member 'GbxDialogBlueprintLibrary_SetNextDialogPlayerHints::Location' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.StopActiveDialog
// 0x0010 (0x0010 - 0x0000)
struct GbxDialogBlueprintLibrary_StopActiveDialog final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDeathDialog;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_StopActiveDialog) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_StopActiveDialog");
static_assert(sizeof(GbxDialogBlueprintLibrary_StopActiveDialog) == 0x000010, "Wrong size on GbxDialogBlueprintLibrary_StopActiveDialog");
static_assert(offsetof(GbxDialogBlueprintLibrary_StopActiveDialog, Target) == 0x000000, "Member 'GbxDialogBlueprintLibrary_StopActiveDialog::Target' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_StopActiveDialog, bIncludeDeathDialog) == 0x000008, "Member 'GbxDialogBlueprintLibrary_StopActiveDialog::bIncludeDeathDialog' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.TestDialogSelector
// 0x0230 (0x0230 - 0x0000)
struct GbxDialogBlueprintLibrary_TestDialogSelector final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogSelectorFunction*                Selector;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogContext                         InputParameters;                                   // 0x0010(0x0218)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogBlueprintLibrary_TestDialogSelector) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_TestDialogSelector");
static_assert(sizeof(GbxDialogBlueprintLibrary_TestDialogSelector) == 0x000230, "Wrong size on GbxDialogBlueprintLibrary_TestDialogSelector");
static_assert(offsetof(GbxDialogBlueprintLibrary_TestDialogSelector, WorldContextObject) == 0x000000, "Member 'GbxDialogBlueprintLibrary_TestDialogSelector::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_TestDialogSelector, Selector) == 0x000008, "Member 'GbxDialogBlueprintLibrary_TestDialogSelector::Selector' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_TestDialogSelector, InputParameters) == 0x000010, "Member 'GbxDialogBlueprintLibrary_TestDialogSelector::InputParameters' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_TestDialogSelector, ReturnValue) == 0x000228, "Member 'GbxDialogBlueprintLibrary_TestDialogSelector::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogBlueprintLibrary.WaitForDialog
// 0x0028 (0x0028 - 0x0000)
struct GbxDialogBlueprintLibrary_WaitForDialog final
{
public:
	struct FDialogConversation                    Conversation;                                      // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0010(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogBlueprintLibrary_WaitForDialog) == 0x000008, "Wrong alignment on GbxDialogBlueprintLibrary_WaitForDialog");
static_assert(sizeof(GbxDialogBlueprintLibrary_WaitForDialog) == 0x000028, "Wrong size on GbxDialogBlueprintLibrary_WaitForDialog");
static_assert(offsetof(GbxDialogBlueprintLibrary_WaitForDialog, Conversation) == 0x000000, "Member 'GbxDialogBlueprintLibrary_WaitForDialog::Conversation' has a wrong offset!");
static_assert(offsetof(GbxDialogBlueprintLibrary_WaitForDialog, LatentInfo) == 0x000010, "Member 'GbxDialogBlueprintLibrary_WaitForDialog::LatentInfo' has a wrong offset!");

// Function GbxDialog.GbxDialogComponent.StartPerformance
// 0x0010 (0x0010 - 0x0000)
struct GbxDialogComponent_StartPerformance final
{
public:
	int32                                         DialogThreadID;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DialogSequenceID;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogPerformanceData*                 Performance;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogComponent_StartPerformance) == 0x000008, "Wrong alignment on GbxDialogComponent_StartPerformance");
static_assert(sizeof(GbxDialogComponent_StartPerformance) == 0x000010, "Wrong size on GbxDialogComponent_StartPerformance");
static_assert(offsetof(GbxDialogComponent_StartPerformance, DialogThreadID) == 0x000000, "Member 'GbxDialogComponent_StartPerformance::DialogThreadID' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_StartPerformance, DialogSequenceID) == 0x000004, "Member 'GbxDialogComponent_StartPerformance::DialogSequenceID' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_StartPerformance, Performance) == 0x000008, "Member 'GbxDialogComponent_StartPerformance::Performance' has a wrong offset!");

// Function GbxDialog.GbxDialogComponent.StopPerformance
// 0x0008 (0x0008 - 0x0000)
struct GbxDialogComponent_StopPerformance final
{
public:
	int32                                         DialogThreadID;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDeathDialog;                               // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogComponent_StopPerformance) == 0x000004, "Wrong alignment on GbxDialogComponent_StopPerformance");
static_assert(sizeof(GbxDialogComponent_StopPerformance) == 0x000008, "Wrong size on GbxDialogComponent_StopPerformance");
static_assert(offsetof(GbxDialogComponent_StopPerformance, DialogThreadID) == 0x000000, "Member 'GbxDialogComponent_StopPerformance::DialogThreadID' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_StopPerformance, bIncludeDeathDialog) == 0x000004, "Member 'GbxDialogComponent_StopPerformance::bIncludeDeathDialog' has a wrong offset!");

// Function GbxDialog.GbxDialogComponent.IsSpeakerActive
// 0x0002 (0x0002 - 0x0000)
struct GbxDialogComponent_IsSpeakerActive final
{
public:
	bool                                          bIncludePendingVO;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDialogComponent_IsSpeakerActive) == 0x000001, "Wrong alignment on GbxDialogComponent_IsSpeakerActive");
static_assert(sizeof(GbxDialogComponent_IsSpeakerActive) == 0x000002, "Wrong size on GbxDialogComponent_IsSpeakerActive");
static_assert(offsetof(GbxDialogComponent_IsSpeakerActive, bIncludePendingVO) == 0x000000, "Member 'GbxDialogComponent_IsSpeakerActive::bIncludePendingVO' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_IsSpeakerActive, ReturnValue) == 0x000001, "Member 'GbxDialogComponent_IsSpeakerActive::ReturnValue' has a wrong offset!");

// Function GbxDialog.GbxDialogComponent.IsSpeakerClearToPlayDialog
// 0x0020 (0x0020 - 0x0000)
struct GbxDialogComponent_IsSpeakerClearToPlayDialog final
{
public:
	class UDialogStyle*                           ProposedStyle;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProposingEcho;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    ProposedConversation;                              // 0x000C(0x000C)(Parm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GbxDialogComponent_IsSpeakerClearToPlayDialog) == 0x000008, "Wrong alignment on GbxDialogComponent_IsSpeakerClearToPlayDialog");
static_assert(sizeof(GbxDialogComponent_IsSpeakerClearToPlayDialog) == 0x000020, "Wrong size on GbxDialogComponent_IsSpeakerClearToPlayDialog");
static_assert(offsetof(GbxDialogComponent_IsSpeakerClearToPlayDialog, ProposedStyle) == 0x000000, "Member 'GbxDialogComponent_IsSpeakerClearToPlayDialog::ProposedStyle' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_IsSpeakerClearToPlayDialog, bProposingEcho) == 0x000008, "Member 'GbxDialogComponent_IsSpeakerClearToPlayDialog::bProposingEcho' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_IsSpeakerClearToPlayDialog, ProposedConversation) == 0x00000C, "Member 'GbxDialogComponent_IsSpeakerClearToPlayDialog::ProposedConversation' has a wrong offset!");
static_assert(offsetof(GbxDialogComponent_IsSpeakerClearToPlayDialog, ReturnValue) == 0x000018, "Member 'GbxDialogComponent_IsSpeakerClearToPlayDialog::ReturnValue' has a wrong offset!");

// Function GbxDialog.GlobalDialogParametersProviderInterface.InitDialogContext
// 0x0218 (0x0218 - 0x0000)
struct GlobalDialogParametersProviderInterface_InitDialogContext final
{
public:
	struct FDialogContext                         Parameters;                                        // 0x0000(0x0218)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalDialogParametersProviderInterface_InitDialogContext) == 0x000008, "Wrong alignment on GlobalDialogParametersProviderInterface_InitDialogContext");
static_assert(sizeof(GlobalDialogParametersProviderInterface_InitDialogContext) == 0x000218, "Wrong size on GlobalDialogParametersProviderInterface_InitDialogContext");
static_assert(offsetof(GlobalDialogParametersProviderInterface_InitDialogContext, Parameters) == 0x000000, "Member 'GlobalDialogParametersProviderInterface_InitDialogContext::Parameters' has a wrong offset!");

}

