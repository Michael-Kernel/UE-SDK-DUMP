#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_DriveAwayThePain

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK::Params
{

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.ExecuteUbergraph_Mission_DriveAwayThePain
// 0x2B60 (0x2B60 - 0x0000)
struct Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0008(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0220(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue1;            // 0x0238(0x0218)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation1;                // 0x0454(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID1;                  // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue1;                 // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue1;              // 0x0465(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue2;            // 0x0468(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue3;            // 0x0680(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation2;                // 0x0898(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID2;                  // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue2;                 // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A9[0x3];                                      // 0x08A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation3;                // 0x08AC(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID3;                  // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue3;                 // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue2;              // 0x08BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue3;              // 0x08BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF[0x1];                                      // 0x08BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue4;            // 0x08C0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue5;            // 0x0AD8(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation4;                // 0x0CF0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID4;                  // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue4;                 // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D01[0x3];                                      // 0x0D01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation5;                // 0x0D04(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID5;                  // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue5;                 // 0x0D14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue4;              // 0x0D15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue5;              // 0x0D16(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D17[0x1];                                      // 0x0D17(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue6;            // 0x0D18(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation6;                // 0x0F30(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID6;                  // 0x0F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue6;                 // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue6;              // 0x0F41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F42[0x6];                                      // 0x0F42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue7;            // 0x0F48(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation7;                // 0x1160(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID7;                  // 0x116C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue7;                 // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue7;              // 0x1171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1172[0x6];                                     // 0x1172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue8;            // 0x1178(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation8;                // 0x1390(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID8;                  // 0x139C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue8;                 // 0x13A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A1[0x7];                                     // 0x13A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue9;            // 0x13A8(0x0218)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue8;              // 0x15C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C1[0x3];                                     // 0x15C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation9;                // 0x15C4(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID9;                  // 0x15D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue9;                 // 0x15D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue9;              // 0x15D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D6[0x2];                                     // 0x15D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue10;           // 0x15D8(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation10;               // 0x17F0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID10;                 // 0x17FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue10;                // 0x1800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1801[0x7];                                     // 0x1801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue11;           // 0x1808(0x0218)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue10;             // 0x1A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A21[0x3];                                     // 0x1A21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation11;               // 0x1A24(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID11;                 // 0x1A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue11;                // 0x1A34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue11;             // 0x1A35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A36[0x2];                                     // 0x1A36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue12;           // 0x1A38(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation12;               // 0x1C50(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID12;                 // 0x1C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue12;                // 0x1C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue12;             // 0x1C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C62[0x6];                                     // 0x1C62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue13;           // 0x1C68(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue14;           // 0x1E80(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation13;               // 0x2098(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID13;                 // 0x20A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue13;                // 0x20A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A9[0x3];                                     // 0x20A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation14;               // 0x20AC(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID14;                 // 0x20B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue14;                // 0x20BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue13;             // 0x20BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue14;             // 0x20BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20BF[0x1];                                     // 0x20BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue15;           // 0x20C0(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation15;               // 0x22D8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID15;                 // 0x22E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue15;                // 0x22E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue15;             // 0x22E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22EA[0x6];                                     // 0x22EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue16;           // 0x22F0(0x0218)()
	class UObject*                                MissionK2Node_MissionCustomEvent_Context21;        // 0x2508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation16;               // 0x2510(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID16;                 // 0x251C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue16;                // 0x2520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue16;             // 0x2521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5; // 0x2522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent14;     // 0x2523(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount14;     // 0x2524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context20;        // 0x2528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x2530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2531[0x7];                                     // 0x2531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context19;        // 0x2538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context18;        // 0x2540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent13;     // 0x2548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2549[0x3];                                     // 0x2549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount13;     // 0x254C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context17;        // 0x2550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent12;     // 0x2558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2559[0x3];                                     // 0x2559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount12;     // 0x255C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context16;        // 0x2560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue;           // 0x2568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2569[0x7];                                     // 0x2569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context15;        // 0x2570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue1;          // 0x2578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2579[0x7];                                     // 0x2579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context14;        // 0x2580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context13;        // 0x2588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue2;          // 0x2590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2591[0x7];                                     // 0x2591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context12;        // 0x2598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue3;          // 0x25A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A1[0x7];                                     // 0x25A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context11;        // 0x25A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context10;        // 0x25B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue4;          // 0x25B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x25B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BA[0x2];                                     // 0x25BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_Data;                             // 0x25BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x25C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25C1[0x3];                                     // 0x25C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x25C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent11;     // 0x25C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C9[0x3];                                     // 0x25C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount11;     // 0x25CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x25D0(0x0010)(ZeroConstructor, NoDestructor)
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue17;           // 0x25E0(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation17;               // 0x27F8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID17;                 // 0x2804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue17;                // 0x2808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent10;     // 0x2809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_280A[0x2];                                     // 0x280A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount10;     // 0x280C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue17;             // 0x2810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x2811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue5;          // 0x2812(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue6;          // 0x2813(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2814[0x4];                                     // 0x2814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x2818(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x2828(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context9;         // 0x2838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent9;      // 0x2840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2841[0x3];                                     // 0x2841(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount9;      // 0x2844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context8;         // 0x2848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x2850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent8;      // 0x2851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2852[0x2];                                     // 0x2852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount8;      // 0x2854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context7;         // 0x2858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x2860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent7;      // 0x2861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2862[0x2];                                     // 0x2862(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount7;      // 0x2864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context6;         // 0x2868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x2870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent6;      // 0x2871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2872[0x2];                                     // 0x2872(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount6;      // 0x2874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x2878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2879[0x7];                                     // 0x2879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context5;         // 0x2880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context4;         // 0x2888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context3;         // 0x2890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context2;         // 0x2898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent5;      // 0x28A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A1[0x3];                                     // 0x28A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount5;      // 0x28A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum6_CmpSuccess;                     // 0x28A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4; // 0x28A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent4;      // 0x28AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28AB[0x1];                                     // 0x28AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount4;      // 0x28AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3; // 0x28B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum7_CmpSuccess;                     // 0x28B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28B2[0x6];                                     // 0x28B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context1;         // 0x28B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent3;      // 0x28C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C1[0x3];                                     // 0x28C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount3;      // 0x28C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum8_CmpSuccess;                     // 0x28C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2; // 0x28C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent2;      // 0x28CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CB[0x1];                                     // 0x28CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount2;      // 0x28CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1; // 0x28D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum9_CmpSuccess;                     // 0x28D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent; // 0x28D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D3[0x5];                                     // 0x28D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x28D8(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent1;      // 0x28E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E9[0x3];                                     // 0x28E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount1;      // 0x28EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x28F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum10_CmpSuccess;                    // 0x28F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28F2[0x6];                                     // 0x28F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context;          // 0x28F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue18;           // 0x2900(0x0218)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x2B18(0x0010)(ZeroConstructor, NoDestructor)
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation18;               // 0x2B28(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID18;                 // 0x2B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue18;                // 0x2B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue18;             // 0x2B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B3A[0x6];                                     // 0x2B3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x2B40(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent;       // 0x2B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B51[0x3];                                     // 0x2B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount;       // 0x2B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum11_CmpSuccess;                    // 0x2B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain");
static_assert(sizeof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain) == 0x002B60, "Wrong size on Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, EntryPoint) == 0x000000, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue) == 0x000008, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation) == 0x000220, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID) == 0x00022C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue) == 0x000230, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue1) == 0x000238, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue) == 0x000450, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation1) == 0x000454, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID1) == 0x000460, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue1) == 0x000464, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue1) == 0x000465, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue2) == 0x000468, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue3) == 0x000680, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation2) == 0x000898, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID2) == 0x0008A4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue2) == 0x0008A8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation3) == 0x0008AC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID3) == 0x0008B8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue3) == 0x0008BC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue2) == 0x0008BD, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue3) == 0x0008BE, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue4) == 0x0008C0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue5) == 0x000AD8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation4) == 0x000CF0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID4) == 0x000CFC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue4) == 0x000D00, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation5) == 0x000D04, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID5) == 0x000D10, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue5) == 0x000D14, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue4) == 0x000D15, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue5) == 0x000D16, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue6) == 0x000D18, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation6) == 0x000F30, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID6) == 0x000F3C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue6) == 0x000F40, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue6) == 0x000F41, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue7) == 0x000F48, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation7) == 0x001160, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID7) == 0x00116C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue7) == 0x001170, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue7) == 0x001171, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue8) == 0x001178, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation8) == 0x001390, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID8) == 0x00139C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue8) == 0x0013A0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue9) == 0x0013A8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue8) == 0x0015C0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation9) == 0x0015C4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID9) == 0x0015D0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue9) == 0x0015D4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue9) == 0x0015D5, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue10) == 0x0015D8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation10) == 0x0017F0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID10) == 0x0017FC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue10) == 0x001800, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue11) == 0x001808, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue10) == 0x001A20, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation11) == 0x001A24, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID11) == 0x001A30, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue11) == 0x001A34, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue11) == 0x001A35, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue12) == 0x001A38, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation12) == 0x001C50, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID12) == 0x001C5C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue12) == 0x001C60, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue12) == 0x001C61, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue13) == 0x001C68, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue14) == 0x001E80, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation13) == 0x002098, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID13) == 0x0020A4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue13) == 0x0020A8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation14) == 0x0020AC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID14) == 0x0020B8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue14) == 0x0020BC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue13) == 0x0020BD, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue14) == 0x0020BE, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue15) == 0x0020C0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation15) == 0x0022D8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation15' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID15) == 0x0022E4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID15' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue15) == 0x0022E8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue15) == 0x0022E9, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue16) == 0x0022F0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue16' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context21) == 0x002508, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context21' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation16) == 0x002510, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation16' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID16) == 0x00251C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID16' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue16) == 0x002520, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue16' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue16) == 0x002521, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue16' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5) == 0x002522, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent14) == 0x002523, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount14) == 0x002524, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context20) == 0x002528, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context20' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum_CmpSuccess) == 0x002530, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context19) == 0x002538, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context19' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context18) == 0x002540, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context18' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent13) == 0x002548, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount13) == 0x00254C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context17) == 0x002550, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context17' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent12) == 0x002558, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount12) == 0x00255C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context16) == 0x002560, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context16' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue) == 0x002568, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context15) == 0x002570, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context15' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue1) == 0x002578, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context14) == 0x002580, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context14' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context13) == 0x002588, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context13' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue2) == 0x002590, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context12) == 0x002598, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context12' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue3) == 0x0025A0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context11) == 0x0025A8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context10) == 0x0025B0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue4) == 0x0025B8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_MultiGate_FirstRun) == 0x0025B9, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_MultiGate_Data) == 0x0025BC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_MultiGate_Data' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_MultiGate_ScratchBool) == 0x0025C0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_MultiGate_ScratchIndex) == 0x0025C4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent11) == 0x0025C8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount11) == 0x0025CC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount11' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_CreateDelegate_OutputDelegate) == 0x0025D0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue17) == 0x0025E0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue17' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation17) == 0x0027F8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation17' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID17) == 0x002804, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID17' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue17) == 0x002808, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue17' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent10) == 0x002809, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount10) == 0x00280C, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount10' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue17) == 0x002810, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue17' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum1_CmpSuccess) == 0x002811, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue5) == 0x002812, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_MissionRemoteEvent_ReturnValue6) == 0x002813, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_MissionRemoteEvent_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_CreateDelegate_OutputDelegate1) == 0x002818, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_CreateDelegate_OutputDelegate2) == 0x002828, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context9) == 0x002838, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent9) == 0x002840, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount9) == 0x002844, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount9' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context8) == 0x002848, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum2_CmpSuccess) == 0x002850, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent8) == 0x002851, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount8) == 0x002854, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount8' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context7) == 0x002858, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum3_CmpSuccess) == 0x002860, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent7) == 0x002861, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount7) == 0x002864, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount7' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context6) == 0x002868, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum4_CmpSuccess) == 0x002870, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent6) == 0x002871, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount6) == 0x002874, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount6' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum5_CmpSuccess) == 0x002878, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context5) == 0x002880, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context4) == 0x002888, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context3) == 0x002890, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context2) == 0x002898, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent5) == 0x0028A0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount5) == 0x0028A4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum6_CmpSuccess) == 0x0028A8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum6_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4) == 0x0028A9, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent4) == 0x0028AA, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount4) == 0x0028AC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3) == 0x0028B0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum7_CmpSuccess) == 0x0028B1, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum7_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context1) == 0x0028B8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent3) == 0x0028C0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount3) == 0x0028C4, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum8_CmpSuccess) == 0x0028C8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum8_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2) == 0x0028C9, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent2) == 0x0028CA, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount2) == 0x0028CC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount2' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1) == 0x0028D0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum9_CmpSuccess) == 0x0028D1, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum9_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent) == 0x0028D2, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_CreateDelegate_OutputDelegate3) == 0x0028D8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent1) == 0x0028E8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount1) == 0x0028EC, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount1' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchInteger_CmpSuccess) == 0x0028F0, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum10_CmpSuccess) == 0x0028F1, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum10_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_MissionCustomEvent_Context) == 0x0028F8, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_MissionCustomEvent_Context' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_NewDialogContext_ReturnValue18) == 0x002900, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_NewDialogContext_ReturnValue18' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_CreateDelegate_OutputDelegate4) == 0x002B18, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_Conversation18) == 0x002B28, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_Conversation18' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_SequenceID18) == 0x002B34, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_SequenceID18' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_FinishSpeak_ReturnValue18) == 0x002B38, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_FinishSpeak_ReturnValue18' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, CallFunc_Conv_IntToBool_ReturnValue18) == 0x002B39, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::CallFunc_Conv_IntToBool_ReturnValue18' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_CreateDelegate_OutputDelegate5) == 0x002B40, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveEvent) == 0x002B50, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, MissionK2Node_ObjectiveEvent_ObjectiveCount) == 0x002B54, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::MissionK2Node_ObjectiveEvent_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain, K2Node_SwitchEnum11_CmpSuccess) == 0x002B58, "Member 'Mission_DriveAwayThePain_C_ExecuteUbergraph_Mission_DriveAwayThePain::K2Node_SwitchEnum11_CmpSuccess' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Ramp1
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Ramp1 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Ramp1) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Ramp1");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Ramp1) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Ramp1");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp1, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp1::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp1, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp1::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE_Update_RampChallenges
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Update_RampChallenges final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Update_RampChallenges) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Update_RampChallenges");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Update_RampChallenges) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Update_RampChallenges");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Update_RampChallenges, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Update_RampChallenges::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_RampChallenges
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_RampChallenges final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_RampChallenges) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_RampChallenges");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_RampChallenges) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_RampChallenges");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_RampChallenges, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_RampChallenges::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_RampChallenges, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_RampChallenges::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Set_Ramps
// 0x0001 (0x0001 - 0x0000)
struct Mission_DriveAwayThePain_C_Set_Ramps final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Set_Ramps) == 0x000001, "Wrong alignment on Mission_DriveAwayThePain_C_Set_Ramps");
static_assert(sizeof(Mission_DriveAwayThePain_C_Set_Ramps) == 0x000001, "Wrong size on Mission_DriveAwayThePain_C_Set_Ramps");
static_assert(offsetof(Mission_DriveAwayThePain_C_Set_Ramps, ObjectiveSetEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Set_Ramps::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Set_Challenge3
// 0x0001 (0x0001 - 0x0000)
struct Mission_DriveAwayThePain_C_Set_Challenge3 final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Set_Challenge3) == 0x000001, "Wrong alignment on Mission_DriveAwayThePain_C_Set_Challenge3");
static_assert(sizeof(Mission_DriveAwayThePain_C_Set_Challenge3) == 0x000001, "Wrong size on Mission_DriveAwayThePain_C_Set_Challenge3");
static_assert(offsetof(Mission_DriveAwayThePain_C_Set_Challenge3, ObjectiveSetEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Set_Challenge3::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Challenge3
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Challenge3 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Challenge3) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Challenge3");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Challenge3) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Challenge3");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Challenge3, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Challenge3::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Challenge3, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Challenge3::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Set_DestroyPopsMemory
// 0x0001 (0x0001 - 0x0000)
struct Mission_DriveAwayThePain_C_Set_DestroyPopsMemory final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Set_DestroyPopsMemory) == 0x000001, "Wrong alignment on Mission_DriveAwayThePain_C_Set_DestroyPopsMemory");
static_assert(sizeof(Mission_DriveAwayThePain_C_Set_DestroyPopsMemory) == 0x000001, "Wrong size on Mission_DriveAwayThePain_C_Set_DestroyPopsMemory");
static_assert(offsetof(Mission_DriveAwayThePain_C_Set_DestroyPopsMemory, ObjectiveSetEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Set_DestroyPopsMemory::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_DestroyPopsMemory
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_DestroyPopsMemory::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Ramp1 Completed
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Ramp1_Completed final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Ramp1_Completed) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Ramp1_Completed");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Ramp1_Completed) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Ramp1_Completed");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Ramp1_Completed, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Ramp1_Completed::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Set_Challenge2
// 0x0001 (0x0001 - 0x0000)
struct Mission_DriveAwayThePain_C_Set_Challenge2 final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Set_Challenge2) == 0x000001, "Wrong alignment on Mission_DriveAwayThePain_C_Set_Challenge2");
static_assert(sizeof(Mission_DriveAwayThePain_C_Set_Challenge2) == 0x000001, "Wrong size on Mission_DriveAwayThePain_C_Set_Challenge2");
static_assert(offsetof(Mission_DriveAwayThePain_C_Set_Challenge2, ObjectiveSetEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Set_Challenge2::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Challenge2
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Challenge2 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Challenge2) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Challenge2");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Challenge2) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Challenge2");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Challenge2, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Challenge2::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Challenge2, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Challenge2::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Set_GoToPrisasGarage
// 0x0001 (0x0001 - 0x0000)
struct Mission_DriveAwayThePain_C_Set_GoToPrisasGarage final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Set_GoToPrisasGarage) == 0x000001, "Wrong alignment on Mission_DriveAwayThePain_C_Set_GoToPrisasGarage");
static_assert(sizeof(Mission_DriveAwayThePain_C_Set_GoToPrisasGarage) == 0x000001, "Wrong size on Mission_DriveAwayThePain_C_Set_GoToPrisasGarage");
static_assert(offsetof(Mission_DriveAwayThePain_C_Set_GoToPrisasGarage, ObjectiveSetEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Set_GoToPrisasGarage::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_GoToPrisasGarage
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_GoToPrisasGarage::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Arrived At Prisas Garage
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Arrived_At_Prisas_Garage::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 2 Success
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_2_Success final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Success) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_2_Success");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Success) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_2_Success");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Success, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_2_Success::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 3 Success
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_3_Success final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Success) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_3_Success");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Success) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_3_Success");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Success, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_3_Success::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Pops Car Destroyed
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Pops_Car_Destroyed::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Ramp2
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Ramp2 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Ramp2) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Ramp2");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Ramp2) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Ramp2");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp2, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp2::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp2, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp2::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Ramp2 Completed
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Ramp2_Completed final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Ramp2_Completed) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Ramp2_Completed");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Ramp2_Completed) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Ramp2_Completed");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Ramp2_Completed, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Ramp2_Completed::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Ramp3
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Ramp3 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Ramp3) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Ramp3");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Ramp3) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Ramp3");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp3, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp3::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp3, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp3::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Ramp3 Completed
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Ramp3_Completed final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Ramp3_Completed) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Ramp3_Completed");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Ramp3_Completed) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Ramp3_Completed");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Ramp3_Completed, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Ramp3_Completed::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Ramp4
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Ramp4 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Ramp4) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Ramp4");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Ramp4) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Ramp4");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp4, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp4::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp4, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp4::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Ramp4 Completed
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Ramp4_Completed final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Ramp4_Completed) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Ramp4_Completed");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Ramp4_Completed) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Ramp4_Completed");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Ramp4_Completed, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Ramp4_Completed::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Ramp5
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Ramp5 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Ramp5) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Ramp5");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Ramp5) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Ramp5");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp5, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp5::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Ramp5, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Ramp5::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Ramp5 Completed
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Ramp5_Completed final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Ramp5_Completed) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Ramp5_Completed");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Ramp5_Completed) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Ramp5_Completed");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Ramp5_Completed, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Ramp5_Completed::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_RespawnVehicle
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_RespawnVehicle final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_RespawnVehicle) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_RespawnVehicle");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_RespawnVehicle) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_RespawnVehicle");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_RespawnVehicle, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_RespawnVehicle::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_RespawnVehicle, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_RespawnVehicle::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_GetInVehicle
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_GetInVehicle final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_GetInVehicle) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_GetInVehicle");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_GetInVehicle) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_GetInVehicle");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_GetInVehicle, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_GetInVehicle::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_GetInVehicle, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_GetInVehicle::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 3 Ramp2 Start
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp2_Start::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Ramp Failure VO
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Ramp_Failure_VO::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 3 Success Check
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_3_Success_Check::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 3 Ramp1 Start
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_3_Ramp1_Start::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 3 Failure
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_3_Failure::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 2 Success Check
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_2_Success_Check::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 2 Start
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_2_Start final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Start) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_2_Start");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Start) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_2_Start");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Start, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_2_Start::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Breadcrumb02
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Breadcrumb02 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Breadcrumb02) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Breadcrumb02");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Breadcrumb02) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Breadcrumb02");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Breadcrumb02, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Breadcrumb02::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Breadcrumb02, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Breadcrumb02::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Breadcrumb 02
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Breadcrumb_02 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Breadcrumb_02) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Breadcrumb_02");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Breadcrumb_02) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Breadcrumb_02");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Breadcrumb_02, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Breadcrumb_02::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_Breadcrumb01
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_Breadcrumb01 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_Breadcrumb01) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_Breadcrumb01");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_Breadcrumb01) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_Breadcrumb01");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Breadcrumb01, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_Breadcrumb01::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_Breadcrumb01, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_Breadcrumb01::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Breadcrumb 01
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Breadcrumb_01 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Breadcrumb_01) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Breadcrumb_01");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Breadcrumb_01) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Breadcrumb_01");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Breadcrumb_01, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Breadcrumb_01::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Remind Player About Garage
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Remind_Player_About_Garage::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Pops Loot Aquired
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Pops_Loot_Aquired::Context' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Obj_GetPopsLoot
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_Obj_GetPopsLoot final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Obj_GetPopsLoot) == 0x000004, "Wrong alignment on Mission_DriveAwayThePain_C_Obj_GetPopsLoot");
static_assert(sizeof(Mission_DriveAwayThePain_C_Obj_GetPopsLoot) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_Obj_GetPopsLoot");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_GetPopsLoot, ObjectiveEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Obj_GetPopsLoot::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_DriveAwayThePain_C_Obj_GetPopsLoot, ObjectiveCount) == 0x000004, "Member 'Mission_DriveAwayThePain_C_Obj_GetPopsLoot::ObjectiveCount' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.Set_GetPopsLoot
// 0x0001 (0x0001 - 0x0000)
struct Mission_DriveAwayThePain_C_Set_GetPopsLoot final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_Set_GetPopsLoot) == 0x000001, "Wrong alignment on Mission_DriveAwayThePain_C_Set_GetPopsLoot");
static_assert(sizeof(Mission_DriveAwayThePain_C_Set_GetPopsLoot) == 0x000001, "Wrong size on Mission_DriveAwayThePain_C_Set_GetPopsLoot");
static_assert(offsetof(Mission_DriveAwayThePain_C_Set_GetPopsLoot, ObjectiveSetEvent) == 0x000000, "Member 'Mission_DriveAwayThePain_C_Set_GetPopsLoot::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_DriveAwayThePain.Mission_DriveAwayThePain_C.MCE Challenge 2 Failure
// 0x0008 (0x0008 - 0x0000)
struct Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure) == 0x000008, "Wrong alignment on Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure");
static_assert(sizeof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure) == 0x000008, "Wrong size on Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure");
static_assert(offsetof(Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure, Context) == 0x000000, "Member 'Mission_DriveAwayThePain_C_MCE_Challenge_2_Failure::Context' has a wrong offset!");

}

