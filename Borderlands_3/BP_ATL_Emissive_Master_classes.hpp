#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ATL_Emissive_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxInventory_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ATL_Emissive_Master.BP_ATL_Emissive_Master_C
// 0x0060 (0x0098 - 0x0038)
class UBP_ATL_Emissive_Master_C : public UInventoryAspectData
{
public:
	struct FLinearColor                           BaseColor;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MarkerBaseColor;                                   // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MarkerHighlightColor;                              // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HomingOverrideBase;                                // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HomingOverrideHighlight;                           // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString K2_GetFriendlyDescription() const;
	void K2_OnApplyAspect(class AActor* InventoryActor, const class UInventoryBalanceStateComponent* InventoryBalanceState) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ATL_Emissive_Master_C">();
	}
	static class UBP_ATL_Emissive_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ATL_Emissive_Master_C>();
	}
};
static_assert(alignof(UBP_ATL_Emissive_Master_C) == 0x000008, "Wrong alignment on UBP_ATL_Emissive_Master_C");
static_assert(sizeof(UBP_ATL_Emissive_Master_C) == 0x000098, "Wrong size on UBP_ATL_Emissive_Master_C");
static_assert(offsetof(UBP_ATL_Emissive_Master_C, BaseColor) == 0x000038, "Member 'UBP_ATL_Emissive_Master_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UBP_ATL_Emissive_Master_C, HighlightColor) == 0x000048, "Member 'UBP_ATL_Emissive_Master_C::HighlightColor' has a wrong offset!");
static_assert(offsetof(UBP_ATL_Emissive_Master_C, MarkerBaseColor) == 0x000058, "Member 'UBP_ATL_Emissive_Master_C::MarkerBaseColor' has a wrong offset!");
static_assert(offsetof(UBP_ATL_Emissive_Master_C, MarkerHighlightColor) == 0x000068, "Member 'UBP_ATL_Emissive_Master_C::MarkerHighlightColor' has a wrong offset!");
static_assert(offsetof(UBP_ATL_Emissive_Master_C, HomingOverrideBase) == 0x000078, "Member 'UBP_ATL_Emissive_Master_C::HomingOverrideBase' has a wrong offset!");
static_assert(offsetof(UBP_ATL_Emissive_Master_C, HomingOverrideHighlight) == 0x000088, "Member 'UBP_ATL_Emissive_Master_C::HomingOverrideHighlight' has a wrong offset!");

}

