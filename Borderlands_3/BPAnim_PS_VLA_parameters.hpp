#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_PS_VLA

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.ExecuteUbergraph_BPAnim_PS_VLA
// 0x0030 (0x0030 - 0x0000)
struct BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_NewMode;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponClipReloadComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA) == 0x000008, "Wrong alignment on BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA");
static_assert(sizeof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA) == 0x000030, "Wrong size on BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, EntryPoint) == 0x000000, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, K2Node_Event_NewMode) == 0x000018, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::K2Node_Event_NewMode' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, CallFunc_GetValueOfAttribute_ReturnValue) == 0x00001C, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.BlueprintSwitchedMode
// 0x0004 (0x0004 - 0x0000)
struct BPAnim_PS_VLA_C_BlueprintSwitchedMode final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_PS_VLA_C_BlueprintSwitchedMode) == 0x000004, "Wrong alignment on BPAnim_PS_VLA_C_BlueprintSwitchedMode");
static_assert(sizeof(BPAnim_PS_VLA_C_BlueprintSwitchedMode) == 0x000004, "Wrong size on BPAnim_PS_VLA_C_BlueprintSwitchedMode");
static_assert(offsetof(BPAnim_PS_VLA_C_BlueprintSwitchedMode, NewMode) == 0x000000, "Member 'BPAnim_PS_VLA_C_BlueprintSwitchedMode::NewMode' has a wrong offset!");

// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.UpdateIdleAnim
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_PS_VLA_C_UpdateIdleAnim final
{
public:
	int32                                         UseMode;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PS_VLA_C_UpdateIdleAnim) == 0x000004, "Wrong alignment on BPAnim_PS_VLA_C_UpdateIdleAnim");
static_assert(sizeof(BPAnim_PS_VLA_C_UpdateIdleAnim) == 0x000008, "Wrong size on BPAnim_PS_VLA_C_UpdateIdleAnim");
static_assert(offsetof(BPAnim_PS_VLA_C_UpdateIdleAnim, UseMode) == 0x000000, "Member 'BPAnim_PS_VLA_C_UpdateIdleAnim::UseMode' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_UpdateIdleAnim, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BPAnim_PS_VLA_C_UpdateIdleAnim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.UpdateMagIdle
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_PS_VLA_C_UpdateMagIdle final
{
public:
	float                                         BaseWeapon_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PS_VLA_C_UpdateMagIdle) == 0x000004, "Wrong alignment on BPAnim_PS_VLA_C_UpdateMagIdle");
static_assert(sizeof(BPAnim_PS_VLA_C_UpdateMagIdle) == 0x000008, "Wrong size on BPAnim_PS_VLA_C_UpdateMagIdle");
static_assert(offsetof(BPAnim_PS_VLA_C_UpdateMagIdle, BaseWeapon_0) == 0x000000, "Member 'BPAnim_PS_VLA_C_UpdateMagIdle::BaseWeapon_0' has a wrong offset!");
static_assert(offsetof(BPAnim_PS_VLA_C_UpdateMagIdle, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BPAnim_PS_VLA_C_UpdateMagIdle::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

