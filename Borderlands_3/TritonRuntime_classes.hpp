#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TritonRuntime

#include "Basic.hpp"

#include "TritonRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GbxAudio_structs.hpp"
#include "GbxRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class TritonRuntime.TritonAcousticDataComponent
// 0x0140 (0x0410 - 0x02D0)
class UTritonAcousticDataComponent final : public USceneComponent
{
public:
	TArray<struct FTritonProbeLayer>              ProbeLayers;                                       // 0x02D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         SpeedOfSound;                                      // 0x02E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            ExtraTritonMaterialEquivalences;                   // 0x02E8(0x0050)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAudioPrepComponentFilter>      ExcludeComponentsFilters;                          // 0x0338(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAudioPrepComponentFilter>      IncludeComponentsFilters;                          // 0x0348(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EOcclusionVoxelThinningAlgorithm>      ThinningSteps;                                     // 0x0358(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ExtraTerrainThickness;                             // 0x0368(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyGenerateSelected;                             // 0x036C(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTritonUpdateDesc                      UpdateSteps;                                       // 0x036D(0x000A)(Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxTriggerProperty                    TriggerRefreshCachedVoxelData;                     // 0x0377(0x0001)(Edit, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxTriggerProperty                    TriggerVisualizeMaterials;                         // 0x0378(0x0001)(Edit, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxTriggerProperty                    TriggerAuditProbeLocations;                        // 0x0379(0x0001)(Edit, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxTriggerProperty                    TriggerUpdateProbeLocations;                       // 0x037A(0x0001)(Edit, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B[0x5];                                      // 0x037B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioOcclusionVoxelDataProvider*       CachedVoxelData;                                   // 0x0380(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioOcclusionVoxelDataProvider*       CachedVoxelDataNoThinning;                         // 0x0388(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioOcclusionVoxelDataProvider*       CachedNavMeshVoxelData;                            // 0x0390(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxTriggerProperty                    TriggerBuildFallbackAcousticData;                  // 0x0398(0x0001)(Edit, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_399[0x77];                                     // 0x0399(0x0077)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AuditProbeLocations();
	void BuildFallbackAcousticData();
	void RefreshCachedVoxelData();
	void UpdateProbeLocations();
	void VisualizeMaterials();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TritonAcousticDataComponent">();
	}
	static class UTritonAcousticDataComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTritonAcousticDataComponent>();
	}
};
static_assert(alignof(UTritonAcousticDataComponent) == 0x000008, "Wrong alignment on UTritonAcousticDataComponent");
static_assert(sizeof(UTritonAcousticDataComponent) == 0x000410, "Wrong size on UTritonAcousticDataComponent");
static_assert(offsetof(UTritonAcousticDataComponent, ProbeLayers) == 0x0002D0, "Member 'UTritonAcousticDataComponent::ProbeLayers' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, SpeedOfSound) == 0x0002E0, "Member 'UTritonAcousticDataComponent::SpeedOfSound' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, ExtraTritonMaterialEquivalences) == 0x0002E8, "Member 'UTritonAcousticDataComponent::ExtraTritonMaterialEquivalences' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, ExcludeComponentsFilters) == 0x000338, "Member 'UTritonAcousticDataComponent::ExcludeComponentsFilters' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, IncludeComponentsFilters) == 0x000348, "Member 'UTritonAcousticDataComponent::IncludeComponentsFilters' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, ThinningSteps) == 0x000358, "Member 'UTritonAcousticDataComponent::ThinningSteps' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, ExtraTerrainThickness) == 0x000368, "Member 'UTritonAcousticDataComponent::ExtraTerrainThickness' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, bOnlyGenerateSelected) == 0x00036C, "Member 'UTritonAcousticDataComponent::bOnlyGenerateSelected' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, UpdateSteps) == 0x00036D, "Member 'UTritonAcousticDataComponent::UpdateSteps' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, TriggerRefreshCachedVoxelData) == 0x000377, "Member 'UTritonAcousticDataComponent::TriggerRefreshCachedVoxelData' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, TriggerVisualizeMaterials) == 0x000378, "Member 'UTritonAcousticDataComponent::TriggerVisualizeMaterials' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, TriggerAuditProbeLocations) == 0x000379, "Member 'UTritonAcousticDataComponent::TriggerAuditProbeLocations' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, TriggerUpdateProbeLocations) == 0x00037A, "Member 'UTritonAcousticDataComponent::TriggerUpdateProbeLocations' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, CachedVoxelData) == 0x000380, "Member 'UTritonAcousticDataComponent::CachedVoxelData' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, CachedVoxelDataNoThinning) == 0x000388, "Member 'UTritonAcousticDataComponent::CachedVoxelDataNoThinning' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, CachedNavMeshVoxelData) == 0x000390, "Member 'UTritonAcousticDataComponent::CachedNavMeshVoxelData' has a wrong offset!");
static_assert(offsetof(UTritonAcousticDataComponent, TriggerBuildFallbackAcousticData) == 0x000398, "Member 'UTritonAcousticDataComponent::TriggerBuildFallbackAcousticData' has a wrong offset!");

// Class TritonRuntime.TritonZone
// 0x0008 (0x0460 - 0x0458)
class ATritonZone final : public AActor
{
public:
	class UTritonAcousticDataComponent*           TritonDataComponent;                               // 0x0458(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TritonZone">();
	}
	static class ATritonZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATritonZone>();
	}
};
static_assert(alignof(ATritonZone) == 0x000008, "Wrong alignment on ATritonZone");
static_assert(sizeof(ATritonZone) == 0x000460, "Wrong size on ATritonZone");
static_assert(offsetof(ATritonZone, TritonDataComponent) == 0x000458, "Member 'ATritonZone::TritonDataComponent' has a wrong offset!");

// Class TritonRuntime.TritonVoxelOverrideVolume
// 0x0000 (0x0490 - 0x0490)
class ATritonVoxelOverrideVolume final : public AVolume
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TritonVoxelOverrideVolume">();
	}
	static class ATritonVoxelOverrideVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATritonVoxelOverrideVolume>();
	}
};
static_assert(alignof(ATritonVoxelOverrideVolume) == 0x000008, "Wrong alignment on ATritonVoxelOverrideVolume");
static_assert(sizeof(ATritonVoxelOverrideVolume) == 0x000490, "Wrong size on ATritonVoxelOverrideVolume");

// Class TritonRuntime.TritonProbeHelper
// 0x0018 (0x0470 - 0x0458)
class ATritonProbeHelper final : public AActor
{
public:
	float                                         DistanceLimit;                                     // 0x0458(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecording;                                        // 0x045C(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        RecordedLocations;                                 // 0x0460(0x0010)(Edit, ZeroConstructor, Transient, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TritonProbeHelper">();
	}
	static class ATritonProbeHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATritonProbeHelper>();
	}
};
static_assert(alignof(ATritonProbeHelper) == 0x000008, "Wrong alignment on ATritonProbeHelper");
static_assert(sizeof(ATritonProbeHelper) == 0x000470, "Wrong size on ATritonProbeHelper");
static_assert(offsetof(ATritonProbeHelper, DistanceLimit) == 0x000458, "Member 'ATritonProbeHelper::DistanceLimit' has a wrong offset!");
static_assert(offsetof(ATritonProbeHelper, bRecording) == 0x00045C, "Member 'ATritonProbeHelper::bRecording' has a wrong offset!");
static_assert(offsetof(ATritonProbeHelper, RecordedLocations) == 0x000460, "Member 'ATritonProbeHelper::RecordedLocations' has a wrong offset!");

// Class TritonRuntime.TritonProbeLocationProvider
// 0x0028 (0x04B8 - 0x0490)
class ATritonProbeLocationProvider final : public AVolume
{
public:
	float                                         TargetDistanceAboveGround;                         // 0x0490(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumHorizontalSpacing;                          // 0x0494(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWallDistanceForLowDensityProbes;                // 0x0498(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpacingFactorForLowDensityProbes;                  // 0x049C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecimationThreshold;                               // 0x04A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNumberDecimations;                              // 0x04A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATritonProbeLocationProvider*>   SuppressingZones;                                  // 0x04A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void FindProbeLocations(const struct FBoxSphereBounds& WorldBoxSphere, const class UAudioOcclusionVoxelDataProvider* GeoVoxels, const class UAudioOcclusionVoxelDataProvider* NavVoxels, TArray<struct FVector>* Out_ResultProbeLocations);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TritonProbeLocationProvider">();
	}
	static class ATritonProbeLocationProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATritonProbeLocationProvider>();
	}
};
static_assert(alignof(ATritonProbeLocationProvider) == 0x000008, "Wrong alignment on ATritonProbeLocationProvider");
static_assert(sizeof(ATritonProbeLocationProvider) == 0x0004B8, "Wrong size on ATritonProbeLocationProvider");
static_assert(offsetof(ATritonProbeLocationProvider, TargetDistanceAboveGround) == 0x000490, "Member 'ATritonProbeLocationProvider::TargetDistanceAboveGround' has a wrong offset!");
static_assert(offsetof(ATritonProbeLocationProvider, MinimumHorizontalSpacing) == 0x000494, "Member 'ATritonProbeLocationProvider::MinimumHorizontalSpacing' has a wrong offset!");
static_assert(offsetof(ATritonProbeLocationProvider, MinWallDistanceForLowDensityProbes) == 0x000498, "Member 'ATritonProbeLocationProvider::MinWallDistanceForLowDensityProbes' has a wrong offset!");
static_assert(offsetof(ATritonProbeLocationProvider, SpacingFactorForLowDensityProbes) == 0x00049C, "Member 'ATritonProbeLocationProvider::SpacingFactorForLowDensityProbes' has a wrong offset!");
static_assert(offsetof(ATritonProbeLocationProvider, DecimationThreshold) == 0x0004A0, "Member 'ATritonProbeLocationProvider::DecimationThreshold' has a wrong offset!");
static_assert(offsetof(ATritonProbeLocationProvider, MaxNumberDecimations) == 0x0004A4, "Member 'ATritonProbeLocationProvider::MaxNumberDecimations' has a wrong offset!");
static_assert(offsetof(ATritonProbeLocationProvider, SuppressingZones) == 0x0004A8, "Member 'ATritonProbeLocationProvider::SuppressingZones' has a wrong offset!");

// Class TritonRuntime.TritonSettings
// 0x0010 (0x0038 - 0x0028)
class UTritonSettings final : public UObject
{
public:
	struct FDirectoryPath                         TritonDataPath;                                    // 0x0028(0x0010)(Edit, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TritonSettings">();
	}
	static class UTritonSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTritonSettings>();
	}
};
static_assert(alignof(UTritonSettings) == 0x000008, "Wrong alignment on UTritonSettings");
static_assert(sizeof(UTritonSettings) == 0x000038, "Wrong size on UTritonSettings");
static_assert(offsetof(UTritonSettings, TritonDataPath) == 0x000028, "Member 'UTritonSettings::TritonDataPath' has a wrong offset!");

}

