#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Init_EridiumCostConversion

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Init_EridiumCostConversion.Init_EridiumCostConversion_C.CalculateAttributeInitialValue
// 0x0090 (0x0090 - 0x0000)
struct Init_EridiumCostConversion_C_CalculateAttributeInitialValue final
{
public:
	const class UObject*                          Context;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 MyGear;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyValue;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  ValueMultiplier;                                   // 0x0020(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  ValueBase;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, NoDestructor)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GearTypeMultiplier_GearTypeMult;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoneyMultiplier_GearMoneyMult;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBalanceStateComponent*        CallFunc_GetInventoryBalanceState_ReturnValue;     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetExperienceLevel_ReturnValue;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue) == 0x000008, "Wrong alignment on Init_EridiumCostConversion_C_CalculateAttributeInitialValue");
static_assert(sizeof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue) == 0x000090, "Wrong size on Init_EridiumCostConversion_C_CalculateAttributeInitialValue");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, Context) == 0x000000, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::Context' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, ReturnValue) == 0x000008, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, MyGear) == 0x000010, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::MyGear' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, MyValue) == 0x000018, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::MyValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, ValueMultiplier) == 0x000020, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::ValueMultiplier' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, ValueBase) == 0x000038, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::ValueBase' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, K2Node_DynamicCast_AsActor) == 0x000050, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_GearTypeMultiplier_GearTypeMult) == 0x00005C, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_GearTypeMultiplier_GearTypeMult' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_MoneyMultiplier_GearMoneyMult) == 0x000060, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_MoneyMultiplier_GearMoneyMult' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_GetInventoryBalanceState_ReturnValue) == 0x000068, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_GetInventoryBalanceState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_GetExperienceLevel_ReturnValue) == 0x000074, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_GetExperienceLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x00007C, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000080, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x000084, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_CalculateAttributeInitialValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'Init_EridiumCostConversion_C_CalculateAttributeInitialValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function Init_EridiumCostConversion.Init_EridiumCostConversion_C.GearTypeMultiplier
// 0x0088 (0x0088 - 0x0000)
struct Init_EridiumCostConversion_C_GearTypeMultiplier final
{
public:
	class AActor*                                 GearItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GearTypeMult;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyReturn;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue2;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue2;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue3;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue3;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakWeapon*                             K2Node_DynamicCast_AsOak_Weapon;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AShield*                                K2Node_DynamicCast_AsShield;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue4;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue4;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue4;     // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue5;     // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue5;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue5;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue6;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue6;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue7;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue7;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Init_EridiumCostConversion_C_GearTypeMultiplier) == 0x000008, "Wrong alignment on Init_EridiumCostConversion_C_GearTypeMultiplier");
static_assert(sizeof(Init_EridiumCostConversion_C_GearTypeMultiplier) == 0x000088, "Wrong size on Init_EridiumCostConversion_C_GearTypeMultiplier");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, GearItem) == 0x000000, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::GearItem' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, GearTypeMult) == 0x000008, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::GearTypeMult' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, MyReturn) == 0x00000C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::MyReturn' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue) == 0x000010, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue) == 0x000014, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue1) == 0x000018, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue1) == 0x00001C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue2) == 0x000020, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue2' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue2) == 0x000024, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue3) == 0x000028, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue3' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue3) == 0x00002C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, K2Node_DynamicCast_AsOak_Weapon) == 0x000030, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::K2Node_DynamicCast_AsOak_Weapon' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, K2Node_DynamicCast_AsShield) == 0x000040, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::K2Node_DynamicCast_AsShield' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, K2Node_DynamicCast_bSuccess1) == 0x000048, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue4) == 0x00004C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue4' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue4) == 0x000050, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000051, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000052, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000053, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x000054, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_EqualEqual_ObjectObject_ReturnValue4) == 0x000055, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_EqualEqual_ObjectObject_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_EqualEqual_ObjectObject_ReturnValue5) == 0x000056, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_EqualEqual_ObjectObject_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00005C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000060, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000064, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue5) == 0x000068, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue5' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue5) == 0x00006C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue6) == 0x000070, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue6' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue6) == 0x000074, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000078, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x00007C, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_OutValue7) == 0x000080, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_OutValue7' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_GearTypeMultiplier, CallFunc_GetDataTableValue_ReturnValue7) == 0x000084, "Member 'Init_EridiumCostConversion_C_GearTypeMultiplier::CallFunc_GetDataTableValue_ReturnValue7' has a wrong offset!");

// Function Init_EridiumCostConversion.Init_EridiumCostConversion_C.MoneyMultiplier
// 0x0028 (0x0028 - 0x0000)
struct Init_EridiumCostConversion_C_MoneyMultiplier final
{
public:
	class AActor*                                 GearItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GearTypeMult;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GearMoneyMult;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue1;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue2;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Init_EridiumCostConversion_C_MoneyMultiplier) == 0x000008, "Wrong alignment on Init_EridiumCostConversion_C_MoneyMultiplier");
static_assert(sizeof(Init_EridiumCostConversion_C_MoneyMultiplier) == 0x000028, "Wrong size on Init_EridiumCostConversion_C_MoneyMultiplier");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, GearItem) == 0x000000, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::GearItem' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, GearTypeMult) == 0x000008, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::GearTypeMult' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, GearMoneyMult) == 0x00000C, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::GearMoneyMult' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000010, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, CallFunc_GetValueOfAttribute_ReturnValue1) == 0x000014, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::CallFunc_GetValueOfAttribute_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, CallFunc_GetValueOfAttribute_ReturnValue2) == 0x000018, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::CallFunc_GetValueOfAttribute_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_EridiumCostConversion_C_MoneyMultiplier, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'Init_EridiumCostConversion_C_MoneyMultiplier::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

