#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemUtils

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GbxRuntime_classes.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "AudioMixer_classes.hpp"


namespace SDK
{

// Class OnlineSubsystemUtils.DownloadablePackageLicenseItem
// 0x0008 (0x0038 - 0x0030)
class UDownloadablePackageLicenseItem final : public UDataAsset
{
public:
	uint32                                        LicenseMask;                                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DownloadablePackageLicenseItem">();
	}
	static class UDownloadablePackageLicenseItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDownloadablePackageLicenseItem>();
	}
};
static_assert(alignof(UDownloadablePackageLicenseItem) == 0x000008, "Wrong alignment on UDownloadablePackageLicenseItem");
static_assert(sizeof(UDownloadablePackageLicenseItem) == 0x000038, "Wrong size on UDownloadablePackageLicenseItem");
static_assert(offsetof(UDownloadablePackageLicenseItem, LicenseMask) == 0x000030, "Member 'UDownloadablePackageLicenseItem::LicenseMask' has a wrong offset!");

// Class OnlineSubsystemUtils.BeaconChannel
// 0x0008 (0x0070 - 0x0068)
class UBeaconChannel final : public UChannel
{
public:
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BeaconChannel">();
	}
	static class UBeaconChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBeaconChannel>();
	}
};
static_assert(alignof(UBeaconChannel) == 0x000008, "Wrong alignment on UBeaconChannel");
static_assert(sizeof(UBeaconChannel) == 0x000070, "Wrong size on UBeaconChannel");

// Class OnlineSubsystemUtils.DownloadableContentData
// 0x0048 (0x0078 - 0x0030)
class UDownloadableContentData : public UGbxDataAsset
{
public:
	class UDownloadablePackageData*               PackageData;                                       // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDownloadableContentLicenseData*        LicenseData;                                       // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        ContentId;                                         // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ContentDisplayName;                                // 0x0048(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   NewDLCDisplayName;                                 // 0x0060(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DownloadableContentData">();
	}
	static class UDownloadableContentData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDownloadableContentData>();
	}
};
static_assert(alignof(UDownloadableContentData) == 0x000008, "Wrong alignment on UDownloadableContentData");
static_assert(sizeof(UDownloadableContentData) == 0x000078, "Wrong size on UDownloadableContentData");
static_assert(offsetof(UDownloadableContentData, PackageData) == 0x000030, "Member 'UDownloadableContentData::PackageData' has a wrong offset!");
static_assert(offsetof(UDownloadableContentData, LicenseData) == 0x000038, "Member 'UDownloadableContentData::LicenseData' has a wrong offset!");
static_assert(offsetof(UDownloadableContentData, ContentId) == 0x000040, "Member 'UDownloadableContentData::ContentId' has a wrong offset!");
static_assert(offsetof(UDownloadableContentData, ContentDisplayName) == 0x000048, "Member 'UDownloadableContentData::ContentDisplayName' has a wrong offset!");
static_assert(offsetof(UDownloadableContentData, NewDLCDisplayName) == 0x000060, "Member 'UDownloadableContentData::NewDLCDisplayName' has a wrong offset!");

// Class OnlineSubsystemUtils.DownloadableContentLicenseData
// 0x0030 (0x0060 - 0x0030)
class UDownloadableContentLicenseData : public UGbxDataAsset
{
public:
	class UDownloadablePackageData*               PackageData;                                       // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   LicenseName;                                       // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                   DisplayName;                                       // 0x0040(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint32                                        LicenseId;                                         // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DownloadableContentLicenseData">();
	}
	static class UDownloadableContentLicenseData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDownloadableContentLicenseData>();
	}
};
static_assert(alignof(UDownloadableContentLicenseData) == 0x000008, "Wrong alignment on UDownloadableContentLicenseData");
static_assert(sizeof(UDownloadableContentLicenseData) == 0x000060, "Wrong size on UDownloadableContentLicenseData");
static_assert(offsetof(UDownloadableContentLicenseData, PackageData) == 0x000030, "Member 'UDownloadableContentLicenseData::PackageData' has a wrong offset!");
static_assert(offsetof(UDownloadableContentLicenseData, LicenseName) == 0x000038, "Member 'UDownloadableContentLicenseData::LicenseName' has a wrong offset!");
static_assert(offsetof(UDownloadableContentLicenseData, DisplayName) == 0x000040, "Member 'UDownloadableContentLicenseData::DisplayName' has a wrong offset!");
static_assert(offsetof(UDownloadableContentLicenseData, LicenseId) == 0x000058, "Member 'UDownloadableContentLicenseData::LicenseId' has a wrong offset!");

// Class OnlineSubsystemUtils.DownloadablePackageData
// 0x0040 (0x0070 - 0x0030)
class UDownloadablePackageData final : public UPrimaryDataAsset
{
public:
	uint32                                        PackageId;                                         // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PackageDisplayName;                                // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DLCName;                                           // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UDownloadableContentLicenseData*> Licenses;                                          // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DownloadablePackageData">();
	}
	static class UDownloadablePackageData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDownloadablePackageData>();
	}
};
static_assert(alignof(UDownloadablePackageData) == 0x000008, "Wrong alignment on UDownloadablePackageData");
static_assert(sizeof(UDownloadablePackageData) == 0x000070, "Wrong size on UDownloadablePackageData");
static_assert(offsetof(UDownloadablePackageData, PackageId) == 0x000030, "Member 'UDownloadablePackageData::PackageId' has a wrong offset!");
static_assert(offsetof(UDownloadablePackageData, PackageDisplayName) == 0x000038, "Member 'UDownloadablePackageData::PackageDisplayName' has a wrong offset!");
static_assert(offsetof(UDownloadablePackageData, DLCName) == 0x000048, "Member 'UDownloadablePackageData::DLCName' has a wrong offset!");
static_assert(offsetof(UDownloadablePackageData, Licenses) == 0x000058, "Member 'UDownloadablePackageData::Licenses' has a wrong offset!");

// Class OnlineSubsystemUtils.IpNetDriver
// 0x0038 (0x0578 - 0x0540)
class UIpNetDriver : public UNetDriver
{
public:
	uint8                                         Pad_540[0x8];                                      // 0x0540(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         LogPortUnreach : 1;                                // 0x0548(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         AllowPlayerPortUnreach : 1;                        // 0x0548(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaxPortCountToTry;                                 // 0x054C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_550[0x28];                                     // 0x0550(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IpNetDriver">();
	}
	static class UIpNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIpNetDriver>();
	}
};
static_assert(alignof(UIpNetDriver) == 0x000008, "Wrong alignment on UIpNetDriver");
static_assert(sizeof(UIpNetDriver) == 0x000578, "Wrong size on UIpNetDriver");
static_assert(offsetof(UIpNetDriver, MaxPortCountToTry) == 0x00054C, "Member 'UIpNetDriver::MaxPortCountToTry' has a wrong offset!");

// Class OnlineSubsystemUtils.IpBeaconNetDriver
// 0x0000 (0x0578 - 0x0578)
class UIpBeaconNetDriver final : public UIpNetDriver
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IpBeaconNetDriver">();
	}
	static class UIpBeaconNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIpBeaconNetDriver>();
	}
};
static_assert(alignof(UIpBeaconNetDriver) == 0x000008, "Wrong alignment on UIpBeaconNetDriver");
static_assert(sizeof(UIpBeaconNetDriver) == 0x000578, "Wrong size on UIpBeaconNetDriver");

// Class OnlineSubsystemUtils.IpConnection
// 0x0030 (0x19A0 - 0x1970)
class UIpConnection : public UNetConnection
{
public:
	uint8                                         Pad_1970[0x28];                                    // 0x1970(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TravelTimeout;                                     // 0x1998(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_199C[0x4];                                     // 0x199C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IpConnection">();
	}
	static class UIpConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIpConnection>();
	}
};
static_assert(alignof(UIpConnection) == 0x000008, "Wrong alignment on UIpConnection");
static_assert(sizeof(UIpConnection) == 0x0019A0, "Wrong size on UIpConnection");
static_assert(offsetof(UIpConnection, TravelTimeout) == 0x001998, "Member 'UIpConnection::TravelTimeout' has a wrong offset!");

// Class OnlineSubsystemUtils.OnlineBeacon
// 0x00A0 (0x00C8 - 0x0028)
class UOnlineBeacon : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BeaconConnectionInitialTimeout;                    // 0x0038(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BeaconConnectionTimeout;                           // 0x003C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   NetDriverName;                                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNetDriver*                             NetDriver;                                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x78];                                      // 0x0050(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineBeacon">();
	}
	static class UOnlineBeacon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineBeacon>();
	}
};
static_assert(alignof(UOnlineBeacon) == 0x000008, "Wrong alignment on UOnlineBeacon");
static_assert(sizeof(UOnlineBeacon) == 0x0000C8, "Wrong size on UOnlineBeacon");
static_assert(offsetof(UOnlineBeacon, BeaconConnectionInitialTimeout) == 0x000038, "Member 'UOnlineBeacon::BeaconConnectionInitialTimeout' has a wrong offset!");
static_assert(offsetof(UOnlineBeacon, BeaconConnectionTimeout) == 0x00003C, "Member 'UOnlineBeacon::BeaconConnectionTimeout' has a wrong offset!");
static_assert(offsetof(UOnlineBeacon, NetDriverName) == 0x000040, "Member 'UOnlineBeacon::NetDriverName' has a wrong offset!");
static_assert(offsetof(UOnlineBeacon, NetDriver) == 0x000048, "Member 'UOnlineBeacon::NetDriver' has a wrong offset!");

// Class OnlineSubsystemUtils.OnlineBeaconClient
// 0x00D0 (0x0198 - 0x00C8)
class UOnlineBeaconClient : public UOnlineBeacon
{
public:
	class UNetConnection*                         BeaconConnection;                                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBeaconConnectionState                        ConnectionState;                                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0xC7];                                      // 0x00D1(0x00C7)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineBeaconClient">();
	}
	static class UOnlineBeaconClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineBeaconClient>();
	}
};
static_assert(alignof(UOnlineBeaconClient) == 0x000008, "Wrong alignment on UOnlineBeaconClient");
static_assert(sizeof(UOnlineBeaconClient) == 0x000198, "Wrong size on UOnlineBeaconClient");
static_assert(offsetof(UOnlineBeaconClient, BeaconConnection) == 0x0000C8, "Member 'UOnlineBeaconClient::BeaconConnection' has a wrong offset!");
static_assert(offsetof(UOnlineBeaconClient, ConnectionState) == 0x0000D0, "Member 'UOnlineBeaconClient::ConnectionState' has a wrong offset!");

// Class OnlineSubsystemUtils.OnlineBeaconHost
// 0x00A8 (0x0170 - 0x00C8)
class UOnlineBeaconHost : public UOnlineBeacon
{
public:
	int32                                         ListenPort;                                        // 0x00C8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxAllowedRemotePlayers;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D0[0xA0];                                      // 0x00D0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineBeaconHost">();
	}
	static class UOnlineBeaconHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineBeaconHost>();
	}
};
static_assert(alignof(UOnlineBeaconHost) == 0x000008, "Wrong alignment on UOnlineBeaconHost");
static_assert(sizeof(UOnlineBeaconHost) == 0x000170, "Wrong size on UOnlineBeaconHost");
static_assert(offsetof(UOnlineBeaconHost, ListenPort) == 0x0000C8, "Member 'UOnlineBeaconHost::ListenPort' has a wrong offset!");
static_assert(offsetof(UOnlineBeaconHost, MaxAllowedRemotePlayers) == 0x0000CC, "Member 'UOnlineBeaconHost::MaxAllowedRemotePlayers' has a wrong offset!");

// Class OnlineSubsystemUtils.OnlineEngineInterfaceImpl
// 0x00B8 (0x00E0 - 0x0028)
class UOnlineEngineInterfaceImpl final : public UOnlineEngineInterface
{
public:
	uint8                                         Pad_28[0xB8];                                      // 0x0028(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineEngineInterfaceImpl">();
	}
	static class UOnlineEngineInterfaceImpl* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineEngineInterfaceImpl>();
	}
};
static_assert(alignof(UOnlineEngineInterfaceImpl) == 0x000008, "Wrong alignment on UOnlineEngineInterfaceImpl");
static_assert(sizeof(UOnlineEngineInterfaceImpl) == 0x0000E0, "Wrong size on UOnlineEngineInterfaceImpl");

// Class OnlineSubsystemUtils.OnlinePIESettings
// 0x0018 (0x0050 - 0x0038)
class UOnlinePIESettings final : public UDeveloperSettings
{
public:
	bool                                          bOnlinePIEEnabled;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPIELoginSettingsInternal>      Logins;                                            // 0x0040(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlinePIESettings">();
	}
	static class UOnlinePIESettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlinePIESettings>();
	}
};
static_assert(alignof(UOnlinePIESettings) == 0x000008, "Wrong alignment on UOnlinePIESettings");
static_assert(sizeof(UOnlinePIESettings) == 0x000050, "Wrong size on UOnlinePIESettings");
static_assert(offsetof(UOnlinePIESettings, bOnlinePIEEnabled) == 0x000038, "Member 'UOnlinePIESettings::bOnlinePIEEnabled' has a wrong offset!");
static_assert(offsetof(UOnlinePIESettings, Logins) == 0x000040, "Member 'UOnlinePIESettings::Logins' has a wrong offset!");

// Class OnlineSubsystemUtils.OnlineSessionClient
// 0x0170 (0x0198 - 0x0028)
class UOnlineSessionClient : public UOnlineSession
{
public:
	uint8                                         Pad_28[0x168];                                     // 0x0028(0x0168)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsFromInvite;                                     // 0x0190(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHandlingDisconnect;                               // 0x0191(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSessionClient">();
	}
	static class UOnlineSessionClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSessionClient>();
	}
};
static_assert(alignof(UOnlineSessionClient) == 0x000008, "Wrong alignment on UOnlineSessionClient");
static_assert(sizeof(UOnlineSessionClient) == 0x000198, "Wrong size on UOnlineSessionClient");
static_assert(offsetof(UOnlineSessionClient, bIsFromInvite) == 0x000190, "Member 'UOnlineSessionClient::bIsFromInvite' has a wrong offset!");
static_assert(offsetof(UOnlineSessionClient, bHandlingDisconnect) == 0x000191, "Member 'UOnlineSessionClient::bHandlingDisconnect' has a wrong offset!");

// Class OnlineSubsystemUtils.VoipListenerSynthComponent
// 0x0010 (0x0660 - 0x0650)
class UVoipListenerSynthComponent final : public USynthComponent
{
public:
	uint8                                         Pad_650[0x10];                                     // 0x0650(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsIdling();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoipListenerSynthComponent">();
	}
	static class UVoipListenerSynthComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoipListenerSynthComponent>();
	}
};
static_assert(alignof(UVoipListenerSynthComponent) == 0x000008, "Wrong alignment on UVoipListenerSynthComponent");
static_assert(sizeof(UVoipListenerSynthComponent) == 0x000660, "Wrong size on UVoipListenerSynthComponent");

}

