#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuickChange

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuickChange.BP_QuickChange_C
// 0x00B0 (0x0710 - 0x0660)
class ABP_QuickChange_C final : public AQuickChange
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(Transient, DuplicateTransient)
	class UBoxComponent*                          BoxComponent3;                                     // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent2;                                     // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent;                                      // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UsableCollision;                                   // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TouchBox;                                          // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMinimapIconComponent*               OakMinimapIcon;                                    // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMissionIconComponent*               OakMissionIcon;                                    // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABPChar_Player_C*>               PlayersNearby;                                     // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	UMulticastDelegateProperty_                   OnPickedSkin;                                      // 0x06B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnRenameSave;                                      // 0x06C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnSkillRespec;                                     // 0x06D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnPickedHead;                                      // 0x06E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnPickedEchoTheme;                                 // 0x06F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnChangeSkinColor;                                 // 0x0700(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void UserConstructionScript();
	void OnSaveGameRenamed(const class FText& NewName);
	void OnRespec();
	void OnPlayerStopInteraction(class AOakPlayerController* Player);
	void OnPickedNewSkinColor(int32 Index_0, const struct FLinearColor& Color);
	void OnPickedNewSkin(class UOakCustomizationData* NewSkin);
	void OnPickedNewHead(class UOakCustomizationData* NewHead);
	void OnPickedNewECHOTheme(class UOakCustomizationData* NewECHOTheme);
	void ExecuteUbergraph_BP_QuickChange(int32 EntryPoint);
	void OnChangeSkinColor__DelegateSignature();
	void OnPickedEchoTheme__DelegateSignature();
	void OnPickedHead__DelegateSignature();
	void OnSkillRespec__DelegateSignature();
	void OnRenameSave__DelegateSignature();
	void OnPickedSkin__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuickChange_C">();
	}
	static class ABP_QuickChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_QuickChange_C>();
	}
};
static_assert(alignof(ABP_QuickChange_C) == 0x000008, "Wrong alignment on ABP_QuickChange_C");
static_assert(sizeof(ABP_QuickChange_C) == 0x000710, "Wrong size on ABP_QuickChange_C");
static_assert(offsetof(ABP_QuickChange_C, UberGraphFrame) == 0x000660, "Member 'ABP_QuickChange_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, BoxComponent3) == 0x000668, "Member 'ABP_QuickChange_C::BoxComponent3' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, BoxComponent2) == 0x000670, "Member 'ABP_QuickChange_C::BoxComponent2' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, BoxComponent) == 0x000678, "Member 'ABP_QuickChange_C::BoxComponent' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, UsableCollision) == 0x000680, "Member 'ABP_QuickChange_C::UsableCollision' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, TouchBox) == 0x000688, "Member 'ABP_QuickChange_C::TouchBox' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OakMinimapIcon) == 0x000690, "Member 'ABP_QuickChange_C::OakMinimapIcon' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OakMissionIcon) == 0x000698, "Member 'ABP_QuickChange_C::OakMissionIcon' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, PlayersNearby) == 0x0006A0, "Member 'ABP_QuickChange_C::PlayersNearby' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OnPickedSkin) == 0x0006B0, "Member 'ABP_QuickChange_C::OnPickedSkin' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OnRenameSave) == 0x0006C0, "Member 'ABP_QuickChange_C::OnRenameSave' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OnSkillRespec) == 0x0006D0, "Member 'ABP_QuickChange_C::OnSkillRespec' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OnPickedHead) == 0x0006E0, "Member 'ABP_QuickChange_C::OnPickedHead' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OnPickedEchoTheme) == 0x0006F0, "Member 'ABP_QuickChange_C::OnPickedEchoTheme' has a wrong offset!");
static_assert(offsetof(ABP_QuickChange_C, OnChangeSkinColor) == 0x000700, "Member 'ABP_QuickChange_C::OnChangeSkinColor' has a wrong offset!");

}

