#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxPerfAnalytics

#include "Basic.hpp"

#include "GbxPerfAnalytics_classes.hpp"
#include "GbxPerfAnalytics_parameters.hpp"


namespace SDK
{

// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.DefineTelemetryEventRef
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TableDesc                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2EventRef                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2EventRef UGbxTelemetryBlueprintLibrary::DefineTelemetryEventRef(const class FString& EventName, const class FString& TableDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "DefineTelemetryEventRef");

	Params::GbxTelemetryBlueprintLibrary_DefineTelemetryEventRef Parms{};

	Parms.EventName = std::move(EventName);
	Parms.TableDesc = std::move(TableDesc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.EmitTelemetryEvent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FK2EventRef                      Event                                                  (Parm, NativeAccessSpecifierPublic)
// class FString                           EventContext                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventInstigatorObject                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            Guid                                                   (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRunOnClient                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxTelemetryBlueprintLibrary::EmitTelemetryEvent(const struct FK2EventRef& Event, const class FString& EventContext, class UObject* EventContextObject, class UObject* EventInstigatorObject, class UObject* WorldContextObject, const struct FGuid& Guid, bool bRunOnClient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "EmitTelemetryEvent");

	Params::GbxTelemetryBlueprintLibrary_EmitTelemetryEvent Parms{};

	Parms.Event = std::move(Event);
	Parms.EventContext = std::move(EventContext);
	Parms.EventContextObject = EventContextObject;
	Parms.EventInstigatorObject = EventInstigatorObject;
	Parms.WorldContextObject = WorldContextObject;
	Parms.Guid = std::move(Guid);
	Parms.bRunOnClient = bRunOnClient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.EmitTelemetryValues
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           EventContext                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               Values                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            Guid                                                   (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRunOnClient                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxTelemetryBlueprintLibrary::EmitTelemetryValues(const class FString& EventContext, const struct FK2TelemetryValues& Values, class UObject* WorldContextObject, const struct FGuid& Guid, bool bRunOnClient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "EmitTelemetryValues");

	Params::GbxTelemetryBlueprintLibrary_EmitTelemetryValues Parms{};

	Parms.EventContext = std::move(EventContext);
	Parms.Values = std::move(Values);
	Parms.WorldContextObject = WorldContextObject;
	Parms.Guid = std::move(Guid);
	Parms.bRunOnClient = bRunOnClient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FK2EventRef                      EventRef                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxTelemetryBlueprintLibrary::IsValid(const struct FK2EventRef& EventRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "IsValid");

	Params::GbxTelemetryBlueprintLibrary_IsValid Parms{};

	Parms.EventRef = std::move(EventRef);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.MakeTelemetryEventRef
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2EventRef                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2EventRef UGbxTelemetryBlueprintLibrary::MakeTelemetryEventRef(const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "MakeTelemetryEventRef");

	Params::GbxTelemetryBlueprintLibrary_MakeTelemetryEventRef Parms{};

	Parms.EventName = std::move(EventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryBool(struct FK2TelemetryValues& StatArray, const class FString& Key, const bool Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryBool");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryBool Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryByte(struct FK2TelemetryValues& StatArray, const class FString& Key, const uint8 Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryByte");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryByte Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryFloat(struct FK2TelemetryValues& StatArray, const class FString& Key, const float Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryFloat");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryFloat Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryInt(struct FK2TelemetryValues& StatArray, const class FString& Key, const int32 Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryInt");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryInt Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryRotator
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryRotator(struct FK2TelemetryValues& StatArray, const class FString& Key, const struct FRotator& Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryRotator");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryRotator Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryString(struct FK2TelemetryValues& StatArray, const class FString& Key, const class FString& Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryString");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryString Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}


// Function GbxPerfAnalytics.GbxTelemetryBlueprintLibrary.SetNamedTelemetryVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FK2TelemetryValues               StatArray                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetTelemetryValue                      Opt                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FK2TelemetryValues               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK2TelemetryValues UGbxTelemetryBlueprintLibrary::SetNamedTelemetryVector(struct FK2TelemetryValues& StatArray, const class FString& Key, const struct FVector& Value, ESetTelemetryValue Opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetNamedTelemetryVector");

	Params::GbxTelemetryBlueprintLibrary_SetNamedTelemetryVector Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.Opt = Opt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StatArray = std::move(Parms.StatArray);

	return Parms.ReturnValue;
}

}

