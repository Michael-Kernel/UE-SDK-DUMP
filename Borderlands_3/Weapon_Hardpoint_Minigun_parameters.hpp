#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Hardpoint_Minigun

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.ExecuteUbergraph_Weapon_Hardpoint_Minigun
// 0x0148 (0x0148 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_GetShellCasingEjectEffect_FX;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponRegisterAttachmentEffectData    K2Node_MakeStruct_WeaponRegisterAttachmentEffectData; // 0x0010(0x0060)(NoDestructor)
	class UWwiseAudioComponent*                   CallFunc_GetDefaultWwiseComponent_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIronBearModType                              CallFunc_GetMod_ReturnValue;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponRegisterAttachmentEffectData    K2Node_MakeStruct_WeaponRegisterAttachmentEffectData1; // 0x0080(0x0060)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponRegisterAttachmentEffectData    K2Node_MakeStruct_WeaponRegisterAttachmentEffectData2; // 0x00E8(0x0060)(NoDestructor)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun) == 0x000148, "Wrong size on Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, EntryPoint) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::EntryPoint' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, CallFunc_GetShellCasingEjectEffect_FX) == 0x000008, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::CallFunc_GetShellCasingEjectEffect_FX' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, K2Node_MakeStruct_WeaponRegisterAttachmentEffectData) == 0x000010, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::K2Node_MakeStruct_WeaponRegisterAttachmentEffectData' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, CallFunc_GetDefaultWwiseComponent_ReturnValue) == 0x000070, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::CallFunc_GetDefaultWwiseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, CallFunc_GetMod_ReturnValue) == 0x000078, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::CallFunc_GetMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, K2Node_MakeStruct_WeaponRegisterAttachmentEffectData1) == 0x000080, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::K2Node_MakeStruct_WeaponRegisterAttachmentEffectData1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun, K2Node_MakeStruct_WeaponRegisterAttachmentEffectData2) == 0x0000E8, "Member 'Weapon_Hardpoint_Minigun_C_ExecuteUbergraph_Weapon_Hardpoint_Minigun::K2Node_MakeStruct_WeaponRegisterAttachmentEffectData2' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_UserConstructionScript final
{
public:
	TArray<class UActorComponent*>                K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	uint8                                         CallFunc_AddUseMode_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_UserConstructionScript) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_UserConstructionScript");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_UserConstructionScript) == 0x000018, "Wrong size on Weapon_Hardpoint_Minigun_C_UserConstructionScript");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_UserConstructionScript, CallFunc_AddUseMode_ReturnValue) == 0x000010, "Member 'Weapon_Hardpoint_Minigun_C_UserConstructionScript::CallFunc_AddUseMode_ReturnValue' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.InitializeBarrelMaterials
// 0x0018 (0x0018 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials final
{
public:
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue1;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIronBearModType                              CallFunc_GetMod_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials) == 0x000018, "Wrong size on Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials, CallFunc_GetWeapon_ReturnValue) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials, CallFunc_GetWeapon_ReturnValue1) == 0x000008, "Member 'Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials::CallFunc_GetWeapon_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials, CallFunc_GetMod_ReturnValue) == 0x000010, "Member 'Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials::CallFunc_GetMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'Weapon_Hardpoint_Minigun_C_InitializeBarrelMaterials::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.SetupMod3
// 0x0068 (0x0068 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_SetupMod3 final
{
public:
	struct FGbxAttributeFloat                     CallFunc_MakeGbxAttributeFloat_ReturnValue;        // 0x0000(0x000C)(HasGetValueTypeHash)
	struct FGbxAttributeFloat                     CallFunc_MakeGbxAttributeFloat_ReturnValue1;       // 0x000C(0x000C)(HasGetValueTypeHash)
	TArray<struct FWeaponConfigurationRtpc>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	struct FWeaponConfigurationEvent              K2Node_MakeStruct_WeaponConfigurationEvent;        // 0x0028(0x0010)(IsPlainOldData, NoDestructor)
	TArray<struct FWeaponConfigurationEvent>      K2Node_MakeArray_Array1;                           // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	EGbxAttributeModifierActionExecOutput         CallFunc_ApplyAttributeEffect_ModifierActionResult; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeModifierHandle            CallFunc_ApplyAttributeEffect_ReturnValue;         // 0x0050(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_SetupMod3) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_SetupMod3");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_SetupMod3) == 0x000068, "Wrong size on Weapon_Hardpoint_Minigun_C_SetupMod3");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, CallFunc_MakeGbxAttributeFloat_ReturnValue) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::CallFunc_MakeGbxAttributeFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, CallFunc_MakeGbxAttributeFloat_ReturnValue1) == 0x00000C, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::CallFunc_MakeGbxAttributeFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, K2Node_MakeArray_Array) == 0x000018, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, K2Node_MakeStruct_WeaponConfigurationEvent) == 0x000028, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::K2Node_MakeStruct_WeaponConfigurationEvent' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, K2Node_MakeArray_Array1) == 0x000038, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, CallFunc_ApplyAttributeEffect_ModifierActionResult) == 0x000048, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::CallFunc_ApplyAttributeEffect_ModifierActionResult' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, CallFunc_ApplyAttributeEffect_ReturnValue) == 0x000050, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::CallFunc_ApplyAttributeEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod3, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod3::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.SetupMod1
// 0x0070 (0x0070 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_SetupMod1 final
{
public:
	EGbxAttributeModifierActionExecOutput         CallFunc_ApplyAttributeEffect_ModifierActionResult; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeModifierHandle            CallFunc_ApplyAttributeEffect_ReturnValue;         // 0x0008(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponConfigurationEvent              K2Node_MakeStruct_WeaponConfigurationEvent;        // 0x0020(0x0010)(IsPlainOldData, NoDestructor)
	TArray<struct FWeaponConfigurationRtpc>       K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FWeaponConfigurationEvent>      K2Node_MakeArray_Array1;                           // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	EGbxAttributeModifierActionExecOutput         CallFunc_ApplyAttributeEffect_ModifierActionResult1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeModifierHandle            CallFunc_ApplyAttributeEffect_ReturnValue1;        // 0x0058(0x0010)()
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_SetupMod1) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_SetupMod1");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_SetupMod1) == 0x000070, "Wrong size on Weapon_Hardpoint_Minigun_C_SetupMod1");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, CallFunc_ApplyAttributeEffect_ModifierActionResult) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::CallFunc_ApplyAttributeEffect_ModifierActionResult' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, CallFunc_ApplyAttributeEffect_ReturnValue) == 0x000008, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::CallFunc_ApplyAttributeEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, K2Node_MakeStruct_WeaponConfigurationEvent) == 0x000020, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::K2Node_MakeStruct_WeaponConfigurationEvent' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, K2Node_MakeArray_Array) == 0x000030, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, K2Node_MakeArray_Array1) == 0x000040, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, CallFunc_ApplyAttributeEffect_ModifierActionResult1) == 0x000050, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::CallFunc_ApplyAttributeEffect_ModifierActionResult1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, CallFunc_ApplyAttributeEffect_ReturnValue1) == 0x000058, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::CallFunc_ApplyAttributeEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod1, K2Node_SwitchEnum1_CmpSuccess) == 0x000068, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod1::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.SetupMod2
// 0x0058 (0x0058 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_SetupMod2 final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0008(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0040(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_SetupMod2) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_SetupMod2");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_SetupMod2) == 0x000058, "Wrong size on Weapon_Hardpoint_Minigun_C_SetupMod2");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod2, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod2::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod2, K2Node_MakeStruct_StatusEffectSpec) == 0x000008, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod2::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_SetupMod2, CallFunc_AddStatusEffect_ReturnValue) == 0x000040, "Member 'Weapon_Hardpoint_Minigun_C_SetupMod2::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.InitAudio
// 0x0020 (0x0020 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_InitAudio final
{
public:
	class UWwiseAudioComponent*                   CallFunc_GetDefaultWwiseComponent_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_InitAudio) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_InitAudio");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_InitAudio) == 0x000020, "Wrong size on Weapon_Hardpoint_Minigun_C_InitAudio");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_InitAudio, CallFunc_GetDefaultWwiseComponent_ReturnValue) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_InitAudio::CallFunc_GetDefaultWwiseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_InitAudio, CallFunc_PostWwiseEvent_ReturnValue) == 0x000008, "Member 'Weapon_Hardpoint_Minigun_C_InitAudio::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function Weapon_Hardpoint_Minigun.Weapon_Hardpoint_Minigun_C.GetShellCasingEjectEffect
// 0x0010 (0x0010 - 0x0000)
struct Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect final
{
public:
	class UParticleSystem*                        FX;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIronBearModType                              CallFunc_GetMod_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect) == 0x000008, "Wrong alignment on Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect");
static_assert(sizeof(Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect) == 0x000010, "Wrong size on Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect, FX) == 0x000000, "Member 'Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect::FX' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect, CallFunc_GetMod_ReturnValue) == 0x000008, "Member 'Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect::CallFunc_GetMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'Weapon_Hardpoint_Minigun_C_GetShellCasingEjectEffect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

