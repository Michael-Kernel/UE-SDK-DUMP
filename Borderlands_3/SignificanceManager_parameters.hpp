#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SignificanceManager

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SignificanceManager.SignificanceManager.OnTickActorEndPlay
// 0x0010 (0x0010 - 0x0000)
struct SignificanceManager_OnTickActorEndPlay final
{
public:
	class AActor*                                 TickOptimActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SignificanceManager_OnTickActorEndPlay) == 0x000008, "Wrong alignment on SignificanceManager_OnTickActorEndPlay");
static_assert(sizeof(SignificanceManager_OnTickActorEndPlay) == 0x000010, "Wrong size on SignificanceManager_OnTickActorEndPlay");
static_assert(offsetof(SignificanceManager_OnTickActorEndPlay, TickOptimActor) == 0x000000, "Member 'SignificanceManager_OnTickActorEndPlay::TickOptimActor' has a wrong offset!");
static_assert(offsetof(SignificanceManager_OnTickActorEndPlay, EndPlayReason) == 0x000008, "Member 'SignificanceManager_OnTickActorEndPlay::EndPlayReason' has a wrong offset!");

// Function SignificanceManager.SignificanceManager.UnregisterForTickOptim
// 0x0008 (0x0008 - 0x0000)
struct SignificanceManager_UnregisterForTickOptim final
{
public:
	class AActor*                                 TickOptimActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignificanceManager_UnregisterForTickOptim) == 0x000008, "Wrong alignment on SignificanceManager_UnregisterForTickOptim");
static_assert(sizeof(SignificanceManager_UnregisterForTickOptim) == 0x000008, "Wrong size on SignificanceManager_UnregisterForTickOptim");
static_assert(offsetof(SignificanceManager_UnregisterForTickOptim, TickOptimActor) == 0x000000, "Member 'SignificanceManager_UnregisterForTickOptim::TickOptimActor' has a wrong offset!");

}

