#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_Krakatoa

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Proj_Weapon_BaseProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_Krakatoa.Projectile_Krakatoa_C
// 0x0020 (0x07B0 - 0x0790)
class AProjectile_Krakatoa_C final : public AProj_Weapon_BaseProjectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Projectile_Krakatoa_C;              // 0x0790(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               Volcano;                                           // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       Socket;                                            // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VolcanoDamage;                                     // 0x07A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Projectile_Krakatoa(int32 EntryPoint);
	void FireProjectile();
	void ReceiveBeginPlay();
	void WeaponProjectileExplode();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnHitWorld(const struct FHitResult& Hit);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_Krakatoa_C">();
	}
	static class AProjectile_Krakatoa_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_Krakatoa_C>();
	}
};
static_assert(alignof(AProjectile_Krakatoa_C) == 0x000008, "Wrong alignment on AProjectile_Krakatoa_C");
static_assert(sizeof(AProjectile_Krakatoa_C) == 0x0007B0, "Wrong size on AProjectile_Krakatoa_C");
static_assert(offsetof(AProjectile_Krakatoa_C, UberGraphFrame_Projectile_Krakatoa_C) == 0x000790, "Member 'AProjectile_Krakatoa_C::UberGraphFrame_Projectile_Krakatoa_C' has a wrong offset!");
static_assert(offsetof(AProjectile_Krakatoa_C, Volcano) == 0x000798, "Member 'AProjectile_Krakatoa_C::Volcano' has a wrong offset!");
static_assert(offsetof(AProjectile_Krakatoa_C, Socket) == 0x0007A0, "Member 'AProjectile_Krakatoa_C::Socket' has a wrong offset!");
static_assert(offsetof(AProjectile_Krakatoa_C, VolcanoDamage) == 0x0007A8, "Member 'AProjectile_Krakatoa_C::VolcanoDamage' has a wrong offset!");

}

