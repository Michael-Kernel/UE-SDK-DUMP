#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_HW_COV_Mechanic

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_HW_COV_Mechanic.Proj_HW_COV_Mechanic_C
// 0x0040 (0x0720 - 0x06E0)
class AProj_HW_COV_Mechanic_C final : public AOakAIBalancedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TireMesh;                                          // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExplosionData*                         MyExplosionData;                                   // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ElementalDamageType;                               // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Proj_HW_COV_Mechanic(int32 EntryPoint);
	void OnHitWorld(const struct FHitResult& Hit);
	void OnExplode();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void ProjectileDetonate(bool* Success);
	void ProjectileArm(bool* Success);
	void ProjectileDisarm(bool* Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_HW_COV_Mechanic_C">();
	}
	static class AProj_HW_COV_Mechanic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_HW_COV_Mechanic_C>();
	}
};
static_assert(alignof(AProj_HW_COV_Mechanic_C) == 0x000008, "Wrong alignment on AProj_HW_COV_Mechanic_C");
static_assert(sizeof(AProj_HW_COV_Mechanic_C) == 0x000720, "Wrong size on AProj_HW_COV_Mechanic_C");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_HW_COV_Mechanic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, WwiseAudio) == 0x0006E8, "Member 'AProj_HW_COV_Mechanic_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, Sphere) == 0x0006F0, "Member 'AProj_HW_COV_Mechanic_C::Sphere' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, RotatingMovement) == 0x0006F8, "Member 'AProj_HW_COV_Mechanic_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, GbxProjectileMovement) == 0x000700, "Member 'AProj_HW_COV_Mechanic_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, TireMesh) == 0x000708, "Member 'AProj_HW_COV_Mechanic_C::TireMesh' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, MyExplosionData) == 0x000710, "Member 'AProj_HW_COV_Mechanic_C::MyExplosionData' has a wrong offset!");
static_assert(offsetof(AProj_HW_COV_Mechanic_C, ElementalDamageType) == 0x000718, "Member 'AProj_HW_COV_Mechanic_C::ElementalDamageType' has a wrong offset!");

}

