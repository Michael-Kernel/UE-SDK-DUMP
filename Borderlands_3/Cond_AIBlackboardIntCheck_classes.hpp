#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cond_AIBlackboardIntCheck

#include "Basic.hpp"

#include "GbxTest_structs.hpp"
#include "GbxGameSystemCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Cond_AIBlackboardIntCheck.Cond_AIBlackboardIntCheck_C
// 0x0018 (0x00A0 - 0x0088)
class UCond_AIBlackboardIntCheck_C final : public UGbxCondition_Blueprint
{
public:
	int32                                         Value;                                             // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Blackboard_Key;                                    // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompare                                      Comparison;                                        // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool EvaluateCondition(class UObject* Context, class UObject* OptionalContext) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cond_AIBlackboardIntCheck_C">();
	}
	static class UCond_AIBlackboardIntCheck_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCond_AIBlackboardIntCheck_C>();
	}
};
static_assert(alignof(UCond_AIBlackboardIntCheck_C) == 0x000008, "Wrong alignment on UCond_AIBlackboardIntCheck_C");
static_assert(sizeof(UCond_AIBlackboardIntCheck_C) == 0x0000A0, "Wrong size on UCond_AIBlackboardIntCheck_C");
static_assert(offsetof(UCond_AIBlackboardIntCheck_C, Value) == 0x000088, "Member 'UCond_AIBlackboardIntCheck_C::Value' has a wrong offset!");
static_assert(offsetof(UCond_AIBlackboardIntCheck_C, Blackboard_Key) == 0x000090, "Member 'UCond_AIBlackboardIntCheck_C::Blackboard_Key' has a wrong offset!");
static_assert(offsetof(UCond_AIBlackboardIntCheck_C, Comparison) == 0x000098, "Member 'UCond_AIBlackboardIntCheck_C::Comparison' has a wrong offset!");

}

