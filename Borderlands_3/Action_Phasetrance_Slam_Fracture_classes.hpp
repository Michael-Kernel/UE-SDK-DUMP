#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Phasetrance_Slam_Fracture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Action_Phasetrance_Common_classes.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Action_Phasetrance_Slam_Fracture.Action_Phasetrance_Slam_Fracture_C
// 0x0008 (0x02C8 - 0x02C0)
class UAction_Phasetrance_Slam_Fracture_C final : public UAction_Phasetrance_Common_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Action_Phasetrance_Slam_Fracture_C; // 0x02C0(0x0008)(Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_Action_Phasetrance_Slam_Fracture(int32 EntryPoint);
	void AN_PerformSlamFractureFB_Server();
	void AN_PerformSlamFractureCS_Quake();
	void AN_PerformSlamFractureCS_Start();
	void AN_PerformSlamFractureRumble();
	void OnBeginBringUpWeapon(class AActor* Actor);
	void OnServerEnd(EGbxActionEndState ActionEndState, class AActor* Actor);
	void AN_CreateCastProjectile();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Action_Phasetrance_Slam_Fracture_C">();
	}
	static class UAction_Phasetrance_Slam_Fracture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAction_Phasetrance_Slam_Fracture_C>();
	}
};
static_assert(alignof(UAction_Phasetrance_Slam_Fracture_C) == 0x000008, "Wrong alignment on UAction_Phasetrance_Slam_Fracture_C");
static_assert(sizeof(UAction_Phasetrance_Slam_Fracture_C) == 0x0002C8, "Wrong size on UAction_Phasetrance_Slam_Fracture_C");
static_assert(offsetof(UAction_Phasetrance_Slam_Fracture_C, UberGraphFrame_Action_Phasetrance_Slam_Fracture_C) == 0x0002C0, "Member 'UAction_Phasetrance_Slam_Fracture_C::UberGraphFrame_Action_Phasetrance_Slam_Fracture_C' has a wrong offset!");

}

