#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_PS_MAL_HotGreaseShot

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxWeapon_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_PS_MAL_HotGreaseShot.LightProjectile_PS_MAL_HotGreaseShot_C.OnDamage
// 0x01A0 (0x01A0 - 0x0000)
struct LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0130(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0150(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0188(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage");
static_assert(sizeof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage) == 0x0001A0, "Wrong size on LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x00009C, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x0000A0, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A1, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A2, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000A8, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x000120, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_GetInstigator_ReturnValue1) == 0x000128, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, Temp_struct_Variable) == 0x000130, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_GetOwner_ReturnValue) == 0x000140, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_K2Play_ReturnValue) == 0x000148, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_K2Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, K2Node_MakeStruct_StatusEffectSpec) == 0x000150, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage, CallFunc_AddStatusEffect_ReturnValue) == 0x000188, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnDamage::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");

// Function LightProjectile_PS_MAL_HotGreaseShot.LightProjectile_PS_MAL_HotGreaseShot_C.OnBegin
// 0x0210 (0x0210 - 0x0000)
struct LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00D0(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin) == 0x000010, "Wrong alignment on LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin");
static_assert(sizeof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin) == 0x000210, "Wrong size on LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, Projectile) == 0x000000, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_GetDamageCauser_ReturnValue) == 0x000008, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, Temp_int_Array_Index_Variable) == 0x000018, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000024, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000030, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_Array_Get_Item) == 0x000050, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_BreakTransform_Location) == 0x000084, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_BreakTransform_Scale) == 0x00009C, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_GetForwardVector_ReturnValue) == 0x0000A8, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B4, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000D0, "Member 'LightProjectile_PS_MAL_HotGreaseShot_C_OnBegin::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

