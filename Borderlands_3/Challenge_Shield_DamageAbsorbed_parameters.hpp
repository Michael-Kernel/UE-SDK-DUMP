#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Shield_DamageAbsorbed

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Challenge_Shield_DamageAbsorbed.Challenge_Shield_DamageAbsorbed_C.CheckDamageTaken
// 0x00C0 (0x00C0 - 0x0000)
struct Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0030(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHealthTypeDamageSummary               CallFunc_Array_Get_Item;                           // 0x0090(0x0010)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChallengeProgress_ReturnValue;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken) == 0x000008, "Wrong alignment on Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken");
static_assert(sizeof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken) == 0x0000C0, "Wrong size on Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, DamageReceiver) == 0x000000, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::DamageReceiver' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, Damage) == 0x000008, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::Damage' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, DamageType) == 0x000010, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::DamageType' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, DamageSource) == 0x000018, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::DamageSource' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, InstigatedBy) == 0x000020, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, DamageCauser) == 0x000028, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::DamageCauser' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, Details) == 0x000030, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::Details' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, Temp_int_Array_Index_Variable) == 0x000088, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_Array_Get_Item) == 0x000090, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_FTrunc_ReturnValue) == 0x0000A4, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B0, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_GetChallengeProgress_ReturnValue) == 0x0000B4, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_GetChallengeProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken, CallFunc_Add_IntInt_ReturnValue1) == 0x0000B8, "Member 'Challenge_Shield_DamageAbsorbed_C_CheckDamageTaken::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function Challenge_Shield_DamageAbsorbed.Challenge_Shield_DamageAbsorbed_C.OnInitChallengeInstance
// 0x0028 (0x0028 - 0x0000)
struct Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UDamageComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance");
static_assert(sizeof(Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance) == 0x000028, "Wrong size on Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'Challenge_Shield_DamageAbsorbed_C_OnInitChallengeInstance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

}

