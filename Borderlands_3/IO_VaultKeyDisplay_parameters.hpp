#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_VaultKeyDisplay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function IO_VaultKeyDisplay.IO_VaultKeyDisplay_C.__UserState_VaultKeyState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_VaultKeyDisplay_C___UserState_VaultKeyState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_0) == 0x000001, "Wrong alignment on IO_VaultKeyDisplay_C___UserState_VaultKeyState_0");
static_assert(sizeof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_0) == 0x000001, "Wrong size on IO_VaultKeyDisplay_C___UserState_VaultKeyState_0");
static_assert(offsetof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_0, bFromLoad) == 0x000000, "Member 'IO_VaultKeyDisplay_C___UserState_VaultKeyState_0::bFromLoad' has a wrong offset!");

// Function IO_VaultKeyDisplay.IO_VaultKeyDisplay_C.__UserState_VaultKeyState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_VaultKeyDisplay_C___UserState_VaultKeyState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_1) == 0x000001, "Wrong alignment on IO_VaultKeyDisplay_C___UserState_VaultKeyState_1");
static_assert(sizeof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_1) == 0x000001, "Wrong size on IO_VaultKeyDisplay_C___UserState_VaultKeyState_1");
static_assert(offsetof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_1, bFromLoad) == 0x000000, "Member 'IO_VaultKeyDisplay_C___UserState_VaultKeyState_1::bFromLoad' has a wrong offset!");

// Function IO_VaultKeyDisplay.IO_VaultKeyDisplay_C.__UserState_VaultKeyState_2
// 0x0001 (0x0001 - 0x0000)
struct IO_VaultKeyDisplay_C___UserState_VaultKeyState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_2) == 0x000001, "Wrong alignment on IO_VaultKeyDisplay_C___UserState_VaultKeyState_2");
static_assert(sizeof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_2) == 0x000001, "Wrong size on IO_VaultKeyDisplay_C___UserState_VaultKeyState_2");
static_assert(offsetof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_2, bFromLoad) == 0x000000, "Member 'IO_VaultKeyDisplay_C___UserState_VaultKeyState_2::bFromLoad' has a wrong offset!");

// Function IO_VaultKeyDisplay.IO_VaultKeyDisplay_C.__UserState_VaultKeyState_3
// 0x0001 (0x0001 - 0x0000)
struct IO_VaultKeyDisplay_C___UserState_VaultKeyState_3 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_3) == 0x000001, "Wrong alignment on IO_VaultKeyDisplay_C___UserState_VaultKeyState_3");
static_assert(sizeof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_3) == 0x000001, "Wrong size on IO_VaultKeyDisplay_C___UserState_VaultKeyState_3");
static_assert(offsetof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_3, bFromLoad) == 0x000000, "Member 'IO_VaultKeyDisplay_C___UserState_VaultKeyState_3::bFromLoad' has a wrong offset!");

// Function IO_VaultKeyDisplay.IO_VaultKeyDisplay_C.__UserState_VaultKeyState_4
// 0x0001 (0x0001 - 0x0000)
struct IO_VaultKeyDisplay_C___UserState_VaultKeyState_4 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_4) == 0x000001, "Wrong alignment on IO_VaultKeyDisplay_C___UserState_VaultKeyState_4");
static_assert(sizeof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_4) == 0x000001, "Wrong size on IO_VaultKeyDisplay_C___UserState_VaultKeyState_4");
static_assert(offsetof(IO_VaultKeyDisplay_C___UserState_VaultKeyState_4, bFromLoad) == 0x000000, "Member 'IO_VaultKeyDisplay_C___UserState_VaultKeyState_4::bFromLoad' has a wrong offset!");

// Function IO_VaultKeyDisplay.IO_VaultKeyDisplay_C.ExecuteUbergraph_IO_VaultKeyDisplay
// 0x00B8 (0x00B8 - 0x0000)
struct IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad4;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0020(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay) == 0x000008, "Wrong alignment on IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay");
static_assert(sizeof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay) == 0x0000B8, "Wrong size on IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, EntryPoint) == 0x000000, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, K2Node_UserStateEvent_bFromLoad4) == 0x000004, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::K2Node_UserStateEvent_bFromLoad4' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, K2Node_UserStateEvent_bFromLoad3) == 0x000005, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, K2Node_UserStateEvent_bFromLoad2) == 0x000006, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, K2Node_UserStateEvent_bFromLoad1) == 0x000007, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, K2Node_UserStateEvent_bFromLoad) == 0x000008, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000020, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'IO_VaultKeyDisplay_C_ExecuteUbergraph_IO_VaultKeyDisplay::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

