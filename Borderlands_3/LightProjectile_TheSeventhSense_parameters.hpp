#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TheSeventhSense

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TheSeventhSense.LightProjectile_TheSeventhSense_C.OnDamage
// 0x02E8 (0x02E8 - 0x0000)
struct LightProjectile_TheSeventhSense_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClassElementalType_ReturnValue;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetAttitudeTowardActor_ReturnValue;       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01A8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_TheSeventhSense_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_TheSeventhSense_C_OnDamage");
static_assert(sizeof(LightProjectile_TheSeventhSense_C_OnDamage) == 0x0002E8, "Wrong size on LightProjectile_TheSeventhSense_C_OnDamage");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x000099, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009A, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000118, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_IsClassElementalType_ReturnValue) == 0x000124, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_IsClassElementalType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakVector_X) == 0x000128, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakVector_Y) == 0x00012C, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_BreakVector_Z) == 0x000130, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_MakeVector_ReturnValue) == 0x000134, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x000140, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_Normal_ReturnValue) == 0x000148, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_GetAttitudeTowardActor_ReturnValue) == 0x000154, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_GetAttitudeTowardActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_RandomFloatInRange_ReturnValue) == 0x000158, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00015C, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_RotateAngleAxis_ReturnValue) == 0x000160, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x00016C, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000178, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_GetDamageCauser_ReturnValue) == 0x000188, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue1) == 0x000190, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, CallFunc_GetInstigator_ReturnValue1) == 0x0001A0, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TheSeventhSense_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001A8, "Member 'LightProjectile_TheSeventhSense_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

