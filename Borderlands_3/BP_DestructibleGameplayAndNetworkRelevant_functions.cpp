#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructibleGameplayAndNetworkRelevant

#include "Basic.hpp"

#include "BP_DestructibleGameplayAndNetworkRelevant_classes.hpp"
#include "BP_DestructibleGameplayAndNetworkRelevant_parameters.hpp"


namespace SDK
{

// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.ExecuteUbergraph_BP_DestructibleGameplayAndNetworkRelevant
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleGameplayAndNetworkRelevant_C::ExecuteUbergraph_BP_DestructibleGameplayAndNetworkRelevant(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "ExecuteUbergraph_BP_DestructibleGameplayAndNetworkRelevant");

	Params::BP_DestructibleGameplayAndNetworkRelevant_C_ExecuteUbergraph_BP_DestructibleGameplayAndNetworkRelevant Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.BndEvt__DestructibleComponent_K2Node_ComponentBoundEvent_0_GbxComponentFractureSignature__DelegateSignature_BP_DestructibleGameplayAndNetworkRelevant
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          FractureCentroid                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDirection                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FracturePercent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSilentFracture                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DestructibleGameplayAndNetworkRelevant_C::BndEvt__DestructibleComponent_K2Node_ComponentBoundEvent_0_GbxComponentFractureSignature__DelegateSignature_BP_DestructibleGameplayAndNetworkRelevant(const struct FVector& FractureCentroid, const struct FVector& HitDirection, float FracturePercent, bool bSilentFracture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "BndEvt__DestructibleComponent_K2Node_ComponentBoundEvent_0_GbxComponentFractureSignature__DelegateSignature_BP_DestructibleGameplayAndNetworkRelevant");

	Params::BP_DestructibleGameplayAndNetworkRelevant_C_BndEvt__DestructibleComponent_K2Node_ComponentBoundEvent_0_GbxComponentFractureSignature__DelegateSignature_BP_DestructibleGameplayAndNetworkRelevant Parms{};

	Parms.FractureCentroid = std::move(FractureCentroid);
	Parms.HitDirection = std::move(HitDirection);
	Parms.FracturePercent = FracturePercent;
	Parms.bSilentFracture = bSilentFracture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.BPI_ScriptedTotalDestruction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestructibleGameplayAndNetworkRelevant_C::BPI_ScriptedTotalDestruction(float DamageRadius, float ImpulseStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "BPI_ScriptedTotalDestruction");

	Params::BP_DestructibleGameplayAndNetworkRelevant_C_BPI_ScriptedTotalDestruction Parms{};

	Parms.DamageRadius = DamageRadius;
	Parms.ImpulseStrength = ImpulseStrength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.ContinueSelfDamageLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::ContinueSelfDamageLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "ContinueSelfDamageLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.CauseDamageToRandomChunk
// (BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::CauseDamageToRandomChunk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "CauseDamageToRandomChunk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.BPI_SetFracturable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fracturable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DestructibleGameplayAndNetworkRelevant_C::BPI_SetFracturable(bool Fracturable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "BPI_SetFracturable");

	Params::BP_DestructibleGameplayAndNetworkRelevant_C_BPI_SetFracturable Parms{};

	Parms.Fracturable = Fracturable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.BPI_SkipToDestroyedState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::BPI_SkipToDestroyedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "BPI_SkipToDestroyedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.AttemptLootableScripting
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::AttemptLootableScripting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "AttemptLootableScripting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.ForceTotalDestruction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::ForceTotalDestruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "ForceTotalDestruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructibleGameplayAndNetworkRelevant.BP_DestructibleGameplayAndNetworkRelevant_C.TurnOffNavPaint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DestructibleGameplayAndNetworkRelevant_C::TurnOffNavPaint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructibleGameplayAndNetworkRelevant_C", "TurnOffNavPaint");

	UObject::ProcessEvent(Func, nullptr);
}

}

