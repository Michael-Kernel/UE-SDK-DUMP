#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxInput

#include "Basic.hpp"

#include "GbxRuntime_classes.hpp"
#include "GbxInput_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class GbxInput.GbxInputActionReceiverDelegateBinding
// 0x0000 (0x0028 - 0x0028)
class UGbxInputActionReceiverDelegateBinding : public UDynamicBlueprintBinding
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionReceiverDelegateBinding">();
	}
	static class UGbxInputActionReceiverDelegateBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionReceiverDelegateBinding>();
	}
};
static_assert(alignof(UGbxInputActionReceiverDelegateBinding) == 0x000008, "Wrong alignment on UGbxInputActionReceiverDelegateBinding");
static_assert(sizeof(UGbxInputActionReceiverDelegateBinding) == 0x000028, "Wrong size on UGbxInputActionReceiverDelegateBinding");

// Class GbxInput.GbxInputAction
// 0x0000 (0x0030 - 0x0030)
class UGbxInputAction : public UGbxDataAsset
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputAction">();
	}
	static class UGbxInputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputAction>();
	}
};
static_assert(alignof(UGbxInputAction) == 0x000008, "Wrong alignment on UGbxInputAction");
static_assert(sizeof(UGbxInputAction) == 0x000030, "Wrong size on UGbxInputAction");

// Class GbxInput.GbxInputAction_ConsoleCommand
// 0x0000 (0x0030 - 0x0030)
class UGbxInputAction_ConsoleCommand final : public UGbxInputAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputAction_ConsoleCommand">();
	}
	static class UGbxInputAction_ConsoleCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputAction_ConsoleCommand>();
	}
};
static_assert(alignof(UGbxInputAction_ConsoleCommand) == 0x000008, "Wrong alignment on UGbxInputAction_ConsoleCommand");
static_assert(sizeof(UGbxInputAction_ConsoleCommand) == 0x000030, "Wrong size on UGbxInputAction_ConsoleCommand");

// Class GbxInput.GbxInputActionCollection
// 0x0000 (0x0030 - 0x0030)
class UGbxInputActionCollection final : public UGbxDataAsset
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionCollection">();
	}
	static class UGbxInputActionCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionCollection>();
	}
};
static_assert(alignof(UGbxInputActionCollection) == 0x000008, "Wrong alignment on UGbxInputActionCollection");
static_assert(sizeof(UGbxInputActionCollection) == 0x000030, "Wrong size on UGbxInputActionCollection");

// Class GbxInput.GbxInputActionData
// 0x0008 (0x0038 - 0x0030)
class UGbxInputActionData : public UGbxDataAsset
{
public:
	class FName                                   ActionName;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionData">();
	}
	static class UGbxInputActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionData>();
	}
};
static_assert(alignof(UGbxInputActionData) == 0x000008, "Wrong alignment on UGbxInputActionData");
static_assert(sizeof(UGbxInputActionData) == 0x000038, "Wrong size on UGbxInputActionData");
static_assert(offsetof(UGbxInputActionData, ActionName) == 0x000030, "Member 'UGbxInputActionData::ActionName' has a wrong offset!");

// Class GbxInput.GbxInputActionData_Continuous_Vector
// 0x0000 (0x0038 - 0x0038)
class UGbxInputActionData_Continuous_Vector final : public UGbxInputActionData
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionData_Continuous_Vector">();
	}
	static class UGbxInputActionData_Continuous_Vector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionData_Continuous_Vector>();
	}
};
static_assert(alignof(UGbxInputActionData_Continuous_Vector) == 0x000008, "Wrong alignment on UGbxInputActionData_Continuous_Vector");
static_assert(sizeof(UGbxInputActionData_Continuous_Vector) == 0x000038, "Wrong size on UGbxInputActionData_Continuous_Vector");

// Class GbxInput.GbxInputActionData_Discrete
// 0x0000 (0x0038 - 0x0038)
class UGbxInputActionData_Discrete final : public UGbxInputActionData
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionData_Discrete">();
	}
	static class UGbxInputActionData_Discrete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionData_Discrete>();
	}
};
static_assert(alignof(UGbxInputActionData_Discrete) == 0x000008, "Wrong alignment on UGbxInputActionData_Discrete");
static_assert(sizeof(UGbxInputActionData_Discrete) == 0x000038, "Wrong size on UGbxInputActionData_Discrete");

// Class GbxInput.GbxInputActionEventInterpreter
// 0x0028 (0x0050 - 0x0028)
class UGbxInputActionEventInterpreter : public UObject
{
public:
	TSoftClassPtr<class UClass>                   InterpreterClass;                                  // 0x0028(0x0028)(Config, GlobalConfig, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionEventInterpreter">();
	}
	static class UGbxInputActionEventInterpreter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionEventInterpreter>();
	}
};
static_assert(alignof(UGbxInputActionEventInterpreter) == 0x000008, "Wrong alignment on UGbxInputActionEventInterpreter");
static_assert(sizeof(UGbxInputActionEventInterpreter) == 0x000050, "Wrong size on UGbxInputActionEventInterpreter");
static_assert(offsetof(UGbxInputActionEventInterpreter, InterpreterClass) == 0x000028, "Member 'UGbxInputActionEventInterpreter::InterpreterClass' has a wrong offset!");

// Class GbxInput.GbxInputActionReceiverDelegateBinding_Continuous_Vector
// 0x0010 (0x0038 - 0x0028)
class UGbxInputActionReceiverDelegateBinding_Continuous_Vector final : public UGbxInputActionReceiverDelegateBinding
{
public:
	TArray<struct FBlueprintGbxInputActionReceiverDelegateBinding_Continuous_Vector> InputActionReceiverDelegateBindings;               // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionReceiverDelegateBinding_Continuous_Vector">();
	}
	static class UGbxInputActionReceiverDelegateBinding_Continuous_Vector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionReceiverDelegateBinding_Continuous_Vector>();
	}
};
static_assert(alignof(UGbxInputActionReceiverDelegateBinding_Continuous_Vector) == 0x000008, "Wrong alignment on UGbxInputActionReceiverDelegateBinding_Continuous_Vector");
static_assert(sizeof(UGbxInputActionReceiverDelegateBinding_Continuous_Vector) == 0x000038, "Wrong size on UGbxInputActionReceiverDelegateBinding_Continuous_Vector");
static_assert(offsetof(UGbxInputActionReceiverDelegateBinding_Continuous_Vector, InputActionReceiverDelegateBindings) == 0x000028, "Member 'UGbxInputActionReceiverDelegateBinding_Continuous_Vector::InputActionReceiverDelegateBindings' has a wrong offset!");

// Class GbxInput.GbxInputActionReceiverDelegateBinding_Discrete
// 0x0010 (0x0038 - 0x0028)
class UGbxInputActionReceiverDelegateBinding_Discrete final : public UGbxInputActionReceiverDelegateBinding
{
public:
	TArray<struct FBlueprintGbxInputActionReceiverDelegateBinding_Discrete> InputActionReceiverDelegateBindings;               // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionReceiverDelegateBinding_Discrete">();
	}
	static class UGbxInputActionReceiverDelegateBinding_Discrete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputActionReceiverDelegateBinding_Discrete>();
	}
};
static_assert(alignof(UGbxInputActionReceiverDelegateBinding_Discrete) == 0x000008, "Wrong alignment on UGbxInputActionReceiverDelegateBinding_Discrete");
static_assert(sizeof(UGbxInputActionReceiverDelegateBinding_Discrete) == 0x000038, "Wrong size on UGbxInputActionReceiverDelegateBinding_Discrete");
static_assert(offsetof(UGbxInputActionReceiverDelegateBinding_Discrete, InputActionReceiverDelegateBindings) == 0x000028, "Member 'UGbxInputActionReceiverDelegateBinding_Discrete::InputActionReceiverDelegateBindings' has a wrong offset!");

// Class GbxInput.GbxInputActionReceiverInterface
// 0x0000 (0x0028 - 0x0028)
class IGbxInputActionReceiverInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputActionReceiverInterface">();
	}
	static class IGbxInputActionReceiverInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxInputActionReceiverInterface>();
	}
};
static_assert(alignof(IGbxInputActionReceiverInterface) == 0x000008, "Wrong alignment on IGbxInputActionReceiverInterface");
static_assert(sizeof(IGbxInputActionReceiverInterface) == 0x000028, "Wrong size on IGbxInputActionReceiverInterface");

// Class GbxInput.GbxInputComponent
// 0x00F0 (0x02F0 - 0x0200)
class UGbxInputComponent : public UInputComponent
{
public:
	uint8                                         Pad_200[0x8];                                      // 0x0200(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UGbxInputKeyRebindData_Button*> CommonInputMap;                                    // 0x0208(0x0050)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGbxInputRebindCategory*                RebindCategory;                                    // 0x0258(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxInputRebindContext*                 DefaultRebindContext;                              // 0x0260(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInputActionEventLookupList         InputActionEventLookupList;                        // 0x0268(0x0010)(DuplicateTransient, NativeAccessSpecifierPrivate)
	class UGbxInputRebindContext*                 RebindContext;                                     // 0x0278(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_280[0x70];                                     // 0x0280(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InputAction_Continuous_Vector_Impl(class UGbxInputActionData_Continuous_Vector* AxisAction, const struct FVector& Value);
	void StartInputAction_Discrete_Impl(class UGbxInputActionData_Discrete* DiscreteAction, bool bConsumeEvent);
	void StartInputConsumeKeyImpl();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputComponent">();
	}
	static class UGbxInputComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputComponent>();
	}
};
static_assert(alignof(UGbxInputComponent) == 0x000008, "Wrong alignment on UGbxInputComponent");
static_assert(sizeof(UGbxInputComponent) == 0x0002F0, "Wrong size on UGbxInputComponent");
static_assert(offsetof(UGbxInputComponent, CommonInputMap) == 0x000208, "Member 'UGbxInputComponent::CommonInputMap' has a wrong offset!");
static_assert(offsetof(UGbxInputComponent, RebindCategory) == 0x000258, "Member 'UGbxInputComponent::RebindCategory' has a wrong offset!");
static_assert(offsetof(UGbxInputComponent, DefaultRebindContext) == 0x000260, "Member 'UGbxInputComponent::DefaultRebindContext' has a wrong offset!");
static_assert(offsetof(UGbxInputComponent, InputActionEventLookupList) == 0x000268, "Member 'UGbxInputComponent::InputActionEventLookupList' has a wrong offset!");
static_assert(offsetof(UGbxInputComponent, RebindContext) == 0x000278, "Member 'UGbxInputComponent::RebindContext' has a wrong offset!");

// Class GbxInput.GbxInputDevice
// 0x0008 (0x0038 - 0x0030)
class UGbxInputDevice final : public UGbxDataAsset
{
public:
	class FName                                   DeviceName;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputDevice">();
	}
	static class UGbxInputDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputDevice>();
	}
};
static_assert(alignof(UGbxInputDevice) == 0x000008, "Wrong alignment on UGbxInputDevice");
static_assert(sizeof(UGbxInputDevice) == 0x000038, "Wrong size on UGbxInputDevice");
static_assert(offsetof(UGbxInputDevice, DeviceName) == 0x000030, "Member 'UGbxInputDevice::DeviceName' has a wrong offset!");

// Class GbxInput.GbxInputEventHelpers
// 0x0000 (0x0028 - 0x0028)
class UGbxInputEventHelpers final : public UObject
{
public:
	void SigFunc_Axis(const struct FVector& Val);
	void SigFunc_Button_PressPulse(float NextPulseDelay);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputEventHelpers">();
	}
	static class UGbxInputEventHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputEventHelpers>();
	}
};
static_assert(alignof(UGbxInputEventHelpers) == 0x000008, "Wrong alignment on UGbxInputEventHelpers");
static_assert(sizeof(UGbxInputEventHelpers) == 0x000028, "Wrong size on UGbxInputEventHelpers");

// Class GbxInput.GbxInputKeyRebindData
// 0x0010 (0x0040 - 0x0030)
class UGbxInputKeyRebindData : public UDataAsset
{
public:
	class FName                                   RebindName;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxInputRebindPlatformSupportType            PlatformSupportType;                               // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputKeyRebindData">();
	}
	static class UGbxInputKeyRebindData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputKeyRebindData>();
	}
};
static_assert(alignof(UGbxInputKeyRebindData) == 0x000008, "Wrong alignment on UGbxInputKeyRebindData");
static_assert(sizeof(UGbxInputKeyRebindData) == 0x000040, "Wrong size on UGbxInputKeyRebindData");
static_assert(offsetof(UGbxInputKeyRebindData, RebindName) == 0x000030, "Member 'UGbxInputKeyRebindData::RebindName' has a wrong offset!");
static_assert(offsetof(UGbxInputKeyRebindData, PlatformSupportType) == 0x000038, "Member 'UGbxInputKeyRebindData::PlatformSupportType' has a wrong offset!");

// Class GbxInput.GbxInputKeyRebindData_Button
// 0x0000 (0x0040 - 0x0040)
class UGbxInputKeyRebindData_Button final : public UGbxInputKeyRebindData
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputKeyRebindData_Button">();
	}
	static class UGbxInputKeyRebindData_Button* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputKeyRebindData_Button>();
	}
};
static_assert(alignof(UGbxInputKeyRebindData_Button) == 0x000008, "Wrong alignment on UGbxInputKeyRebindData_Button");
static_assert(sizeof(UGbxInputKeyRebindData_Button) == 0x000040, "Wrong size on UGbxInputKeyRebindData_Button");

// Class GbxInput.GbxInputKeyRebindData_Axis
// 0x0000 (0x0040 - 0x0040)
class UGbxInputKeyRebindData_Axis final : public UGbxInputKeyRebindData
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputKeyRebindData_Axis">();
	}
	static class UGbxInputKeyRebindData_Axis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputKeyRebindData_Axis>();
	}
};
static_assert(alignof(UGbxInputKeyRebindData_Axis) == 0x000008, "Wrong alignment on UGbxInputKeyRebindData_Axis");
static_assert(sizeof(UGbxInputKeyRebindData_Axis) == 0x000040, "Wrong size on UGbxInputKeyRebindData_Axis");

// Class GbxInput.GbxInputRebindCategory
// 0x0040 (0x0070 - 0x0030)
class UGbxInputRebindCategory final : public UDataAsset
{
public:
	class FText                                   CategoryName;                                      // 0x0030(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   CategoryDescription;                               // 0x0048(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UGbxInputRebindCategory*                ParentCategory;                                    // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxInputRebindContext*                 DefaultContext;                                    // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputRebindCategory">();
	}
	static class UGbxInputRebindCategory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputRebindCategory>();
	}
};
static_assert(alignof(UGbxInputRebindCategory) == 0x000008, "Wrong alignment on UGbxInputRebindCategory");
static_assert(sizeof(UGbxInputRebindCategory) == 0x000070, "Wrong size on UGbxInputRebindCategory");
static_assert(offsetof(UGbxInputRebindCategory, CategoryName) == 0x000030, "Member 'UGbxInputRebindCategory::CategoryName' has a wrong offset!");
static_assert(offsetof(UGbxInputRebindCategory, CategoryDescription) == 0x000048, "Member 'UGbxInputRebindCategory::CategoryDescription' has a wrong offset!");
static_assert(offsetof(UGbxInputRebindCategory, ParentCategory) == 0x000060, "Member 'UGbxInputRebindCategory::ParentCategory' has a wrong offset!");
static_assert(offsetof(UGbxInputRebindCategory, DefaultContext) == 0x000068, "Member 'UGbxInputRebindCategory::DefaultContext' has a wrong offset!");

// Class GbxInput.GbxInputRebindContext
// 0x0050 (0x0080 - 0x0030)
class UGbxInputRebindContext : public UDataAsset
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxInputRebindContext*                 ParentContext;                                     // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInputRebind_Button>         ButtonBindings;                                    // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInputRebind_Axis>           AxisBindings;                                      // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UGbxInputRebindContext*                 DefaultContext;                                    // 0x0070(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxInputRebindContext">();
	}
	static class UGbxInputRebindContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxInputRebindContext>();
	}
};
static_assert(alignof(UGbxInputRebindContext) == 0x000008, "Wrong alignment on UGbxInputRebindContext");
static_assert(sizeof(UGbxInputRebindContext) == 0x000080, "Wrong size on UGbxInputRebindContext");
static_assert(offsetof(UGbxInputRebindContext, ParentContext) == 0x000048, "Member 'UGbxInputRebindContext::ParentContext' has a wrong offset!");
static_assert(offsetof(UGbxInputRebindContext, ButtonBindings) == 0x000050, "Member 'UGbxInputRebindContext::ButtonBindings' has a wrong offset!");
static_assert(offsetof(UGbxInputRebindContext, AxisBindings) == 0x000060, "Member 'UGbxInputRebindContext::AxisBindings' has a wrong offset!");
static_assert(offsetof(UGbxInputRebindContext, DefaultContext) == 0x000070, "Member 'UGbxInputRebindContext::DefaultContext' has a wrong offset!");

// Class GbxInput.GbxPlayerInput
// 0x0060 (0x0428 - 0x03C8)
class UGbxPlayerInput : public UPlayerInput
{
public:
	TArray<class UGbxInputRebindCategory*>        Categories;                                        // 0x03C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class UGbxInputRebindCategory*, class UGbxInputRebindContext*> RebindCategoryToContext;                           // 0x03D8(0x0050)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GbxPlayerInput">();
	}
	static class UGbxPlayerInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxPlayerInput>();
	}
};
static_assert(alignof(UGbxPlayerInput) == 0x000008, "Wrong alignment on UGbxPlayerInput");
static_assert(sizeof(UGbxPlayerInput) == 0x000428, "Wrong size on UGbxPlayerInput");
static_assert(offsetof(UGbxPlayerInput, Categories) == 0x0003C8, "Member 'UGbxPlayerInput::Categories' has a wrong offset!");
static_assert(offsetof(UGbxPlayerInput, RebindCategoryToContext) == 0x0003D8, "Member 'UGbxPlayerInput::RebindCategoryToContext' has a wrong offset!");

}

