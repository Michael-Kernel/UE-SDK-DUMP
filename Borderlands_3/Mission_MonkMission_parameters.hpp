#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_MonkMission

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK::Params
{

// Function Mission_MonkMission.Mission_MonkMission_C.ExecuteUbergraph_Mission_MonkMission
// 0x2460 (0x2460 - 0x0000)
struct Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0008(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue1;            // 0x0220(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue2;            // 0x0438(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0650(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_662[0x6];                                      // 0x0662(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue3;            // 0x0668(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue4;            // 0x0880(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation1;                // 0x0A98(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID1;                  // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue1;                 // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue5;            // 0x0AB0(0x0218)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue1;              // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC9[0x3];                                      // 0x0CC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation2;                // 0x0CCC(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID2;                  // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue2;                 // 0x0CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue2;              // 0x0CDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CDE[0x2];                                      // 0x0CDE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue6;            // 0x0CE0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue7;            // 0x0EF8(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation3;                // 0x1110(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID3;                  // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue3;                 // 0x1120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1121[0x3];                                     // 0x1121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation4;                // 0x1124(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID4;                  // 0x1130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue4;                 // 0x1134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue3;              // 0x1135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue4;              // 0x1136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1137[0x1];                                     // 0x1137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue8;            // 0x1138(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation5;                // 0x1350(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID5;                  // 0x135C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue5;                 // 0x1360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue5;              // 0x1361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1362[0x6];                                     // 0x1362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue9;            // 0x1368(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation6;                // 0x1580(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID6;                  // 0x158C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue6;                 // 0x1590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1591[0x7];                                     // 0x1591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue10;           // 0x1598(0x0218)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue6;              // 0x17B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B1[0x3];                                     // 0x17B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation7;                // 0x17B4(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID7;                  // 0x17C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue7;                 // 0x17C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue7;              // 0x17C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17C6[0x2];                                     // 0x17C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue11;           // 0x17C8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue12;           // 0x19E0(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue13;           // 0x1BF8(0x0218)()
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue14;           // 0x1E10(0x0218)()
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x2028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x2029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent14;     // 0x202A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202B[0x1];                                     // 0x202B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount14;     // 0x202C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6; // 0x2030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x2031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x2032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent13;     // 0x2033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount13;     // 0x2034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context13;        // 0x2038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x2040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5; // 0x2041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2042[0x6];                                     // 0x2042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context12;        // 0x2048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent12;     // 0x2050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2051[0x3];                                     // 0x2051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount12;     // 0x2054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4; // 0x2058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x2059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3; // 0x205A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x205B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205C[0x4];                                     // 0x205C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context11;        // 0x2060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent11;     // 0x2068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2069[0x3];                                     // 0x2069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount11;     // 0x206C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context10;        // 0x2070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger1_CmpSuccess;                  // 0x2078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x2079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent10;     // 0x207A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207B[0x1];                                     // 0x207B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount10;     // 0x207C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context9;         // 0x2080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x2088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent9;      // 0x2089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208A[0x2];                                     // 0x208A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount9;      // 0x208C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context8;         // 0x2090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x2098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent8;      // 0x2099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209A[0x2];                                     // 0x209A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount8;      // 0x209C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent7;      // 0x20A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A1[0x3];                                     // 0x20A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount7;      // 0x20A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum6_CmpSuccess;                     // 0x20A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum7_CmpSuccess;                     // 0x20A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent6;      // 0x20AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20AB[0x1];                                     // 0x20AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount6;      // 0x20AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context7;         // 0x20B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum8_CmpSuccess;                     // 0x20B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B9[0x7];                                     // 0x20B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context6;         // 0x20C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent5;      // 0x20C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C9[0x3];                                     // 0x20C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount5;      // 0x20CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum9_CmpSuccess;                     // 0x20D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent4;      // 0x20D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D2[0x2];                                     // 0x20D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount4;      // 0x20D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent3;      // 0x20D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D9[0x3];                                     // 0x20D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount3;      // 0x20DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation8;                // 0x20E0(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID8;                  // 0x20EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue8;                 // 0x20F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue8;              // 0x20F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F2[0x6];                                     // 0x20F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue15;           // 0x20F8(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation9;                // 0x2310(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID9;                  // 0x231C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue9;                 // 0x2320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2321[0x3];                                     // 0x2321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation10;               // 0x2324(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID10;                 // 0x2330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue10;                // 0x2334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue9;              // 0x2335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue10;             // 0x2336(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2337[0x1];                                     // 0x2337(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation11;               // 0x2338(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID11;                 // 0x2344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue11;                // 0x2348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue11;             // 0x2349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_234A[0x2];                                     // 0x234A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation12;               // 0x234C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID12;                 // 0x2358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue12;                // 0x235C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue12;             // 0x235D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235E[0x2];                                     // 0x235E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation13;               // 0x2360(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID13;                 // 0x236C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue13;                // 0x2370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue13;             // 0x2371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2372[0x2];                                     // 0x2372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation14;               // 0x2374(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID14;                 // 0x2380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue14;                // 0x2384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2385[0x3];                                     // 0x2385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x2388(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue14;             // 0x2398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue;           // 0x2399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239A[0x2];                                     // 0x239A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation15;               // 0x239C(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID15;                 // 0x23A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue15;                // 0x23AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2; // 0x23AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue15;             // 0x23AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent2;      // 0x23AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount2;      // 0x23B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B4[0x4];                                     // 0x23B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context5;         // 0x23B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum10_CmpSuccess;                    // 0x23C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1; // 0x23C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent; // 0x23C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C3[0x5];                                     // 0x23C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context4;         // 0x23C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context3;         // 0x23D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context2;         // 0x23D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent1;      // 0x23E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E1[0x3];                                     // 0x23E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount1;      // 0x23E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context1;         // 0x23E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum11_CmpSuccess;                    // 0x23F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue1;          // 0x23F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23F2[0x6];                                     // 0x23F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x23F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x2408(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x2418(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x2428(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x2438(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue2;          // 0x2448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent;       // 0x2449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244A[0x2];                                     // 0x244A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount;       // 0x244C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context;          // 0x2450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum12_CmpSuccess;                    // 0x2458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission) == 0x000008, "Wrong alignment on Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission");
static_assert(sizeof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission) == 0x002460, "Wrong size on Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, EntryPoint) == 0x000000, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue) == 0x000008, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue1) == 0x000220, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue2) == 0x000438, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation) == 0x000650, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID) == 0x00065C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue) == 0x000660, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue) == 0x000661, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue3) == 0x000668, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue4) == 0x000880, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation1) == 0x000A98, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID1) == 0x000AA4, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue1) == 0x000AA8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue5) == 0x000AB0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue1) == 0x000CC8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation2) == 0x000CCC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID2) == 0x000CD8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue2) == 0x000CDC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue2) == 0x000CDD, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue6) == 0x000CE0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue7) == 0x000EF8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation3) == 0x001110, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID3) == 0x00111C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue3) == 0x001120, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation4) == 0x001124, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID4) == 0x001130, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue4) == 0x001134, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue3) == 0x001135, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue4) == 0x001136, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue8) == 0x001138, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation5) == 0x001350, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID5) == 0x00135C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue5) == 0x001360, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue5) == 0x001361, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue9) == 0x001368, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation6) == 0x001580, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID6) == 0x00158C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue6) == 0x001590, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue10) == 0x001598, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue6) == 0x0017B0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation7) == 0x0017B4, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID7) == 0x0017C0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue7) == 0x0017C4, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue7) == 0x0017C5, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue11) == 0x0017C8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue12) == 0x0019E0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue13) == 0x001BF8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue14) == 0x001E10, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, Temp_bool_Has_Been_Initd_Variable) == 0x002028, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, Temp_bool_IsClosed_Variable) == 0x002029, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent14) == 0x00202A, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount14) == 0x00202C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6) == 0x002030, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchInteger_CmpSuccess) == 0x002031, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum_CmpSuccess) == 0x002032, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent13) == 0x002033, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount13) == 0x002034, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context13) == 0x002038, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum1_CmpSuccess) == 0x002040, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5) == 0x002041, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context12) == 0x002048, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent12) == 0x002050, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount12) == 0x002054, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4) == 0x002058, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum2_CmpSuccess) == 0x002059, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3) == 0x00205A, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x00205B, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context11) == 0x002060, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent11) == 0x002068, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount11) == 0x00206C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context10) == 0x002070, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchInteger1_CmpSuccess) == 0x002078, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchInteger1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum3_CmpSuccess) == 0x002079, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent10) == 0x00207A, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount10) == 0x00207C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context9) == 0x002080, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum4_CmpSuccess) == 0x002088, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent9) == 0x002089, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount9) == 0x00208C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context8) == 0x002090, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum5_CmpSuccess) == 0x002098, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent8) == 0x002099, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount8) == 0x00209C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent7) == 0x0020A0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount7) == 0x0020A4, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum6_CmpSuccess) == 0x0020A8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum6_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum7_CmpSuccess) == 0x0020A9, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum7_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent6) == 0x0020AA, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount6) == 0x0020AC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context7) == 0x0020B0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context7' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum8_CmpSuccess) == 0x0020B8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum8_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context6) == 0x0020C0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context6' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent5) == 0x0020C8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount5) == 0x0020CC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum9_CmpSuccess) == 0x0020D0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum9_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent4) == 0x0020D1, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount4) == 0x0020D4, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent3) == 0x0020D8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount3) == 0x0020DC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation8) == 0x0020E0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID8) == 0x0020EC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue8) == 0x0020F0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue8) == 0x0020F1, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_NewDialogContext_ReturnValue15) == 0x0020F8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_NewDialogContext_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation9) == 0x002310, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID9) == 0x00231C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue9) == 0x002320, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation10) == 0x002324, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID10) == 0x002330, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue10) == 0x002334, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue9) == 0x002335, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue10) == 0x002336, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation11) == 0x002338, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID11) == 0x002344, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue11) == 0x002348, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue11) == 0x002349, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation12) == 0x00234C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID12) == 0x002358, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue12) == 0x00235C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue12) == 0x00235D, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation13) == 0x002360, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID13) == 0x00236C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue13) == 0x002370, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue13) == 0x002371, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation14) == 0x002374, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID14) == 0x002380, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue14) == 0x002384, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_CreateDelegate_OutputDelegate) == 0x002388, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue14) == 0x002398, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_MissionRemoteEvent_ReturnValue) == 0x002399, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_MissionRemoteEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_Conversation15) == 0x00239C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_Conversation15' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_SequenceID15) == 0x0023A8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_SequenceID15' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_FinishSpeak_ReturnValue15) == 0x0023AC, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_FinishSpeak_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2) == 0x0023AD, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_Conv_IntToBool_ReturnValue15) == 0x0023AE, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_Conv_IntToBool_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent2) == 0x0023AF, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount2) == 0x0023B0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context5) == 0x0023B8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum10_CmpSuccess) == 0x0023C0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum10_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1) == 0x0023C1, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent) == 0x0023C2, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context4) == 0x0023C8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context3) == 0x0023D0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context2) == 0x0023D8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent1) == 0x0023E0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount1) == 0x0023E4, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context1) == 0x0023E8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum11_CmpSuccess) == 0x0023F0, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum11_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_MissionRemoteEvent_ReturnValue1) == 0x0023F1, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_MissionRemoteEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_CreateDelegate_OutputDelegate1) == 0x0023F8, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_CreateDelegate_OutputDelegate2) == 0x002408, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_CreateDelegate_OutputDelegate3) == 0x002418, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_CreateDelegate_OutputDelegate4) == 0x002428, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_CreateDelegate_OutputDelegate5) == 0x002438, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, CallFunc_MissionRemoteEvent_ReturnValue2) == 0x002448, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::CallFunc_MissionRemoteEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveEvent) == 0x002449, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_ObjectiveEvent_ObjectiveCount) == 0x00244C, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_ObjectiveEvent_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, MissionK2Node_MissionCustomEvent_Context) == 0x002450, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::MissionK2Node_MissionCustomEvent_Context' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission, K2Node_SwitchEnum12_CmpSuccess) == 0x002458, "Member 'Mission_MonkMission_C_ExecuteUbergraph_Mission_MonkMission::K2Node_SwitchEnum12_CmpSuccess' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_Invisible_OpenRewardDoor
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_Invisible_OpenRewardDoor final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_Invisible_OpenRewardDoor) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_Invisible_OpenRewardDoor");
static_assert(sizeof(Mission_MonkMission_C_Update_Invisible_OpenRewardDoor) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_Invisible_OpenRewardDoor");
static_assert(offsetof(Mission_MonkMission_C_Update_Invisible_OpenRewardDoor, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_Invisible_OpenRewardDoor::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_Invisible_OpenRewardDoor
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor");
static_assert(sizeof(Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor");
static_assert(offsetof(Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_Invisible_OpenRewardDoor::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_PlaceLivers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_PlaceLivers final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_PlaceLivers) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_PlaceLivers");
static_assert(sizeof(Mission_MonkMission_C_Update_PlaceLivers) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_PlaceLivers");
static_assert(offsetof(Mission_MonkMission_C_Update_PlaceLivers, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_PlaceLivers::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.OBJ_PlaceLivers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_OBJ_PlaceLivers final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_OBJ_PlaceLivers) == 0x000004, "Wrong alignment on Mission_MonkMission_C_OBJ_PlaceLivers");
static_assert(sizeof(Mission_MonkMission_C_OBJ_PlaceLivers) == 0x000008, "Wrong size on Mission_MonkMission_C_OBJ_PlaceLivers");
static_assert(offsetof(Mission_MonkMission_C_OBJ_PlaceLivers, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_OBJ_PlaceLivers::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_OBJ_PlaceLivers, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_OBJ_PlaceLivers::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_PlaceStriker
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_PlaceStriker final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_PlaceStriker) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_PlaceStriker");
static_assert(sizeof(Mission_MonkMission_C_Update_PlaceStriker) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_PlaceStriker");
static_assert(offsetof(Mission_MonkMission_C_Update_PlaceStriker, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_PlaceStriker::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_HarvestLivers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_HarvestLivers final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_HarvestLivers) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_HarvestLivers");
static_assert(sizeof(Mission_MonkMission_C_Update_HarvestLivers) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_HarvestLivers");
static_assert(offsetof(Mission_MonkMission_C_Update_HarvestLivers, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_HarvestLivers::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Advance_FindLivers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Advance_FindLivers final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Advance_FindLivers) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Advance_FindLivers");
static_assert(sizeof(Mission_MonkMission_C_Advance_FindLivers) == 0x000008, "Wrong size on Mission_MonkMission_C_Advance_FindLivers");
static_assert(offsetof(Mission_MonkMission_C_Advance_FindLivers, Context) == 0x000000, "Member 'Mission_MonkMission_C_Advance_FindLivers::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.SET_FindLivers
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_SET_FindLivers final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_SET_FindLivers) == 0x000001, "Wrong alignment on Mission_MonkMission_C_SET_FindLivers");
static_assert(sizeof(Mission_MonkMission_C_SET_FindLivers) == 0x000001, "Wrong size on Mission_MonkMission_C_SET_FindLivers");
static_assert(offsetof(Mission_MonkMission_C_SET_FindLivers, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_SET_FindLivers::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.SET_ClearInitialGunk
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_SET_ClearInitialGunk final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_SET_ClearInitialGunk) == 0x000001, "Wrong alignment on Mission_MonkMission_C_SET_ClearInitialGunk");
static_assert(sizeof(Mission_MonkMission_C_SET_ClearInitialGunk) == 0x000001, "Wrong size on Mission_MonkMission_C_SET_ClearInitialGunk");
static_assert(offsetof(Mission_MonkMission_C_SET_ClearInitialGunk, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_SET_ClearInitialGunk::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_FollowMonk
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_FollowMonk final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_FollowMonk) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_FollowMonk");
static_assert(sizeof(Mission_MonkMission_C_Update_FollowMonk) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_FollowMonk");
static_assert(offsetof(Mission_MonkMission_C_Update_FollowMonk, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_FollowMonk::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.OBJ_FollowMonk
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_OBJ_FollowMonk final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_OBJ_FollowMonk) == 0x000004, "Wrong alignment on Mission_MonkMission_C_OBJ_FollowMonk");
static_assert(sizeof(Mission_MonkMission_C_OBJ_FollowMonk) == 0x000008, "Wrong size on Mission_MonkMission_C_OBJ_FollowMonk");
static_assert(offsetof(Mission_MonkMission_C_OBJ_FollowMonk, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_OBJ_FollowMonk::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_OBJ_FollowMonk, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_OBJ_FollowMonk::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.SET_FollowMonk
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_SET_FollowMonk final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_SET_FollowMonk) == 0x000001, "Wrong alignment on Mission_MonkMission_C_SET_FollowMonk");
static_assert(sizeof(Mission_MonkMission_C_SET_FollowMonk) == 0x000001, "Wrong size on Mission_MonkMission_C_SET_FollowMonk");
static_assert(offsetof(Mission_MonkMission_C_SET_FollowMonk, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_SET_FollowMonk::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_FloodRatch
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_FloodRatch final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_FloodRatch) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_FloodRatch");
static_assert(sizeof(Mission_MonkMission_C_Obj_FloodRatch) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_FloodRatch");
static_assert(offsetof(Mission_MonkMission_C_Obj_FloodRatch, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_FloodRatch::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_FloodRatch, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_FloodRatch::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_PlaceStriker
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_PlaceStriker final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_PlaceStriker) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_PlaceStriker");
static_assert(sizeof(Mission_MonkMission_C_Obj_PlaceStriker) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_PlaceStriker");
static_assert(offsetof(Mission_MonkMission_C_Obj_PlaceStriker, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_PlaceStriker::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_PlaceStriker, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_PlaceStriker::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_GetStriker
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_GetStriker final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_GetStriker) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_GetStriker");
static_assert(sizeof(Mission_MonkMission_C_Obj_GetStriker) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_GetStriker");
static_assert(offsetof(Mission_MonkMission_C_Obj_GetStriker, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_GetStriker::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_GetStriker, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_GetStriker::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_OpenBarrel03
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_OpenBarrel03 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_OpenBarrel03) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_OpenBarrel03");
static_assert(sizeof(Mission_MonkMission_C_Update_OpenBarrel03) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_OpenBarrel03");
static_assert(offsetof(Mission_MonkMission_C_Update_OpenBarrel03, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_OpenBarrel03::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_OpenBarrel02
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_OpenBarrel02 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_OpenBarrel02) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_OpenBarrel02");
static_assert(sizeof(Mission_MonkMission_C_Update_OpenBarrel02) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_OpenBarrel02");
static_assert(offsetof(Mission_MonkMission_C_Update_OpenBarrel02, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_OpenBarrel02::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_OpenBarrel03
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_OpenBarrel03 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_OpenBarrel03) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_OpenBarrel03");
static_assert(sizeof(Mission_MonkMission_C_Obj_OpenBarrel03) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_OpenBarrel03");
static_assert(offsetof(Mission_MonkMission_C_Obj_OpenBarrel03, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_OpenBarrel03::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_OpenBarrel03, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_OpenBarrel03::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_OpenBarrel02
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_OpenBarrel02 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_OpenBarrel02) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_OpenBarrel02");
static_assert(sizeof(Mission_MonkMission_C_Obj_OpenBarrel02) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_OpenBarrel02");
static_assert(offsetof(Mission_MonkMission_C_Obj_OpenBarrel02, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_OpenBarrel02::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_OpenBarrel02, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_OpenBarrel02::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_OpenBarrel01
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_OpenBarrel01 final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_OpenBarrel01) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_OpenBarrel01");
static_assert(sizeof(Mission_MonkMission_C_Obj_OpenBarrel01) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_OpenBarrel01");
static_assert(offsetof(Mission_MonkMission_C_Obj_OpenBarrel01, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_OpenBarrel01::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_OpenBarrel01, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_OpenBarrel01::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_RingBell
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_RingBell final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_RingBell) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_RingBell");
static_assert(sizeof(Mission_MonkMission_C_Update_RingBell) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_RingBell");
static_assert(offsetof(Mission_MonkMission_C_Update_RingBell, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_RingBell::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.OBJ_RingBell
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_OBJ_RingBell final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_OBJ_RingBell) == 0x000004, "Wrong alignment on Mission_MonkMission_C_OBJ_RingBell");
static_assert(sizeof(Mission_MonkMission_C_OBJ_RingBell) == 0x000008, "Wrong size on Mission_MonkMission_C_OBJ_RingBell");
static_assert(offsetof(Mission_MonkMission_C_OBJ_RingBell, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_OBJ_RingBell::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_OBJ_RingBell, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_OBJ_RingBell::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_KillHive
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_KillHive final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_KillHive) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_KillHive");
static_assert(sizeof(Mission_MonkMission_C_Update_KillHive) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_KillHive");
static_assert(offsetof(Mission_MonkMission_C_Update_KillHive, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_KillHive::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_KillHive
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_KillHive final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_KillHive) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_KillHive");
static_assert(sizeof(Mission_MonkMission_C_Obj_KillHive) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_KillHive");
static_assert(offsetof(Mission_MonkMission_C_Obj_KillHive, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_KillHive::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_KillHive, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_KillHive::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_KillBirthers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_KillBirthers final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_KillBirthers) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_KillBirthers");
static_assert(sizeof(Mission_MonkMission_C_Update_KillBirthers) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_KillBirthers");
static_assert(offsetof(Mission_MonkMission_C_Update_KillBirthers, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_KillBirthers::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_KillBirthers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_KillBirthers final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_KillBirthers) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_KillBirthers");
static_assert(sizeof(Mission_MonkMission_C_Obj_KillBirthers) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_KillBirthers");
static_assert(offsetof(Mission_MonkMission_C_Obj_KillBirthers, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_KillBirthers::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_KillBirthers, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_KillBirthers::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_OpenBarrel01
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_OpenBarrel01 final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_OpenBarrel01) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_OpenBarrel01");
static_assert(sizeof(Mission_MonkMission_C_Update_OpenBarrel01) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_OpenBarrel01");
static_assert(offsetof(Mission_MonkMission_C_Update_OpenBarrel01, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_OpenBarrel01::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Set_KillHive
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_Set_KillHive final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Set_KillHive) == 0x000001, "Wrong alignment on Mission_MonkMission_C_Set_KillHive");
static_assert(sizeof(Mission_MonkMission_C_Set_KillHive) == 0x000001, "Wrong size on Mission_MonkMission_C_Set_KillHive");
static_assert(offsetof(Mission_MonkMission_C_Set_KillHive, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_Set_KillHive::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Set_KillBirthers
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_Set_KillBirthers final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Set_KillBirthers) == 0x000001, "Wrong alignment on Mission_MonkMission_C_Set_KillBirthers");
static_assert(sizeof(Mission_MonkMission_C_Set_KillBirthers) == 0x000001, "Wrong size on Mission_MonkMission_C_Set_KillBirthers");
static_assert(offsetof(Mission_MonkMission_C_Set_KillBirthers, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_Set_KillBirthers::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_TalkToMendel
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_TalkToMendel final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_TalkToMendel) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_TalkToMendel");
static_assert(sizeof(Mission_MonkMission_C_Obj_TalkToMendel) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_TalkToMendel");
static_assert(offsetof(Mission_MonkMission_C_Obj_TalkToMendel, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_TalkToMendel::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_TalkToMendel, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_TalkToMendel::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.MCE_Update_TalkToMendel
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_MCE_Update_TalkToMendel final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_MCE_Update_TalkToMendel) == 0x000008, "Wrong alignment on Mission_MonkMission_C_MCE_Update_TalkToMendel");
static_assert(sizeof(Mission_MonkMission_C_MCE_Update_TalkToMendel) == 0x000008, "Wrong size on Mission_MonkMission_C_MCE_Update_TalkToMendel");
static_assert(offsetof(Mission_MonkMission_C_MCE_Update_TalkToMendel, Context) == 0x000000, "Member 'Mission_MonkMission_C_MCE_Update_TalkToMendel::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Set_TalkToMendel
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_Set_TalkToMendel final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Set_TalkToMendel) == 0x000001, "Wrong alignment on Mission_MonkMission_C_Set_TalkToMendel");
static_assert(sizeof(Mission_MonkMission_C_Set_TalkToMendel) == 0x000001, "Wrong size on Mission_MonkMission_C_Set_TalkToMendel");
static_assert(offsetof(Mission_MonkMission_C_Set_TalkToMendel, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_Set_TalkToMendel::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Update_EnterCellar
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Update_EnterCellar final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Update_EnterCellar) == 0x000008, "Wrong alignment on Mission_MonkMission_C_Update_EnterCellar");
static_assert(sizeof(Mission_MonkMission_C_Update_EnterCellar) == 0x000008, "Wrong size on Mission_MonkMission_C_Update_EnterCellar");
static_assert(offsetof(Mission_MonkMission_C_Update_EnterCellar, Context) == 0x000000, "Member 'Mission_MonkMission_C_Update_EnterCellar::Context' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_EnterCellar
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_EnterCellar final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_EnterCellar) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_EnterCellar");
static_assert(sizeof(Mission_MonkMission_C_Obj_EnterCellar) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_EnterCellar");
static_assert(offsetof(Mission_MonkMission_C_Obj_EnterCellar, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_EnterCellar::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_EnterCellar, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_EnterCellar::ObjectiveCount' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Set_EnterCellar
// 0x0001 (0x0001 - 0x0000)
struct Mission_MonkMission_C_Set_EnterCellar final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Set_EnterCellar) == 0x000001, "Wrong alignment on Mission_MonkMission_C_Set_EnterCellar");
static_assert(sizeof(Mission_MonkMission_C_Set_EnterCellar) == 0x000001, "Wrong size on Mission_MonkMission_C_Set_EnterCellar");
static_assert(offsetof(Mission_MonkMission_C_Set_EnterCellar, ObjectiveSetEvent) == 0x000000, "Member 'Mission_MonkMission_C_Set_EnterCellar::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_MonkMission.Mission_MonkMission_C.Obj_HarvestLivers
// 0x0008 (0x0008 - 0x0000)
struct Mission_MonkMission_C_Obj_HarvestLivers final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_MonkMission_C_Obj_HarvestLivers) == 0x000004, "Wrong alignment on Mission_MonkMission_C_Obj_HarvestLivers");
static_assert(sizeof(Mission_MonkMission_C_Obj_HarvestLivers) == 0x000008, "Wrong size on Mission_MonkMission_C_Obj_HarvestLivers");
static_assert(offsetof(Mission_MonkMission_C_Obj_HarvestLivers, ObjectiveEvent) == 0x000000, "Member 'Mission_MonkMission_C_Obj_HarvestLivers::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_MonkMission_C_Obj_HarvestLivers, ObjectiveCount) == 0x000004, "Member 'Mission_MonkMission_C_Obj_HarvestLivers::ObjectiveCount' has a wrong offset!");

}

