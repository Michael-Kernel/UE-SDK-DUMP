#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_VaultKeyDisplay

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "EnumStates_VaultKey_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_VaultKeyDisplay.IO_VaultKeyDisplay_C
// 0x0090 (0x0720 - 0x0690)
class AIO_VaultKeyDisplay_C : public AConditionalFlavorTextIO
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_BaseGlow;                                       // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fragment_3;                                        // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fragment_2;                                        // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fragment_1;                                        // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Key;                                               // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pedestal;                                          // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VaultKeyFloat_Height_20B2B40249930C71E1BCBE8EF3D7F17B; // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VaultKeyFloat__Direction_20B2B40249930C71E1BCBE8EF3D7F17B; // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VaultKeyFloat;                                     // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumStates_VaultKey                           VaultKeyState;                                     // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Amplitude;                                         // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Frequency;                                         // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_VaultKeyState_NewEnumerator1;                 // 0x0700(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_VaultKeyState_NewEnumerator2;                 // 0x0708(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_VaultKeyState_NewEnumerator3;                 // 0x0710(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_VaultKeyState_NewEnumerator4;                 // 0x0718(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void VaultKeyFloat__UpdateFunc();
	void VaultKeyFloat__FinishedFunc();
	void UserConstructionScript();
	void __UserState_VaultKeyState_0(bool bFromLoad);
	void __UserState_VaultKeyState_1(bool bFromLoad);
	void __UserState_VaultKeyState_2(bool bFromLoad);
	void __UserState_VaultKeyState_3(bool bFromLoad);
	void __UserState_VaultKeyState_4(bool bFromLoad);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_IO_VaultKeyDisplay(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_VaultKeyDisplay_C">();
	}
	static class AIO_VaultKeyDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_VaultKeyDisplay_C>();
	}
};
static_assert(alignof(AIO_VaultKeyDisplay_C) == 0x000008, "Wrong alignment on AIO_VaultKeyDisplay_C");
static_assert(sizeof(AIO_VaultKeyDisplay_C) == 0x000720, "Wrong size on AIO_VaultKeyDisplay_C");
static_assert(offsetof(AIO_VaultKeyDisplay_C, UberGraphFrame) == 0x000690, "Member 'AIO_VaultKeyDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, WwiseAudio) == 0x000698, "Member 'AIO_VaultKeyDisplay_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, FX_BaseGlow) == 0x0006A0, "Member 'AIO_VaultKeyDisplay_C::FX_BaseGlow' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Fragment_3) == 0x0006A8, "Member 'AIO_VaultKeyDisplay_C::Fragment_3' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Fragment_2) == 0x0006B0, "Member 'AIO_VaultKeyDisplay_C::Fragment_2' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Fragment_1) == 0x0006B8, "Member 'AIO_VaultKeyDisplay_C::Fragment_1' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Key) == 0x0006C0, "Member 'AIO_VaultKeyDisplay_C::Key' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Scene) == 0x0006C8, "Member 'AIO_VaultKeyDisplay_C::Scene' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, RotatingMovement) == 0x0006D0, "Member 'AIO_VaultKeyDisplay_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Pedestal) == 0x0006D8, "Member 'AIO_VaultKeyDisplay_C::Pedestal' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, VaultKeyFloat_Height_20B2B40249930C71E1BCBE8EF3D7F17B) == 0x0006E0, "Member 'AIO_VaultKeyDisplay_C::VaultKeyFloat_Height_20B2B40249930C71E1BCBE8EF3D7F17B' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, VaultKeyFloat__Direction_20B2B40249930C71E1BCBE8EF3D7F17B) == 0x0006E4, "Member 'AIO_VaultKeyDisplay_C::VaultKeyFloat__Direction_20B2B40249930C71E1BCBE8EF3D7F17B' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, VaultKeyFloat) == 0x0006E8, "Member 'AIO_VaultKeyDisplay_C::VaultKeyFloat' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, VaultKeyState) == 0x0006F0, "Member 'AIO_VaultKeyDisplay_C::VaultKeyState' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Amplitude) == 0x0006F4, "Member 'AIO_VaultKeyDisplay_C::Amplitude' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Frequency) == 0x0006F8, "Member 'AIO_VaultKeyDisplay_C::Frequency' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Cond_VaultKeyState_NewEnumerator1) == 0x000700, "Member 'AIO_VaultKeyDisplay_C::Cond_VaultKeyState_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Cond_VaultKeyState_NewEnumerator2) == 0x000708, "Member 'AIO_VaultKeyDisplay_C::Cond_VaultKeyState_NewEnumerator2' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Cond_VaultKeyState_NewEnumerator3) == 0x000710, "Member 'AIO_VaultKeyDisplay_C::Cond_VaultKeyState_NewEnumerator3' has a wrong offset!");
static_assert(offsetof(AIO_VaultKeyDisplay_C, Cond_VaultKeyState_NewEnumerator4) == 0x000718, "Member 'AIO_VaultKeyDisplay_C::Cond_VaultKeyState_NewEnumerator4' has a wrong offset!");

}

