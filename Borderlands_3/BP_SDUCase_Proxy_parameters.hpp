#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SDUCase_Proxy

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_SDUSelectedStates_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SoldOutMarcusFeedback
// 0x0009 (0x0009 - 0x0000)
struct BP_SDUCase_Proxy_C_SoldOutMarcusFeedback final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback) == 0x000001, "Wrong alignment on BP_SDUCase_Proxy_C_SoldOutMarcusFeedback");
static_assert(sizeof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback) == 0x000009, "Wrong size on BP_SDUCase_Proxy_C_SoldOutMarcusFeedback");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue1) == 0x000001, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue2) == 0x000002, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue3) == 0x000003, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue4) == 0x000004, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue5) == 0x000005, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue6) == 0x000006, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue7) == 0x000007, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SoldOutMarcusFeedback, CallFunc_BooleanAND_ReturnValue8) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SoldOutMarcusFeedback::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SetupViewOwner
// 0x0058 (0x0058 - 0x0000)
struct BP_SDUCase_Proxy_C_SetupViewOwner final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxChildActorComponent*                K2Node_DynamicCast_AsGbx_Child_Actor_Component;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_IO_SoldOutSign_C*                   K2Node_DynamicCast_AsBP_IO_Sold_Out_Sign;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SetupViewOwner) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SetupViewOwner");
static_assert(sizeof(BP_SDUCase_Proxy_C_SetupViewOwner) == 0x000058, "Wrong size on BP_SDUCase_Proxy_C_SetupViewOwner");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, K2Node_DynamicCast_AsGbx_Child_Actor_Component) == 0x000038, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::K2Node_DynamicCast_AsGbx_Child_Actor_Component' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, K2Node_DynamicCast_AsBP_IO_Sold_Out_Sign) == 0x000048, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::K2Node_DynamicCast_AsBP_IO_Sold_Out_Sign' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetupViewOwner, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_SDUCase_Proxy_C_SetupViewOwner::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SDUPurchased_Feedback
// 0x0068 (0x0068 - 0x0000)
struct BP_SDUCase_Proxy_C_SDUPurchased_Feedback final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USocketComponent*                       K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0048(0x0018)()
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SDUPurchased_Feedback");
static_assert(sizeof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback) == 0x000068, "Wrong size on BP_SDUCase_Proxy_C_SDUPurchased_Feedback");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, Object) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::Object' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, Temp_object_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, Temp_byte_Variable) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, K2Node_SwitchName_CmpSuccess) == 0x000029, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, K2Node_Select_Default) == 0x000030, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, CallFunc_PostEventAtLocation_ReturnValue) == 0x000048, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUPurchased_Feedback, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000060, "Member 'BP_SDUCase_Proxy_C_SDUPurchased_Feedback::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.Audio_SDU_Deselected
// 0x0030 (0x0030 - 0x0000)
struct BP_SDUCase_Proxy_C_Audio_SDU_Deselected final
{
public:
	class USocketComponent*                       SDUSocket;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0010(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_Audio_SDU_Deselected");
static_assert(sizeof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected) == 0x000030, "Wrong size on BP_SDUCase_Proxy_C_Audio_SDU_Deselected");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected, SDUSocket) == 0x000000, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Deselected::SDUSocket' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected, Temp_byte_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Deselected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected, CallFunc_PostAttachedEvent_ReturnValue) == 0x000010, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Deselected::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected, Temp_bool_Variable) == 0x000028, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Deselected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Deselected, K2Node_Select_Default) == 0x000029, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Deselected::K2Node_Select_Default' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.Audio_SDU_Selected
// 0x0030 (0x0030 - 0x0000)
struct BP_SDUCase_Proxy_C_Audio_SDU_Selected final
{
public:
	class USocketComponent*                       SDUSocket;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0010(0x0018)()
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_Audio_SDU_Selected) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_Audio_SDU_Selected");
static_assert(sizeof(BP_SDUCase_Proxy_C_Audio_SDU_Selected) == 0x000030, "Wrong size on BP_SDUCase_Proxy_C_Audio_SDU_Selected");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Selected, SDUSocket) == 0x000000, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Selected::SDUSocket' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Selected, Temp_bool_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Selected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Selected, CallFunc_PostAttachedEvent_ReturnValue) == 0x000010, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Selected::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Selected, Temp_byte_Variable) == 0x000028, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Selected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_Audio_SDU_Selected, K2Node_Select_Default) == 0x000029, "Member 'BP_SDUCase_Proxy_C_Audio_SDU_Selected::K2Node_Select_Default' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SDUTimeline
// 0x0168 (0x0168 - 0x0000)
struct BP_SDUCase_Proxy_C_SDUTimeline final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CoverMovement;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Emissive;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USocketComponent*                       SDU_Socket;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SDU_Cover;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0038(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C8(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D8(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SDUTimeline) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SDUTimeline");
static_assert(sizeof(BP_SDUCase_Proxy_C_SDUTimeline) == 0x000168, "Wrong size on BP_SDUCase_Proxy_C_SDUTimeline");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, Alpha) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::Alpha' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, CoverMovement) == 0x000004, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::CoverMovement' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, Emissive) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::Emissive' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, SDU_Socket) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::SDU_Socket' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, SDU_Cover) == 0x000018, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::SDU_Cover' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, MaterialInstance) == 0x000020, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::MaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, CallFunc_VLerp_ReturnValue) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000038, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, CallFunc_MakeRotator_ReturnValue) == 0x0000C8, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SDUTimeline, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D8, "Member 'BP_SDUCase_Proxy_C_SDUTimeline::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SetSDUSlotLights
// 0x00C8 (0x00C8 - 0x0000)
struct BP_SDUCase_Proxy_C_SetSDUSlotLights final
{
public:
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SDUSelectedStates                        Temp_byte_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable2;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Temp_object_Variable1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable3;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SDUSelectedStates                        Temp_byte_Variable4;                               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Temp_object_Variable2;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable5;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Temp_object_Variable3;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable6;                               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Temp_object_Variable4;                             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Temp_object_Variable5;                             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SDUSelectedStates                        Temp_byte_Variable7;                               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Select1_Default;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_Select2_Default;                            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select3_Default;                            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Temp_object_Variable6;                             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select4_Default;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_Select5_Default;                            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_Select6_Default;                            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select7_Default;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable8;                               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               K2Node_Select8_Default;                            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Temp_object_Variable7;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable9;                               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Select9_Default;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SetSDUSlotLights) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SetSDUSlotLights");
static_assert(sizeof(BP_SDUCase_Proxy_C_SetSDUSlotLights) == 0x0000C8, "Wrong size on BP_SDUCase_Proxy_C_SetSDUSlotLights");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_bool_Variable) == 0x000001, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable1) == 0x000002, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable2) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable1) == 0x000018, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable3) == 0x000020, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_bool_Variable1) == 0x000021, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable4) == 0x000022, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable2) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable5) == 0x000030, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable3) == 0x000038, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable6) == 0x000040, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable4) == 0x000048, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable5) == 0x000050, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select_Default) == 0x000058, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable7) == 0x000059, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select1_Default) == 0x000060, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select2_Default) == 0x000068, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select3_Default) == 0x000070, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable6) == 0x000078, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select4_Default) == 0x000080, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select5_Default) == 0x000088, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select6_Default) == 0x000090, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select7_Default) == 0x000098, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable8) == 0x0000A0, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select8_Default) == 0x0000A8, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_object_Variable7) == 0x0000B0, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, Temp_byte_Variable9) == 0x0000B8, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLights, K2Node_Select9_Default) == 0x0000C0, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLights::K2Node_Select9_Default' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SetSDUSlotLightMaterials
// 0x0038 (0x0038 - 0x0000)
struct BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials");
static_assert(sizeof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials) == 0x000038, "Wrong size on BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, CallFunc_Add_IntInt_ReturnValue1) == 0x00000C, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SDUCase_Proxy_C_SetSDUSlotLightMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SetDynamicMaterialsAndMeshes
// 0x0110 (0x0110 - 0x0000)
struct BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSDUCaseSpawner                        CallFunc_Array_Get_Item;                           // 0x0010(0x0088)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue2; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue3; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue4; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue5; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue6; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue7; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue8; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue9; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes");
static_assert(sizeof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes) == 0x000110, "Wrong size on BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A0, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x0000A8, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue2) == 0x0000B0, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue3) == 0x0000B8, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue4) == 0x0000C0, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue5) == 0x0000C8, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue6) == 0x0000D0, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue7) == 0x0000D8, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue8) == 0x0000E0, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue9) == 0x0000E8, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_GetDisplayName_ReturnValue) == 0x0000F0, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, CallFunc_Conv_StringToName_ReturnValue) == 0x000100, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes, K2Node_SwitchName_CmpSuccess) == 0x000108, "Member 'BP_SDUCase_Proxy_C_SetDynamicMaterialsAndMeshes::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.PlayTimelineForward
// 0x0010 (0x0010 - 0x0000)
struct BP_SDUCase_Proxy_C_PlayTimelineForward final
{
public:
	class UTimelineComponent*                     SDUState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_PlayTimelineForward) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_PlayTimelineForward");
static_assert(sizeof(BP_SDUCase_Proxy_C_PlayTimelineForward) == 0x000010, "Wrong size on BP_SDUCase_Proxy_C_PlayTimelineForward");
static_assert(offsetof(BP_SDUCase_Proxy_C_PlayTimelineForward, SDUState) == 0x000000, "Member 'BP_SDUCase_Proxy_C_PlayTimelineForward::SDUState' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_PlayTimelineForward, Temp_bool_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_PlayTimelineForward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_PlayTimelineForward, Temp_byte_Variable) == 0x000009, "Member 'BP_SDUCase_Proxy_C_PlayTimelineForward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_PlayTimelineForward, K2Node_Select_Default) == 0x00000A, "Member 'BP_SDUCase_Proxy_C_PlayTimelineForward::K2Node_Select_Default' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SetSoldOutSDUState
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SDUCase_Proxy_C_SetSoldOutSDUState final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AInteractiveObject*                     SDU;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_SDUSelectedStates                        Temp_byte_Variable1;                               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Temp_object_Variable1;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable2;                               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Temp_object_Variable2;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable3;                               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Temp_object_Variable3;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable4;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxChildActorComponent*                Temp_object_Variable4;                             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_Select1_Default;                            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select2_Default;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     K2Node_Select3_Default;                            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                K2Node_Select4_Default;                            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AInteractiveObject*                     K2Node_DynamicCast_AsInteractive_Object;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SetSoldOutSDUState) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SetSoldOutSDUState");
static_assert(sizeof(BP_SDUCase_Proxy_C_SetSoldOutSDUState) == 0x0000B0, "Wrong size on BP_SDUCase_Proxy_C_SetSoldOutSDUState");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Object) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Object' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, SDU) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::SDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_byte_Variable) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_object_Variable) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_SwitchName_CmpSuccess) == 0x000038, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_byte_Variable1) == 0x000039, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_object_Variable1) == 0x000040, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_byte_Variable2) == 0x000048, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_object_Variable2) == 0x000050, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_byte_Variable3) == 0x000058, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_object_Variable3) == 0x000060, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_byte_Variable4) == 0x000068, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, Temp_object_Variable4) == 0x000070, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_Select_Default) == 0x000078, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_Select1_Default) == 0x000080, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_Select2_Default) == 0x000088, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_Select3_Default) == 0x000090, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_Select4_Default) == 0x000098, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_DynamicCast_AsInteractive_Object) == 0x0000A0, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_DynamicCast_AsInteractive_Object' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSoldOutSDUState, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_SDUCase_Proxy_C_SetSoldOutSDUState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.SetSDUStates
// 0x0068 (0x0068 - 0x0000)
struct BP_SDUCase_Proxy_C_SetSDUStates final
{
public:
	class UGbxChildActorComponent*                Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxChildActorComponent*                K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_IO_SoldOutSign_C*                   K2Node_DynamicCast_AsBP_IO_Sold_Out_Sign;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName1_CmpSuccess;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_SetSDUStates) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_SetSDUStates");
static_assert(sizeof(BP_SDUCase_Proxy_C_SetSDUStates) == 0x000068, "Wrong size on BP_SDUCase_Proxy_C_SetSDUStates");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, Temp_object_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, Temp_byte_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, K2Node_Select_Default) == 0x000010, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, K2Node_DynamicCast_AsBP_IO_Sold_Out_Sign) == 0x000018, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::K2Node_DynamicCast_AsBP_IO_Sold_Out_Sign' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, K2Node_SwitchName_CmpSuccess) == 0x000040, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, CallFunc_GetDisplayName_ReturnValue1) == 0x000048, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::CallFunc_GetDisplayName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, CallFunc_Conv_StringToName_ReturnValue1) == 0x000058, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_SetSDUStates, K2Node_SwitchName1_CmpSuccess) == 0x000060, "Member 'BP_SDUCase_Proxy_C_SetSDUStates::K2Node_SwitchName1_CmpSuccess' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.TurnOffSoldOutSigns
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SDUCase_Proxy_C_TurnOffSoldOutSigns final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSDUCaseSpawner                        CallFunc_Array_Get_Item;                           // 0x0010(0x0088)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractiveObject*                     CallFunc_SetSoldOutSDUState_SDU;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_TurnOffSoldOutSigns");
static_assert(sizeof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns) == 0x0000A8, "Wrong size on BP_SDUCase_Proxy_C_TurnOffSoldOutSigns");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_TurnOffSoldOutSigns, CallFunc_SetSoldOutSDUState_SDU) == 0x0000A0, "Member 'BP_SDUCase_Proxy_C_TurnOffSoldOutSigns::CallFunc_SetSoldOutSDUState_SDU' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.CheckSoldOutSlots
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SDUCase_Proxy_C_CheckSoldOutSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSDUCaseSpawner                        CallFunc_Array_Get_Item;                           // 0x0010(0x0088)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractiveObject*                     CallFunc_SetSoldOutSDUState_SDU;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_CheckSoldOutSlots) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_CheckSoldOutSlots");
static_assert(sizeof(BP_SDUCase_Proxy_C_CheckSoldOutSlots) == 0x0000A8, "Wrong size on BP_SDUCase_Proxy_C_CheckSoldOutSlots");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_CheckSoldOutSlots, CallFunc_SetSoldOutSDUState_SDU) == 0x0000A0, "Member 'BP_SDUCase_Proxy_C_CheckSoldOutSlots::CallFunc_SetSoldOutSDUState_SDU' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) BP_SDUCase_Proxy_C_UserConstructionScript final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_SDUCase_Proxy_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_UserConstructionScript");
static_assert(sizeof(BP_SDUCase_Proxy_C_UserConstructionScript) == 0x000010, "Wrong size on BP_SDUCase_Proxy_C_UserConstructionScript");
static_assert(offsetof(BP_SDUCase_Proxy_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_SDUCase_Proxy_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.OnSDUSelected
// 0x0020 (0x0020 - 0x0000)
struct BP_SDUCase_Proxy_C_OnSDUSelected final
{
public:
	class UOakSDUData*                            NewSDU_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       NewAttachmentSocket;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakSDUData*                            OldSDU;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       OldAttachmentSocket;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_OnSDUSelected) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_OnSDUSelected");
static_assert(sizeof(BP_SDUCase_Proxy_C_OnSDUSelected) == 0x000020, "Wrong size on BP_SDUCase_Proxy_C_OnSDUSelected");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUSelected, NewSDU_0) == 0x000000, "Member 'BP_SDUCase_Proxy_C_OnSDUSelected::NewSDU_0' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUSelected, NewAttachmentSocket) == 0x000008, "Member 'BP_SDUCase_Proxy_C_OnSDUSelected::NewAttachmentSocket' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUSelected, OldSDU) == 0x000010, "Member 'BP_SDUCase_Proxy_C_OnSDUSelected::OldSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUSelected, OldAttachmentSocket) == 0x000018, "Member 'BP_SDUCase_Proxy_C_OnSDUSelected::OldAttachmentSocket' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.OnSDUSoldOut
// 0x0010 (0x0010 - 0x0000)
struct BP_SDUCase_Proxy_C_OnSDUSoldOut final
{
public:
	class UOakSDUData*                            SoldOutSDU;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       AttachmentSocket;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_OnSDUSoldOut) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_OnSDUSoldOut");
static_assert(sizeof(BP_SDUCase_Proxy_C_OnSDUSoldOut) == 0x000010, "Wrong size on BP_SDUCase_Proxy_C_OnSDUSoldOut");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUSoldOut, SoldOutSDU) == 0x000000, "Member 'BP_SDUCase_Proxy_C_OnSDUSoldOut::SoldOutSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUSoldOut, AttachmentSocket) == 0x000008, "Member 'BP_SDUCase_Proxy_C_OnSDUSoldOut::AttachmentSocket' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.OnSDUPurchased
// 0x0010 (0x0010 - 0x0000)
struct BP_SDUCase_Proxy_C_OnSDUPurchased final
{
public:
	class UOakSDUData*                            PurchasedSDU;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       AttachmentSocket;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_OnSDUPurchased) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_OnSDUPurchased");
static_assert(sizeof(BP_SDUCase_Proxy_C_OnSDUPurchased) == 0x000010, "Wrong size on BP_SDUCase_Proxy_C_OnSDUPurchased");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUPurchased, PurchasedSDU) == 0x000000, "Member 'BP_SDUCase_Proxy_C_OnSDUPurchased::PurchasedSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_OnSDUPurchased, AttachmentSocket) == 0x000008, "Member 'BP_SDUCase_Proxy_C_OnSDUPurchased::AttachmentSocket' has a wrong offset!");

// Function BP_SDUCase_Proxy.BP_SDUCase_Proxy_C.ExecuteUbergraph_BP_SDUCase_Proxy
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable1;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Temp_object_Variable1;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SDUSelectedStates                        Temp_byte_Variable2;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Temp_object_Variable2;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     K2Node_Select1_Default;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakSDUData*                            K2Node_Event_NewSDU;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       K2Node_Event_NewAttachmentSocket;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakSDUData*                            K2Node_Event_OldSDU;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       K2Node_Event_OldAttachmentSocket;                  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakSDUData*                            K2Node_Event_SoldOutSDU;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       K2Node_Event_AttachmentSocket1;                    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AInteractiveObject*                     CallFunc_SetSoldOutSDUState_SDU;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     K2Node_Select2_Default;                            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0080(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0098(0x0018)()
	class UOakSDUData*                            K2Node_Event_PurchasedSDU;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       K2Node_Event_AttachmentSocket;                     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy) == 0x000008, "Wrong alignment on BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy");
static_assert(sizeof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy) == 0x0000C0, "Wrong size on BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, EntryPoint) == 0x000000, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, Temp_byte_Variable) == 0x000004, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, Temp_object_Variable) == 0x000008, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, Temp_byte_Variable1) == 0x000010, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, Temp_object_Variable1) == 0x000018, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, Temp_byte_Variable2) == 0x000020, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, Temp_object_Variable2) == 0x000028, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Select_Default) == 0x000030, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Select1_Default) == 0x000038, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_NewSDU) == 0x000040, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_NewSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_NewAttachmentSocket) == 0x000048, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_NewAttachmentSocket' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_OldSDU) == 0x000050, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_OldSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_OldAttachmentSocket) == 0x000058, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_OldAttachmentSocket' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_SoldOutSDU) == 0x000060, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_SoldOutSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_AttachmentSocket1) == 0x000068, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_AttachmentSocket1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, CallFunc_SetSoldOutSDUState_SDU) == 0x000070, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::CallFunc_SetSoldOutSDUState_SDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Select2_Default) == 0x000078, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, CallFunc_PostWwiseEvent_ReturnValue) == 0x000080, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000098, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_PurchasedSDU) == 0x0000B0, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_PurchasedSDU' has a wrong offset!");
static_assert(offsetof(BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy, K2Node_Event_AttachmentSocket) == 0x0000B8, "Member 'BP_SDUCase_Proxy_C_ExecuteUbergraph_BP_SDUCase_Proxy::K2Node_Event_AttachmentSocket' has a wrong offset!");

}

