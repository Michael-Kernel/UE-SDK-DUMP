#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Operative_ShoulderCannon

#include "Basic.hpp"

#include "IO_Operative_ShoulderCannon_classes.hpp"
#include "IO_Operative_ShoulderCannon_parameters.hpp"


namespace SDK
{

// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.ExecuteUbergraph_IO_Operative_ShoulderCannon
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_ShoulderCannon_C::ExecuteUbergraph_IO_Operative_ShoulderCannon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "ExecuteUbergraph_IO_Operative_ShoulderCannon");

	Params::IO_Operative_ShoulderCannon_C_ExecuteUbergraph_IO_Operative_ShoulderCannon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.Audio_PlayFiringSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::Audio_PlayFiringSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "Audio_PlayFiringSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.ShoulderCannon_OnCausedAnyDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxDamageType*                   DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageSource*                    DamageSource                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDamageDetails             Details                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void AIO_Operative_ShoulderCannon_C::ShoulderCannon_OnCausedAnyDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "ShoulderCannon_OnCausedAnyDamage");

	Params::IO_Operative_ShoulderCannon_C_ShoulderCannon_OnCausedAnyDamage Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.DamageSource = DamageSource;
	Parms.DamagedActor = DamagedActor;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.BeginCannonFireAnim
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::BeginCannonFireAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "BeginCannonFireAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.ShoulderCannon_OnCausedDeath
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamageComponent*                 Damaged                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDeathDetails              Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AIO_Operative_ShoulderCannon_C::ShoulderCannon_OnCausedDeath(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "ShoulderCannon_OnCausedDeath");

	Params::IO_Operative_ShoulderCannon_C_ShoulderCannon_OnCausedDeath Parms{};

	Parms.Damaged = Damaged;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.StartUnequippedIdle
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::StartUnequippedIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "StartUnequippedIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.TransitionToUnequipState
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::TransitionToUnequipState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "TransitionToUnequipState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.IdleToUnequip
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::IdleToUnequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "IdleToUnequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.StartIdleAfterFireTimer
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::StartIdleAfterFireTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "StartIdleAfterFireTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OperativeRemoveShoulderCannon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fast                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::OperativeRemoveShoulderCannon(bool Fast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OperativeRemoveShoulderCannon");

	Params::IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon Parms{};

	Parms.Fast = Fast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OperativeShoulderCannonReload
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::OperativeShoulderCannonReload(bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OperativeShoulderCannonReload");

	Params::IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload Parms{};

	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.EndReload
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::EndReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "EndReload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.BeginReloadAnim
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::BeginReloadAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "BeginReloadAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OnRep_CannonState
// (BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::OnRep_CannonState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OnRep_CannonState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OnCannonCreated
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::OnCannonCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OnCannonCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OnCannonFired
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::OnCannonFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OnCannonFired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OnDespawning
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::OnDespawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OnDespawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OnFininshedDespawned
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::OnFininshedDespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OnFininshedDespawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OnBeginReload
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::OnBeginReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OnBeginReload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.GetShoulderCannonDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AIO_Operative_ShoulderCannon_C::GetShoulderCannonDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "GetShoulderCannonDamage");

	Params::IO_Operative_ShoulderCannon_C_GetShoulderCannonDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.GetFireAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIO_Operative_ShoulderCannon_C::GetFireAction(class UClass** Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "GetFireAction");

	Params::IO_Operative_ShoulderCannon_C_GetFireAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.AttachToOwner
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::AttachToOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "AttachToOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.PlayCannonFeedback
// (Public, BlueprintCallable, BlueprintEvent)

void AIO_Operative_ShoulderCannon_C::PlayCannonFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "PlayCannonFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.CanBePulled
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::CanBePulled(class AActor* Target, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "CanBePulled");

	Params::IO_Operative_ShoulderCannon_C_CanBePulled Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.TryCannonMod3
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WasCritOrDeath                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::TryCannonMod3(class AActor* DamagedActor, bool WasCritOrDeath, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "TryCannonMod3");

	Params::IO_Operative_ShoulderCannon_C_TryCannonMod3 Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.WasCritOrDeath = WasCritOrDeath;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.TryCannonMod4
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WarCrit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::TryCannonMod4(bool WarCrit, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "TryCannonMod4");

	Params::IO_Operative_ShoulderCannon_C_TryCannonMod4 Parms{};

	Parms.WarCrit = WarCrit;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.TryCannonMod5
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::TryCannonMod5(const class UObject* DamageType, class AActor* DamagedActor, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "TryCannonMod5");

	Params::IO_Operative_ShoulderCannon_C_TryCannonMod5 Parms{};

	Parms.DamageType = DamageType;
	Parms.DamagedActor = DamagedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OperativeShoulderCannonDigistructFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DigistructIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::OperativeShoulderCannonDigistructFinished(bool DigistructIn, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OperativeShoulderCannonDigistructFinished");

	Params::IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished Parms{};

	Parms.DigistructIn = DigistructIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OperativeFireShoulderCannon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::OperativeFireShoulderCannon(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OperativeFireShoulderCannon");

	Params::IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OperativeShoulderCannonSetState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOperativeShoulderCannon                NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::OperativeShoulderCannonSetState(EOperativeShoulderCannon NewState, bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OperativeShoulderCannonSetState");

	Params::IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function IO_Operative_ShoulderCannon.IO_Operative_ShoulderCannon_C.OperativeShoulderCannonCreateLightProjectile
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIO_Operative_ShoulderCannon_C::OperativeShoulderCannonCreateLightProjectile(bool* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IO_Operative_ShoulderCannon_C", "OperativeShoulderCannonCreateLightProjectile");

	Params::IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}

}

