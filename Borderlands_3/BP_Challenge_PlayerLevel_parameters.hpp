#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Challenge_PlayerLevel

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Challenge_PlayerLevel.BP_Challenge_PlayerLevel_C.ExecuteUbergraph_BP_Challenge_PlayerLevel
// 0x0038 (0x0038 - 0x0000)
struct BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OldExperienceLevel, int32 NewExperienceLevel)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UChallengesComponent*                   K2Node_Event_OwningChallenges;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          K2Node_Event_AssociatedCharacter;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerBalanceStateComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel) == 0x000008, "Wrong alignment on BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel");
static_assert(sizeof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel) == 0x000038, "Wrong size on BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel, EntryPoint) == 0x000000, "Member 'BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel, K2Node_Event_OwningChallenges) == 0x000018, "Member 'BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel::K2Node_Event_OwningChallenges' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel, K2Node_Event_AssociatedCharacter) == 0x000020, "Member 'BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel::K2Node_Event_AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Challenge_PlayerLevel_C_ExecuteUbergraph_BP_Challenge_PlayerLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Challenge_PlayerLevel.BP_Challenge_PlayerLevel_C.OnInitChallengeInstance
// 0x0010 (0x0010 - 0x0000)
struct BP_Challenge_PlayerLevel_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Challenge_PlayerLevel_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on BP_Challenge_PlayerLevel_C_OnInitChallengeInstance");
static_assert(sizeof(BP_Challenge_PlayerLevel_C_OnInitChallengeInstance) == 0x000010, "Wrong size on BP_Challenge_PlayerLevel_C_OnInitChallengeInstance");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'BP_Challenge_PlayerLevel_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'BP_Challenge_PlayerLevel_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");

// Function BP_Challenge_PlayerLevel.BP_Challenge_PlayerLevel_C.LeveledUp
// 0x000C (0x000C - 0x0000)
struct BP_Challenge_PlayerLevel_C_LeveledUp final
{
public:
	int32                                         Old_XP_Level;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_XP_Level;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Challenge_PlayerLevel_C_LeveledUp) == 0x000004, "Wrong alignment on BP_Challenge_PlayerLevel_C_LeveledUp");
static_assert(sizeof(BP_Challenge_PlayerLevel_C_LeveledUp) == 0x00000C, "Wrong size on BP_Challenge_PlayerLevel_C_LeveledUp");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_LeveledUp, Old_XP_Level) == 0x000000, "Member 'BP_Challenge_PlayerLevel_C_LeveledUp::Old_XP_Level' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_LeveledUp, New_XP_Level) == 0x000004, "Member 'BP_Challenge_PlayerLevel_C_LeveledUp::New_XP_Level' has a wrong offset!");
static_assert(offsetof(BP_Challenge_PlayerLevel_C_LeveledUp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_Challenge_PlayerLevel_C_LeveledUp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

