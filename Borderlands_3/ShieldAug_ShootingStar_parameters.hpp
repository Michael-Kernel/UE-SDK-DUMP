#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_ShootingStar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function ShieldAug_ShootingStar.ShieldAug_ShootingStar_C.K2_OnCausedDamage
// 0x02E0 (0x02E0 - 0x0000)
struct ShieldAug_ShootingStar_C_K2_OnCausedDamage final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class AActor*                                 DamageInstigator;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0048(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0050(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0060(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue1;      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0120(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01A0(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(ShieldAug_ShootingStar_C_K2_OnCausedDamage) == 0x000010, "Wrong alignment on ShieldAug_ShootingStar_C_K2_OnCausedDamage");
static_assert(sizeof(ShieldAug_ShootingStar_C_K2_OnCausedDamage) == 0x0002E0, "Wrong size on ShieldAug_ShootingStar_C_K2_OnCausedDamage");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, Shield) == 0x000000, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, StackData) == 0x000008, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, DamageInstigator) == 0x000038, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, Damage) == 0x000040, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::Damage' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, DamageType) == 0x000048, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::DamageType' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, DamageSource) == 0x000050, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, DamagedActor) == 0x000058, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, Details) == 0x000060, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::Details' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetValueFromStackCount_ReturnValue) == 0x0000C0, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x0000C8, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetValueFromStackCount_ReturnValue1) == 0x000110, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetValueFromStackCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_BreakTransform_Location) == 0x000114, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_BreakTransform_Rotation) == 0x000120, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_BreakTransform_Scale) == 0x00012C, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetForwardVector_ReturnValue) == 0x000138, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetOwner_ReturnValue) == 0x000148, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000150, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetInstigator_ReturnValue) == 0x000160, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000168, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x000174, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_BreakVector_X) == 0x000178, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_BreakVector_Y) == 0x00017C, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_BreakVector_Z) == 0x000180, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000184, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, CallFunc_GetDamageType_ReturnValue) == 0x000198, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_OnCausedDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001A0, "Member 'ShieldAug_ShootingStar_C_K2_OnCausedDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function ShieldAug_ShootingStar.ShieldAug_ShootingStar_C.K2_TriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct ShieldAug_ShootingStar_C_K2_TriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ShieldAug_ShootingStar_C_K2_TriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_ShootingStar_C_K2_TriggerEffect");
static_assert(sizeof(ShieldAug_ShootingStar_C_K2_TriggerEffect) == 0x000050, "Wrong size on ShieldAug_ShootingStar_C_K2_TriggerEffect");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_TriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_ShootingStar_C_K2_TriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_TriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_ShootingStar_C_K2_TriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_TriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_ShootingStar_C_K2_TriggerEffect::StackData' has a wrong offset!");

// Function ShieldAug_ShootingStar.ShieldAug_ShootingStar_C.K2_UntriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct ShieldAug_ShootingStar_C_K2_UntriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ShieldAug_ShootingStar_C_K2_UntriggerEffect) == 0x000008, "Wrong alignment on ShieldAug_ShootingStar_C_K2_UntriggerEffect");
static_assert(sizeof(ShieldAug_ShootingStar_C_K2_UntriggerEffect) == 0x000050, "Wrong size on ShieldAug_ShootingStar_C_K2_UntriggerEffect");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_UntriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_ShootingStar_C_K2_UntriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_UntriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_ShootingStar_C_K2_UntriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_ShootingStar_C_K2_UntriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_ShootingStar_C_K2_UntriggerEffect::StackData' has a wrong offset!");

}

