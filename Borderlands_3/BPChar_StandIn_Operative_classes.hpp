#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_StandIn_Operative

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPChar_StandInPlayer_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_StandIn_Operative.BPChar_StandIn_Operative_C
// 0x0020 (0x23B0 - 0x2390)
#pragma pack(push, 0x1)
class alignas(0x10) ABPChar_StandIn_Operative_C : public ABPChar_StandInPlayer_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2390(0x0008)(Transient, DuplicateTransient)
	class UGbxSkeletalMeshComponent*              ActionSkillDevice;                                 // 0x2398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOperativeStandInComponent*             OperativeStandIn;                                  // 0x23A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPChar_StandIn_Operative(int32 EntryPoint);
	void HideActionSkillDevice();
	void ShowActionSkillDevice();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_StandIn_Operative_C">();
	}
	static class ABPChar_StandIn_Operative_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_StandIn_Operative_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABPChar_StandIn_Operative_C) == 0x000010, "Wrong alignment on ABPChar_StandIn_Operative_C");
static_assert(sizeof(ABPChar_StandIn_Operative_C) == 0x0023B0, "Wrong size on ABPChar_StandIn_Operative_C");
static_assert(offsetof(ABPChar_StandIn_Operative_C, UberGraphFrame) == 0x002390, "Member 'ABPChar_StandIn_Operative_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPChar_StandIn_Operative_C, ActionSkillDevice) == 0x002398, "Member 'ABPChar_StandIn_Operative_C::ActionSkillDevice' has a wrong offset!");
static_assert(offsetof(ABPChar_StandIn_Operative_C, OperativeStandIn) == 0x0023A0, "Member 'ABPChar_StandIn_Operative_C::OperativeStandIn' has a wrong offset!");

}

