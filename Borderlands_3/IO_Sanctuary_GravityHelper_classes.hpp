#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Sanctuary_GravityHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EnumState_ZeroG_structs.hpp"
#include "MissionInteractiveObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_Sanctuary_GravityHelper.IO_Sanctuary_GravityHelper_C
// 0x0148 (0x06A0 - 0x0558)
class AIO_Sanctuary_GravityHelper_C final : public AMissionInteractiveObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0558(0x0008)(Transient, DuplicateTransient)
	class UOakDialogComponent*                    OakDialog;                                         // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMissionObserverComponent*              MissionObserver;                                   // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EnumState_ZeroG                               GravityState;                                      // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   SetPlayerInZeroG;                                  // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AOakCharacter_Player*                   ThisPlayerCharacter;                               // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   SetReleasePlayerFromZeroG;                         // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UGbxCharacterMovementComponent*         ThisGBXMovementComponent;                          // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAttributeFloat                     WalkSpeed_ZeroG;                                   // 0x05A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGbxAttributeFloat                     WalkSpeed_Normal;                                  // 0x05B4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AStaticMeshActor*                       MonitorMesh_Bridge_MainDeckCenter;                 // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AStaticMeshActor*>               MonitorMesh_Bridge_DoubleMonitor;                  // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AStaticMeshActor*>               MonitorMesh_Bridge_MainDeck;                       // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class AStaticMeshActor*                       MonitorMesh_Bridge_UpperScreens;                   // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AStaticMeshActor*>               MonitorMesh_Interior_FourScreens;                  // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	bool                                          ManageMonitors;                                    // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AStaticMeshActor*>               MonitorMesh_Interior_SingleMonitor;                // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AStaticMeshActor*>               MonitorMesh_Interior_DoubleMonitor;                // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class UMaterialInstance*>              MaterialSet_Default;                               // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstance*>              MaterialSet_Defaul_Mirrored;                       // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Enable;                                            // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstance*>              MaterialSet_DamagedShip;                           // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstance*>              MaterialSet_DamagedShip_Mirror;                    // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstance*>              MaterialSet_NoErrors;                              // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstance*>              MaterialSet_NoErrors_Mirrored;                     // 0x0680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UGbxCondition*                          Cond_GravityState_NewEnumerator1;                  // 0x0690(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGbxCondition*                          Cond_GravityState_NewEnumerator2;                  // 0x0698(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void FullyRestoreMonitorScreens(int32 MaxToMonitorsToChange);
	void SwitchMonitors_Bridge(bool DamageState);
	class UMaterialInstance* GetMaterialFromArray(class AActor* MeshActor, TArray<class UMaterialInstance*>& MaterialArray, TArray<class UMaterialInstance*>& MaterialArray_Mirrored);
	void SwitchMonitors_DamagedShip();
	void RotateMonitorScreens(int32 MaxToMonitorsToChange);
	void UserConstructionScript();
	void __UserState_GravityState_1(bool bFromLoad);
	void __UserState_GravityState_2(bool bFromLoad);
	void OnDisabled();
	void OnEnabled();
	void ClientHasPawn(class APawn* NewPawn, class APawn* OldPawn);
	void ExecuteUbergraph_IO_Sanctuary_GravityHelper(int32 EntryPoint);
	void SetReleasePlayerFromZeroG__DelegateSignature(class AOakCharacter_Player* OakCharacterPlayer);
	void SetPlayerInZeroG__DelegateSignature(class AOakCharacter_Player* OakCharacterPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_Sanctuary_GravityHelper_C">();
	}
	static class AIO_Sanctuary_GravityHelper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_Sanctuary_GravityHelper_C>();
	}
};
static_assert(alignof(AIO_Sanctuary_GravityHelper_C) == 0x000008, "Wrong alignment on AIO_Sanctuary_GravityHelper_C");
static_assert(sizeof(AIO_Sanctuary_GravityHelper_C) == 0x0006A0, "Wrong size on AIO_Sanctuary_GravityHelper_C");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, UberGraphFrame) == 0x000558, "Member 'AIO_Sanctuary_GravityHelper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, OakDialog) == 0x000560, "Member 'AIO_Sanctuary_GravityHelper_C::OakDialog' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MissionObserver) == 0x000568, "Member 'AIO_Sanctuary_GravityHelper_C::MissionObserver' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, GravityState) == 0x000570, "Member 'AIO_Sanctuary_GravityHelper_C::GravityState' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, SetPlayerInZeroG) == 0x000578, "Member 'AIO_Sanctuary_GravityHelper_C::SetPlayerInZeroG' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, ThisPlayerCharacter) == 0x000588, "Member 'AIO_Sanctuary_GravityHelper_C::ThisPlayerCharacter' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, SetReleasePlayerFromZeroG) == 0x000590, "Member 'AIO_Sanctuary_GravityHelper_C::SetReleasePlayerFromZeroG' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, ThisGBXMovementComponent) == 0x0005A0, "Member 'AIO_Sanctuary_GravityHelper_C::ThisGBXMovementComponent' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, WalkSpeed_ZeroG) == 0x0005A8, "Member 'AIO_Sanctuary_GravityHelper_C::WalkSpeed_ZeroG' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, WalkSpeed_Normal) == 0x0005B4, "Member 'AIO_Sanctuary_GravityHelper_C::WalkSpeed_Normal' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Bridge_MainDeckCenter) == 0x0005C0, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Bridge_MainDeckCenter' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Bridge_DoubleMonitor) == 0x0005C8, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Bridge_DoubleMonitor' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Bridge_MainDeck) == 0x0005D8, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Bridge_MainDeck' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Bridge_UpperScreens) == 0x0005E8, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Bridge_UpperScreens' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Interior_FourScreens) == 0x0005F0, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Interior_FourScreens' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, ManageMonitors) == 0x000600, "Member 'AIO_Sanctuary_GravityHelper_C::ManageMonitors' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Interior_SingleMonitor) == 0x000608, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Interior_SingleMonitor' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MonitorMesh_Interior_DoubleMonitor) == 0x000618, "Member 'AIO_Sanctuary_GravityHelper_C::MonitorMesh_Interior_DoubleMonitor' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MaterialSet_Default) == 0x000628, "Member 'AIO_Sanctuary_GravityHelper_C::MaterialSet_Default' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MaterialSet_Defaul_Mirrored) == 0x000638, "Member 'AIO_Sanctuary_GravityHelper_C::MaterialSet_Defaul_Mirrored' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, Enable) == 0x000648, "Member 'AIO_Sanctuary_GravityHelper_C::Enable' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MaterialSet_DamagedShip) == 0x000650, "Member 'AIO_Sanctuary_GravityHelper_C::MaterialSet_DamagedShip' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MaterialSet_DamagedShip_Mirror) == 0x000660, "Member 'AIO_Sanctuary_GravityHelper_C::MaterialSet_DamagedShip_Mirror' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MaterialSet_NoErrors) == 0x000670, "Member 'AIO_Sanctuary_GravityHelper_C::MaterialSet_NoErrors' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, MaterialSet_NoErrors_Mirrored) == 0x000680, "Member 'AIO_Sanctuary_GravityHelper_C::MaterialSet_NoErrors_Mirrored' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, Cond_GravityState_NewEnumerator1) == 0x000690, "Member 'AIO_Sanctuary_GravityHelper_C::Cond_GravityState_NewEnumerator1' has a wrong offset!");
static_assert(offsetof(AIO_Sanctuary_GravityHelper_C, Cond_GravityState_NewEnumerator2) == 0x000698, "Member 'AIO_Sanctuary_GravityHelper_C::Cond_GravityState_NewEnumerator2' has a wrong offset!");

}

