#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Egon

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Ability_Egon.Ability_Egon_C.ExecuteUbergraph_Ability_Egon
// 0x0160 (0x0160 - 0x0000)
struct Ability_Egon_C_ExecuteUbergraph_Ability_Egon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0030(0x0060)(ContainsInstancedReference)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x00A8(0x0038)(NoDestructor)
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery;               // 0x00E0(0x0018)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x00F8(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue;            // 0x0110(0x0010)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakDamageCauserComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0138(0x0028)(NoDestructor)
};
static_assert(alignof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon) == 0x000008, "Wrong alignment on Ability_Egon_C_ExecuteUbergraph_Ability_Egon");
static_assert(sizeof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon) == 0x000160, "Wrong size on Ability_Egon_C_ExecuteUbergraph_Ability_Egon");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, EntryPoint) == 0x000000, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CustomEvent_DamageInstigator) == 0x000008, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CustomEvent_Damage) == 0x000010, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CustomEvent_DamageType) == 0x000018, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CustomEvent_DamageSource) == 0x000020, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CustomEvent_DamagedActor) == 0x000028, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CustomEvent_Details) == 0x000030, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_Compare_Damage_Source_Equal) == 0x000090, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_Compare_Damage_Source_Not_Equal) == 0x000091, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_MakeStruct_StatusEffectSpec) == 0x0000A8, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_MakeStruct_StatusEffectQuery) == 0x0000E0, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_MakeStruct_StatusEffectQuery' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_AddStatusEffect_ReturnValue) == 0x0000F8, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_QueryStatusEffect_ReturnValue) == 0x000110, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_QueryStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_Greater_IntInt_ReturnValue) == 0x000120, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_GetAbilityOwner_ReturnValue) == 0x000128, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, CallFunc_GetComponentByClass_ReturnValue) == 0x000130, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_ExecuteUbergraph_Ability_Egon, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000138, "Member 'Ability_Egon_C_ExecuteUbergraph_Ability_Egon::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");

// Function Ability_Egon.Ability_Egon_C.CausedDamage
// 0x0088 (0x0088 - 0x0000)
struct Ability_Egon_C_CausedDamage final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Ability_Egon_C_CausedDamage) == 0x000008, "Wrong alignment on Ability_Egon_C_CausedDamage");
static_assert(sizeof(Ability_Egon_C_CausedDamage) == 0x000088, "Wrong size on Ability_Egon_C_CausedDamage");
static_assert(offsetof(Ability_Egon_C_CausedDamage, DamageInstigator) == 0x000000, "Member 'Ability_Egon_C_CausedDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_CausedDamage, Damage) == 0x000008, "Member 'Ability_Egon_C_CausedDamage::Damage' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_CausedDamage, DamageType) == 0x000010, "Member 'Ability_Egon_C_CausedDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_CausedDamage, DamageSource) == 0x000018, "Member 'Ability_Egon_C_CausedDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_CausedDamage, DamagedActor) == 0x000020, "Member 'Ability_Egon_C_CausedDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Egon_C_CausedDamage, Details) == 0x000028, "Member 'Ability_Egon_C_CausedDamage::Details' has a wrong offset!");

}

