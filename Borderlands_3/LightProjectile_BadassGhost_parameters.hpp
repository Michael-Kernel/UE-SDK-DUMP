#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_BadassGhost

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_BadassGhost.LightProjectile_BadassGhost_C.OnDamage
// 0x0168 (0x0168 - 0x0000)
struct LightProjectile_BadassGhost_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCharacterAbilityManagerComponent*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxAbility*                            CallFunc_FindAbility_ReturnValue;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbility_BloodyHarvest_Terror_C*        K2Node_DynamicCast_AsAbility_Bloody_Harvest_Terror; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilitySpec                        K2Node_MakeStruct_GbxAbilitySpec;                  // 0x0150(0x0010)(NoDestructor)
	class UGbxAbility*                            CallFunc_AddAbility_ReturnValue;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_BadassGhost_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_BadassGhost_C_OnDamage");
static_assert(sizeof(LightProjectile_BadassGhost_C_OnDamage) == 0x000168, "Wrong size on LightProjectile_BadassGhost_C_OnDamage");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_BadassGhost_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_BadassGhost_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_BadassGhost_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x00009C, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x0000A0, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A1, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A2, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000A8, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_GetComponentByClass_ReturnValue) == 0x000120, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000128, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_FindAbility_ReturnValue) == 0x000130, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_FindAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, K2Node_DynamicCast_AsAbility_Bloody_Harvest_Terror) == 0x000140, "Member 'LightProjectile_BadassGhost_C_OnDamage::K2Node_DynamicCast_AsAbility_Bloody_Harvest_Terror' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'LightProjectile_BadassGhost_C_OnDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, K2Node_MakeStruct_GbxAbilitySpec) == 0x000150, "Member 'LightProjectile_BadassGhost_C_OnDamage::K2Node_MakeStruct_GbxAbilitySpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnDamage, CallFunc_AddAbility_ReturnValue) == 0x000160, "Member 'LightProjectile_BadassGhost_C_OnDamage::CallFunc_AddAbility_ReturnValue' has a wrong offset!");

// Function LightProjectile_BadassGhost.LightProjectile_BadassGhost_C.OnBegin
// 0x0020 (0x0020 - 0x0000)
struct LightProjectile_BadassGhost_C_OnBegin final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0008(0x0018)()
};
static_assert(alignof(LightProjectile_BadassGhost_C_OnBegin) == 0x000008, "Wrong alignment on LightProjectile_BadassGhost_C_OnBegin");
static_assert(sizeof(LightProjectile_BadassGhost_C_OnBegin) == 0x000020, "Wrong size on LightProjectile_BadassGhost_C_OnBegin");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnBegin, Projectile) == 0x000000, "Member 'LightProjectile_BadassGhost_C_OnBegin::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_BadassGhost_C_OnBegin, CallFunc_PostEventAtLocation_ReturnValue) == 0x000008, "Member 'LightProjectile_BadassGhost_C_OnBegin::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");

}

