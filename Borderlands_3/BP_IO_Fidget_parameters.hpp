#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IO_Fidget

#include "Basic.hpp"

#include "Enum_FidgetCurve_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_IO_Fidget.BP_IO_Fidget_C.Fidget_UpdateTimeline
// 0x0210 (0x0210 - 0x0000)
struct BP_IO_Fidget_C_Fidget_UpdateTimeline final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MyPercent;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_FidgetCurve                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Temp_object_Variable2;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable3;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_FidgetCurve                              Temp_byte_Variable1;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0048(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0090(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UCurveFloat*                            K2Node_Select1_Default;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue1;       // 0x0130(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult1;  // 0x0180(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_IO_Fidget_C_Fidget_UpdateTimeline) == 0x000010, "Wrong alignment on BP_IO_Fidget_C_Fidget_UpdateTimeline");
static_assert(sizeof(BP_IO_Fidget_C_Fidget_UpdateTimeline) == 0x000210, "Wrong size on BP_IO_Fidget_C_Fidget_UpdateTimeline");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Percent) == 0x000000, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Percent' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, MyPercent) == 0x000004, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::MyPercent' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Temp_object_Variable) == 0x000008, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Temp_object_Variable1) == 0x000010, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Temp_byte_Variable) == 0x000018, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Temp_object_Variable2) == 0x000020, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Temp_object_Variable3) == 0x000028, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, Temp_byte_Variable1) == 0x000030, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, K2Node_Select_Default) == 0x000038, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_GetFloatValue_ReturnValue) == 0x000040, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000048, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000090, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, K2Node_Select1_Default) == 0x000120, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_GetFloatValue_ReturnValue1) == 0x000128, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00012C, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_Multiply_RotatorFloat_ReturnValue1) == 0x000130, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_Multiply_RotatorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x00013C, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_MakeTransform_ReturnValue1) == 0x000150, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_Fidget_UpdateTimeline, CallFunc_K2_SetRelativeTransform_SweepHitResult1) == 0x000180, "Member 'BP_IO_Fidget_C_Fidget_UpdateTimeline::CallFunc_K2_SetRelativeTransform_SweepHitResult1' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.UserConstructionScript
// 0x0098 (0x0098 - 0x0000)
struct BP_IO_Fidget_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0000(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_Fidget_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_IO_Fidget_C_UserConstructionScript");
static_assert(sizeof(BP_IO_Fidget_C_UserConstructionScript) == 0x000098, "Wrong size on BP_IO_Fidget_C_UserConstructionScript");
static_assert(offsetof(BP_IO_Fidget_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000000, "Member 'BP_IO_Fidget_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_IO_Fidget_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_UserConstructionScript, CallFunc_IsValid_ReturnValue1) == 0x000091, "Member 'BP_IO_Fidget_C_UserConstructionScript::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000092, "Member 'BP_IO_Fidget_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget
// 0x0088 (0x0088 - 0x0000)
struct BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0030(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget) == 0x000008, "Wrong alignment on BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget");
static_assert(sizeof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget) == 0x000088, "Wrong size on BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, DamageReceiver) == 0x000000, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, Damage) == 0x000008, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::Damage' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, DamageType) == 0x000010, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::DamageType' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, DamageSource) == 0x000018, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::DamageSource' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, InstigatedBy) == 0x000020, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, DamageCauser) == 0x000028, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget, Details) == 0x000030, "Member 'BP_IO_Fidget_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_TakeAnyPipelineDamageDelegate__DelegateSignature_BP_IO_Fidget::Details' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.__UserState_FidgetState_0
// 0x0001 (0x0001 - 0x0000)
struct BP_IO_Fidget_C___UserState_FidgetState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_Fidget_C___UserState_FidgetState_0) == 0x000001, "Wrong alignment on BP_IO_Fidget_C___UserState_FidgetState_0");
static_assert(sizeof(BP_IO_Fidget_C___UserState_FidgetState_0) == 0x000001, "Wrong size on BP_IO_Fidget_C___UserState_FidgetState_0");
static_assert(offsetof(BP_IO_Fidget_C___UserState_FidgetState_0, bFromLoad) == 0x000000, "Member 'BP_IO_Fidget_C___UserState_FidgetState_0::bFromLoad' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.__UserState_FidgetState_1
// 0x0001 (0x0001 - 0x0000)
struct BP_IO_Fidget_C___UserState_FidgetState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_Fidget_C___UserState_FidgetState_1) == 0x000001, "Wrong alignment on BP_IO_Fidget_C___UserState_FidgetState_1");
static_assert(sizeof(BP_IO_Fidget_C___UserState_FidgetState_1) == 0x000001, "Wrong size on BP_IO_Fidget_C___UserState_FidgetState_1");
static_assert(offsetof(BP_IO_Fidget_C___UserState_FidgetState_1, bFromLoad) == 0x000000, "Member 'BP_IO_Fidget_C___UserState_FidgetState_1::bFromLoad' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.__UserState_FidgetState_2
// 0x0001 (0x0001 - 0x0000)
struct BP_IO_Fidget_C___UserState_FidgetState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_Fidget_C___UserState_FidgetState_2) == 0x000001, "Wrong alignment on BP_IO_Fidget_C___UserState_FidgetState_2");
static_assert(sizeof(BP_IO_Fidget_C___UserState_FidgetState_2) == 0x000001, "Wrong size on BP_IO_Fidget_C___UserState_FidgetState_2");
static_assert(offsetof(BP_IO_Fidget_C___UserState_FidgetState_2, bFromLoad) == 0x000000, "Member 'BP_IO_Fidget_C___UserState_FidgetState_2::bFromLoad' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.__UserState_FidgetState_3
// 0x0001 (0x0001 - 0x0000)
struct BP_IO_Fidget_C___UserState_FidgetState_3 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_Fidget_C___UserState_FidgetState_3) == 0x000001, "Wrong alignment on BP_IO_Fidget_C___UserState_FidgetState_3");
static_assert(sizeof(BP_IO_Fidget_C___UserState_FidgetState_3) == 0x000001, "Wrong size on BP_IO_Fidget_C___UserState_FidgetState_3");
static_assert(offsetof(BP_IO_Fidget_C___UserState_FidgetState_3, bFromLoad) == 0x000000, "Member 'BP_IO_Fidget_C___UserState_FidgetState_3::bFromLoad' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.ExecuteUbergraph_BP_IO_Fidget
// 0x0198 (0x0198 - 0x0000)
struct BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageComponent*                       K2Node_ComponentBoundEvent_DamageReceiver;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Damage;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_ComponentBoundEvent_DamageType;             // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_ComponentBoundEvent_DamageSource;           // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_InstigatedBy;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 K2Node_ComponentBoundEvent_Details;                // 0x0050(0x0058)(ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengesComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad3;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue3;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x00E0(0x0018)()
	bool                                          Temp_bool_Variable1;                               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable1;                             // 0x0110(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxAction*                             CallFunc_K2Play_ReturnValue1;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0140(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x0160(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue3;              // 0x0178(0x0018)()
	bool                                          CallFunc_HasAuthority_ReturnValue4;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget) == 0x000008, "Wrong alignment on BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget");
static_assert(sizeof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget) == 0x000198, "Wrong size on BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, EntryPoint) == 0x000000, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_struct_Variable) == 0x000008, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_bool_Variable) == 0x000018, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_HasAuthority_ReturnValue1) == 0x000019, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_DamageReceiver) == 0x000020, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_Damage) == 0x000028, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_DamageType) == 0x000030, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_DamageSource) == 0x000038, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_InstigatedBy) == 0x000040, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_DamageCauser) == 0x000048, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_ComponentBoundEvent_Details) == 0x000050, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_ComponentBoundEvent_Details' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_HasAuthority_ReturnValue2) == 0x0000A8, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B8, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_bool_Has_Been_Initd_Variable) == 0x0000C0, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_UserStateEvent_bFromLoad3) == 0x0000C1, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_UserStateEvent_bFromLoad3' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_UserStateEvent_bFromLoad2) == 0x0000C2, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_UserStateEvent_bFromLoad1) == 0x0000C3, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C4, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_float_Variable) == 0x0000C8, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000CC, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000DC, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_HasAuthority_ReturnValue3) == 0x0000DD, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_HasAuthority_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_PostWwiseEvent_ReturnValue) == 0x0000E0, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_bool_Variable1) == 0x0000F8, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x0000F9, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_Select_Default) == 0x0000FC, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000100, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000104, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_UserStateEvent_bFromLoad) == 0x000108, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_struct_Variable1) == 0x000110, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_K2Play_ReturnValue) == 0x000120, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_K2Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_float_Variable1) == 0x000128, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, Temp_bool_IsClosed_Variable) == 0x00012C, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_Select1_Default) == 0x000130, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_K2Play_ReturnValue1) == 0x000138, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_K2Play_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000140, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, K2Node_SwitchEnum_CmpSuccess) == 0x000158, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_PostWwiseEvent_ReturnValue2) == 0x000160, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_PostWwiseEvent_ReturnValue3) == 0x000178, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_PostWwiseEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget, CallFunc_HasAuthority_ReturnValue4) == 0x000190, "Member 'BP_IO_Fidget_C_ExecuteUbergraph_BP_IO_Fidget::CallFunc_HasAuthority_ReturnValue4' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.FidgetFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_IO_Fidget_C_FidgetFinished__DelegateSignature final
{
public:
	class ABP_IO_Fidget_C*                        Fidget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_Fidget_C_FidgetFinished__DelegateSignature) == 0x000008, "Wrong alignment on BP_IO_Fidget_C_FidgetFinished__DelegateSignature");
static_assert(sizeof(BP_IO_Fidget_C_FidgetFinished__DelegateSignature) == 0x000008, "Wrong size on BP_IO_Fidget_C_FidgetFinished__DelegateSignature");
static_assert(offsetof(BP_IO_Fidget_C_FidgetFinished__DelegateSignature, Fidget) == 0x000000, "Member 'BP_IO_Fidget_C_FidgetFinished__DelegateSignature::Fidget' has a wrong offset!");

// Function BP_IO_Fidget.BP_IO_Fidget_C.FidgetHit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_IO_Fidget_C_FidgetHit__DelegateSignature final
{
public:
	class ABP_IO_Fidget_C*                        Fidget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IO_Fidget_C_FidgetHit__DelegateSignature) == 0x000008, "Wrong alignment on BP_IO_Fidget_C_FidgetHit__DelegateSignature");
static_assert(sizeof(BP_IO_Fidget_C_FidgetHit__DelegateSignature) == 0x000008, "Wrong size on BP_IO_Fidget_C_FidgetHit__DelegateSignature");
static_assert(offsetof(BP_IO_Fidget_C_FidgetHit__DelegateSignature, Fidget) == 0x000000, "Member 'BP_IO_Fidget_C_FidgetHit__DelegateSignature::Fidget' has a wrong offset!");

}

