#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDestruction

#include "Basic.hpp"


namespace SDK::Params
{

// Function GbxDestruction.GbxDestructibleComponent.GetDamageRequiredToFracture
// 0x0008 (0x0008 - 0x0000)
struct GbxDestructibleComponent_GetDamageRequiredToFracture final
{
public:
	int32                                         Depth;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDestructibleComponent_GetDamageRequiredToFracture) == 0x000004, "Wrong alignment on GbxDestructibleComponent_GetDamageRequiredToFracture");
static_assert(sizeof(GbxDestructibleComponent_GetDamageRequiredToFracture) == 0x000008, "Wrong size on GbxDestructibleComponent_GetDamageRequiredToFracture");
static_assert(offsetof(GbxDestructibleComponent_GetDamageRequiredToFracture, Depth) == 0x000000, "Member 'GbxDestructibleComponent_GetDamageRequiredToFracture::Depth' has a wrong offset!");
static_assert(offsetof(GbxDestructibleComponent_GetDamageRequiredToFracture, ReturnValue) == 0x000004, "Member 'GbxDestructibleComponent_GetDamageRequiredToFracture::ReturnValue' has a wrong offset!");

// Function GbxDestruction.GbxDestructibleComponent.SetFracturable
// 0x0001 (0x0001 - 0x0000)
struct GbxDestructibleComponent_SetFracturable final
{
public:
	bool                                          bFracturable;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDestructibleComponent_SetFracturable) == 0x000001, "Wrong alignment on GbxDestructibleComponent_SetFracturable");
static_assert(sizeof(GbxDestructibleComponent_SetFracturable) == 0x000001, "Wrong size on GbxDestructibleComponent_SetFracturable");
static_assert(offsetof(GbxDestructibleComponent_SetFracturable, bFracturable) == 0x000000, "Member 'GbxDestructibleComponent_SetFracturable::bFracturable' has a wrong offset!");

// Function GbxDestruction.GbxDestructibleComponent.GetTotalPercentFractured
// 0x0004 (0x0004 - 0x0000)
struct GbxDestructibleComponent_GetTotalPercentFractured final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDestructibleComponent_GetTotalPercentFractured) == 0x000004, "Wrong alignment on GbxDestructibleComponent_GetTotalPercentFractured");
static_assert(sizeof(GbxDestructibleComponent_GetTotalPercentFractured) == 0x000004, "Wrong size on GbxDestructibleComponent_GetTotalPercentFractured");
static_assert(offsetof(GbxDestructibleComponent_GetTotalPercentFractured, ReturnValue) == 0x000000, "Member 'GbxDestructibleComponent_GetTotalPercentFractured::ReturnValue' has a wrong offset!");

// Function GbxDestruction.GbxDestructibleActor.SetFracturable
// 0x0001 (0x0001 - 0x0000)
struct GbxDestructibleActor_SetFracturable final
{
public:
	bool                                          bFracturable;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GbxDestructibleActor_SetFracturable) == 0x000001, "Wrong alignment on GbxDestructibleActor_SetFracturable");
static_assert(sizeof(GbxDestructibleActor_SetFracturable) == 0x000001, "Wrong size on GbxDestructibleActor_SetFracturable");
static_assert(offsetof(GbxDestructibleActor_SetFracturable, bFracturable) == 0x000000, "Member 'GbxDestructibleActor_SetFracturable::bFracturable' has a wrong offset!");

}

