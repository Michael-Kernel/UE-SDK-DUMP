#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhaseTranceSingularity

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PhaseTranceSingularity.BP_PhaseTranceSingularity_C
// 0x0020 (0x05A8 - 0x0588)
class ABP_PhaseTranceSingularity_C : public APhaseTranceSingularityActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0588(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingularityComponent*                  SingularityComponent;                              // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleSystemShutdownSystem;                      // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PhaseTranceSingularity(int32 EntryPoint);
	void ReleaseParticleSystem();
	void CleanShutdownMulticast();
	void OnShutdownRequested(bool bForced);
	void ConfigureSingularity();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetSingularityDuration(float* Res);
	void GetIgnoredActors(TArray<class AActor*>* Res);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PhaseTranceSingularity_C">();
	}
	static class ABP_PhaseTranceSingularity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PhaseTranceSingularity_C>();
	}
};
static_assert(alignof(ABP_PhaseTranceSingularity_C) == 0x000008, "Wrong alignment on ABP_PhaseTranceSingularity_C");
static_assert(sizeof(ABP_PhaseTranceSingularity_C) == 0x0005A8, "Wrong size on ABP_PhaseTranceSingularity_C");
static_assert(offsetof(ABP_PhaseTranceSingularity_C, UberGraphFrame) == 0x000588, "Member 'ABP_PhaseTranceSingularity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PhaseTranceSingularity_C, ParticleSystem) == 0x000590, "Member 'ABP_PhaseTranceSingularity_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_PhaseTranceSingularity_C, SingularityComponent) == 0x000598, "Member 'ABP_PhaseTranceSingularity_C::SingularityComponent' has a wrong offset!");
static_assert(offsetof(ABP_PhaseTranceSingularity_C, ParticleSystemShutdownSystem) == 0x0005A0, "Member 'ABP_PhaseTranceSingularity_C::ParticleSystemShutdownSystem' has a wrong offset!");

}

