#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_HeavyShared_Bomb

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_HeavyShared_Bomb.Proj_HeavyShared_Bomb_C
// 0x02B0 (0x0990 - 0x06E0)
class AProj_HeavyShared_Bomb_C final : public AOakAIBalancedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               FX_Projectile;                                     // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FuseTime;                                          // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x070C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExplodeOnImpact;                                   // 0x0710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x3];                                      // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExplosionImpulse;                                  // 0x0714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             ElementalMode;                                     // 0x0718(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EOakElementalType, class UParticleSystem*> ElementToProjectileFXMap;                          // 0x0720(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToWiseEventMap_ProjStart;                   // 0x0770(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToWiseEventMap_ProjStop;                    // 0x07C0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class USplatData*>    ElementToSplatMap;                                 // 0x0810(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UClass*>        ElementToDamageMap;                                // 0x0860(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToWiseEventMap_ProjLaunch;                  // 0x08B0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FHitResult                             HitInfo;                                           // 0x0900(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)

public:
	void ExecuteUbergraph_Proj_HeavyShared_Bomb(int32 EntryPoint);
	void OnHitEnemy(const struct FHitResult& Hit);
	void OnHitDamagableObject(const struct FHitResult& Hit);
	void OnHitWorld(const struct FHitResult& Hit);
	void OnExplode();
	void ReceiveBeginPlay();
	void GbxAsyncRequest_Spawned_89670D364599A8041F57B796F202DE45(class AActor* Actor, int32 InstanceIndex);
	void GbxAsyncRequest_Failed_89670D364599A8041F57B796F202DE45(class AActor* Actor, int32 InstanceIndex);
	void UserConstructionScript();
	void InitProjetileByElement();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_HeavyShared_Bomb_C">();
	}
	static class AProj_HeavyShared_Bomb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_HeavyShared_Bomb_C>();
	}
};
static_assert(alignof(AProj_HeavyShared_Bomb_C) == 0x000008, "Wrong alignment on AProj_HeavyShared_Bomb_C");
static_assert(sizeof(AProj_HeavyShared_Bomb_C) == 0x000990, "Wrong size on AProj_HeavyShared_Bomb_C");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_HeavyShared_Bomb_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, FX_Projectile) == 0x0006E8, "Member 'AProj_HeavyShared_Bomb_C::FX_Projectile' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, Sphere) == 0x0006F0, "Member 'AProj_HeavyShared_Bomb_C::Sphere' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, WwiseAudio) == 0x0006F8, "Member 'AProj_HeavyShared_Bomb_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, GbxProjectileMovement) == 0x000700, "Member 'AProj_HeavyShared_Bomb_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, FuseTime) == 0x000708, "Member 'AProj_HeavyShared_Bomb_C::FuseTime' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ExplosionRadius) == 0x00070C, "Member 'AProj_HeavyShared_Bomb_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ExplodeOnImpact) == 0x000710, "Member 'AProj_HeavyShared_Bomb_C::ExplodeOnImpact' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ExplosionImpulse) == 0x000714, "Member 'AProj_HeavyShared_Bomb_C::ExplosionImpulse' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementalMode) == 0x000718, "Member 'AProj_HeavyShared_Bomb_C::ElementalMode' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementToProjectileFXMap) == 0x000720, "Member 'AProj_HeavyShared_Bomb_C::ElementToProjectileFXMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementToWiseEventMap_ProjStart) == 0x000770, "Member 'AProj_HeavyShared_Bomb_C::ElementToWiseEventMap_ProjStart' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementToWiseEventMap_ProjStop) == 0x0007C0, "Member 'AProj_HeavyShared_Bomb_C::ElementToWiseEventMap_ProjStop' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementToSplatMap) == 0x000810, "Member 'AProj_HeavyShared_Bomb_C::ElementToSplatMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementToDamageMap) == 0x000860, "Member 'AProj_HeavyShared_Bomb_C::ElementToDamageMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, ElementToWiseEventMap_ProjLaunch) == 0x0008B0, "Member 'AProj_HeavyShared_Bomb_C::ElementToWiseEventMap_ProjLaunch' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_Bomb_C, HitInfo) == 0x000900, "Member 'AProj_HeavyShared_Bomb_C::HitInfo' has a wrong offset!");

}

