#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_OakClothActor

#include "Basic.hpp"

#include "GbxDestruction_classes.hpp"
#include "GbxAudio_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_Layer2_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_structs.hpp"
#include "Struct_MasterMaterial_Colorize_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_Layer3_structs.hpp"
#include "Struct_MasterMaterial_BaseParams_Layer4_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PC_OakClothActor.PC_OakClothActor_C
// 0x0178 (0x05F0 - 0x0478)
class APC_OakClothActor_C : public AClothStaticMeshActor
{
public:
	class UWindAudioLoopComponent*                WindAudioLoop;                                     // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          Random_Seed;                                       // 0x0488(0x0008)(Edit, BlueprintVisible, NoDestructor)
	float                                         RandomFloatFromStream;                             // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Primary_Color1;                              // 0x0494(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Primary_Color2;                              // 0x04A4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Secondary_Color1;                            // 0x04B4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Secondary_Color2;                            // 0x04C4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Tertiary_Color1;                             // 0x04D4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Level_Tertiary_Color2;                             // 0x04E4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Materials_Array;                                   // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                RandomVectorFromStream;                            // 0x0508(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Randomize_On;                                      // 0x0514(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_MasterMaterial_Colorize> Colorize_Array;                                    // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UMaterialInterface*>             Default_Materials_Array;                           // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FStruct_MasterMaterial_BaseParams> MaterialParamsArray;                               // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         Colorize_HueShift_RandomAmount;                    // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Colorize_HueShift_Amount;                          // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Multi_Layer_Material;                           // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Multi_Layer_Number_of_Layers;                      // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_MasterMaterial_BaseParams_Layer2> L2_MaterialParamsArray;                            // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FStruct_MasterMaterial_BaseParams_Layer3> L3_MaterialParamsArray;                            // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FStruct_MasterMaterial_BaseParams_Layer4> L4_MaterialParamsArray;                            // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UMaterialInterface*>             Material_Overrides;                                // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UWwiseEvent*                            ClothAudio;                                        // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NoMinusBackstop_Mesh;                              // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindInfluenceMultiplier;                           // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Static_Mesh;                                       // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Backstop_amount;                                   // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindDirectionalSensitivity            Wind_Sensitivity__no_backstop_;                    // 0x05BC(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FWindDirectionalSensitivity            Wind_Sensitivity__with_backstop_;                  // 0x05D4(0x0018)(Edit, BlueprintVisible, NoDestructor)

public:
	void Set_Per_Element_Layer_4_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* Default_Material_In, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Array_Index_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Per_Element_Layer_3_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* Default_Material_In, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Array_Index_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Per_Element_Layer_2_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic* Default_Material_In, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Array_Index_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Randomized_Colorization(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 MaterialID, class UMaterialInstanceDynamic* Default_Material, class UMaterialInstanceDynamic** Material_Instance_Dynamic_Out, int32* Material_ID_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Set_Per_Element_Base_Material_Parameters(class UMaterialInstanceDynamic* Material_Instance_Dynamic, int32 Array_index, class UMaterialInstanceDynamic** Dynamic_Material_Instance, int32* Material_ID_Out, class UMaterialInstanceDynamic** Default_Material_Out);
	void Create_Dynamic_Material_Instance(class UMaterialInterface* Material_Instance_Interface, int32 Element_Index, class UMeshComponent* Mesh_Component, class UMaterialInstanceDynamic** Material_Instance_Dynamic, int32* Material_ID);
	void Set_Level_ColorScheme();
	void Per_Instance_Master_Material_Parameters(class UMeshComponent* Target_Component);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PC_OakClothActor_C">();
	}
	static class APC_OakClothActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APC_OakClothActor_C>();
	}
};
static_assert(alignof(APC_OakClothActor_C) == 0x000008, "Wrong alignment on APC_OakClothActor_C");
static_assert(sizeof(APC_OakClothActor_C) == 0x0005F0, "Wrong size on APC_OakClothActor_C");
static_assert(offsetof(APC_OakClothActor_C, WindAudioLoop) == 0x000478, "Member 'APC_OakClothActor_C::WindAudioLoop' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, WwiseAudio) == 0x000480, "Member 'APC_OakClothActor_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Random_Seed) == 0x000488, "Member 'APC_OakClothActor_C::Random_Seed' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, RandomFloatFromStream) == 0x000490, "Member 'APC_OakClothActor_C::RandomFloatFromStream' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Level_Primary_Color1) == 0x000494, "Member 'APC_OakClothActor_C::Level_Primary_Color1' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Level_Primary_Color2) == 0x0004A4, "Member 'APC_OakClothActor_C::Level_Primary_Color2' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Level_Secondary_Color1) == 0x0004B4, "Member 'APC_OakClothActor_C::Level_Secondary_Color1' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Level_Secondary_Color2) == 0x0004C4, "Member 'APC_OakClothActor_C::Level_Secondary_Color2' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Level_Tertiary_Color1) == 0x0004D4, "Member 'APC_OakClothActor_C::Level_Tertiary_Color1' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Level_Tertiary_Color2) == 0x0004E4, "Member 'APC_OakClothActor_C::Level_Tertiary_Color2' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Materials_Array) == 0x0004F8, "Member 'APC_OakClothActor_C::Materials_Array' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, RandomVectorFromStream) == 0x000508, "Member 'APC_OakClothActor_C::RandomVectorFromStream' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Randomize_On) == 0x000514, "Member 'APC_OakClothActor_C::Randomize_On' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Colorize_Array) == 0x000518, "Member 'APC_OakClothActor_C::Colorize_Array' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Default_Materials_Array) == 0x000528, "Member 'APC_OakClothActor_C::Default_Materials_Array' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, MaterialParamsArray) == 0x000538, "Member 'APC_OakClothActor_C::MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Colorize_HueShift_RandomAmount) == 0x000548, "Member 'APC_OakClothActor_C::Colorize_HueShift_RandomAmount' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Colorize_HueShift_Amount) == 0x00054C, "Member 'APC_OakClothActor_C::Colorize_HueShift_Amount' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Is_Multi_Layer_Material) == 0x000550, "Member 'APC_OakClothActor_C::Is_Multi_Layer_Material' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Multi_Layer_Number_of_Layers) == 0x000554, "Member 'APC_OakClothActor_C::Multi_Layer_Number_of_Layers' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, L2_MaterialParamsArray) == 0x000558, "Member 'APC_OakClothActor_C::L2_MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, L3_MaterialParamsArray) == 0x000568, "Member 'APC_OakClothActor_C::L3_MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, L4_MaterialParamsArray) == 0x000578, "Member 'APC_OakClothActor_C::L4_MaterialParamsArray' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Material_Overrides) == 0x000588, "Member 'APC_OakClothActor_C::Material_Overrides' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, ClothAudio) == 0x000598, "Member 'APC_OakClothActor_C::ClothAudio' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, NoMinusBackstop_Mesh) == 0x0005A0, "Member 'APC_OakClothActor_C::NoMinusBackstop_Mesh' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, WindInfluenceMultiplier) == 0x0005A8, "Member 'APC_OakClothActor_C::WindInfluenceMultiplier' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Static_Mesh) == 0x0005B0, "Member 'APC_OakClothActor_C::Static_Mesh' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Backstop_amount) == 0x0005B8, "Member 'APC_OakClothActor_C::Backstop_amount' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Wind_Sensitivity__no_backstop_) == 0x0005BC, "Member 'APC_OakClothActor_C::Wind_Sensitivity__no_backstop_' has a wrong offset!");
static_assert(offsetof(APC_OakClothActor_C, Wind_Sensitivity__with_backstop_) == 0x0005D4, "Member 'APC_OakClothActor_C::Wind_Sensitivity__with_backstop_' has a wrong offset!");

}

