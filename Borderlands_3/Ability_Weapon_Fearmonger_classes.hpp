#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Weapon_Fearmonger

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_Weapon_Fearmonger.Ability_Weapon_Fearmonger_C
// 0x0040 (0x0138 - 0x00F8)
class UAbility_Weapon_Fearmonger_C final : public UOakAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F8(0x0008)(Transient, DuplicateTransient)
	class ABPChar_Player_C*                       Player;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckTerror;                                       // 0x0108(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGbxAbilityResourceController_ResourcePoolDelegate RsrcCntrlr_GbxAbilityResourceController_ResourcePoolDelegate_Ability_Weapon_Fearmonger; // 0x0110(0x0028)()

public:
	void ExecuteUbergraph_Ability_Weapon_Fearmonger(int32 EntryPoint);
	void OnRegistered();
	void TerrorUpdated(const struct FGameResourcePoolReference& ResourcePool);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_Weapon_Fearmonger_C">();
	}
	static class UAbility_Weapon_Fearmonger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Weapon_Fearmonger_C>();
	}
};
static_assert(alignof(UAbility_Weapon_Fearmonger_C) == 0x000008, "Wrong alignment on UAbility_Weapon_Fearmonger_C");
static_assert(sizeof(UAbility_Weapon_Fearmonger_C) == 0x000138, "Wrong size on UAbility_Weapon_Fearmonger_C");
static_assert(offsetof(UAbility_Weapon_Fearmonger_C, UberGraphFrame) == 0x0000F8, "Member 'UAbility_Weapon_Fearmonger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_Weapon_Fearmonger_C, Player) == 0x000100, "Member 'UAbility_Weapon_Fearmonger_C::Player' has a wrong offset!");
static_assert(offsetof(UAbility_Weapon_Fearmonger_C, CheckTerror) == 0x000108, "Member 'UAbility_Weapon_Fearmonger_C::CheckTerror' has a wrong offset!");
static_assert(offsetof(UAbility_Weapon_Fearmonger_C, RsrcCntrlr_GbxAbilityResourceController_ResourcePoolDelegate_Ability_Weapon_Fearmonger) == 0x000110, "Member 'UAbility_Weapon_Fearmonger_C::RsrcCntrlr_GbxAbilityResourceController_ResourcePoolDelegate_Ability_Weapon_Fearmonger' has a wrong offset!");

}

