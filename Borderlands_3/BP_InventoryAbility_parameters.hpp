#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryAbility

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_InventoryAbility.BP_InventoryAbility_C.ExecuteUbergraph_BP_InventoryAbility
// 0x0058 (0x0058 - 0x0000)
struct BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakInventoryItem*                      K2Node_DynamicCast_AsOak_Inventory_Item;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBalanceStateComponent*        CallFunc_GetInventoryBalanceState_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryRarityData*                   CallFunc_GetInventoryRarityData_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue4;     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility) == 0x000008, "Wrong alignment on BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility");
static_assert(sizeof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility) == 0x000058, "Wrong size on BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, EntryPoint) == 0x000000, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, K2Node_DynamicCast_AsOak_Character) == 0x000018, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_GetAbilityOwner_ReturnValue) == 0x000028, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, K2Node_DynamicCast_AsOak_Inventory_Item) == 0x000030, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::K2Node_DynamicCast_AsOak_Inventory_Item' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_GetInventoryBalanceState_ReturnValue) == 0x000040, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_GetInventoryBalanceState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_GetInventoryRarityData_ReturnValue) == 0x000048, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_GetInventoryRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000051, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000052, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x000053, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue4) == 0x000054, "Member 'BP_InventoryAbility_C_ExecuteUbergraph_BP_InventoryAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue4' has a wrong offset!");

// Function BP_InventoryAbility.BP_InventoryAbility_C.CalculateAbilityState
// 0x0006 (0x0006 - 0x0000)
struct BP_InventoryAbility_C_CalculateAbilityState final
{
public:
	EGbxAbilityState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              CallFunc_CalculateAbilityState_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InventoryAbility_C_CalculateAbilityState) == 0x000001, "Wrong alignment on BP_InventoryAbility_C_CalculateAbilityState");
static_assert(sizeof(BP_InventoryAbility_C_CalculateAbilityState) == 0x000006, "Wrong size on BP_InventoryAbility_C_CalculateAbilityState");
static_assert(offsetof(BP_InventoryAbility_C_CalculateAbilityState, ReturnValue) == 0x000000, "Member 'BP_InventoryAbility_C_CalculateAbilityState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_CalculateAbilityState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_InventoryAbility_C_CalculateAbilityState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_CalculateAbilityState, CallFunc_CalculateAbilityState_ReturnValue) == 0x000002, "Member 'BP_InventoryAbility_C_CalculateAbilityState::CallFunc_CalculateAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_CalculateAbilityState, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_InventoryAbility_C_CalculateAbilityState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_CalculateAbilityState, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000004, "Member 'BP_InventoryAbility_C_CalculateAbilityState::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_InventoryAbility_C_CalculateAbilityState, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_InventoryAbility_C_CalculateAbilityState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

