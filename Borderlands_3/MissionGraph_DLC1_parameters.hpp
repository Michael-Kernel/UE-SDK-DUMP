#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionGraph_DLC1

#include "Basic.hpp"


namespace SDK::Params
{

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Acid Trip]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Acid_Trip_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Acid_Trip_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Acid_Trip_");
static_assert(sizeof(MissionGraph_DLC1_C__Acid_Trip_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Acid_Trip_");
static_assert(offsetof(MissionGraph_DLC1_C__Acid_Trip_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Acid_Trip_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Acid_Trip_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Acid_Trip_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[All Bets Off]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__All_Bets_Off_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__All_Bets_Off_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__All_Bets_Off_");
static_assert(sizeof(MissionGraph_DLC1_C__All_Bets_Off_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__All_Bets_Off_");
static_assert(offsetof(MissionGraph_DLC1_C__All_Bets_Off_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__All_Bets_Off_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__All_Bets_Off_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__All_Bets_Off_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Do it for Digby (Part 1)]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__");
static_assert(sizeof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__");
static_assert(offsetof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Do_it_for_Digby__Part_1__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Do it for Digby (Part 2)]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__");
static_assert(sizeof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__");
static_assert(offsetof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Do_it_for_Digby__Part_2__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Do it for Digby (Part 3)]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__");
static_assert(sizeof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__");
static_assert(offsetof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Do_it_for_Digby__Part_3__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Double Down]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Double_Down_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Double_Down_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Double_Down_");
static_assert(sizeof(MissionGraph_DLC1_C__Double_Down_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Double_Down_");
static_assert(offsetof(MissionGraph_DLC1_C__Double_Down_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Double_Down_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Double_Down_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Double_Down_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Heart of Gold]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Heart_of_Gold_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Heart_of_Gold_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Heart_of_Gold_");
static_assert(sizeof(MissionGraph_DLC1_C__Heart_of_Gold_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Heart_of_Gold_");
static_assert(offsetof(MissionGraph_DLC1_C__Heart_of_Gold_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Heart_of_Gold_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Heart_of_Gold_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Heart_of_Gold_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Jack's Wild]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Jack_s_Wild_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Jack_s_Wild_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Jack_s_Wild_");
static_assert(sizeof(MissionGraph_DLC1_C__Jack_s_Wild_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Jack_s_Wild_");
static_assert(offsetof(MissionGraph_DLC1_C__Jack_s_Wild_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Jack_s_Wild_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Jack_s_Wild_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Jack_s_Wild_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[One Man's Treasure]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__One_Man_s_Treasure_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__One_Man_s_Treasure_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__One_Man_s_Treasure_");
static_assert(sizeof(MissionGraph_DLC1_C__One_Man_s_Treasure_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__One_Man_s_Treasure_");
static_assert(offsetof(MissionGraph_DLC1_C__One_Man_s_Treasure_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__One_Man_s_Treasure_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__One_Man_s_Treasure_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__One_Man_s_Treasure_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Playing with Fire]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Playing_with_Fire_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Playing_with_Fire_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Playing_with_Fire_");
static_assert(sizeof(MissionGraph_DLC1_C__Playing_with_Fire_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Playing_with_Fire_");
static_assert(offsetof(MissionGraph_DLC1_C__Playing_with_Fire_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Playing_with_Fire_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Playing_with_Fire_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Playing_with_Fire_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Raging Bot]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Raging_Bot_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Raging_Bot_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Raging_Bot_");
static_assert(sizeof(MissionGraph_DLC1_C__Raging_Bot_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Raging_Bot_");
static_assert(offsetof(MissionGraph_DLC1_C__Raging_Bot_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Raging_Bot_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Raging_Bot_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Raging_Bot_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Regaining One's Feet]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Regaining_One_s_Feet_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Regaining_One_s_Feet_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Regaining_One_s_Feet_");
static_assert(sizeof(MissionGraph_DLC1_C__Regaining_One_s_Feet_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Regaining_One_s_Feet_");
static_assert(offsetof(MissionGraph_DLC1_C__Regaining_One_s_Feet_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Regaining_One_s_Feet_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Regaining_One_s_Feet_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Regaining_One_s_Feet_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Sisterly Love]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Sisterly_Love_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Sisterly_Love_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Sisterly_Love_");
static_assert(sizeof(MissionGraph_DLC1_C__Sisterly_Love_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Sisterly_Love_");
static_assert(offsetof(MissionGraph_DLC1_C__Sisterly_Love_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Sisterly_Love_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Sisterly_Love_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Sisterly_Love_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[The Great Escape]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__The_Great_Escape_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__The_Great_Escape_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__The_Great_Escape_");
static_assert(sizeof(MissionGraph_DLC1_C__The_Great_Escape_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__The_Great_Escape_");
static_assert(offsetof(MissionGraph_DLC1_C__The_Great_Escape_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__The_Great_Escape_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__The_Great_Escape_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__The_Great_Escape_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[The Handsome Jackpot]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__The_Handsome_Jackpot_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__The_Handsome_Jackpot_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__The_Handsome_Jackpot_");
static_assert(sizeof(MissionGraph_DLC1_C__The_Handsome_Jackpot_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__The_Handsome_Jackpot_");
static_assert(offsetof(MissionGraph_DLC1_C__The_Handsome_Jackpot_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__The_Handsome_Jackpot_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__The_Handsome_Jackpot_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__The_Handsome_Jackpot_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[The Plan]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__The_Plan_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__The_Plan_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__The_Plan_");
static_assert(sizeof(MissionGraph_DLC1_C__The_Plan_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__The_Plan_");
static_assert(offsetof(MissionGraph_DLC1_C__The_Plan_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__The_Plan_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__The_Plan_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__The_Plan_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Too Much Of A Good Thing]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_");
static_assert(sizeof(MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_");
static_assert(offsetof(MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Too_Much_Of_A_Good_Thing_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.[Winners and Losers]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC1_C__Winners_and_Losers_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C__Winners_and_Losers_) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C__Winners_and_Losers_");
static_assert(sizeof(MissionGraph_DLC1_C__Winners_and_Losers_) == 0x000010, "Wrong size on MissionGraph_DLC1_C__Winners_and_Losers_");
static_assert(offsetof(MissionGraph_DLC1_C__Winners_and_Losers_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC1_C__Winners_and_Losers_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C__Winners_and_Losers_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC1_C__Winners_and_Losers_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC1.MissionGraph_DLC1_C.ExecuteUbergraph_MissionGraph_DLC1
// 0x0128 (0x0128 - 0x0000)
struct MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks17;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission17;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks16;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission16;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks15;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission15;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks14;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission14;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks13;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission13;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks12;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission12;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks11;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission11;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks10;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission10;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks9;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission9;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks8;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission8;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks7;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission7;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks6;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission6;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks5;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission5;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks4;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission4;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks3;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission3;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks2;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission2;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks1;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission1;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1) == 0x000008, "Wrong alignment on MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1");
static_assert(sizeof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1) == 0x000128, "Wrong size on MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, EntryPoint) == 0x000000, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::EntryPoint' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks) == 0x000008, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission) == 0x000010, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks17) == 0x000018, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks17' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission17) == 0x000020, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission17' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks16) == 0x000028, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks16' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission16) == 0x000030, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission16' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks15) == 0x000038, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks15' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission15) == 0x000040, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission15' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks14) == 0x000048, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks14' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission14) == 0x000050, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission14' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks13) == 0x000058, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks13' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission13) == 0x000060, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission13' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks12) == 0x000068, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks12' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission12) == 0x000070, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission12' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks11) == 0x000078, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks11' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission11) == 0x000080, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission11' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks10) == 0x000088, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks10' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission10) == 0x000090, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission10' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks9) == 0x000098, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks9' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission9) == 0x0000A0, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission9' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks8) == 0x0000A8, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks8' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission8) == 0x0000B0, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission8' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks7) == 0x0000B8, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks7' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission7) == 0x0000C0, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission7' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks6) == 0x0000C8, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks6' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission6) == 0x0000D0, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission6' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks5) == 0x0000D8, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks5' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission5) == 0x0000E0, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission5' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks4) == 0x0000E8, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks4' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission4) == 0x0000F0, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission4' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks3) == 0x0000F8, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks3' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission3) == 0x000100, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission3' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks2) == 0x000108, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks2' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission2) == 0x000110, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission2' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Unlocks1) == 0x000118, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Unlocks1' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1, MissionK2Node_MissionRefEvent_Next_Mission1) == 0x000120, "Member 'MissionGraph_DLC1_C_ExecuteUbergraph_MissionGraph_DLC1::MissionK2Node_MissionRefEvent_Next_Mission1' has a wrong offset!");

}

