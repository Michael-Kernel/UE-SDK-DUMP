#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Heavy_Badass

#include "Basic.hpp"

#include "Enum_Heavy_WeaponSocket_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "BPChar_Heavy_Shared_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Heavy_Badass.BPChar_Heavy_Badass_C
// 0x07E0 (0x2F80 - 0x27A0)
class ABPChar_Heavy_Badass_C final : public ABPChar_Heavy_Shared_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Heavy_Badass_C;              // 0x2798(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_WeaponAmbient_R_Shock;                          // 0x27A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_R_Cryo;                           // 0x27A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_R_Corrosive;                      // 0x27B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_R_Fire;                           // 0x27B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_L_Shock;                          // 0x27C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_L_Cryo;                           // 0x27C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_L_Corrosive;                      // 0x27D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_WeaponAmbient_L_Fire;                           // 0x27D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule_PowerFistR;                                // 0x27E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule_PowerFistL;                                // 0x27E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<EOakElementalType, class UMaterialInterface*> ElementToMaterial0Map;                             // 0x27F0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	TMap<EOakElementalType, class UMaterialInterface*> ElementToMaterial1Map;                             // 0x2840(0x0050)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	TMap<EOakElementalType, class UMaterialInterface*> ElementToMaterial2Map;                             // 0x2890(0x0050)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	TMap<EOakElementalType, class UParticleSystem*> ElementToChargeFXMap;                              // 0x28E0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, struct FVector>       ElementToFXGlowColorMap;                           // 0x2930(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UClass*>        ElementToBlastProjectileMap;                       // 0x2980(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToBlastProjecilteFireAudioMap;              // 0x29D0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToBlastProjecilteChargeAudioMap;            // 0x2A20(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UGestaltPartListData*> ElementToGestaltMap_PowergloveRight;               // 0x2A70(0x0050)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackDmgLightFXMap;                        // 0x2AC0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackDmgHeavyFXMap;                        // 0x2B10(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackDmgCriticalFXMap;                     // 0x2B60(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackDmgTransitionFXMap;                   // 0x2BB0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UClass*>        ElementToBackpackDamageMap;                        // 0x2C00(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class USplatData*>    ElementToBackpackSplatMap;                         // 0x2C50(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UClass*>        ElementToBlastBombProjectileMap;                   // 0x2CA0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackAmbientFXMap;                         // 0x2CF0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UGestaltPartListData*> ElementToGestaltMap_PowergloveLeft;                // 0x2D40(0x0050)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn)
	Enum_Heavy_WeaponSocket                       PowergloveArm;                                     // 0x2D90(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D91[0x7];                                     // 0x2D91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToWwiseAuraLoopStart;                       // 0x2D98(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToWwiseAuraLoopStop;                        // 0x2DE8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToLeftFistFXMap;                            // 0x2E38(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToRightFistFXMap;                           // 0x2E88(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UGbxUIName*>    ElementToUINameMap;                                // 0x2ED8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UGbxUIName*>    ElementToUINameMap_PT2;                            // 0x2F28(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          AssignNameOnSpawn;                                 // 0x2F78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPChar_Heavy_Badass(int32 EntryPoint);
	void HeavyBadass_BlastWaveShortBurst(class AActor* MyTarget, bool IsLeftHand);
	void HeavyBadass_UpdateLastMeleeArm(Enum_Heavy_WeaponSocket LastMeleeArm);
	void InitBadassElementalMode();
	void HeavyBadass_GetLeapLandFX(class UParticleSystem** LandFX);
	void HeavyBadass_GetPowergloveArm(Enum_Heavy_WeaponSocket* PowergloveArm_0);
	void HeavyBadass_GetLastMeleeArm(Enum_Heavy_WeaponSocket* LastMeleeArm);
	void ReceiveBeginPlay();
	void CleanupOnDeath();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Heavy_Badass_C">();
	}
	static class ABPChar_Heavy_Badass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Heavy_Badass_C>();
	}
};
static_assert(alignof(ABPChar_Heavy_Badass_C) == 0x000010, "Wrong alignment on ABPChar_Heavy_Badass_C");
static_assert(sizeof(ABPChar_Heavy_Badass_C) == 0x002F80, "Wrong size on ABPChar_Heavy_Badass_C");
static_assert(offsetof(ABPChar_Heavy_Badass_C, UberGraphFrame_BPChar_Heavy_Badass_C) == 0x002798, "Member 'ABPChar_Heavy_Badass_C::UberGraphFrame_BPChar_Heavy_Badass_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_R_Shock) == 0x0027A0, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_R_Shock' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_R_Cryo) == 0x0027A8, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_R_Cryo' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_R_Corrosive) == 0x0027B0, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_R_Corrosive' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_R_Fire) == 0x0027B8, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_R_Fire' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_L_Shock) == 0x0027C0, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_L_Shock' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_L_Cryo) == 0x0027C8, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_L_Cryo' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_L_Corrosive) == 0x0027D0, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_L_Corrosive' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PS_WeaponAmbient_L_Fire) == 0x0027D8, "Member 'ABPChar_Heavy_Badass_C::PS_WeaponAmbient_L_Fire' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, Capsule_PowerFistR) == 0x0027E0, "Member 'ABPChar_Heavy_Badass_C::Capsule_PowerFistR' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, Capsule_PowerFistL) == 0x0027E8, "Member 'ABPChar_Heavy_Badass_C::Capsule_PowerFistL' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToMaterial0Map) == 0x0027F0, "Member 'ABPChar_Heavy_Badass_C::ElementToMaterial0Map' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToMaterial1Map) == 0x002840, "Member 'ABPChar_Heavy_Badass_C::ElementToMaterial1Map' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToMaterial2Map) == 0x002890, "Member 'ABPChar_Heavy_Badass_C::ElementToMaterial2Map' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToChargeFXMap) == 0x0028E0, "Member 'ABPChar_Heavy_Badass_C::ElementToChargeFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToFXGlowColorMap) == 0x002930, "Member 'ABPChar_Heavy_Badass_C::ElementToFXGlowColorMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBlastProjectileMap) == 0x002980, "Member 'ABPChar_Heavy_Badass_C::ElementToBlastProjectileMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBlastProjecilteFireAudioMap) == 0x0029D0, "Member 'ABPChar_Heavy_Badass_C::ElementToBlastProjecilteFireAudioMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBlastProjecilteChargeAudioMap) == 0x002A20, "Member 'ABPChar_Heavy_Badass_C::ElementToBlastProjecilteChargeAudioMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToGestaltMap_PowergloveRight) == 0x002A70, "Member 'ABPChar_Heavy_Badass_C::ElementToGestaltMap_PowergloveRight' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackDmgLightFXMap) == 0x002AC0, "Member 'ABPChar_Heavy_Badass_C::ElementToBackDmgLightFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackDmgHeavyFXMap) == 0x002B10, "Member 'ABPChar_Heavy_Badass_C::ElementToBackDmgHeavyFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackDmgCriticalFXMap) == 0x002B60, "Member 'ABPChar_Heavy_Badass_C::ElementToBackDmgCriticalFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackDmgTransitionFXMap) == 0x002BB0, "Member 'ABPChar_Heavy_Badass_C::ElementToBackDmgTransitionFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackpackDamageMap) == 0x002C00, "Member 'ABPChar_Heavy_Badass_C::ElementToBackpackDamageMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackpackSplatMap) == 0x002C50, "Member 'ABPChar_Heavy_Badass_C::ElementToBackpackSplatMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBlastBombProjectileMap) == 0x002CA0, "Member 'ABPChar_Heavy_Badass_C::ElementToBlastBombProjectileMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToBackAmbientFXMap) == 0x002CF0, "Member 'ABPChar_Heavy_Badass_C::ElementToBackAmbientFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToGestaltMap_PowergloveLeft) == 0x002D40, "Member 'ABPChar_Heavy_Badass_C::ElementToGestaltMap_PowergloveLeft' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, PowergloveArm) == 0x002D90, "Member 'ABPChar_Heavy_Badass_C::PowergloveArm' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToWwiseAuraLoopStart) == 0x002D98, "Member 'ABPChar_Heavy_Badass_C::ElementToWwiseAuraLoopStart' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToWwiseAuraLoopStop) == 0x002DE8, "Member 'ABPChar_Heavy_Badass_C::ElementToWwiseAuraLoopStop' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToLeftFistFXMap) == 0x002E38, "Member 'ABPChar_Heavy_Badass_C::ElementToLeftFistFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToRightFistFXMap) == 0x002E88, "Member 'ABPChar_Heavy_Badass_C::ElementToRightFistFXMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToUINameMap) == 0x002ED8, "Member 'ABPChar_Heavy_Badass_C::ElementToUINameMap' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, ElementToUINameMap_PT2) == 0x002F28, "Member 'ABPChar_Heavy_Badass_C::ElementToUINameMap_PT2' has a wrong offset!");
static_assert(offsetof(ABPChar_Heavy_Badass_C, AssignNameOnSpawn) == 0x002F78, "Member 'ABPChar_Heavy_Badass_C::AssignNameOnSpawn' has a wrong offset!");

}

