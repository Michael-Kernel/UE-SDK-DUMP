#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZoneMapSection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ZoneMapSection.BP_ZoneMapSection_C
// 0x0048 (0x04A0 - 0x0458)
class ABP_ZoneMapSection_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   Section_Name;                                      // 0x0468(0x0018)(Edit, BlueprintVisible)
	class UZoneMapMeshData*                       NewVar_0;                                          // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Min;                                               // 0x0488(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_1;                                          // 0x0494(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ZoneMapSection(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ZoneMapSection_C">();
	}
	static class ABP_ZoneMapSection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ZoneMapSection_C>();
	}
};
static_assert(alignof(ABP_ZoneMapSection_C) == 0x000008, "Wrong alignment on ABP_ZoneMapSection_C");
static_assert(sizeof(ABP_ZoneMapSection_C) == 0x0004A0, "Wrong size on ABP_ZoneMapSection_C");
static_assert(offsetof(ABP_ZoneMapSection_C, UberGraphFrame) == 0x000458, "Member 'ABP_ZoneMapSection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapSection_C, Cube) == 0x000460, "Member 'ABP_ZoneMapSection_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapSection_C, Section_Name) == 0x000468, "Member 'ABP_ZoneMapSection_C::Section_Name' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapSection_C, NewVar_0) == 0x000480, "Member 'ABP_ZoneMapSection_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapSection_C, Min) == 0x000488, "Member 'ABP_ZoneMapSection_C::Min' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapSection_C, NewVar_1) == 0x000494, "Member 'ABP_ZoneMapSection_C::NewVar_1' has a wrong offset!");

}

