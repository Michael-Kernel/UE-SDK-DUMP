#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_JackHolo_Master

#include "Basic.hpp"


namespace SDK::Params
{

// Function Challenge_JackHolo_Master.Challenge_JackHolo_Master_C.CompletedChallenge
// 0x0008 (0x0008 - 0x0000)
struct Challenge_JackHolo_Master_C_CompletedChallenge final
{
public:
	const class AGbxPlayerController*             CompletedPlayer;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_JackHolo_Master_C_CompletedChallenge) == 0x000008, "Wrong alignment on Challenge_JackHolo_Master_C_CompletedChallenge");
static_assert(sizeof(Challenge_JackHolo_Master_C_CompletedChallenge) == 0x000008, "Wrong size on Challenge_JackHolo_Master_C_CompletedChallenge");
static_assert(offsetof(Challenge_JackHolo_Master_C_CompletedChallenge, CompletedPlayer) == 0x000000, "Member 'Challenge_JackHolo_Master_C_CompletedChallenge::CompletedPlayer' has a wrong offset!");

// Function Challenge_JackHolo_Master.Challenge_JackHolo_Master_C.ExecuteUbergraph_Challenge_JackHolo_Master
// 0x0010 (0x0010 - 0x0000)
struct Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AGbxPlayerController*             K2Node_Event_CompletedPlayer;                      // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master) == 0x000008, "Wrong alignment on Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master");
static_assert(sizeof(Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master) == 0x000010, "Wrong size on Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master");
static_assert(offsetof(Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master, EntryPoint) == 0x000000, "Member 'Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master, K2Node_Event_CompletedPlayer) == 0x000008, "Member 'Challenge_JackHolo_Master_C_ExecuteUbergraph_Challenge_JackHolo_Master::K2Node_Event_CompletedPlayer' has a wrong offset!");

}

