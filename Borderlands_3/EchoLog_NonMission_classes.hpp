#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EchoLog_NonMission

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "EchoLog_MissionCondition_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EchoLog_NonMission.EchoLog_NonMission_C
// 0x0058 (0x05A8 - 0x0550)
class AEchoLog_NonMission_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UTextRenderComponent*                   TextRender;                                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USocketComponent*                       LootSocket;                                        // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URegionBalanceStateComponent*           RegionBalanceState;                                // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PreviewMesh;                                       // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDA_IO_EchoLog_NonMission_C*            DataAsset;                                         // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADroppedInventoryItemPickup*>    EchoLogs;                                          // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	EchoLog_MissionCondition                      SpawnCondition;                                    // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_SpawnCondition_NewEnumerator1;                // 0x05A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void PickedUp(class AActor* WasPickedUpBy);
	void __UserState_SpawnCondition_1(bool bFromLoad);
	void ExecuteUbergraph_EchoLog_NonMission(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EchoLog_NonMission_C">();
	}
	static class AEchoLog_NonMission_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEchoLog_NonMission_C>();
	}
};
static_assert(alignof(AEchoLog_NonMission_C) == 0x000008, "Wrong alignment on AEchoLog_NonMission_C");
static_assert(sizeof(AEchoLog_NonMission_C) == 0x0005A8, "Wrong size on AEchoLog_NonMission_C");
static_assert(offsetof(AEchoLog_NonMission_C, UberGraphFrame) == 0x000550, "Member 'AEchoLog_NonMission_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, TextRender) == 0x000558, "Member 'AEchoLog_NonMission_C::TextRender' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, LootSocket) == 0x000560, "Member 'AEchoLog_NonMission_C::LootSocket' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, RegionBalanceState) == 0x000568, "Member 'AEchoLog_NonMission_C::RegionBalanceState' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, PreviewMesh) == 0x000570, "Member 'AEchoLog_NonMission_C::PreviewMesh' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, DefaultSceneRoot) == 0x000578, "Member 'AEchoLog_NonMission_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, DataAsset) == 0x000580, "Member 'AEchoLog_NonMission_C::DataAsset' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, EchoLogs) == 0x000588, "Member 'AEchoLog_NonMission_C::EchoLogs' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, SpawnCondition) == 0x000598, "Member 'AEchoLog_NonMission_C::SpawnCondition' has a wrong offset!");
static_assert(offsetof(AEchoLog_NonMission_C, Cond_SpawnCondition_NewEnumerator1) == 0x0005A0, "Member 'AEchoLog_NonMission_C::Cond_SpawnCondition_NewEnumerator1' has a wrong offset!");

}

