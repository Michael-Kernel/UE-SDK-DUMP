#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DA_IO_ExplodingPipe_Alternate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DA_IO_ExplodingPipe_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DA_IO_ExplodingPipe_Alternate.DA_IO_ExplodingPipe_Alternate_C
// 0x0050 (0x0148 - 0x00F8)
class UDA_IO_ExplodingPipe_Alternate_C final : public UDA_IO_ExplodingPipe_C
{
public:
	struct FLinearColor                           Color_Primary2_LinearColorValue;                   // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Decal_BaseColor_Base_LinearColorValue;             // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Primary1_LinearColorValue;                   // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Decal_BaseColor_Highlight_LinearColorValue;        // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EmmisiveColor_Mult_LinearColorValue;               // 0x0138(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DA_IO_ExplodingPipe_Alternate_C">();
	}
	static class UDA_IO_ExplodingPipe_Alternate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDA_IO_ExplodingPipe_Alternate_C>();
	}
};
static_assert(alignof(UDA_IO_ExplodingPipe_Alternate_C) == 0x000008, "Wrong alignment on UDA_IO_ExplodingPipe_Alternate_C");
static_assert(sizeof(UDA_IO_ExplodingPipe_Alternate_C) == 0x000148, "Wrong size on UDA_IO_ExplodingPipe_Alternate_C");
static_assert(offsetof(UDA_IO_ExplodingPipe_Alternate_C, Color_Primary2_LinearColorValue) == 0x0000F8, "Member 'UDA_IO_ExplodingPipe_Alternate_C::Color_Primary2_LinearColorValue' has a wrong offset!");
static_assert(offsetof(UDA_IO_ExplodingPipe_Alternate_C, Decal_BaseColor_Base_LinearColorValue) == 0x000108, "Member 'UDA_IO_ExplodingPipe_Alternate_C::Decal_BaseColor_Base_LinearColorValue' has a wrong offset!");
static_assert(offsetof(UDA_IO_ExplodingPipe_Alternate_C, Color_Primary1_LinearColorValue) == 0x000118, "Member 'UDA_IO_ExplodingPipe_Alternate_C::Color_Primary1_LinearColorValue' has a wrong offset!");
static_assert(offsetof(UDA_IO_ExplodingPipe_Alternate_C, Decal_BaseColor_Highlight_LinearColorValue) == 0x000128, "Member 'UDA_IO_ExplodingPipe_Alternate_C::Decal_BaseColor_Highlight_LinearColorValue' has a wrong offset!");
static_assert(offsetof(UDA_IO_ExplodingPipe_Alternate_C, EmmisiveColor_Mult_LinearColorValue) == 0x000138, "Member 'UDA_IO_ExplodingPipe_Alternate_C::EmmisiveColor_Mult_LinearColorValue' has a wrong offset!");

}

