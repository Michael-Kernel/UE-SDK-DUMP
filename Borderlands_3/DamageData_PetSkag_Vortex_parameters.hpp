#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageData_PetSkag_Vortex

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function DamageData_PetSkag_Vortex.DamageData_PetSkag_Vortex_C.OnHitEnemy
// 0x0150 (0x0150 - 0x0000)
struct DamageData_PetSkag_Vortex_C_OnHitEnemy final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageTarget;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageDataEventDetails                Details;                                           // 0x0018(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	struct FSingularityInitializationInfo         K2Node_MakeStruct_SingularityInitializationInfo;   // 0x0078(0x00C0)()
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USingularityComponent*                  CallFunc_CreateSingularity_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageData_PetSkag_Vortex_C_OnHitEnemy) == 0x000008, "Wrong alignment on DamageData_PetSkag_Vortex_C_OnHitEnemy");
static_assert(sizeof(DamageData_PetSkag_Vortex_C_OnHitEnemy) == 0x000150, "Wrong size on DamageData_PetSkag_Vortex_C_OnHitEnemy");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, DamageInstigator) == 0x000000, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::DamageInstigator' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, DamageCauser) == 0x000008, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::DamageCauser' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, DamageTarget) == 0x000010, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::DamageTarget' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, Details) == 0x000018, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::Details' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, Temp_bool_Has_Been_Initd_Variable) == 0x000060, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, K2Node_MakeArray_Array) == 0x000068, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, K2Node_MakeStruct_SingularityInitializationInfo) == 0x000078, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::K2Node_MakeStruct_SingularityInitializationInfo' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, Temp_bool_IsClosed_Variable) == 0x000138, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, CallFunc_GetDataTableValue_OutValue) == 0x00013C, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, CallFunc_GetDataTableValue_ReturnValue) == 0x000140, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageData_PetSkag_Vortex_C_OnHitEnemy, CallFunc_CreateSingularity_ReturnValue) == 0x000148, "Member 'DamageData_PetSkag_Vortex_C_OnHitEnemy::CallFunc_CreateSingularity_ReturnValue' has a wrong offset!");

}

