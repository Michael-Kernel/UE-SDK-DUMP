#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_OakVehicle

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Bp_OakVehicle.BP_OakVehicle_C
// 0x0040 (0x13D8 - 0x1398)
class ABP_OakVehicle_C final : public AOakVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1398(0x0008)(Transient, DuplicateTransient)
	class UUseComponent*                          Use;                                               // 0x13A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   ScanSuccess;                                       // 0x13A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   ScanStarted;                                       // 0x13B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   ScanCancelled;                                     // 0x13C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ScanSuccess__DelegateSignature();
	void ScanStarted__DelegateSignature();
	void ScanCancelled__DelegateSignature();
	void ExecuteUbergraph_BP_OakVehicle(int32 EntryPoint);
	void OnScanningCancelled();
	void OnScanningStarted();
	void OnScanningSuccess();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OakVehicle_C">();
	}
	static class ABP_OakVehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OakVehicle_C>();
	}
};
static_assert(alignof(ABP_OakVehicle_C) == 0x000008, "Wrong alignment on ABP_OakVehicle_C");
static_assert(sizeof(ABP_OakVehicle_C) == 0x0013D8, "Wrong size on ABP_OakVehicle_C");
static_assert(offsetof(ABP_OakVehicle_C, UberGraphFrame) == 0x001398, "Member 'ABP_OakVehicle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OakVehicle_C, Use) == 0x0013A0, "Member 'ABP_OakVehicle_C::Use' has a wrong offset!");
static_assert(offsetof(ABP_OakVehicle_C, ScanSuccess) == 0x0013A8, "Member 'ABP_OakVehicle_C::ScanSuccess' has a wrong offset!");
static_assert(offsetof(ABP_OakVehicle_C, ScanStarted) == 0x0013B8, "Member 'ABP_OakVehicle_C::ScanStarted' has a wrong offset!");
static_assert(offsetof(ABP_OakVehicle_C, ScanCancelled) == 0x0013C8, "Member 'ABP_OakVehicle_C::ScanCancelled' has a wrong offset!");

}

