#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GM_Payload_Stormfront

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GM_Payload_Stormfront.BP_GM_Payload_Stormfront_C.K2_GrenadeInitialized
// 0x0078 (0x0078 - 0x0000)
struct BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrenadeChildGenerationData            CallFunc_GetChildOffset_ReturnValue;               // 0x0048(0x0028)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized) == 0x000008, "Wrong alignment on BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized");
static_assert(sizeof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized) == 0x000078, "Wrong size on BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, Grenade) == 0x000000, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, InstanceData) == 0x000010, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000040, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, CallFunc_GetChildOffset_ReturnValue) == 0x000048, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::CallFunc_GetChildOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeInitialized::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_Stormfront.BP_GM_Payload_Stormfront_C.K2_GrenadeExplode
// 0x0110 (0x0110 - 0x0000)
struct BP_GM_Payload_Stormfront_C_K2_GrenadeExplode final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FGrenadeChildGenerationData            CallFunc_GetChildOffset_ReturnValue;               // 0x0040(0x0028)(NoDestructor)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0xB];                                       // 0x00C5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AGrenade*                               CallFunc_SpawnChildGrenade_ReturnValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode) == 0x000010, "Wrong alignment on BP_GM_Payload_Stormfront_C_K2_GrenadeExplode");
static_assert(sizeof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode) == 0x000110, "Wrong size on BP_GM_Payload_Stormfront_C_K2_GrenadeExplode");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, Grenade) == 0x000000, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, InstanceData) == 0x000010, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_GetChildOffset_ReturnValue) == 0x000040, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_GetChildOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_GrenadeExplode, CallFunc_SpawnChildGrenade_ReturnValue) == 0x000100, "Member 'BP_GM_Payload_Stormfront_C_K2_GrenadeExplode::CallFunc_SpawnChildGrenade_ReturnValue' has a wrong offset!");

// Function BP_GM_Payload_Stormfront.BP_GM_Payload_Stormfront_C.K2_UpdateChildGeneration
// 0x007C (0x007C - 0x0000)
struct BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration final
{
public:
	struct FGrenadeChildGenerationData            InGenerationData;                                  // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FGrenadeChildGenerationData            GenerationData;                                    // 0x0028(0x0028)(Parm, OutParm, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGrenadeChildGenerationData            K2Node_MakeStruct_GrenadeChildGenerationData;      // 0x0054(0x0028)(NoDestructor)
};
static_assert(alignof(BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration) == 0x000004, "Wrong alignment on BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration");
static_assert(sizeof(BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration) == 0x00007C, "Wrong size on BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration, InGenerationData) == 0x000000, "Member 'BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration::InGenerationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration, GenerationData) == 0x000028, "Member 'BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration::GenerationData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration, K2Node_MakeStruct_GrenadeChildGenerationData) == 0x000054, "Member 'BP_GM_Payload_Stormfront_C_K2_UpdateChildGeneration::K2Node_MakeStruct_GrenadeChildGenerationData' has a wrong offset!");

}

