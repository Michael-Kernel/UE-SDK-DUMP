#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_PetJabbermon_Barrel

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Projectile_PetJabbermon_Barrel.Projectile_PetJabbermon_Barrel_C.ExecuteUbergraph_Projectile_PetJabbermon_Barrel
// 0x01E8 (0x01E8 - 0x0000)
struct Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0008(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0098(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0128(0x0010)(NoDestructor)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0138(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetValueFromAttributeDefinedRow_ReturnValue; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCauseDamageStatusEffectOverrides      K2Node_MakeStruct_CauseDamageStatusEffectOverrides; // 0x01CC(0x001C)(NoDestructor)
};
static_assert(alignof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel) == 0x000008, "Wrong alignment on Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel");
static_assert(sizeof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel) == 0x0001E8, "Wrong size on Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, EntryPoint) == 0x000000, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::EntryPoint' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, K2Node_Event_Hit1) == 0x000008, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, K2Node_Event_Hit) == 0x000098, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, K2Node_MakeStruct_DataTableRowHandle) == 0x000128, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, Temp_struct_Variable) == 0x000138, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, CallFunc_GetValueFromAttributeDefinedRow_ReturnValue) == 0x0001C8, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::CallFunc_GetValueFromAttributeDefinedRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel, K2Node_MakeStruct_CauseDamageStatusEffectOverrides) == 0x0001CC, "Member 'Projectile_PetJabbermon_Barrel_C_ExecuteUbergraph_Projectile_PetJabbermon_Barrel::K2Node_MakeStruct_CauseDamageStatusEffectOverrides' has a wrong offset!");

// Function Projectile_PetJabbermon_Barrel.Projectile_PetJabbermon_Barrel_C.OnHitDamagableObject
// 0x0090 (0x0090 - 0x0000)
struct Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject) == 0x000008, "Wrong alignment on Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject");
static_assert(sizeof(Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject) == 0x000090, "Wrong size on Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject, Hit) == 0x000000, "Member 'Projectile_PetJabbermon_Barrel_C_OnHitDamagableObject::Hit' has a wrong offset!");

// Function Projectile_PetJabbermon_Barrel.Projectile_PetJabbermon_Barrel_C.OnHitWorld
// 0x0090 (0x0090 - 0x0000)
struct Projectile_PetJabbermon_Barrel_C_OnHitWorld final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Projectile_PetJabbermon_Barrel_C_OnHitWorld) == 0x000008, "Wrong alignment on Projectile_PetJabbermon_Barrel_C_OnHitWorld");
static_assert(sizeof(Projectile_PetJabbermon_Barrel_C_OnHitWorld) == 0x000090, "Wrong size on Projectile_PetJabbermon_Barrel_C_OnHitWorld");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_OnHitWorld, Hit) == 0x000000, "Member 'Projectile_PetJabbermon_Barrel_C_OnHitWorld::Hit' has a wrong offset!");

// Function Projectile_PetJabbermon_Barrel.Projectile_PetJabbermon_Barrel_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct Projectile_PetJabbermon_Barrel_C_UserConstructionScript final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Projectile_PetJabbermon_Barrel_C_UserConstructionScript) == 0x000008, "Wrong alignment on Projectile_PetJabbermon_Barrel_C_UserConstructionScript");
static_assert(sizeof(Projectile_PetJabbermon_Barrel_C_UserConstructionScript) == 0x000008, "Wrong size on Projectile_PetJabbermon_Barrel_C_UserConstructionScript");
static_assert(offsetof(Projectile_PetJabbermon_Barrel_C_UserConstructionScript, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'Projectile_PetJabbermon_Barrel_C_UserConstructionScript::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

}

