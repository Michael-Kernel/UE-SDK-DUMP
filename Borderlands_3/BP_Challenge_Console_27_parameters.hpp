#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Challenge_Console_27

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Challenge_Console_27.BP_Challenge_Console_27_C.ExecuteUbergraph_BP_Challenge_Console_27
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengesComponent*                   K2Node_Event_OwningChallenges;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          K2Node_Event_AssociatedCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageComponent*                 K2Node_CustomEvent_Damaged;                        // 0x0018(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    K2Node_CustomEvent_Details;                        // 0x0020(0x0068)(ConstParm)
	class UDamageCauserComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetActiveWeapon_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakWeapon*                             K2Node_DynamicCast_AsOak_Weapon;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27) == 0x000008, "Wrong alignment on BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27");
static_assert(sizeof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27) == 0x0000D0, "Wrong size on BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, EntryPoint) == 0x000000, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_Event_OwningChallenges) == 0x000008, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_Event_OwningChallenges' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_Event_AssociatedCharacter) == 0x000010, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_Event_AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_CustomEvent_Damaged) == 0x000018, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_CustomEvent_Damaged' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_CustomEvent_Details) == 0x000020, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, CallFunc_GetComponentByClass_ReturnValue) == 0x000088, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_DynamicCast_AsOak_Character_Player) == 0x0000A0, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, CallFunc_GetActiveWeapon_ReturnValue) == 0x0000B0, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::CallFunc_GetActiveWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, CallFunc_GetObjectClass_ReturnValue) == 0x0000B8, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_DynamicCast_AsOak_Weapon) == 0x0000C0, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_DynamicCast_AsOak_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, K2Node_DynamicCast_bSuccess1) == 0x0000C8, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000C9, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'BP_Challenge_Console_27_C_ExecuteUbergraph_BP_Challenge_Console_27::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Challenge_Console_27.BP_Challenge_Console_27_C.CheckBladedMelee
// 0x0070 (0x0070 - 0x0000)
struct BP_Challenge_Console_27_C_CheckBladedMelee final
{
public:
	const class UDamageComponent*                 Damaged;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    Details;                                           // 0x0008(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Challenge_Console_27_C_CheckBladedMelee) == 0x000008, "Wrong alignment on BP_Challenge_Console_27_C_CheckBladedMelee");
static_assert(sizeof(BP_Challenge_Console_27_C_CheckBladedMelee) == 0x000070, "Wrong size on BP_Challenge_Console_27_C_CheckBladedMelee");
static_assert(offsetof(BP_Challenge_Console_27_C_CheckBladedMelee, Damaged) == 0x000000, "Member 'BP_Challenge_Console_27_C_CheckBladedMelee::Damaged' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_CheckBladedMelee, Details) == 0x000008, "Member 'BP_Challenge_Console_27_C_CheckBladedMelee::Details' has a wrong offset!");

// Function BP_Challenge_Console_27.BP_Challenge_Console_27_C.OnInitChallengeInstance
// 0x0010 (0x0010 - 0x0000)
struct BP_Challenge_Console_27_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Challenge_Console_27_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on BP_Challenge_Console_27_C_OnInitChallengeInstance");
static_assert(sizeof(BP_Challenge_Console_27_C_OnInitChallengeInstance) == 0x000010, "Wrong size on BP_Challenge_Console_27_C_OnInitChallengeInstance");
static_assert(offsetof(BP_Challenge_Console_27_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'BP_Challenge_Console_27_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(BP_Challenge_Console_27_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'BP_Challenge_Console_27_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");

}

