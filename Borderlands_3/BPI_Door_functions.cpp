#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Door

#include "Basic.hpp"

#include "BPI_Door_classes.hpp"
#include "BPI_Door_parameters.hpp"


namespace SDK
{

// Function BPI_Door.BPI_Door_C.SetDoorState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_Door_State                         DoorState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Door_C::SetDoorState(Enum_Door_State DoorState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "SetDoorState");

	Params::BPI_Door_C_SetDoorState Parms{};

	Parms.DoorState = DoorState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Door.BPI_Door_C.SetDoorLockedState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Locked_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Door_C::SetDoorLockedState(bool Locked_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "SetDoorLockedState");

	Params::BPI_Door_C_SetDoorLockedState Parms{};

	Parms.Locked_ = Locked_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Door.BPI_Door_C.SetDoorInteractiveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactive_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Door_C::SetDoorInteractiveState(bool Interactive_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "SetDoorInteractiveState");

	Params::BPI_Door_C_SetDoorInteractiveState Parms{};

	Parms.Interactive_ = Interactive_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Door.BPI_Door_C.GetDoorState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_Door_State                         DoorState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Door_C::GetDoorState(Enum_Door_State* DoorState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "GetDoorState");

	Params::BPI_Door_C_GetDoorState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DoorState != nullptr)
		*DoorState = Parms.DoorState;
}


// Function BPI_Door.BPI_Door_C.GetDoorLockedState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Locked                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Door_C::GetDoorLockedState(bool* Locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "GetDoorLockedState");

	Params::BPI_Door_C_GetDoorLockedState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Locked != nullptr)
		*Locked = Parms.Locked;
}


// Function BPI_Door.BPI_Door_C.GetDoorInteractiveState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactive                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_Door_C::GetDoorInteractiveState(bool* Interactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "GetDoorInteractiveState");

	Params::BPI_Door_C_GetDoorInteractiveState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactive != nullptr)
		*Interactive = Parms.Interactive;
}


// Function BPI_Door.BPI_Door_C.SetDoorFeedbackState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_States_DoorLocked                  FeedbackState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Door_C::SetDoorFeedbackState(Enum_States_DoorLocked FeedbackState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "SetDoorFeedbackState");

	Params::BPI_Door_C_SetDoorFeedbackState Parms{};

	Parms.FeedbackState = FeedbackState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Door.BPI_Door_C.GetDoorFeedbackState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_States_DoorLocked                  FeedbackState                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Door_C::GetDoorFeedbackState(Enum_States_DoorLocked* FeedbackState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Door_C", "GetDoorFeedbackState");

	Params::BPI_Door_C_GetDoorFeedbackState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FeedbackState != nullptr)
		*FeedbackState = Parms.FeedbackState;
}

}

