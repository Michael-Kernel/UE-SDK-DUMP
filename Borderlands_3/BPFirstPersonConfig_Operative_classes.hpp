#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFirstPersonConfig_Operative

#include "Basic.hpp"

#include "BPFirstPersonConfig_Player_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFirstPersonConfig_Operative.BPFirstPersonConfig_Operative_C
// 0x0020 (0x0498 - 0x0478)
class ABPFirstPersonConfig_Operative_C final : public ABPFirstPersonConfig_Player_C
{
public:
	class UParticleSystemComponent*               PS_Barrier;                                        // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Barrier1st;                                        // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              ActionSkillDevice1st;                              // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              DroneSpawn;                                        // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFirstPersonConfig_Operative_C">();
	}
	static class ABPFirstPersonConfig_Operative_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPFirstPersonConfig_Operative_C>();
	}
};
static_assert(alignof(ABPFirstPersonConfig_Operative_C) == 0x000008, "Wrong alignment on ABPFirstPersonConfig_Operative_C");
static_assert(sizeof(ABPFirstPersonConfig_Operative_C) == 0x000498, "Wrong size on ABPFirstPersonConfig_Operative_C");
static_assert(offsetof(ABPFirstPersonConfig_Operative_C, PS_Barrier) == 0x000478, "Member 'ABPFirstPersonConfig_Operative_C::PS_Barrier' has a wrong offset!");
static_assert(offsetof(ABPFirstPersonConfig_Operative_C, Barrier1st) == 0x000480, "Member 'ABPFirstPersonConfig_Operative_C::Barrier1st' has a wrong offset!");
static_assert(offsetof(ABPFirstPersonConfig_Operative_C, ActionSkillDevice1st) == 0x000488, "Member 'ABPFirstPersonConfig_Operative_C::ActionSkillDevice1st' has a wrong offset!");
static_assert(offsetof(ABPFirstPersonConfig_Operative_C, DroneSpawn) == 0x000490, "Member 'ABPFirstPersonConfig_Operative_C::DroneSpawn' has a wrong offset!");

}

