#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_APLF_ScalableComponentMatchingFilter

#include "Basic.hpp"

#include "BP_APLF_ScalableComponentMatchingFilter_classes.hpp"
#include "BP_APLF_ScalableComponentMatchingFilter_parameters.hpp"


namespace SDK
{

// Function BP_APLF_ScalableComponentMatchingFilter.BP_APLF_ScalableComponentMatchingFilter_C.ShouldIgnoreComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnore                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_APLF_ScalableComponentMatchingFilter_C::ShouldIgnoreComponent(class UPrimitiveComponent* Component, bool* bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_APLF_ScalableComponentMatchingFilter_C", "ShouldIgnoreComponent");

	Params::BP_APLF_ScalableComponentMatchingFilter_C_ShouldIgnoreComponent Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnore != nullptr)
		*bIgnore = Parms.bIgnore;
}


// Function BP_APLF_ScalableComponentMatchingFilter.BP_APLF_ScalableComponentMatchingFilter_C.SetActorRlativeOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_APLF_ScalableComponentMatchingFilter_C::SetActorRlativeOffset(class AActor* Self2, struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_APLF_ScalableComponentMatchingFilter_C", "SetActorRlativeOffset");

	Params::BP_APLF_ScalableComponentMatchingFilter_C_SetActorRlativeOffset Parms{};

	Parms.Self2 = Self2;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_APLF_ScalableComponentMatchingFilter.BP_APLF_ScalableComponentMatchingFilter_C.AddFoundLocations
// (Event, Public, BlueprintEvent)

void UBP_APLF_ScalableComponentMatchingFilter_C::AddFoundLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_APLF_ScalableComponentMatchingFilter_C", "AddFoundLocations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_APLF_ScalableComponentMatchingFilter.BP_APLF_ScalableComponentMatchingFilter_C.ExecuteUbergraph_BP_APLF_ScalableComponentMatchingFilter
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_APLF_ScalableComponentMatchingFilter_C::ExecuteUbergraph_BP_APLF_ScalableComponentMatchingFilter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_APLF_ScalableComponentMatchingFilter_C", "ExecuteUbergraph_BP_APLF_ScalableComponentMatchingFilter");

	Params::BP_APLF_ScalableComponentMatchingFilter_C_ExecuteUbergraph_BP_APLF_ScalableComponentMatchingFilter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

