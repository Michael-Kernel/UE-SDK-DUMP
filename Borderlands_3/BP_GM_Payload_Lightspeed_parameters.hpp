#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GM_Payload_Lightspeed

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GM_Payload_Lightspeed.BP_GM_Payload_Lightspeed_C.K2_GrenadeImpact
// 0x03C0 (0x03C0 - 0x0000)
struct BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0010(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x00A0(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0150(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01CC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0230(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0240(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0258(0x0020)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0280(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact) == 0x000010, "Wrong alignment on BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact");
static_assert(sizeof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact) == 0x0003C0, "Wrong size on BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, Grenade) == 0x000000, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, HitResult) == 0x000010, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::HitResult' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, InstanceData) == 0x0000A0, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D0, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D1, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000150, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_GetVelocity_ReturnValue) == 0x00015C, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, Temp_int_Array_Index_Variable) == 0x000168, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_GetReflectionVector_ReturnValue) == 0x00016C, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000178, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakTransform_Rotation) == 0x0001CC, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_BreakTransform_Scale) == 0x0001D8, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001E4, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001F0, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_MakeTransform_ReturnValue) == 0x000200, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000230, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Array_Add_ReturnValue) == 0x00023C, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Add_VectorVector_ReturnValue) == 0x000240, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Array_Length_ReturnValue) == 0x00024C, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, Temp_int_Loop_Counter_Variable) == 0x000250, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Less_IntInt_ReturnValue) == 0x000254, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000258, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000280, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeImpact::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function BP_GM_Payload_Lightspeed.BP_GM_Payload_Lightspeed_C.K2_GrenadeBeginPlay
// 0x0050 (0x0050 - 0x0000)
struct BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay final
{
public:
	class AGrenade*                               Grenade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            GrenadeMod;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPayloadInstanceData                   InstanceData;                                      // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay) == 0x000008, "Wrong alignment on BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay");
static_assert(sizeof(BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay) == 0x000050, "Wrong size on BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay, Grenade) == 0x000000, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay::Grenade' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay, GrenadeMod) == 0x000008, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay::GrenadeMod' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay, InstanceData) == 0x000010, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay::InstanceData' has a wrong offset!");
static_assert(offsetof(BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay, CallFunc_GetVelocity_ReturnValue) == 0x000040, "Member 'BP_GM_Payload_Lightspeed_C_K2_GrenadeBeginPlay::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");

}

