#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkill_Operative_GoodMisfortune

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function PassiveSkill_Operative_GoodMisfortune.PassiveSkill_Operative_GoodMisfortune_C.ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune
// 0x0130 (0x0130 - 0x0000)
struct PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger1_CmpSuccess;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UOakActionAbility* ActionAbility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable1;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable2;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility*                      K2Node_CustomEvent_ActionAbility;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameResourcePoolManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue1;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_KillLocation;                         // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_KilledEnemy;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameResourceData*                      Temp_object_Variable;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameResourceData*                      Temp_object_Variable1;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameResourceData*                      Temp_object_Variable2;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameResourceData*                      K2Node_Select2_Default;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             CallFunc_GetResourcePoolByResource_ReturnValue;    // 0x00C0(0x0018)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakResourcePoolReference_bValid;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakResourcePoolReference_CurrentValue;  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MinValue;      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakResourcePoolReference_MaxValue;      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDurationReturn_Res;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility*                      CallFunc_FindActionAbility_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0100(0x0028)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune) == 0x000008, "Wrong alignment on PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune");
static_assert(sizeof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune) == 0x000130, "Wrong size on PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, EntryPoint) == 0x000000, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::EntryPoint' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable) == 0x000004, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable1) == 0x00000C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_class_Variable) == 0x000010, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable2) == 0x000018, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable3) == 0x00001C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_SwitchInteger1_CmpSuccess) == 0x000021, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_SwitchInteger1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000022, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_bool_Has_Been_Initd_Variable) == 0x000040, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_class_Variable1) == 0x000048, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_class_Variable2) == 0x000050, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_CustomEvent_ActionAbility) == 0x000058, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_CustomEvent_ActionAbility' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_GetObjectClass_ReturnValue) == 0x000060, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000070, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_EqualEqual_ClassClass_ReturnValue1) == 0x000071, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_EqualEqual_ClassClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_Event_KillLocation) == 0x000074, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_Event_KillLocation' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_Event_KilledEnemy) == 0x000080, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_Event_KilledEnemy' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable4) == 0x000088, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable5) == 0x00008C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_Select_Default) == 0x000090, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_object_Variable) == 0x000098, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_Select1_Default) == 0x0000A0, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_int_Variable6) == 0x0000A4, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_object_Variable1) == 0x0000A8, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, Temp_object_Variable2) == 0x0000B0, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_Select2_Default) == 0x0000B8, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_GetResourcePoolByResource_ReturnValue) == 0x0000C0, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_GetResourcePoolByResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_BreakResourcePoolReference_bValid) == 0x0000D8, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_BreakResourcePoolReference_bValid' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_BreakResourcePoolReference_CurrentValue) == 0x0000DC, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_BreakResourcePoolReference_CurrentValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_BreakResourcePoolReference_MinValue) == 0x0000E0, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_BreakResourcePoolReference_MinValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_BreakResourcePoolReference_MaxValue) == 0x0000E4, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_BreakResourcePoolReference_MaxValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_GetDurationReturn_Res) == 0x0000E8, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_GetDurationReturn_Res' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_FindActionAbility_ReturnValue) == 0x0000F0, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_FindActionAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_IsActive_ReturnValue) == 0x0000F8, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000100, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_Add_IntInt_ReturnValue2) == 0x000128, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune, CallFunc_Add_IntInt_ReturnValue3) == 0x00012C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_ExecuteUbergraph_PassiveSkill_Operative_GoodMisfortune::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");

// Function PassiveSkill_Operative_GoodMisfortune.PassiveSkill_Operative_GoodMisfortune_C.GoodMisfortuneSNTRYActivated
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated final
{
public:
	class UOakActionAbility*                      ActionAbility;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated) == 0x000008, "Wrong alignment on PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated");
static_assert(sizeof(PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated) == 0x000008, "Wrong size on PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated, ActionAbility) == 0x000000, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GoodMisfortuneSNTRYActivated::ActionAbility' has a wrong offset!");

// Function PassiveSkill_Operative_GoodMisfortune.PassiveSkill_Operative_GoodMisfortune_C.GetDurationReturn
// 0x0060 (0x0060 - 0x0000)
struct PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDuration;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Res;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseReturn;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  DurationReturn;                                    // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  DecayRate;                                         // 0x0028(0x0018)(Edit, BlueprintVisible, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateAttributeInitializer_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn) == 0x000008, "Wrong alignment on PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn");
static_assert(sizeof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn) == 0x000060, "Wrong size on PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, Count) == 0x000000, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::Count' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, MaxDuration) == 0x000004, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::MaxDuration' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, Res) == 0x000008, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::Res' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, BaseReturn) == 0x00000C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::BaseReturn' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, DurationReturn) == 0x000010, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::DurationReturn' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, DecayRate) == 0x000028, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::DecayRate' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_EvaluateAttributeInitializer_ReturnValue) == 0x000044, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_EvaluateAttributeInitializer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00004C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000050, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000054, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn, CallFunc_FClamp_ReturnValue) == 0x00005C, "Member 'PassiveSkill_Operative_GoodMisfortune_C_GetDurationReturn::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function PassiveSkill_Operative_GoodMisfortune.PassiveSkill_Operative_GoodMisfortune_C.OperativeTriggerKillSkillEffect
// 0x0018 (0x0018 - 0x0000)
struct PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect final
{
public:
	struct FVector                                KillLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 KilledEnemy;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect) == 0x000008, "Wrong alignment on PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect");
static_assert(sizeof(PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect) == 0x000018, "Wrong size on PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect, KillLocation) == 0x000000, "Member 'PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect::KillLocation' has a wrong offset!");
static_assert(offsetof(PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect, KilledEnemy) == 0x000010, "Member 'PassiveSkill_Operative_GoodMisfortune_C_OperativeTriggerKillSkillEffect::KilledEnemy' has a wrong offset!");

}

