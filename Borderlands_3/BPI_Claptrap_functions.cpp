#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Claptrap

#include "Basic.hpp"

#include "BPI_Claptrap_classes.hpp"


namespace SDK
{

// Function BPI_Claptrap.BPI_Claptrap_C.EnableClaptrapAntenna
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Claptrap_C::EnableClaptrapAntenna()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Claptrap_C", "EnableClaptrapAntenna");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Claptrap.BPI_Claptrap_C.DisableClaptrapAntenna
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Claptrap_C::DisableClaptrapAntenna()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Claptrap_C", "DisableClaptrapAntenna");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Claptrap.BPI_Claptrap_C.ForceClaptrapDownstate
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Claptrap_C::ForceClaptrapDownstate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Claptrap_C", "ForceClaptrapDownstate");

	UObject::ProcessEvent(Func, nullptr);
}

}

