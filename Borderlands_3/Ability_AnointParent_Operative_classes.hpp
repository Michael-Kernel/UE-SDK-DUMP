#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_AnointParent_Operative

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "EOperativeGadgets_structs.hpp"
#include "Ability_AnointParent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_AnointParent_Operative.Ability_AnointParent_Operative_C
// 0x0050 (0x0218 - 0x01C8)
class UAbility_AnointParent_Operative_C : public UAbility_AnointParent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Ability_AnointParent_Operative_C;   // 0x01C8(0x0008)(Transient, DuplicateTransient)
	class UBPEventHub_Operative_C*                OperativeEventHub;                                 // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AnointParent_Operative; // 0x01D8(0x0028)()
	bool                                          BarrierStarted;                                    // 0x0200(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BarrierEnded;                                      // 0x0201(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CloneStarted;                                      // 0x0202(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CloneEnded;                                        // 0x0203(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SNTRYStarted;                                      // 0x0204(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SNTRYEnded;                                        // 0x0205(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CloneSwappedPlaces;                                // 0x0206(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CannonActivated;                                   // 0x0207(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AnointActiveWhileSkillActive;                      // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Operative_C*                    OperativeCharacter;                                // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ability_AnointParent_Operative(int32 EntryPoint);
	void BindOperativeEvents();
	void OnActivated();
	void AnointBarrierStart(bool* Res);
	void AnointBarrierEnded(bool* Res);
	void AnointCloneStarted(bool* Res);
	void AnointCloneEnded(bool* Res);
	void AnointSNTRYStarted(bool* Res);
	void AnointSNTRYEnded(bool* Res);
	void AnointCannonActivated(bool* Res);
	void AnointCloneSwappedPlaces();
	void AnointOperativeActionSkillStart(EOperativeGadgets ActionSkill);
	void AnointOperativeActionSkillEnd(EOperativeGadgets ActionSkill);
	void AnointOperativeIsActionAbilityActive(class UClass* ActionSkill, bool* Res);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_AnointParent_Operative_C">();
	}
	static class UAbility_AnointParent_Operative_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_AnointParent_Operative_C>();
	}
};
static_assert(alignof(UAbility_AnointParent_Operative_C) == 0x000008, "Wrong alignment on UAbility_AnointParent_Operative_C");
static_assert(sizeof(UAbility_AnointParent_Operative_C) == 0x000218, "Wrong size on UAbility_AnointParent_Operative_C");
static_assert(offsetof(UAbility_AnointParent_Operative_C, UberGraphFrame_Ability_AnointParent_Operative_C) == 0x0001C8, "Member 'UAbility_AnointParent_Operative_C::UberGraphFrame_Ability_AnointParent_Operative_C' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, OperativeEventHub) == 0x0001D0, "Member 'UAbility_AnointParent_Operative_C::OperativeEventHub' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AnointParent_Operative) == 0x0001D8, "Member 'UAbility_AnointParent_Operative_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_AnointParent_Operative' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, BarrierStarted) == 0x000200, "Member 'UAbility_AnointParent_Operative_C::BarrierStarted' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, BarrierEnded) == 0x000201, "Member 'UAbility_AnointParent_Operative_C::BarrierEnded' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, CloneStarted) == 0x000202, "Member 'UAbility_AnointParent_Operative_C::CloneStarted' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, CloneEnded) == 0x000203, "Member 'UAbility_AnointParent_Operative_C::CloneEnded' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, SNTRYStarted) == 0x000204, "Member 'UAbility_AnointParent_Operative_C::SNTRYStarted' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, SNTRYEnded) == 0x000205, "Member 'UAbility_AnointParent_Operative_C::SNTRYEnded' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, CloneSwappedPlaces) == 0x000206, "Member 'UAbility_AnointParent_Operative_C::CloneSwappedPlaces' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, CannonActivated) == 0x000207, "Member 'UAbility_AnointParent_Operative_C::CannonActivated' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, AnointActiveWhileSkillActive) == 0x000208, "Member 'UAbility_AnointParent_Operative_C::AnointActiveWhileSkillActive' has a wrong offset!");
static_assert(offsetof(UAbility_AnointParent_Operative_C, OperativeCharacter) == 0x000210, "Member 'UAbility_AnointParent_Operative_C::OperativeCharacter' has a wrong offset!");

}

