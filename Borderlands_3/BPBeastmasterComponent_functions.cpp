#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPBeastmasterComponent

#include "Basic.hpp"

#include "BPBeastmasterComponent_classes.hpp"
#include "BPBeastmasterComponent_parameters.hpp"


namespace SDK
{

// Function BPBeastmasterComponent.BPBeastmasterComponent_C.ExecuteUbergraph_BPBeastmasterComponent
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPBeastmasterComponent_C::ExecuteUbergraph_BPBeastmasterComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "ExecuteUbergraph_BPBeastmasterComponent");

	Params::BPBeastmasterComponent_C_ExecuteUbergraph_BPBeastmasterComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.TryOrderPetAttack
// (Event, Protected, BlueprintEvent)

void UBPBeastmasterComponent_C::TryOrderPetAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "TryOrderPetAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPBeastmasterComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.OnReleasedPet
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForced                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPetReleaseReason                       ReleaseReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPBeastmasterComponent_C::OnReleasedPet(bool bForced, EPetReleaseReason ReleaseReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "OnReleasedPet");

	Params::BPBeastmasterComponent_C_OnReleasedPet Parms{};

	Parms.bForced = bForced;
	Parms.ReleaseReason = ReleaseReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.SpawnNewPet
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOakPlayerCharacterAugmentData_Pet*PetAugment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SpawnLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AOakCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AOakCharacter* UBPBeastmasterComponent_C::SpawnNewPet(class UOakPlayerCharacterAugmentData_Pet* PetAugment, const struct FVector& SpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "SpawnNewPet");

	Params::BPBeastmasterComponent_C_SpawnNewPet Parms{};

	Parms.PetAugment = PetAugment;
	Parms.SpawnLocation = std::move(SpawnLocation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.CheckForSpawnCollisions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SpawnLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCollisionsDetected                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPBeastmasterComponent_C::CheckForSpawnCollisions(const struct FVector& SpawnLocation, bool* bCollisionsDetected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "CheckForSpawnCollisions");

	Params::BPBeastmasterComponent_C_CheckForSpawnCollisions Parms{};

	Parms.SpawnLocation = std::move(SpawnLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (bCollisionsDetected != nullptr)
		*bCollisionsDetected = Parms.bCollisionsDetected;
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.GetPetSpawnClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UOakPlayerCharacterAugmentData_Pet*InAugment                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPBeastmasterComponent_C::GetPetSpawnClass(class UOakPlayerCharacterAugmentData_Pet* InAugment, class UClass** Res) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "GetPetSpawnClass");

	Params::BPBeastmasterComponent_C_GetPetSpawnClass Parms{};

	Parms.InAugment = InAugment;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.GetFallbackPetSpawnLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBPBeastmasterComponent_C::GetFallbackPetSpawnLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "GetFallbackPetSpawnLocation");

	Params::BPBeastmasterComponent_C_GetFallbackPetSpawnLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.GetPetCooldownRefundPercent
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPetRespawnCooldownRefundType           RefundType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBPBeastmasterComponent_C::GetPetCooldownRefundPercent(EPetRespawnCooldownRefundType RefundType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "GetPetCooldownRefundPercent");

	Params::BPBeastmasterComponent_C_GetPetCooldownRefundPercent Parms{};

	Parms.RefundType = RefundType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPBeastmasterComponent.BPBeastmasterComponent_C.ValidateCurrentPetAugment
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UOakPlayerCharacterAugmentData_Pet*PetAugment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBPBeastmasterComponent_C::ValidateCurrentPetAugment(class UOakPlayerCharacterAugmentData_Pet* PetAugment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPBeastmasterComponent_C", "ValidateCurrentPetAugment");

	Params::BPBeastmasterComponent_C_ValidateCurrentPetAugment Parms{};

	Parms.PetAugment = PetAugment;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

