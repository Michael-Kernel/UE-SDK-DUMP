#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TOR_PS_4SUM

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TOR_PS_4SUM.LightProjectile_TOR_PS_4SUM_C.OnLifetimeExpired
// 0x01E0 (0x01E0 - 0x0000)
struct LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ChildDirection;                                    // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x0018(0x0020)(NoDestructor)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindClosestPointOnLine_ReturnValue;       // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakLightProjectileInitializationData  K2Node_MakeStruct_OakLightProjectileInitializationData; // 0x0088(0x0158)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired) == 0x0001E0, "Wrong size on LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, ChildDirection) == 0x000008, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::ChildDirection' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_GetModifierType_ReturnValue) == 0x000014, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x000018, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_GetInstigator_ReturnValue) == 0x000038, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_GetSource_ReturnValue) == 0x000040, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_FindClosestPointOnLine_ReturnValue) == 0x000048, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_FindClosestPointOnLine_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_Normal_ReturnValue) == 0x00006C, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired, K2Node_MakeStruct_OakLightProjectileInitializationData) == 0x000088, "Member 'LightProjectile_TOR_PS_4SUM_C_OnLifetimeExpired::K2Node_MakeStruct_OakLightProjectileInitializationData' has a wrong offset!");

}

