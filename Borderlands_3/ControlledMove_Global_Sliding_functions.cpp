#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_Global_Sliding

#include "Basic.hpp"

#include "ControlledMove_Global_Sliding_classes.hpp"
#include "ControlledMove_Global_Sliding_parameters.hpp"


namespace SDK
{

// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.ExecuteUbergraph_ControlledMove_Global_Sliding
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::ExecuteUbergraph_ControlledMove_Global_Sliding(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "ExecuteUbergraph_ControlledMove_Global_Sliding");

	Params::ControlledMove_Global_Sliding_C_ExecuteUbergraph_ControlledMove_Global_Sliding Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnServerStop
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UControlledMove_Global_Sliding_C::OnServerStop(bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnServerStop");

	Params::ControlledMove_Global_Sliding_C_OnServerStop Parms{};

	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnCapsuleBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UControlledMove_Global_Sliding_C::OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnCapsuleBeginOverlap");

	Params::ControlledMove_Global_Sliding_C_OnCapsuleBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnServerStart
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   MoveDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::OnServerStart(float MoveDuration, class AActor* TargetActor, class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnServerStart");

	Params::ControlledMove_Global_Sliding_C_OnServerStart Parms{};

	Parms.MoveDuration = MoveDuration;
	Parms.TargetActor = TargetActor;
	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnHitDamageable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::OnHitDamageable(class AActor* HitActor, const struct FVector& HitNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnHitDamageable");

	Params::ControlledMove_Global_Sliding_C_OnHitDamageable Parms{};

	Parms.HitActor = HitActor;
	Parms.HitNormal = std::move(HitNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.MovementChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::MovementChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "MovementChanged");

	Params::ControlledMove_Global_Sliding_C_MovementChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.SlideDuration
// (BlueprintCallable, BlueprintEvent)

void UControlledMove_Global_Sliding_C::SlideDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "SlideDuration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnHitWorld
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::OnHitWorld(class AActor* HitActor, const struct FVector& HitNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnHitWorld");

	Params::ControlledMove_Global_Sliding_C_OnHitWorld Parms{};

	Parms.HitActor = HitActor;
	Parms.HitNormal = std::move(HitNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnHitTargetable
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::OnHitTargetable(class AActor* HitActor, const struct FVector& HitNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnHitTargetable");

	Params::ControlledMove_Global_Sliding_C_OnHitTargetable Parms{};

	Parms.HitActor = HitActor;
	Parms.HitNormal = std::move(HitNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnStop
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UControlledMove_Global_Sliding_C::OnStop(bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnStop");

	Params::ControlledMove_Global_Sliding_C_OnStop Parms{};

	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlledMove_Global_Sliding.ControlledMove_Global_Sliding_C.OnStart
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   MoveDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlledMove_Global_Sliding_C::OnStart(float MoveDuration, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlledMove_Global_Sliding_C", "OnStart");

	Params::ControlledMove_Global_Sliding_C_OnStart Parms{};

	Parms.MoveDuration = MoveDuration;
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}

}

