#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TED_SM_NeedleGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TED_SM_NeedleGun.LightProjectile_TED_SM_NeedleGun_C.StartHoming
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_TED_SM_NeedleGun_C_StartHoming final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_TED_SM_NeedleGun_C_StartHoming) == 0x000008, "Wrong alignment on LightProjectile_TED_SM_NeedleGun_C_StartHoming");
static_assert(sizeof(LightProjectile_TED_SM_NeedleGun_C_StartHoming) == 0x000008, "Wrong size on LightProjectile_TED_SM_NeedleGun_C_StartHoming");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_StartHoming, Projectile) == 0x000000, "Member 'LightProjectile_TED_SM_NeedleGun_C_StartHoming::Projectile' has a wrong offset!");

// Function LightProjectile_TED_SM_NeedleGun.LightProjectile_TED_SM_NeedleGun_C.OnDamage
// 0x0240 (0x0240 - 0x0000)
struct LightProjectile_TED_SM_NeedleGun_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery;               // 0x0130(0x0018)(NoDestructor)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0148(0x0038)(NoDestructor)
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue;            // 0x0180(0x0010)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0190(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery1;              // 0x01A8(0x0018)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue1;           // 0x01C4(0x0010)(NoDestructor)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValue_OutValue2;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue2;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec1;               // 0x01E8(0x0038)(NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue1;             // 0x0228(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_TED_SM_NeedleGun_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_TED_SM_NeedleGun_C_OnDamage");
static_assert(sizeof(LightProjectile_TED_SM_NeedleGun_C_OnDamage) == 0x000240, "Wrong size on LightProjectile_TED_SM_NeedleGun_C_OnDamage");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x00009C, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x0000A0, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A1, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A2, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000A8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x000120, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetOwner_ReturnValue) == 0x000128, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, K2Node_MakeStruct_StatusEffectQuery) == 0x000130, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::K2Node_MakeStruct_StatusEffectQuery' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, K2Node_MakeStruct_StatusEffectSpec) == 0x000148, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_QueryStatusEffect_ReturnValue) == 0x000180, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_QueryStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_AddStatusEffect_ReturnValue) == 0x000190, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, K2Node_MakeStruct_StatusEffectQuery1) == 0x0001A8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::K2Node_MakeStruct_StatusEffectQuery1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_QueryStatusEffect_ReturnValue1) == 0x0001C4, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_QueryStatusEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetDataTableValue_OutValue1) == 0x0001D4, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue1) == 0x0001D8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetDataTableValue_OutValue2) == 0x0001DC, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetDataTableValue_OutValue2' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue2) == 0x0001E0, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_FTrunc_ReturnValue) == 0x0001E4, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, K2Node_MakeStruct_StatusEffectSpec1) == 0x0001E8, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::K2Node_MakeStruct_StatusEffectSpec1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000220, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TED_SM_NeedleGun_C_OnDamage, CallFunc_AddStatusEffect_ReturnValue1) == 0x000228, "Member 'LightProjectile_TED_SM_NeedleGun_C_OnDamage::CallFunc_AddStatusEffect_ReturnValue1' has a wrong offset!");

}

