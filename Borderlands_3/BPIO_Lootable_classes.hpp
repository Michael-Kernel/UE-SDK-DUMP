#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPIO_Lootable

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPIO_Lootable.BPIO_Lootable_C
// 0x00D0 (0x08B8 - 0x07E8)
class ABPIO_Lootable_C : public ALootableObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07E8(0x0008)(Transient, DuplicateTransient)
	class ULightAudioComponent*                   LightAudio;                                        // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavBoxComponent*                    GbxNavBox;                                         // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxNavMeshPainterComponent*            GbxNavMeshPainter;                                 // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URegionBalanceStateComponent*           RegionBalanceState;                                // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMissionIconComponent*               OakMissionIcon;                                    // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakLootableComponent*                  Loot;                                              // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Mesh_Chest1;                                       // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            OnChestOpenedAudio;                                // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            OnChestOpeningAudio;                               // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            OnChestClosedAudio;                                // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            OnChestClosingAudio;                               // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            OnChestLockedAudio;                                // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            ManagedAudioLoop;                                  // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesLoopingAudio;                                  // 0x0858(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasStartedManagedLoop;                             // 0x0859(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85A[0x6];                                      // 0x085A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   On_Opened;                                         // 0x0860(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_AnyLootTaken;                                   // 0x0870(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_AllLootTaken;                                   // 0x0880(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   On_Opening;                                        // 0x0890(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UGameStatData*>                  LootableStats;                                     // 0x08A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         Audio_LoopTransitionTime;                          // 0x08B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void On_Opened__DelegateSignature();
	void On_AnyLootTaken__DelegateSignature(class ADroppedInventoryItemPickup* PickedUpItem);
	void On_AllLootTaken__DelegateSignature(class ADroppedInventoryItemPickup* PickedUpItem);
	void On_Opening__DelegateSignature();
	void ExecuteUbergraph_BPIO_Lootable(int32 EntryPoint);
	void BndEvt__UsableComponent_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_BPIO_Lootable(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void ReceiveBeginPlay();
	void OnPickupDetached_Event_0(class ADroppedInventoryItemPickup* Pickup, class AActor* PickedUpBy);
	void OnAllPickupsDetached_Event(class ADroppedInventoryItemPickup* Pickup, class AActor* PickedUpBy);
	void OnDisabled();
	void OnDisabling();
	void OnEnabled();
	void OnEnabling();
	void OnLocked();
	void UserConstructionScript();
	void PlayAudio();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPIO_Lootable_C">();
	}
	static class ABPIO_Lootable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPIO_Lootable_C>();
	}
};
static_assert(alignof(ABPIO_Lootable_C) == 0x000008, "Wrong alignment on ABPIO_Lootable_C");
static_assert(sizeof(ABPIO_Lootable_C) == 0x0008B8, "Wrong size on ABPIO_Lootable_C");
static_assert(offsetof(ABPIO_Lootable_C, UberGraphFrame) == 0x0007E8, "Member 'ABPIO_Lootable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, LightAudio) == 0x0007F0, "Member 'ABPIO_Lootable_C::LightAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, GbxNavBox) == 0x0007F8, "Member 'ABPIO_Lootable_C::GbxNavBox' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, GbxNavMeshPainter) == 0x000800, "Member 'ABPIO_Lootable_C::GbxNavMeshPainter' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, RegionBalanceState) == 0x000808, "Member 'ABPIO_Lootable_C::RegionBalanceState' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, OakMissionIcon) == 0x000810, "Member 'ABPIO_Lootable_C::OakMissionIcon' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, Loot) == 0x000818, "Member 'ABPIO_Lootable_C::Loot' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, Mesh_Chest1) == 0x000820, "Member 'ABPIO_Lootable_C::Mesh_Chest1' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, OnChestOpenedAudio) == 0x000828, "Member 'ABPIO_Lootable_C::OnChestOpenedAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, OnChestOpeningAudio) == 0x000830, "Member 'ABPIO_Lootable_C::OnChestOpeningAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, OnChestClosedAudio) == 0x000838, "Member 'ABPIO_Lootable_C::OnChestClosedAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, OnChestClosingAudio) == 0x000840, "Member 'ABPIO_Lootable_C::OnChestClosingAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, OnChestLockedAudio) == 0x000848, "Member 'ABPIO_Lootable_C::OnChestLockedAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, ManagedAudioLoop) == 0x000850, "Member 'ABPIO_Lootable_C::ManagedAudioLoop' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, UsesLoopingAudio) == 0x000858, "Member 'ABPIO_Lootable_C::UsesLoopingAudio' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, HasStartedManagedLoop) == 0x000859, "Member 'ABPIO_Lootable_C::HasStartedManagedLoop' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, On_Opened) == 0x000860, "Member 'ABPIO_Lootable_C::On_Opened' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, On_AnyLootTaken) == 0x000870, "Member 'ABPIO_Lootable_C::On_AnyLootTaken' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, On_AllLootTaken) == 0x000880, "Member 'ABPIO_Lootable_C::On_AllLootTaken' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, On_Opening) == 0x000890, "Member 'ABPIO_Lootable_C::On_Opening' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, LootableStats) == 0x0008A0, "Member 'ABPIO_Lootable_C::LootableStats' has a wrong offset!");
static_assert(offsetof(ABPIO_Lootable_C, Audio_LoopTransitionTime) == 0x0008B0, "Member 'ABPIO_Lootable_C::Audio_LoopTransitionTime' has a wrong offset!");

}

