#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CatchARide_Console

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CatchARide_Console.BP_CatchARide_Console_C
// 0x00D8 (0x0810 - 0x0738)
class ABP_CatchARide_Console_C final : public ACatchARide
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0738(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Vehicle_Collision;                                 // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakDialogComponent*                    GbxDialog;                                         // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent4;                                     // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent3;                                     // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent2;                                     // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent;                                      // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UsableCollision3;                                  // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UsableCollision2;                                  // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UsableCollision;                                   // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TouchBox;                                          // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakMinimapIconComponent*               OakMinimapIcon;                                    // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMissionObserverComponent*              MissionObserver;                                   // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FMissionObjectiveReference             Mission_OvercomeBlocade_Use;                       // 0x07B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FMissionObjectiveReference             Mission_OvercomeBlocade_Reboot;                    // 0x07E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UserConstructionScript();
	void OnNewBodyEquipped(class UOakCARVehicleData* VehicleData);
	void OnNewPartEquipped(ECARPartType PartType, class UOakCARVehiclePartData* PartData);
	void OnVehicleDeployedFromMenu();
	void BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_CatchARide_Console(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnIStateInteractive();
	void OnIStateNonInteractive();
	void ExecuteUbergraph_BP_CatchARide_Console(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CatchARide_Console_C">();
	}
	static class ABP_CatchARide_Console_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CatchARide_Console_C>();
	}
};
static_assert(alignof(ABP_CatchARide_Console_C) == 0x000008, "Wrong alignment on ABP_CatchARide_Console_C");
static_assert(sizeof(ABP_CatchARide_Console_C) == 0x000810, "Wrong size on ABP_CatchARide_Console_C");
static_assert(offsetof(ABP_CatchARide_Console_C, UberGraphFrame) == 0x000738, "Member 'ABP_CatchARide_Console_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, WwiseAudio) == 0x000740, "Member 'ABP_CatchARide_Console_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, Vehicle_Collision) == 0x000748, "Member 'ABP_CatchARide_Console_C::Vehicle_Collision' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, GbxDialog) == 0x000750, "Member 'ABP_CatchARide_Console_C::GbxDialog' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, BoxComponent4) == 0x000758, "Member 'ABP_CatchARide_Console_C::BoxComponent4' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, BoxComponent3) == 0x000760, "Member 'ABP_CatchARide_Console_C::BoxComponent3' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, BoxComponent2) == 0x000768, "Member 'ABP_CatchARide_Console_C::BoxComponent2' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, BoxComponent) == 0x000770, "Member 'ABP_CatchARide_Console_C::BoxComponent' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, UsableCollision3) == 0x000778, "Member 'ABP_CatchARide_Console_C::UsableCollision3' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, UsableCollision2) == 0x000780, "Member 'ABP_CatchARide_Console_C::UsableCollision2' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, UsableCollision) == 0x000788, "Member 'ABP_CatchARide_Console_C::UsableCollision' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, TouchBox) == 0x000790, "Member 'ABP_CatchARide_Console_C::TouchBox' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, OakMinimapIcon) == 0x000798, "Member 'ABP_CatchARide_Console_C::OakMinimapIcon' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, Sphere) == 0x0007A0, "Member 'ABP_CatchARide_Console_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, MissionObserver) == 0x0007A8, "Member 'ABP_CatchARide_Console_C::MissionObserver' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, Mission_OvercomeBlocade_Use) == 0x0007B0, "Member 'ABP_CatchARide_Console_C::Mission_OvercomeBlocade_Use' has a wrong offset!");
static_assert(offsetof(ABP_CatchARide_Console_C, Mission_OvercomeBlocade_Reboot) == 0x0007E0, "Member 'ABP_CatchARide_Console_C::Mission_OvercomeBlocade_Reboot' has a wrong offset!");

}

