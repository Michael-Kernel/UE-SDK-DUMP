#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tediore_Interface

#include "Basic.hpp"


namespace SDK::Params
{

// Function Tediore_Interface.Tediore_Interface_C.Tediore_WeaponData
// 0x0020 (0x0020 - 0x0000)
struct Tediore_Interface_C_Tediore_WeaponData final
{
public:
	float                                         DamageRadius;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageTypeClass;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMirvProjectiles;                                // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireRate;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LoadedAmmo;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ThrowType;                                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tediore_Interface_C_Tediore_WeaponData) == 0x000008, "Wrong alignment on Tediore_Interface_C_Tediore_WeaponData");
static_assert(sizeof(Tediore_Interface_C_Tediore_WeaponData) == 0x000020, "Wrong size on Tediore_Interface_C_Tediore_WeaponData");
static_assert(offsetof(Tediore_Interface_C_Tediore_WeaponData, DamageRadius) == 0x000000, "Member 'Tediore_Interface_C_Tediore_WeaponData::DamageRadius' has a wrong offset!");
static_assert(offsetof(Tediore_Interface_C_Tediore_WeaponData, DamageTypeClass) == 0x000008, "Member 'Tediore_Interface_C_Tediore_WeaponData::DamageTypeClass' has a wrong offset!");
static_assert(offsetof(Tediore_Interface_C_Tediore_WeaponData, NumMirvProjectiles) == 0x000010, "Member 'Tediore_Interface_C_Tediore_WeaponData::NumMirvProjectiles' has a wrong offset!");
static_assert(offsetof(Tediore_Interface_C_Tediore_WeaponData, FireRate) == 0x000014, "Member 'Tediore_Interface_C_Tediore_WeaponData::FireRate' has a wrong offset!");
static_assert(offsetof(Tediore_Interface_C_Tediore_WeaponData, LoadedAmmo) == 0x000018, "Member 'Tediore_Interface_C_Tediore_WeaponData::LoadedAmmo' has a wrong offset!");
static_assert(offsetof(Tediore_Interface_C_Tediore_WeaponData, ThrowType) == 0x00001C, "Member 'Tediore_Interface_C_Tediore_WeaponData::ThrowType' has a wrong offset!");

}

