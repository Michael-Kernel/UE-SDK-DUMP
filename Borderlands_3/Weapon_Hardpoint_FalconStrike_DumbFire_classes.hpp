#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Hardpoint_FalconStrike_DumbFire

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Weapon_Hardpoint_FalconStrike_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_Hardpoint_FalconStrike_DumbFire.Weapon_Hardpoint_FalconStrike_DumbFire_C
// 0x00A0 (0x0B90 - 0x0AF0)
class AWeapon_Hardpoint_FalconStrike_DumbFire_C final : public AWeapon_Hardpoint_FalconStrike_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_Hardpoint_FalconStrike_DumbFire_C; // 0x0AF0(0x0008)(Transient, DuplicateTransient)
	class UWeaponSingleFeedReloadComponent*       WeaponSingleFeedReload;                            // 0x0AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FAttributeEffectData                   AttEffect_Mod1_MaxLoadedAmmo;                      // 0x0B00(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAttributeEffectData                   AttEffect_Mod1_LoadedAmmo;                         // 0x0B48(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_Weapon_Hardpoint_FalconStrike_DumbFire(int32 EntryPoint);
	void BndEvt__BPWeaponFireProjectile_Gunner_FalconStrike_K2Node_ComponentBoundEvent_0_WeaponUsedEvent__DelegateSignature_Weapon_Hardpoint_FalconStrike_DumbFire();
	void ApplyMod1();
	void ApplyMod2();
	void K2_Initialize();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_Hardpoint_FalconStrike_DumbFire_C">();
	}
	static class AWeapon_Hardpoint_FalconStrike_DumbFire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_Hardpoint_FalconStrike_DumbFire_C>();
	}
};
static_assert(alignof(AWeapon_Hardpoint_FalconStrike_DumbFire_C) == 0x000008, "Wrong alignment on AWeapon_Hardpoint_FalconStrike_DumbFire_C");
static_assert(sizeof(AWeapon_Hardpoint_FalconStrike_DumbFire_C) == 0x000B90, "Wrong size on AWeapon_Hardpoint_FalconStrike_DumbFire_C");
static_assert(offsetof(AWeapon_Hardpoint_FalconStrike_DumbFire_C, UberGraphFrame_Weapon_Hardpoint_FalconStrike_DumbFire_C) == 0x000AF0, "Member 'AWeapon_Hardpoint_FalconStrike_DumbFire_C::UberGraphFrame_Weapon_Hardpoint_FalconStrike_DumbFire_C' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_FalconStrike_DumbFire_C, WeaponSingleFeedReload) == 0x000AF8, "Member 'AWeapon_Hardpoint_FalconStrike_DumbFire_C::WeaponSingleFeedReload' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_FalconStrike_DumbFire_C, AttEffect_Mod1_MaxLoadedAmmo) == 0x000B00, "Member 'AWeapon_Hardpoint_FalconStrike_DumbFire_C::AttEffect_Mod1_MaxLoadedAmmo' has a wrong offset!");
static_assert(offsetof(AWeapon_Hardpoint_FalconStrike_DumbFire_C, AttEffect_Mod1_LoadedAmmo) == 0x000B48, "Member 'AWeapon_Hardpoint_FalconStrike_DumbFire_C::AttEffect_Mod1_LoadedAmmo' has a wrong offset!");

}

