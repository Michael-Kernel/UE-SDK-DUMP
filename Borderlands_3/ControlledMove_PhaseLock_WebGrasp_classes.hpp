#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_PhaseLock_WebGrasp

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "ControlledMove_PhaseLock_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C
// 0x0078 (0x0B60 - 0x0AE8)
class UControlledMove_PhaseLock_WebGrasp_C : public UControlledMove_PhaseLock_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ControlledMove_PhaseLock_WebGrasp_C; // 0x0AE8(0x0008)(Transient, DuplicateTransient)
	struct FStatusEffectInstanceReference         StatusEffectRef;                                   // 0x0AF0(0x0018)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	struct FDataTableValueHandle                  GraspDamagePerSecond;                              // 0x0B08(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FPhaseTranceActivationComboData        ComboData;                                         // 0x0B20(0x0018)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor)
	float                                         StoredDamage;                                      // 0x0B38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3C[0x4];                                      // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               SlamEmitter;                                       // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  EssenceGraspDurationIncrease;                      // 0x0B48(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp(int32 EntryPoint);
	void OnControlledCharacterDied(class AActor* Receiver, class AActor* Causer);
	void OnServerStop(bool bInterrupted);
	void ApplyElementalEffect();
	void RemoveElementalEffect();
	void DispatchGraspedEvent();
	void ConfigureEmitters();
	void UnpackComboData();
	void DispatchGraspTargetDiedEvent(class AGbxCharacter* Killer);
	void DoPhaseTranceEffects();
	void OnGraspLeechTarget(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void GraspFinishLeech();
	void SetGraspTimerRunning(bool bRes);
	void PlayFeedback();
	void ConfigurePhaseLockProperties();
	void OnServerStart(float MoveDuration, class AActor* TargetActor, class AActor* Instigator);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ControlledMove_PhaseLock_WebGrasp_C">();
	}
	static class UControlledMove_PhaseLock_WebGrasp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlledMove_PhaseLock_WebGrasp_C>();
	}
};
static_assert(alignof(UControlledMove_PhaseLock_WebGrasp_C) == 0x000008, "Wrong alignment on UControlledMove_PhaseLock_WebGrasp_C");
static_assert(sizeof(UControlledMove_PhaseLock_WebGrasp_C) == 0x000B60, "Wrong size on UControlledMove_PhaseLock_WebGrasp_C");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, UberGraphFrame_ControlledMove_PhaseLock_WebGrasp_C) == 0x000AE8, "Member 'UControlledMove_PhaseLock_WebGrasp_C::UberGraphFrame_ControlledMove_PhaseLock_WebGrasp_C' has a wrong offset!");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, StatusEffectRef) == 0x000AF0, "Member 'UControlledMove_PhaseLock_WebGrasp_C::StatusEffectRef' has a wrong offset!");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, GraspDamagePerSecond) == 0x000B08, "Member 'UControlledMove_PhaseLock_WebGrasp_C::GraspDamagePerSecond' has a wrong offset!");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, ComboData) == 0x000B20, "Member 'UControlledMove_PhaseLock_WebGrasp_C::ComboData' has a wrong offset!");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, StoredDamage) == 0x000B38, "Member 'UControlledMove_PhaseLock_WebGrasp_C::StoredDamage' has a wrong offset!");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, SlamEmitter) == 0x000B40, "Member 'UControlledMove_PhaseLock_WebGrasp_C::SlamEmitter' has a wrong offset!");
static_assert(offsetof(UControlledMove_PhaseLock_WebGrasp_C, EssenceGraspDurationIncrease) == 0x000B48, "Member 'UControlledMove_PhaseLock_WebGrasp_C::EssenceGraspDurationIncrease' has a wrong offset!");

}

