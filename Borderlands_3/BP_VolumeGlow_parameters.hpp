#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolumeGlow

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_VolumeGlow.BP_VolumeGlow_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_VolumeGlow_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumeGlow_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_VolumeGlow_C_UserConstructionScript");
static_assert(sizeof(BP_VolumeGlow_C_UserConstructionScript) == 0x000008, "Wrong size on BP_VolumeGlow_C_UserConstructionScript");
static_assert(offsetof(BP_VolumeGlow_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_VolumeGlow_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_VolumeGlow.BP_VolumeGlow_C.Update Volume Glow
// 0x0004 (0x0004 - 0x0000)
struct BP_VolumeGlow_C_Update_Volume_Glow final
{
public:
	float                                         Density_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumeGlow_C_Update_Volume_Glow) == 0x000004, "Wrong alignment on BP_VolumeGlow_C_Update_Volume_Glow");
static_assert(sizeof(BP_VolumeGlow_C_Update_Volume_Glow) == 0x000004, "Wrong size on BP_VolumeGlow_C_Update_Volume_Glow");
static_assert(offsetof(BP_VolumeGlow_C_Update_Volume_Glow, Density_0) == 0x000000, "Member 'BP_VolumeGlow_C_Update_Volume_Glow::Density_0' has a wrong offset!");

// Function BP_VolumeGlow.BP_VolumeGlow_C.ExecuteUbergraph_BP_VolumeGlow
// 0x0008 (0x0008 - 0x0000)
struct BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Density;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow) == 0x000004, "Wrong alignment on BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow");
static_assert(sizeof(BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow) == 0x000008, "Wrong size on BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow");
static_assert(offsetof(BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow, EntryPoint) == 0x000000, "Member 'BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow, K2Node_CustomEvent_Density) == 0x000004, "Member 'BP_VolumeGlow_C_ExecuteUbergraph_BP_VolumeGlow::K2Node_CustomEvent_Density' has a wrong offset!");

}

