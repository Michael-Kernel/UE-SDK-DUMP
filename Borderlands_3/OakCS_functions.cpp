#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OakCS

#include "Basic.hpp"

#include "OakCS_classes.hpp"
#include "OakCS_parameters.hpp"


namespace SDK
{

// Function OakCS.CSConsoleProxy.OnDifficultyLevelCompleted
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnDifficultyLevelCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnDifficultyLevelCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSConsoleProxy.OnEnterPuzzle
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnEnterPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnEnterPuzzle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSConsoleProxy.OnFirstPuzzleOfCurrentDifficulty
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnFirstPuzzleOfCurrentDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnFirstPuzzleOfCurrentDifficulty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSConsoleProxy.OnOptimalScoreReached
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnOptimalScoreReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnOptimalScoreReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSConsoleProxy.OnParScoreReached
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnParScoreReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnParScoreReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSConsoleProxy.OnQuitCitizenScienceArcade
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnQuitCitizenScienceArcade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnQuitCitizenScienceArcade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSConsoleProxy.OnSumbitPuzzleSolution
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOptimal                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACSConsoleProxy::OnSumbitPuzzleSolution(bool bIsOptimal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnSumbitPuzzleSolution");

	Params::CSConsoleProxy_OnSumbitPuzzleSolution Parms{};

	Parms.bIsOptimal = bIsOptimal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakCS.CSConsoleProxy.OnUnderParScoreReached
// (Event, Public, BlueprintEvent)

void ACSConsoleProxy::OnUnderParScoreReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CSConsoleProxy", "OnUnderParScoreReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.CSTutorialBPLib.BlockCSPuzzleInputs
// (Final, Native, Static, Public, BlueprintCallable)

void UCSTutorialBPLib::BlockCSPuzzleInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "BlockCSPuzzleInputs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.BlockCSPuzzleIntro
// (Final, Native, Static, Public, BlueprintCallable)

void UCSTutorialBPLib::BlockCSPuzzleIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "BlockCSPuzzleIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.CSWaitForScore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECSScoreCondition                       ScoreCondition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::CSWaitForScore(class UWorld* World, ECSScoreCondition ScoreCondition, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "CSWaitForScore");

	Params::CSTutorialBPLib_CSWaitForScore Parms{};

	Parms.World = World;
	Parms.ScoreCondition = ScoreCondition;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.HideCSTutorialElement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECSTutorialElement                      TutorialElement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::HideCSTutorialElement(ECSTutorialElement TutorialElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "HideCSTutorialElement");

	Params::CSTutorialBPLib_HideCSTutorialElement Parms{};

	Parms.TutorialElement = TutorialElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.HideCSTutorialTooltip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Tooltip                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::HideCSTutorialTooltip(const class FString& Tooltip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "HideCSTutorialTooltip");

	Params::CSTutorialBPLib_HideCSTutorialTooltip Parms{};

	Parms.Tooltip = std::move(Tooltip);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.HighlightCSTutorialElement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECSTutorialElement                      TutorialElement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::HighlightCSTutorialElement(ECSTutorialElement TutorialElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "HighlightCSTutorialElement");

	Params::CSTutorialBPLib_HighlightCSTutorialElement Parms{};

	Parms.TutorialElement = TutorialElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.ShowCSTutorialElement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECSTutorialElement                      TutorialElement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::ShowCSTutorialElement(ECSTutorialElement TutorialElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "ShowCSTutorialElement");

	Params::CSTutorialBPLib_ShowCSTutorialElement Parms{};

	Parms.TutorialElement = TutorialElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.ShowCSTutorialTooltip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Tooltip                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::ShowCSTutorialTooltip(const class FString& Tooltip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "ShowCSTutorialTooltip");

	Params::CSTutorialBPLib_ShowCSTutorialTooltip Parms{};

	Parms.Tooltip = std::move(Tooltip);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.StopHighlightCSTutorialElement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECSTutorialElement                      TutorialElement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCSTutorialBPLib::StopHighlightCSTutorialElement(ECSTutorialElement TutorialElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "StopHighlightCSTutorialElement");

	Params::CSTutorialBPLib_StopHighlightCSTutorialElement Parms{};

	Parms.TutorialElement = TutorialElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.UnblockCSPuzzleInputs
// (Final, Native, Static, Public, BlueprintCallable)

void UCSTutorialBPLib::UnblockCSPuzzleInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "UnblockCSPuzzleInputs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.CSTutorialBPLib.UnblockCSPuzzleIntro
// (Final, Native, Static, Public, BlueprintCallable)

void UCSTutorialBPLib::UnblockCSPuzzleIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CSTutorialBPLib", "UnblockCSPuzzleIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSButton.OnInputDeviceChanged
// (Final, Native, Public)
// Parameters:
// EGbxMenuInputDevice                     NewInputDevice                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGFxCSButton::OnInputDeviceChanged(const EGbxMenuInputDevice NewInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSButton", "OnInputDeviceChanged");

	Params::GFxCSButton_OnInputDeviceChanged Parms{};

	Parms.NewInputDevice = NewInputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSBoosterShopMenu.OnBoosterItemClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSBoosterShopMenu::OnBoosterItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSBoosterShopMenu", "OnBoosterItemClicked");

	Params::GFxCSBoosterShopMenu_OnBoosterItemClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSBoosterShopMenu.OnConfirmPurchase
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxDialogBox*                 SourceDialog                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChoiceNameId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSBoosterShopMenu::OnConfirmPurchase(const class UGbxGFxDialogBox* SourceDialog, const class FName ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSBoosterShopMenu", "OnConfirmPurchase");

	Params::GFxCSBoosterShopMenu_OnConfirmPurchase Parms{};

	Parms.SourceDialog = SourceDialog;
	Parms.ChoiceNameId = ChoiceNameId;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSBoosterShopMenu.OnCSBucksAmountChanged
// (Final, Native, Private, Const)
// Parameters:
// int32                                   NewAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGFxCSBoosterShopMenu::OnCSBucksAmountChanged(int32 NewAmount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSBoosterShopMenu", "OnCSBucksAmountChanged");

	Params::GFxCSBoosterShopMenu_OnCSBucksAmountChanged Parms{};

	Parms.NewAmount = NewAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSHelpMenu.OnCloseClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSHelpMenu::OnCloseClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSHelpMenu", "OnCloseClicked");

	Params::GFxCSHelpMenu_OnCloseClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSHUD.OnBackClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSHUD::OnBackClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSHUD", "OnBackClicked");

	Params::GFxCSHUD_OnBackClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSHUD.OnCSBucksAmountChanged
// (Final, Native, Private, Const)
// Parameters:
// int32                                   NewAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGFxCSHUD::OnCSBucksAmountChanged(int32 NewAmount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSHUD", "OnCSBucksAmountChanged");

	Params::GFxCSHUD_OnCSBucksAmountChanged Parms{};

	Parms.NewAmount = NewAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSHUD.OnHelpClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSHUD::OnHelpClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSHUD", "OnHelpClicked");

	Params::GFxCSHUD_OnHelpClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSLevelSelectorMenu.OnLevelItemClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSLevelSelectorMenu::OnLevelItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSLevelSelectorMenu", "OnLevelItemClicked");

	Params::GFxCSLevelSelectorMenu_OnLevelItemClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSMainMenu.OnBuyBoosterClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSMainMenu::OnBuyBoosterClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSMainMenu", "OnBuyBoosterClicked");

	Params::GFxCSMainMenu_OnBuyBoosterClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSMainMenu.OnErrorDialogClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxDialogBox*                 SourceDialog                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChoiceNameId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSMainMenu::OnErrorDialogClicked(const class UGbxGFxDialogBox* SourceDialog, const class FName ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSMainMenu", "OnErrorDialogClicked");

	Params::GFxCSMainMenu_OnErrorDialogClicked Parms{};

	Parms.SourceDialog = SourceDialog;
	Parms.ChoiceNameId = ChoiceNameId;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSMainMenu.OnPlayClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSMainMenu::OnPlayClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSMainMenu", "OnPlayClicked");

	Params::GFxCSMainMenu_OnPlayClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSMainMenu.OnWhatsThisClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSMainMenu::OnWhatsThisClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSMainMenu", "OnWhatsThisClicked");

	Params::GFxCSMainMenu_OnWhatsThisClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.OakCitizenScienceManager.GetCitizenScienceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UOakCitizenScienceManager*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOakCitizenScienceManager* UOakCitizenScienceManager::GetCitizenScienceManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCitizenScienceManager", "GetCitizenScienceManager");

	Params::OakCitizenScienceManager_GetCitizenScienceManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakCS.GFxCSPuzzleMenu.extTokenTileTurnedOff
// (Final, Native, Private, Const)

void UGFxCSPuzzleMenu::ExtTokenTileTurnedOff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "extTokenTileTurnedOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.extTokenTileTurnedOn
// (Final, Native, Private, Const)

void UGFxCSPuzzleMenu::ExtTokenTileTurnedOn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "extTokenTileTurnedOn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.GoToMainMenu
// (Final, Native, Private, Const)

void UGFxCSPuzzleMenu::GoToMainMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "GoToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.GoToRewardScreenMenu
// (Final, Native, Private, Const)

void UGFxCSPuzzleMenu::GoToRewardScreenMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "GoToRewardScreenMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.OnConfirmQuickPass
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxDialogBox*                 SourceDialog                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChoiceNameId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSPuzzleMenu::OnConfirmQuickPass(const class UGbxGFxDialogBox* SourceDialog, const class FName ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "OnConfirmQuickPass");

	Params::GFxCSPuzzleMenu_OnConfirmQuickPass Parms{};

	Parms.SourceDialog = SourceDialog;
	Parms.ChoiceNameId = ChoiceNameId;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.OnErrorDialogClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxDialogBox*                 SourceDialog                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChoiceNameId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSPuzzleMenu::OnErrorDialogClicked(const class UGbxGFxDialogBox* SourceDialog, const class FName ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "OnErrorDialogClicked");

	Params::GFxCSPuzzleMenu_OnErrorDialogClicked Parms{};

	Parms.SourceDialog = SourceDialog;
	Parms.ChoiceNameId = ChoiceNameId;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.OnQuickPassClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSPuzzleMenu::OnQuickPassClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "OnQuickPassClicked");

	Params::GFxCSPuzzleMenu_OnQuickPassClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.OnQuitConfirmed
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxDialogBox*                 SourceDialog                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChoiceNameId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSPuzzleMenu::OnQuitConfirmed(const class UGbxGFxDialogBox* SourceDialog, const class FName ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "OnQuitConfirmed");

	Params::GFxCSPuzzleMenu_OnQuitConfirmed Parms{};

	Parms.SourceDialog = SourceDialog;
	Parms.ChoiceNameId = ChoiceNameId;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSPuzzleMenu.OnSubmitClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSPuzzleMenu::OnSubmitClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSPuzzleMenu", "OnSubmitClicked");

	Params::GFxCSPuzzleMenu_OnSubmitClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.extNumCompletedPuzzleAnimDone
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::ExtNumCompletedPuzzleAnimDone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "extNumCompletedPuzzleAnimDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.extOnShowBonusDone
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::ExtOnShowBonusDone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "extOnShowBonusDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.extOnShowPuzzleRewardDone
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::ExtOnShowPuzzleRewardDone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "extOnShowPuzzleRewardDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.extPuzzleCompletedTextAnimDone
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::ExtPuzzleCompletedTextAnimDone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "extPuzzleCompletedTextAnimDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.extRefreshNumCompletedPuzzle
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::ExtRefreshNumCompletedPuzzle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "extRefreshNumCompletedPuzzle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.GoToMainMenu
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::GoToMainMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "GoToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.GoToPuzzleMenu
// (Final, Native, Private, Const)

void UGFxCSRewardScreenMenu::GoToPuzzleMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "GoToPuzzleMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.OnMainMenuButtonClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSRewardScreenMenu::OnMainMenuButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "OnMainMenuButtonClicked");

	Params::GFxCSRewardScreenMenu_OnMainMenuButtonClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.OnPlayAgainClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSRewardScreenMenu::OnPlayAgainClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "OnPlayAgainClicked");

	Params::GFxCSRewardScreenMenu_OnPlayAgainClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSRewardScreenMenu.OnPlayNextCharacterClicked
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class UGbxGFxButton*                    PressedButton                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxMenuInputEvent               InputInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGFxCSRewardScreenMenu::OnPlayNextCharacterClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSRewardScreenMenu", "OnPlayNextCharacterClicked");

	Params::GFxCSRewardScreenMenu_OnPlayNextCharacterClicked Parms{};

	Parms.PressedButton = PressedButton;
	Parms.InputInfo = std::move(InputInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSWhatsThisMenu.OnMovieEndReached
// (Final, Native, Protected, Const)

void UGFxCSWhatsThisMenu::OnMovieEndReached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSWhatsThisMenu", "OnMovieEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSWhatsThisMenu.OnMovieMediaOpened
// (Final, Native, Protected, Const)

void UGFxCSWhatsThisMenu::OnMovieMediaOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSWhatsThisMenu", "OnMovieMediaOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.GFxCSWhatsThisMenu.OnMovieMediaOpenFailed
// (Final, Native, Protected, Const)
// Parameters:
// class FString                           FailedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGFxCSWhatsThisMenu::OnMovieMediaOpenFailed(const class FString& FailedUrl) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GFxCSWhatsThisMenu", "OnMovieMediaOpenFailed");

	Params::GFxCSWhatsThisMenu_OnMovieMediaOpenFailed Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakCS.TutorialPuzzle.GetTutorialWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UTutorialPuzzle::GetTutorialWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialPuzzle", "GetTutorialWorld");

	Params::TutorialPuzzle_GetTutorialWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakCS.TutorialPuzzle.OnTutorialEnd
// (Event, Public, BlueprintEvent)

void UTutorialPuzzle::OnTutorialEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialPuzzle", "OnTutorialEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakCS.TutorialPuzzle.OnTutorialStart
// (Event, Public, BlueprintEvent)

void UTutorialPuzzle::OnTutorialStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialPuzzle", "OnTutorialStart");

	UObject::ProcessEvent(Func, nullptr);
}

}

