#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_ATL_HW_PodRocket_Master

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Proj_ATL_HW_PodRocket_Master.Proj_ATL_HW_PodRocket_Master_C.ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master
// 0x0120 (0x0120 - 0x0000)
struct Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0048(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeap_ATL_BaseWeapon_C*               K2Node_DynamicCast_AsBPWeap_ATL_Base_Weapon;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetLocked_ReturnValue;               // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetLocked_ReturnValue1;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProjectileDetonate_Success;               // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0108(0x0018)()
};
static_assert(alignof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master) == 0x000008, "Wrong alignment on Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master");
static_assert(sizeof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master) == 0x000120, "Wrong size on Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, EntryPoint) == 0x000000, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_MyComp) == 0x000008, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_Other) == 0x000010, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_OtherComp) == 0x000018, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_bSelfMoved) == 0x000020, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_HitLocation) == 0x000024, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_HitNormal) == 0x000030, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_NormalImpulse) == 0x00003C, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_Event_Hit) == 0x000048, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_GetOwner_ReturnValue) == 0x0000D8, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_DynamicCast_AsBPWeap_ATL_Base_Weapon) == 0x0000E0, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_DynamicCast_AsBPWeap_ATL_Base_Weapon' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_IsTargetLocked_ReturnValue) == 0x0000E9, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_IsTargetLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_RandomInteger_ReturnValue) == 0x0000F0, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, Temp_bool_Has_Been_Initd_Variable) == 0x0000F4, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_IsTargetLocked_ReturnValue1) == 0x000101, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_IsTargetLocked_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_ProjectileDetonate_Success) == 0x000102, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_ProjectileDetonate_Success' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, Temp_bool_IsClosed_Variable) == 0x000103, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master, CallFunc_PostWwiseEvent_ReturnValue) == 0x000108, "Member 'Proj_ATL_HW_PodRocket_Master_C_ExecuteUbergraph_Proj_ATL_HW_PodRocket_Master::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");

// Function Proj_ATL_HW_PodRocket_Master.Proj_ATL_HW_PodRocket_Master_C.TargetLockBeam
// 0x0008 (0x0008 - 0x0000)
struct Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam final
{
public:
	class AActor*                                 HomingTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam) == 0x000008, "Wrong alignment on Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam");
static_assert(sizeof(Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam) == 0x000008, "Wrong size on Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam, HomingTarget) == 0x000000, "Member 'Proj_ATL_HW_PodRocket_Master_C_TargetLockBeam::HomingTarget' has a wrong offset!");

// Function Proj_ATL_HW_PodRocket_Master.Proj_ATL_HW_PodRocket_Master_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct Proj_ATL_HW_PodRocket_Master_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit) == 0x000008, "Wrong alignment on Proj_ATL_HW_PodRocket_Master_C_ReceiveHit");
static_assert(sizeof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit) == 0x0000D0, "Wrong size on Proj_ATL_HW_PodRocket_Master_C_ReceiveHit");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, MyComp) == 0x000000, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, Other) == 0x000008, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, HitNormal) == 0x000028, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ReceiveHit, Hit) == 0x000040, "Member 'Proj_ATL_HW_PodRocket_Master_C_ReceiveHit::Hit' has a wrong offset!");

// Function Proj_ATL_HW_PodRocket_Master.Proj_ATL_HW_PodRocket_Master_C.ProjectileDetonate
// 0x0001 (0x0001 - 0x0000)
struct Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate) == 0x000001, "Wrong alignment on Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate");
static_assert(sizeof(Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate) == 0x000001, "Wrong size on Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate, Success) == 0x000000, "Member 'Proj_ATL_HW_PodRocket_Master_C_ProjectileDetonate::Success' has a wrong offset!");

// Function Proj_ATL_HW_PodRocket_Master.Proj_ATL_HW_PodRocket_Master_C.ProjectileArm
// 0x0001 (0x0001 - 0x0000)
struct Proj_ATL_HW_PodRocket_Master_C_ProjectileArm final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_ATL_HW_PodRocket_Master_C_ProjectileArm) == 0x000001, "Wrong alignment on Proj_ATL_HW_PodRocket_Master_C_ProjectileArm");
static_assert(sizeof(Proj_ATL_HW_PodRocket_Master_C_ProjectileArm) == 0x000001, "Wrong size on Proj_ATL_HW_PodRocket_Master_C_ProjectileArm");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ProjectileArm, Success) == 0x000000, "Member 'Proj_ATL_HW_PodRocket_Master_C_ProjectileArm::Success' has a wrong offset!");

// Function Proj_ATL_HW_PodRocket_Master.Proj_ATL_HW_PodRocket_Master_C.ProjectileDisarm
// 0x0001 (0x0001 - 0x0000)
struct Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm) == 0x000001, "Wrong alignment on Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm");
static_assert(sizeof(Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm) == 0x000001, "Wrong size on Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm");
static_assert(offsetof(Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm, Success) == 0x000000, "Member 'Proj_ATL_HW_PodRocket_Master_C_ProjectileDisarm::Success' has a wrong offset!");

}

