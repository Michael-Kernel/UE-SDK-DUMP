#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_PS_MAL_ThunderballFists

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_PS_MAL_ThunderballFists.LightProjectile_PS_MAL_ThunderballFists_C.OnImpact
// 0x0290 (0x0290 - 0x0000)
struct LightProjectile_PS_MAL_ThunderballFists_C_OnImpact final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0150(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact) == 0x000008, "Wrong alignment on LightProjectile_PS_MAL_ThunderballFists_C_OnImpact");
static_assert(sizeof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact) == 0x000290, "Wrong size on LightProjectile_PS_MAL_ThunderballFists_C_OnImpact");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, Projectile) == 0x000000, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, Hit) == 0x000008, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_GetModifierValue_ReturnValue) == 0x000124, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_GetModifierType_ReturnValue) == 0x000128, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_GetSource_ReturnValue) == 0x000130, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_GetInstigator_ReturnValue) == 0x000138, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, CallFunc_Add_VectorVector_ReturnValue1) == 0x000140, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_PS_MAL_ThunderballFists_C_OnImpact, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000150, "Member 'LightProjectile_PS_MAL_ThunderballFists_C_OnImpact::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

