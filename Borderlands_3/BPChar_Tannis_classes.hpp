#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Tannis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPChar_NonPlayerCharacter_classes.hpp"
#include "GbxMission_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Tannis.BPChar_Tannis_C
// 0x0050 (0x25E0 - 0x2590)
class ABPChar_Tannis_C final : public ABPChar_NonPlayerCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Tannis_C;                    // 0x2590(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Vault_Key;                                      // 0x2598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneBodySwitchComponent*              VaultKeySwitch;                                    // 0x25A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   DefaultAudioComponent;                             // 0x25A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Wings;                                             // 0x25B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPNPCFightForYourLifeComponent_C*      BPNPCFightForYourLifeComponent;                    // 0x25B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFaceFXComponent*                       FaceFX;                                            // 0x25C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFoleyMainComponent*                    FoleyMain;                                         // 0x25C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          WingsOn;                                           // 0x25D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          BloodOn;                                           // 0x25D1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void UserConstructionScript();
	void DisableMissionBrain();
	void ReceiveBeginPlay();
	void OnRep_BloodOn();
	void OnRep_NewVar_0();
	void TannisTakeKey();
	void TannisBeginTakeKey();
	void HideKey();
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_0_MissionObserverMissionsInitialized__DelegateSignature_BPChar_Tannis_UNIX1559058710();
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_8_MissionObserverMissionObjectiveUpdate__DelegateSignature_BPChar_Tannis(const struct FMissionObjectiveReference& Objective, EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void ToggleWings(bool ShowWings);
	void TryToTakeSomethingElse();
	void BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_BPChar_Tannis(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_2_MissionObserverMissionObjectiveUpdate__DelegateSignature_BPChar_Lilith_UNIX1558430371(const struct FMissionObjectiveReference& Objective, EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_1_MissionObserverMissionsInitialized__DelegateSignature_BPChar_Lilith_UNIX1558430371();
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_0_MissionObserverMissionsInitialized__DelegateSignature_BPChar_Tannis();
	void BndEvt__MissionObserver_K2Node_ComponentBoundEvent_8_MissionObserverMissionObjectiveUpdate__DelegateSignature_BPChar_Tannis_UNIX1555086662(const struct FMissionObjectiveReference& Objective, EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void TannisBloodMatOn();
	void ExecuteUbergraph_BPChar_Tannis(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Tannis_C">();
	}
	static class ABPChar_Tannis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Tannis_C>();
	}
};
static_assert(alignof(ABPChar_Tannis_C) == 0x000010, "Wrong alignment on ABPChar_Tannis_C");
static_assert(sizeof(ABPChar_Tannis_C) == 0x0025E0, "Wrong size on ABPChar_Tannis_C");
static_assert(offsetof(ABPChar_Tannis_C, UberGraphFrame_BPChar_Tannis_C) == 0x002590, "Member 'ABPChar_Tannis_C::UberGraphFrame_BPChar_Tannis_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, SM_Vault_Key) == 0x002598, "Member 'ABPChar_Tannis_C::SM_Vault_Key' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, VaultKeySwitch) == 0x0025A0, "Member 'ABPChar_Tannis_C::VaultKeySwitch' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, DefaultAudioComponent) == 0x0025A8, "Member 'ABPChar_Tannis_C::DefaultAudioComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, Wings) == 0x0025B0, "Member 'ABPChar_Tannis_C::Wings' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, BPNPCFightForYourLifeComponent) == 0x0025B8, "Member 'ABPChar_Tannis_C::BPNPCFightForYourLifeComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, FaceFX) == 0x0025C0, "Member 'ABPChar_Tannis_C::FaceFX' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, FoleyMain) == 0x0025C8, "Member 'ABPChar_Tannis_C::FoleyMain' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, WingsOn) == 0x0025D0, "Member 'ABPChar_Tannis_C::WingsOn' has a wrong offset!");
static_assert(offsetof(ABPChar_Tannis_C, BloodOn) == 0x0025D1, "Member 'ABPChar_Tannis_C::BloodOn' has a wrong offset!");

}

