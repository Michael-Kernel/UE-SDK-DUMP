#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_Snowdrift

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_Snowdrift.Ability_Artifact_Snowdrift_C.ExecuteUbergraph_Ability_Artifact_Snowdrift
// 0x0350 (0x0350 - 0x0000)
struct Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProj_Artifact_Snowdrift_C*             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_MakeStruct_OakAbilityTimerSpec;             // 0x0010(0x0018)(NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InstanceIndex;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProj_Artifact_Snowdrift_C*             K2Node_DynamicCast_AsProj_Artifact_Snowdrift;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor, int32 InstanceIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	struct FSlideEndedDetails                     K2Node_CustomEvent_Details;                        // 0x0058(0x0018)(ConstParm, NoDestructor)
	TDelegate<void(struct FSlideEndedDetails& Details)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxSpawnActorAsyncRequest             K2Node_MakeStruct_GbxSpawnActorAsyncRequest;       // 0x0080(0x0230)(ContainsInstancedReference)
	int32                                         CallFunc_SpawnActorAsync_ReturnValue;              // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x02C8(0x0028)(NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x02F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec1;                                // 0x0308(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerSpec                   K2Node_Event_Spec;                                 // 0x0320(0x0018)(ConstParm, NoDestructor)
	struct FOakAbilityTimerResult                 K2Node_Event_Result;                               // 0x0338(0x000C)(ConstParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift) == 0x000010, "Wrong alignment on Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift");
static_assert(sizeof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift) == 0x000350, "Wrong size on Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, EntryPoint) == 0x000000, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000004, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, Temp_object_Variable) == 0x000008, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_MakeStruct_OakAbilityTimerSpec) == 0x000010, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_MakeStruct_OakAbilityTimerSpec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_CustomEvent_Actor) == 0x000028, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_CustomEvent_InstanceIndex) == 0x000030, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_CustomEvent_InstanceIndex' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_DynamicCast_AsProj_Artifact_Snowdrift) == 0x000038, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_DynamicCast_AsProj_Artifact_Snowdrift' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_CustomEvent_Details) == 0x000058, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_CreateDelegate_OutputDelegate1) == 0x000070, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_MakeStruct_GbxSpawnActorAsyncRequest) == 0x000080, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_MakeStruct_GbxSpawnActorAsyncRequest' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, CallFunc_SpawnActorAsync_ReturnValue) == 0x0002B0, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::CallFunc_SpawnActorAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x0002B8, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x0002C0, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_SwitchEnum_CmpSuccess) == 0x0002C1, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0002C8, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, CallFunc_GetActorForwardVector_ReturnValue) == 0x0002F0, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002FC, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_Event_Spec1) == 0x000308, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_Event_Spec1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_Event_Spec) == 0x000320, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift, K2Node_Event_Result) == 0x000338, "Member 'Ability_Artifact_Snowdrift_C_ExecuteUbergraph_Ability_Artifact_Snowdrift::K2Node_Event_Result' has a wrong offset!");

// Function Ability_Artifact_Snowdrift.Ability_Artifact_Snowdrift_C.GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1
// 0x0010 (0x0010 - 0x0000)
struct Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1) == 0x000008, "Wrong alignment on Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1");
static_assert(sizeof(Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1) == 0x000010, "Wrong size on Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1, Actor) == 0x000000, "Member 'Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1::Actor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1, InstanceIndex) == 0x000008, "Member 'Ability_Artifact_Snowdrift_C_GbxAsyncRequest_Spawned_BCEC033A4A0EE0839916EBA8DE9C87B1::InstanceIndex' has a wrong offset!");

// Function Ability_Artifact_Snowdrift.Ability_Artifact_Snowdrift_C.OnAbilityTimerEnded
// 0x0028 (0x0028 - 0x0000)
struct Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FOakAbilityTimerResult                 Result;                                            // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded) == 0x000008, "Wrong alignment on Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded");
static_assert(sizeof(Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded) == 0x000028, "Wrong size on Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded, Spec) == 0x000000, "Member 'Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded::Spec' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded, Result) == 0x000018, "Member 'Ability_Artifact_Snowdrift_C_OnAbilityTimerEnded::Result' has a wrong offset!");

// Function Ability_Artifact_Snowdrift.Ability_Artifact_Snowdrift_C.OnAbilityTimerStarted
// 0x0018 (0x0018 - 0x0000)
struct Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted final
{
public:
	struct FOakAbilityTimerSpec                   Spec;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted) == 0x000008, "Wrong alignment on Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted");
static_assert(sizeof(Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted) == 0x000018, "Wrong size on Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted, Spec) == 0x000000, "Member 'Ability_Artifact_Snowdrift_C_OnAbilityTimerStarted::Spec' has a wrong offset!");

// Function Ability_Artifact_Snowdrift.Ability_Artifact_Snowdrift_C.StopSliding
// 0x0018 (0x0018 - 0x0000)
struct Ability_Artifact_Snowdrift_C_StopSliding final
{
public:
	struct FSlideEndedDetails                     Details;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_Snowdrift_C_StopSliding) == 0x000008, "Wrong alignment on Ability_Artifact_Snowdrift_C_StopSliding");
static_assert(sizeof(Ability_Artifact_Snowdrift_C_StopSliding) == 0x000018, "Wrong size on Ability_Artifact_Snowdrift_C_StopSliding");
static_assert(offsetof(Ability_Artifact_Snowdrift_C_StopSliding, Details) == 0x000000, "Member 'Ability_Artifact_Snowdrift_C_StopSliding::Details' has a wrong offset!");

}

