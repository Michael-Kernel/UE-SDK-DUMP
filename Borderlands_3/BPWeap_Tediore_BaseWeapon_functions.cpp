#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_Tediore_BaseWeapon

#include "Basic.hpp"

#include "BPWeap_Tediore_BaseWeapon_classes.hpp"
#include "BPWeap_Tediore_BaseWeapon_parameters.hpp"


namespace SDK
{

// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.ExecuteUbergraph_BPWeap_Tediore_BaseWeapon
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_Tediore_BaseWeapon_C::ExecuteUbergraph_BPWeap_Tediore_BaseWeapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "ExecuteUbergraph_BPWeap_Tediore_BaseWeapon");

	Params::BPWeap_Tediore_BaseWeapon_C_ExecuteUbergraph_BPWeap_Tediore_BaseWeapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.ThrowTypeSideLR
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::ThrowTypeSideLR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "ThrowTypeSideLR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.ThrowTypeUnderhand
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::ThrowTypeUnderhand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "ThrowTypeUnderhand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.ThrowTypeSideRL
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::ThrowTypeSideRL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "ThrowTypeSideRL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.ThrowTypeOverhand
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::ThrowTypeOverhand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "ThrowTypeOverhand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.WeaponAttached
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::WeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "WeaponAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.Notify_ReloadStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAutoReload                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeap_Tediore_BaseWeapon_C::Notify_ReloadStarted(bool bAutoReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "Notify_ReloadStarted");

	Params::BPWeap_Tediore_BaseWeapon_C_Notify_ReloadStarted Parms{};

	Parms.bAutoReload = bAutoReload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.TedioreThrowWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ThrownProjectile                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_Tediore_BaseWeapon_C::TedioreThrowWeapon(class AActor** ThrownProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "TedioreThrowWeapon");

	Params::BPWeap_Tediore_BaseWeapon_C_TedioreThrowWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThrownProjectile != nullptr)
		*ThrownProjectile = Parms.ThrownProjectile;
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.TedioreHideWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::TedioreHideWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "TedioreHideWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.TedioreShowWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::TedioreShowWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "TedioreShowWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.OnRep_HideLegs
// (BlueprintCallable, BlueprintEvent)

void ABPWeap_Tediore_BaseWeapon_C::OnRep_HideLegs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "OnRep_HideLegs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeap_Tediore_BaseWeapon.BPWeap_Tediore_BaseWeapon_C.Tediore_WeaponData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageRadius                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DamageTypeClass                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumMirvProjectiles_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FireRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LoadedAmmo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ThrowType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeap_Tediore_BaseWeapon_C::Tediore_WeaponData(float* DamageRadius, class UClass** DamageTypeClass, int32* NumMirvProjectiles_0, float* FireRate, float* LoadedAmmo, int32* ThrowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeap_Tediore_BaseWeapon_C", "Tediore_WeaponData");

	Params::BPWeap_Tediore_BaseWeapon_C_Tediore_WeaponData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageRadius != nullptr)
		*DamageRadius = Parms.DamageRadius;

	if (DamageTypeClass != nullptr)
		*DamageTypeClass = Parms.DamageTypeClass;

	if (NumMirvProjectiles_0 != nullptr)
		*NumMirvProjectiles_0 = Parms.NumMirvProjectiles_0;

	if (FireRate != nullptr)
		*FireRate = Parms.FireRate;

	if (LoadedAmmo != nullptr)
		*LoadedAmmo = Parms.LoadedAmmo;

	if (ThrowType != nullptr)
		*ThrowType = Parms.ThrowType;
}

}

