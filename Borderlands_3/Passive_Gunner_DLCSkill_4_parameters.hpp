#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Gunner_DLCSkill_4

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Passive_Gunner_DLCSkill_4.Passive_Gunner_DLCSkill_4_C.CalculateAbilityState
// 0x0018 (0x0018 - 0x0000)
struct Passive_Gunner_DLCSkill_4_C_CalculateAbilityState final
{
public:
	EGbxAbilityState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility*                      CallFunc_GetPrimaryActionAbility_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxAbilityState                              CallFunc_CalculateAbilityState_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGbxAbilityState                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState) == 0x000008, "Wrong alignment on Passive_Gunner_DLCSkill_4_C_CalculateAbilityState");
static_assert(sizeof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState) == 0x000018, "Wrong size on Passive_Gunner_DLCSkill_4_C_CalculateAbilityState");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, ReturnValue) == 0x000000, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, Temp_bool_Variable) == 0x000001, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, Temp_byte_Variable) == 0x000002, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, CallFunc_GetPrimaryActionAbility_ReturnValue) == 0x000008, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::CallFunc_GetPrimaryActionAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, CallFunc_CalculateAbilityState_ReturnValue) == 0x000010, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::CallFunc_CalculateAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, CallFunc_IsActive_ReturnValue) == 0x000011, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Passive_Gunner_DLCSkill_4_C_CalculateAbilityState, K2Node_Select_Default) == 0x000012, "Member 'Passive_Gunner_DLCSkill_4_C_CalculateAbilityState::K2Node_Select_Default' has a wrong offset!");

}

