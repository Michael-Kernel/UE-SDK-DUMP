#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cond_AIIsSpeaking

#include "Basic.hpp"

#include "Cond_AIIsSpeaking_classes.hpp"
#include "Cond_AIIsSpeaking_parameters.hpp"


namespace SDK
{

// Function Cond_AIIsSpeaking.Cond_AIIsSpeaking_C.EvaluateCondition
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          OptionalContext                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCond_AIIsSpeaking_C::EvaluateCondition(class UObject* Context, class UObject* OptionalContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cond_AIIsSpeaking_C", "EvaluateCondition");

	Params::Cond_AIIsSpeaking_C_EvaluateCondition Parms{};

	Parms.Context = Context;
	Parms.OptionalContext = OptionalContext;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

