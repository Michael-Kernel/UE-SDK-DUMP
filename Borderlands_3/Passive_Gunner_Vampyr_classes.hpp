#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Gunner_Vampyr

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Passive_Gunner_Vampyr.Passive_Gunner_Vampyr_C
// 0x0038 (0x01E8 - 0x01B0)
class UPassive_Gunner_Vampyr_C final : public UOakPassiveAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(Transient, DuplicateTransient)
	float                                         MaxHealingClamp;                                   // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Gunner_Vampyr; // 0x01C0(0x0028)()

public:
	void ExecuteUbergraph_Passive_Gunner_Vampyr(int32 EntryPoint);
	void OnActivated();
	void Vampyr_OnCausedAnyDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void Vampyr_IronBearReady(class AOakCharacter_IronBear* IronBear);
	void HealDamageCauser(class AActor* DamageCauser, float CurrentHealth, float MaxHealth, class UClass* DamageType, float Scalar);
	void CustomEvent_0(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Passive_Gunner_Vampyr_C">();
	}
	static class UPassive_Gunner_Vampyr_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassive_Gunner_Vampyr_C>();
	}
};
static_assert(alignof(UPassive_Gunner_Vampyr_C) == 0x000008, "Wrong alignment on UPassive_Gunner_Vampyr_C");
static_assert(sizeof(UPassive_Gunner_Vampyr_C) == 0x0001E8, "Wrong size on UPassive_Gunner_Vampyr_C");
static_assert(offsetof(UPassive_Gunner_Vampyr_C, UberGraphFrame) == 0x0001B0, "Member 'UPassive_Gunner_Vampyr_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPassive_Gunner_Vampyr_C, MaxHealingClamp) == 0x0001B8, "Member 'UPassive_Gunner_Vampyr_C::MaxHealingClamp' has a wrong offset!");
static_assert(offsetof(UPassive_Gunner_Vampyr_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Gunner_Vampyr) == 0x0001C0, "Member 'UPassive_Gunner_Vampyr_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Passive_Gunner_Vampyr' has a wrong offset!");

}

