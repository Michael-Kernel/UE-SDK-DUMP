#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_LeagueNPC_Maurice

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPChar_LeagueNPC_Maurice.BPChar_LeagueNPC_Maurice_C.ExecuteUbergraph_BPChar_LeagueNPC_Maurice
// 0x0040 (0x0040 - 0x0000)
struct BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRtpcValue_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWwiseRtpc*>                     K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor)
	bool                                          CallFunc_IsSpeakerActive_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice) == 0x000008, "Wrong alignment on BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice");
static_assert(sizeof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice) == 0x000040, "Wrong size on BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, EntryPoint) == 0x000000, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, CallFunc_GetRtpcValue_ReturnValue) == 0x000004, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::CallFunc_GetRtpcValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, K2Node_MakeArray_Array) == 0x000008, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice, CallFunc_IsSpeakerActive_ReturnValue) == 0x000038, "Member 'BPChar_LeagueNPC_Maurice_C_ExecuteUbergraph_BPChar_LeagueNPC_Maurice::CallFunc_IsSpeakerActive_ReturnValue' has a wrong offset!");

}

