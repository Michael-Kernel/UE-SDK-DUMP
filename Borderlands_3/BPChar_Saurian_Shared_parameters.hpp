#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Saurian_Shared

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.ExecuteUbergraph_BPChar_Saurian_Shared
// 0x0050 (0x0050 - 0x0000)
struct BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enabled;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_isLeft;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Active;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_Event_Character;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector;        // 0x0020(0x0010)(NoDestructor)
	struct FGbxBlackboardKeySelector              K2Node_MakeStruct_GbxBlackboardKeySelector1;       // 0x0030(0x0010)(NoDestructor)
	class AActor*                                 K2Node_ComponentBoundEvent_DamageReceiver;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared) == 0x000008, "Wrong alignment on BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared");
static_assert(sizeof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared) == 0x000050, "Wrong size on BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, EntryPoint) == 0x000000, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_Event_Enabled) == 0x000004, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_Event_isLeft) == 0x000005, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_Event_isLeft' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_Event_Active) == 0x000006, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_Event_Active' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_Event_TargetActor) == 0x000008, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_Event_Character) == 0x000018, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_MakeStruct_GbxBlackboardKeySelector) == 0x000020, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_MakeStruct_GbxBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_MakeStruct_GbxBlackboardKeySelector1) == 0x000030, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_MakeStruct_GbxBlackboardKeySelector1' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_ComponentBoundEvent_DamageReceiver) == 0x000040, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_ComponentBoundEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared, K2Node_ComponentBoundEvent_DamageCauser) == 0x000048, "Member 'BPChar_Saurian_Shared_C_ExecuteUbergraph_BPChar_Saurian_Shared::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared
// 0x0010 (0x0010 - 0x0000)
struct BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared final
{
public:
	class AActor*                                 DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared) == 0x000008, "Wrong alignment on BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared");
static_assert(sizeof(BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared) == 0x000010, "Wrong size on BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared");
static_assert(offsetof(BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared, DamageReceiver) == 0x000000, "Member 'BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared, DamageCauser) == 0x000008, "Member 'BPChar_Saurian_Shared_C_BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Saurian_Shared::DamageCauser' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.Player_HealthDepleted
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Saurian_Shared_C_Player_HealthDepleted final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Saurian_Shared_C_Player_HealthDepleted) == 0x000008, "Wrong alignment on BPChar_Saurian_Shared_C_Player_HealthDepleted");
static_assert(sizeof(BPChar_Saurian_Shared_C_Player_HealthDepleted) == 0x000008, "Wrong size on BPChar_Saurian_Shared_C_Player_HealthDepleted");
static_assert(offsetof(BPChar_Saurian_Shared_C_Player_HealthDepleted, Character) == 0x000000, "Member 'BPChar_Saurian_Shared_C_Player_HealthDepleted::Character' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.SaurianTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct BPChar_Saurian_Shared_C_SaurianTargetChanged final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Saurian_Shared_C_SaurianTargetChanged) == 0x000008, "Wrong alignment on BPChar_Saurian_Shared_C_SaurianTargetChanged");
static_assert(sizeof(BPChar_Saurian_Shared_C_SaurianTargetChanged) == 0x000008, "Wrong size on BPChar_Saurian_Shared_C_SaurianTargetChanged");
static_assert(offsetof(BPChar_Saurian_Shared_C_SaurianTargetChanged, TargetActor) == 0x000000, "Member 'BPChar_Saurian_Shared_C_SaurianTargetChanged::TargetActor' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.SetSlaughterWeaponState
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Saurian_Shared_C_SetSlaughterWeaponState final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Saurian_Shared_C_SetSlaughterWeaponState) == 0x000001, "Wrong alignment on BPChar_Saurian_Shared_C_SetSlaughterWeaponState");
static_assert(sizeof(BPChar_Saurian_Shared_C_SetSlaughterWeaponState) == 0x000001, "Wrong size on BPChar_Saurian_Shared_C_SetSlaughterWeaponState");
static_assert(offsetof(BPChar_Saurian_Shared_C_SetSlaughterWeaponState, Active) == 0x000000, "Member 'BPChar_Saurian_Shared_C_SetSlaughterWeaponState::Active' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.TyrantFootstep
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Saurian_Shared_C_TyrantFootstep final
{
public:
	bool                                          IsLeft;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Saurian_Shared_C_TyrantFootstep) == 0x000001, "Wrong alignment on BPChar_Saurian_Shared_C_TyrantFootstep");
static_assert(sizeof(BPChar_Saurian_Shared_C_TyrantFootstep) == 0x000001, "Wrong size on BPChar_Saurian_Shared_C_TyrantFootstep");
static_assert(offsetof(BPChar_Saurian_Shared_C_TyrantFootstep, IsLeft) == 0x000000, "Member 'BPChar_Saurian_Shared_C_TyrantFootstep::IsLeft' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.SetCustomCritEnabled
// 0x0001 (0x0001 - 0x0000)
struct BPChar_Saurian_Shared_C_SetCustomCritEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Saurian_Shared_C_SetCustomCritEnabled) == 0x000001, "Wrong alignment on BPChar_Saurian_Shared_C_SetCustomCritEnabled");
static_assert(sizeof(BPChar_Saurian_Shared_C_SetCustomCritEnabled) == 0x000001, "Wrong size on BPChar_Saurian_Shared_C_SetCustomCritEnabled");
static_assert(offsetof(BPChar_Saurian_Shared_C_SetCustomCritEnabled, Enabled) == 0x000000, "Member 'BPChar_Saurian_Shared_C_SetCustomCritEnabled::Enabled' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.DisableAuxiliaryCollision
// 0x0020 (0x0020 - 0x0000)
struct BPChar_Saurian_Shared_C_DisableAuxiliaryCollision final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakCapsuleComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision) == 0x000008, "Wrong alignment on BPChar_Saurian_Shared_C_DisableAuxiliaryCollision");
static_assert(sizeof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision) == 0x000020, "Wrong size on BPChar_Saurian_Shared_C_DisableAuxiliaryCollision");
static_assert(offsetof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BPChar_Saurian_Shared_C_DisableAuxiliaryCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BPChar_Saurian_Shared_C_DisableAuxiliaryCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BPChar_Saurian_Shared_C_DisableAuxiliaryCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BPChar_Saurian_Shared_C_DisableAuxiliaryCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPChar_Saurian_Shared_C_DisableAuxiliaryCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPChar_Saurian_Shared_C_DisableAuxiliaryCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BPChar_Saurian_Shared_C_DisableAuxiliaryCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BPChar_Saurian_Shared.BPChar_Saurian_Shared_C.GetVariant
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BPChar_Saurian_Shared_C_GetVariant final
{
public:
	class FName                                   Variant_0;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPChar_Saurian_Shared_C_GetVariant) == 0x000008, "Wrong alignment on BPChar_Saurian_Shared_C_GetVariant");
static_assert(sizeof(BPChar_Saurian_Shared_C_GetVariant) == 0x000008, "Wrong size on BPChar_Saurian_Shared_C_GetVariant");
static_assert(offsetof(BPChar_Saurian_Shared_C_GetVariant, Variant_0) == 0x000000, "Member 'BPChar_Saurian_Shared_C_GetVariant::Variant_0' has a wrong offset!");

}

