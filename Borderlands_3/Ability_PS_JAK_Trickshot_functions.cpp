#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_PS_JAK_Trickshot

#include "Basic.hpp"

#include "Ability_PS_JAK_Trickshot_classes.hpp"
#include "Ability_PS_JAK_Trickshot_parameters.hpp"


namespace SDK
{

// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.ExecuteUbergraph_Ability_PS_JAK_Trickshot
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_PS_JAK_Trickshot_C::ExecuteUbergraph_Ability_PS_JAK_Trickshot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "ExecuteUbergraph_Ability_PS_JAK_Trickshot");

	Params::Ability_PS_JAK_Trickshot_C_ExecuteUbergraph_Ability_PS_JAK_Trickshot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.OnPaused
// (Event, Protected, BlueprintEvent)

void UAbility_PS_JAK_Trickshot_C::OnPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "OnPaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.OnUnregistered
// (Event, Protected, BlueprintEvent)

void UAbility_PS_JAK_Trickshot_C::OnUnregistered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "OnUnregistered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.OnDeactivated
// (Event, Protected, BlueprintEvent)

void UAbility_PS_JAK_Trickshot_C::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.ReloadEndedDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          EventWeapon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCompleted                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAbility_PS_JAK_Trickshot_C::ReloadEndedDelegate(class AWeapon* EventWeapon, bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "ReloadEndedDelegate");

	Params::Ability_PS_JAK_Trickshot_C_ReloadEndedDelegate Parms{};

	Parms.EventWeapon = EventWeapon;
	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.OnCausedDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxDamageType*                   DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageSource*                    DamageSource                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDamageDetails             Details                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UAbility_PS_JAK_Trickshot_C::OnCausedDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "OnCausedDamage");

	Params::Ability_PS_JAK_Trickshot_C_OnCausedDamage Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.DamageSource = DamageSource;
	Parms.DamagedActor = DamagedActor;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_PS_JAK_Trickshot.Ability_PS_JAK_Trickshot_C.OnRegistered
// (Event, Protected, BlueprintEvent)

void UAbility_PS_JAK_Trickshot_C::OnRegistered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_PS_JAK_Trickshot_C", "OnRegistered");

	UObject::ProcessEvent(Func, nullptr);
}

}

