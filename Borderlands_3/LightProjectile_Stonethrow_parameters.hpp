#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Stonethrow

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_Stonethrow.LightProjectile_Stonethrow_C.OnDamage
// 0x04E0 (0x04E0 - 0x0000)
struct LightProjectile_Stonethrow_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               EndRot;                                            // 0x009C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                HitLocation;                                       // 0x00A8(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RicochetTarget;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetFiringPatternID_ReturnValue;           // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0188(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue1;             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue1;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue2;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01C8(0x0140)(ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0308(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0314(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0324(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData1; // 0x0360(0x0140)(ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x04A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x04AC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x04B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_Stonethrow_C_OnDamage) == 0x000010, "Wrong alignment on LightProjectile_Stonethrow_C_OnDamage");
static_assert(sizeof(LightProjectile_Stonethrow_C_OnDamage) == 0x0004E0, "Wrong size on LightProjectile_Stonethrow_C_OnDamage");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_Stonethrow_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_Stonethrow_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_Stonethrow_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, EndRot) == 0x00009C, "Member 'LightProjectile_Stonethrow_C_OnDamage::EndRot' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, HitLocation) == 0x0000A8, "Member 'LightProjectile_Stonethrow_C_OnDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, RicochetTarget) == 0x0000B8, "Member 'LightProjectile_Stonethrow_C_OnDamage::RicochetTarget' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, Temp_float_Variable) == 0x0000C0, "Member 'LightProjectile_Stonethrow_C_OnDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C4, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C5, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000C8, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000CC, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000D0, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000DC, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000E8, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F4, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000124, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000128, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000134, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetForwardVector_ReturnValue) == 0x000140, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakVector_X) == 0x00014C, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakVector_Y) == 0x000150, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakVector_Z) == 0x000154, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x000158, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, Temp_bool_Variable) == 0x000160, "Member 'LightProjectile_Stonethrow_C_OnDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000164, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, K2Node_Select_Default) == 0x000168, "Member 'LightProjectile_Stonethrow_C_OnDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetModifierType_ReturnValue) == 0x00016C, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetSource_ReturnValue) == 0x000170, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetInstigator_ReturnValue1) == 0x000178, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000180, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetFiringPatternID_ReturnValue) == 0x000184, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetFiringPatternID_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000188, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_Add_ByteByte_ReturnValue) == 0x000198, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetModifierType_ReturnValue1) == 0x000199, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetModifierType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetSource_ReturnValue1) == 0x0001A0, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetSource_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_GetInstigator_ReturnValue2) == 0x0001A8, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_GetInstigator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001B0, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B4, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001C0, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001C8, "Member 'LightProjectile_Stonethrow_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_MakeVector_ReturnValue) == 0x000308, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000314, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000320, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000324, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_Array_Get_Item) == 0x000330, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData1) == 0x000360, "Member 'LightProjectile_Stonethrow_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakTransform_Location) == 0x0004A0, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakTransform_Rotation) == 0x0004AC, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_BreakTransform_Scale) == 0x0004B8, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x0004C8, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Stonethrow_C_OnDamage, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x0004D0, "Member 'LightProjectile_Stonethrow_C_OnDamage::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");

}

