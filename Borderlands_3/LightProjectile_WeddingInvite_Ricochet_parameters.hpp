#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_WeddingInvite_Ricochet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_WeddingInvite_Ricochet.LightProjectile_WeddingInvite_Ricochet_C.OnDamage
// 0x0270 (0x0270 - 0x0000)
struct LightProjectile_WeddingInvite_Ricochet_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0120(0x0038)(NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0160(0x0018)(NoDestructor, ContainsInstancedReference)
	float                                         Temp_float_Variable1;                              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable4;                              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0190(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery;               // 0x0238(0x0018)(NoDestructor)
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue;            // 0x0250(0x0010)(NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_WeddingInvite_Ricochet_C_OnDamage");
static_assert(sizeof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage) == 0x000270, "Wrong size on LightProjectile_WeddingInvite_Ricochet_C_OnDamage");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_int_Variable) == 0x00009C, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A0, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A1, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000A8, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, K2Node_MakeStruct_StatusEffectSpec) == 0x000120, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_float_Variable) == 0x000158, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_AddStatusEffect_ReturnValue) == 0x000160, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_float_Variable1) == 0x000178, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_float_Variable2) == 0x00017C, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_float_Variable3) == 0x000180, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_float_Variable4) == 0x000184, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_float_Variable5) == 0x000188, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, Temp_struct_Variable) == 0x000190, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_GetDataTableValue_OutValue) == 0x000220, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_GetDataTableValue_ReturnValue) == 0x000224, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x000228, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000230, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, K2Node_MakeStruct_StatusEffectQuery) == 0x000238, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::K2Node_MakeStruct_StatusEffectQuery' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_QueryStatusEffect_ReturnValue) == 0x000250, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_QueryStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, K2Node_Select_Default) == 0x000260, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000264, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000268, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LightProjectile_WeddingInvite_Ricochet_C_OnDamage, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00026C, "Member 'LightProjectile_WeddingInvite_Ricochet_C_OnDamage::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");

}

