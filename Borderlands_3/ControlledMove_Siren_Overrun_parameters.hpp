#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_Siren_Overrun

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function ControlledMove_Siren_Overrun.ControlledMove_Siren_Overrun_C.ExecuteUbergraph_ControlledMove_Siren_Overrun
// 0x0098 (0x0098 - 0x0000)
struct ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInterrupted;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0038(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBPChar_Siren_C>      K2Node_DynamicCast_AsIBPChar_Siren;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility_PhaseTrance*          CallFunc_GetPhaseTranceAbility_Res;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInterrupted1;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhaseTranceElementalType                     CallFunc_GetCurrentlyAttunedElement_ReturnValue;   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select1_Default;                            // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun) == 0x000008, "Wrong alignment on ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun");
static_assert(sizeof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun) == 0x000098, "Wrong size on ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, EntryPoint) == 0x000000, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_Event_bInterrupted) == 0x000004, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_Event_bInterrupted' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_byte_Variable) == 0x000005, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_object_Variable) == 0x000008, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_object_Variable1) == 0x000010, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_object_Variable2) == 0x000018, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_object_Variable3) == 0x000020, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_bool_Variable) == 0x000028, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_bool_Has_Been_Initd_Variable) == 0x000029, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, Temp_bool_IsClosed_Variable) == 0x00002A, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_Event_HitActor) == 0x000030, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_Event_HitNormal) == 0x000038, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_DynamicCast_AsIBPChar_Siren) == 0x000048, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_DynamicCast_AsIBPChar_Siren' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, CallFunc_GetPhaseTranceAbility_Res) == 0x000068, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::CallFunc_GetPhaseTranceAbility_Res' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_Event_bInterrupted1) == 0x000070, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_Event_bInterrupted1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, CallFunc_GetCurrentlyAttunedElement_ReturnValue) == 0x000071, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::CallFunc_GetCurrentlyAttunedElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_Select_Default) == 0x000078, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000080, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun, K2Node_Select1_Default) == 0x00008C, "Member 'ControlledMove_Siren_Overrun_C_ExecuteUbergraph_ControlledMove_Siren_Overrun::K2Node_Select1_Default' has a wrong offset!");

// Function ControlledMove_Siren_Overrun.ControlledMove_Siren_Overrun_C.OnStop
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_Siren_Overrun_C_OnStop final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_Siren_Overrun_C_OnStop) == 0x000001, "Wrong alignment on ControlledMove_Siren_Overrun_C_OnStop");
static_assert(sizeof(ControlledMove_Siren_Overrun_C_OnStop) == 0x000001, "Wrong size on ControlledMove_Siren_Overrun_C_OnStop");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_OnStop, bInterrupted) == 0x000000, "Member 'ControlledMove_Siren_Overrun_C_OnStop::bInterrupted' has a wrong offset!");

// Function ControlledMove_Siren_Overrun.ControlledMove_Siren_Overrun_C.OnServerStop
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_Siren_Overrun_C_OnServerStop final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_Siren_Overrun_C_OnServerStop) == 0x000001, "Wrong alignment on ControlledMove_Siren_Overrun_C_OnServerStop");
static_assert(sizeof(ControlledMove_Siren_Overrun_C_OnServerStop) == 0x000001, "Wrong size on ControlledMove_Siren_Overrun_C_OnServerStop");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_OnServerStop, bInterrupted) == 0x000000, "Member 'ControlledMove_Siren_Overrun_C_OnServerStop::bInterrupted' has a wrong offset!");

// Function ControlledMove_Siren_Overrun.ControlledMove_Siren_Overrun_C.OnHitTargetable
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_Siren_Overrun_C_OnHitTargetable final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_Siren_Overrun_C_OnHitTargetable) == 0x000008, "Wrong alignment on ControlledMove_Siren_Overrun_C_OnHitTargetable");
static_assert(sizeof(ControlledMove_Siren_Overrun_C_OnHitTargetable) == 0x000018, "Wrong size on ControlledMove_Siren_Overrun_C_OnHitTargetable");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_OnHitTargetable, HitActor) == 0x000000, "Member 'ControlledMove_Siren_Overrun_C_OnHitTargetable::HitActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_Siren_Overrun_C_OnHitTargetable, HitNormal) == 0x000008, "Member 'ControlledMove_Siren_Overrun_C_OnHitTargetable::HitNormal' has a wrong offset!");

}

