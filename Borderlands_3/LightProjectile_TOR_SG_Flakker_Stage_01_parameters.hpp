#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TOR_SG_Flakker_Stage_01

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TOR_SG_Flakker_Stage_01.LightProjectile_TOR_SG_Flakker_Stage_01_C.OnLifetimeExpired
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired) == 0x000010, "Wrong size on LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnLifetimeExpired::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function LightProjectile_TOR_SG_Flakker_Stage_01.LightProjectile_TOR_SG_Flakker_Stage_01_C.OnExplode
// 0x00C0 (0x00C0 - 0x0000)
struct LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x000C)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode) == 0x000010, "Wrong alignment on LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode");
static_assert(sizeof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode) == 0x0000C0, "Wrong size on LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, Projectile) == 0x000000, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, Temp_int_Array_Index_Variable) == 0x000014, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_GetUpVector_ReturnValue) == 0x000018, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000030, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_Array_Get_Item) == 0x000050, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_BreakTransform_Location) == 0x000080, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_GetForwardVector_ReturnValue) == 0x0000A8, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'LightProjectile_TOR_SG_Flakker_Stage_01_C_OnExplode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

