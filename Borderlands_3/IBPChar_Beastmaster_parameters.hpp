#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IBPChar_Beastmaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_BeastmasterDialogAction_structs.hpp"


namespace SDK::Params
{

// Function IBPChar_Beastmaster.IBPChar_Beastmaster_C.PlayPetAudioCallAndResponse
// 0x0001 (0x0001 - 0x0000)
struct IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse final
{
public:
	Enum_BeastmasterDialogAction                  DialogType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse) == 0x000001, "Wrong alignment on IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse");
static_assert(sizeof(IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse) == 0x000001, "Wrong size on IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse");
static_assert(offsetof(IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse, DialogType) == 0x000000, "Member 'IBPChar_Beastmaster_C_PlayPetAudioCallAndResponse::DialogType' has a wrong offset!");

// Function IBPChar_Beastmaster.IBPChar_Beastmaster_C.SetNewPetThreatScale
// 0x0004 (0x0004 - 0x0000)
struct IBPChar_Beastmaster_C_SetNewPetThreatScale final
{
public:
	float                                         NewScale;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Beastmaster_C_SetNewPetThreatScale) == 0x000004, "Wrong alignment on IBPChar_Beastmaster_C_SetNewPetThreatScale");
static_assert(sizeof(IBPChar_Beastmaster_C_SetNewPetThreatScale) == 0x000004, "Wrong size on IBPChar_Beastmaster_C_SetNewPetThreatScale");
static_assert(offsetof(IBPChar_Beastmaster_C_SetNewPetThreatScale, NewScale) == 0x000000, "Member 'IBPChar_Beastmaster_C_SetNewPetThreatScale::NewScale' has a wrong offset!");

// Function IBPChar_Beastmaster.IBPChar_Beastmaster_C.TryForceSpawnPetAtLocation
// 0x0010 (0x0010 - 0x0000)
struct IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRes;                                              // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation) == 0x000004, "Wrong alignment on IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation");
static_assert(sizeof(IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation) == 0x000010, "Wrong size on IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation");
static_assert(offsetof(IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation, Location) == 0x000000, "Member 'IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation::Location' has a wrong offset!");
static_assert(offsetof(IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation, bRes) == 0x00000C, "Member 'IBPChar_Beastmaster_C_TryForceSpawnPetAtLocation::bRes' has a wrong offset!");

// Function IBPChar_Beastmaster.IBPChar_Beastmaster_C.GetCurrentPet
// 0x0008 (0x0008 - 0x0000)
struct IBPChar_Beastmaster_C_GetCurrentPet final
{
public:
	class AOakCharacter*                          Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IBPChar_Beastmaster_C_GetCurrentPet) == 0x000008, "Wrong alignment on IBPChar_Beastmaster_C_GetCurrentPet");
static_assert(sizeof(IBPChar_Beastmaster_C_GetCurrentPet) == 0x000008, "Wrong size on IBPChar_Beastmaster_C_GetCurrentPet");
static_assert(offsetof(IBPChar_Beastmaster_C_GetCurrentPet, Res) == 0x000000, "Member 'IBPChar_Beastmaster_C_GetCurrentPet::Res' has a wrong offset!");

}

