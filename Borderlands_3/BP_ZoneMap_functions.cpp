#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZoneMap

#include "Basic.hpp"

#include "BP_ZoneMap_classes.hpp"
#include "BP_ZoneMap_parameters.hpp"


namespace SDK
{

// Function BP_ZoneMap.BP_ZoneMap_C.On Close Planet Mode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::On_Close_Planet_Mode__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "On Close Planet Mode__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.On Close Galaxy Mode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::On_Close_Galaxy_Mode__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "On Close Galaxy Mode__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.On Close Level Mode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::On_Close_Level_Mode__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "On Close Level Mode__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.ExecuteUbergraph_BP_ZoneMap
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::ExecuteUbergraph_BP_ZoneMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "ExecuteUbergraph_BP_ZoneMap");

	Params::BP_ZoneMap_C_ExecuteUbergraph_BP_ZoneMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_PostLoadedPlanetClass
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_PostLoadedPlanetClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_PostLoadedPlanetClass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_OnZoneMapHidden
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_OnZoneMapHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_OnZoneMapHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Play Level Map Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Play_Level_Map_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Play Level Map Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.DEBUG Cycle Planet Map POIs
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::DEBUG_Cycle_Planet_Map_POIs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "DEBUG Cycle Planet Map POIs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewlyFocusedPOI                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::CustomEvent_0(class AActor* NewlyFocusedPOI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "CustomEvent_0");

	Params::BP_ZoneMap_C_CustomEvent_0 Parms{};

	Parms.NewlyFocusedPOI = NewlyFocusedPOI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_OnEchoClosed
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_OnEchoClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_OnEchoClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_OnZoneMapShown
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_OnZoneMapShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_OnZoneMapShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_OnEchoOpened
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_OnEchoOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_OnEchoOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_OnMiniMapShown
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_OnMiniMapShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_OnMiniMapShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_PostLoadedMapMesh
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::K2_PostLoadedMapMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_PostLoadedMapMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_SetCustomWaypoint
// (Event, Protected, BlueprintEvent)

void ABP_ZoneMap_C::K2_SetCustomWaypoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_SetCustomWaypoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_FocusOnPlanet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPlanetData*                      Planet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::K2_FocusOnPlanet(class UPlanetData* Planet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_FocusOnPlanet");

	Params::BP_ZoneMap_C_K2_FocusOnPlanet Parms{};

	Parms.Planet = Planet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_FocusOnLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UZoneMapData*                     Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::K2_FocusOnLevel(class UZoneMapData* Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_FocusOnLevel");

	Params::BP_ZoneMap_C_K2_FocusOnLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_CenterOnPlayer
// (Event, Protected, BlueprintEvent)

void ABP_ZoneMap_C::K2_CenterOnPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_CenterOnPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_FocusOnTransform
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::K2_FocusOnTransform(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_FocusOnTransform");

	Params::BP_ZoneMap_C_K2_FocusOnTransform Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_ResetAxisInput
// (Event, Protected, BlueprintEvent)

void ABP_ZoneMap_C::K2_ResetAxisInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_ResetAxisInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GotoParentMap
// (Event, Protected, BlueprintEvent)

void ABP_ZoneMap_C::K2_GotoParentMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GotoParentMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GotoPlanetMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPlanetData*                      InPlanetData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::K2_GotoPlanetMap(class UPlanetData* InPlanetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GotoPlanetMap");

	Params::BP_ZoneMap_C_K2_GotoPlanetMap Parms{};

	Parms.InPlanetData = InPlanetData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GotoLevelMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UZoneMapData*                     InLevelData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::K2_GotoLevelMap(class UZoneMapData* InLevelData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GotoLevelMap");

	Params::BP_ZoneMap_C_K2_GotoLevelMap Parms{};

	Parms.InLevelData = InLevelData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Manual Recenter
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Manual_Recenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Manual Recenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Set Local Waypoint
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Set_Local_Waypoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Set Local Waypoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Close Galaxy Mode
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Close_Galaxy_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Close Galaxy Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.On Completed Dismissal Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::On_Completed_Dismissal_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "On Completed Dismissal Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Close Planet Mode
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Close_Planet_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Close Planet Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Close Level Mode
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Close_Level_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Close Level Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Stop Galaxy Map Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Stop_Galaxy_Map_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Stop Galaxy Map Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Play Galaxy Map Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Play_Galaxy_Map_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Play Galaxy Map Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Stop Planet Map Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Stop_Planet_Map_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Stop Planet Map Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Play Planet Map Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Play_Planet_Map_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Play Planet Map Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.GbxMenu_LeftStickAxisY
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::GbxMenu_LeftStickAxisY(float Axis_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "GbxMenu_LeftStickAxisY");

	Params::BP_ZoneMap_C_GbxMenu_LeftStickAxisY Parms{};

	Parms.Axis_Value = Axis_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.GbxMenu_LeftStickAxisX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::GbxMenu_LeftStickAxisX(float Axis_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "GbxMenu_LeftStickAxisX");

	Params::BP_ZoneMap_C_GbxMenu_LeftStickAxisX Parms{};

	Parms.Axis_Value = Axis_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Shutdown Map
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInstantShutdown                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Shutdown_Map(bool bInstantShutdown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Shutdown Map");

	Params::BP_ZoneMap_C_Shutdown_Map Parms{};

	Parms.bInstantShutdown = bInstantShutdown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Open Parent Menu
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Open_Parent_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Open Parent Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Stop Level Map Effects
// (BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Stop_Level_Map_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Stop Level Map Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.OakMenu_MapZoomIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::OakMenu_MapZoomIn(float Axis_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "OakMenu_MapZoomIn");

	Params::BP_ZoneMap_C_OakMenu_MapZoomIn Parms{};

	Parms.Axis_Value = Axis_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.OakMenu_MapZoomOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::OakMenu_MapZoomOut(float Axis_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "OakMenu_MapZoomOut");

	Params::BP_ZoneMap_C_OakMenu_MapZoomOut Parms{};

	Parms.Axis_Value = Axis_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.GbxMenu_RightStickAxisY
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::GbxMenu_RightStickAxisY(float Axis_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "GbxMenu_RightStickAxisY");

	Params::BP_ZoneMap_C_GbxMenu_RightStickAxisY Parms{};

	Parms.Axis_Value = Axis_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.GbxMenu_RightStickAxisX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::GbxMenu_RightStickAxisX(float Axis_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "GbxMenu_RightStickAxisX");

	Params::BP_ZoneMap_C_GbxMenu_RightStickAxisX Parms{};

	Parms.Axis_Value = Axis_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_ZoneMap_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "ReceiveTick");

	Params::BP_ZoneMap_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ZoneMap_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_8");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_9");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_10");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_11");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_12
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_12");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_13
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_13");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_14
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_14");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_15
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ZoneMap_C::InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_15");

	Params::BP_ZoneMap_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Timeline_0__Transition Over__EventFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Timeline_0__Transition_Over__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Timeline_0__Transition Over__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet To Level__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_To_Level__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet To Level__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet To Level__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_To_Level__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet To Level__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet to Galaxy__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_to_Galaxy__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet to Galaxy__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet to Galaxy__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_to_Galaxy__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet to Galaxy__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Timeline_1__Transition Over__EventFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Timeline_1__Transition_Over__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Timeline_1__Transition Over__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet From Galaxy__Transition Over__EventFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_From_Galaxy__Transition_Over__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet From Galaxy__Transition Over__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet From Galaxy__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_From_Galaxy__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet From Galaxy__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet From Galaxy__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Planet_From_Galaxy__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet From Galaxy__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Galaxy To Planet__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Galaxy_To_Planet__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Galaxy To Planet__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Galaxy To Planet__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Galaxy_To_Planet__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Galaxy To Planet__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Dismiss__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Dismiss__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Dismiss__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Dismiss__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Dismiss__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Dismiss__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Alpha__Transition Done__EventFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Alpha__Transition_Done__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Alpha__Transition Done__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Alpha__UpdateFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Alpha__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Alpha__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Alpha__FinishedFunc
// (BlueprintEvent)

void ABP_ZoneMap_C::Alpha__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Alpha__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Add Decoration Meshes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Add_Decoration_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Add Decoration Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Reset Map Orienation 
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Snap_to_Player                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reset_Orientation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Reset_Map_Orienation_(bool Snap_to_Player, bool Reset_Orientation, bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Reset Map Orienation ");

	Params::BP_ZoneMap_C_Reset_Map_Orienation_ Parms{};

	Parms.Snap_to_Player = Snap_to_Player;
	Parms.Reset_Orientation = Reset_Orientation;
	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Set Pivot To Actor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInstant                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Set_Pivot_To_Actor(class AActor* Actor, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Set Pivot To Actor");

	Params::BP_ZoneMap_C_Set_Pivot_To_Actor Parms{};

	Parms.Actor = Actor;
	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InitializeMapForLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UZoneMapData*                     Level_Map_Data                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::InitializeMapForLevel(class UZoneMapData* Level_Map_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InitializeMapForLevel");

	Params::BP_ZoneMap_C_InitializeMapForLevel Parms{};

	Parms.Level_Map_Data = Level_Map_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Update Transforms For Level Map
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Update_Transforms_For_Level_Map(float Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Update Transforms For Level Map");

	Params::BP_ZoneMap_C_Update_Transforms_For_Level_Map Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Initialize Point Cloud Particle System
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UZoneMapMeshData*                 Zone_Map_Mesh_Data                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Initialize_Point_Cloud_Particle_System(class UZoneMapMeshData* Zone_Map_Mesh_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Initialize Point Cloud Particle System");

	Params::BP_ZoneMap_C_Initialize_Point_Cloud_Particle_System Parms{};

	Parms.Zone_Map_Mesh_Data = Zone_Map_Mesh_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Box Constraint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Vector_To_Constrain                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Bounds_Origin                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Bounds_Extent                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Box_Constraint(const struct FVector& Vector_To_Constrain, const struct FVector& Bounds_Origin, const struct FVector& Bounds_Extent, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Box Constraint");

	Params::BP_ZoneMap_C_Box_Constraint Parms{};

	Parms.Vector_To_Constrain = std::move(Vector_To_Constrain);
	Parms.Bounds_Origin = std::move(Bounds_Origin);
	Parms.Bounds_Extent = std::move(Bounds_Extent);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Cycle Zone Map Sections
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Cycle_Zone_Map_Sections(int32 Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Cycle Zone Map Sections");

	Params::BP_ZoneMap_C_Cycle_Zone_Map_Sections Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get Player's Current Zone Section
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Section_Index                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Get_Player_s_Current_Zone_Section(int32* Section_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get Player's Current Zone Section");

	Params::BP_ZoneMap_C_Get_Player_s_Current_Zone_Section Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Section_Index != nullptr)
		*Section_Index = Parms.Section_Index;
}


// Function BP_ZoneMap.BP_ZoneMap_C.Add Zone Map Mesh Sections
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UZoneMapMeshData*                 Zone_Map_Mesh_Data                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Add_Zone_Map_Mesh_Sections(class UZoneMapMeshData* Zone_Map_Mesh_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Add Zone Map Mesh Sections");

	Params::BP_ZoneMap_C_Add_Zone_Map_Mesh_Sections Parms{};

	Parms.Zone_Map_Mesh_Data = Zone_Map_Mesh_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get New Transform Target
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TransformMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TransformMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TransformBuffer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Global_Transform_Scale                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Zoom_Delta                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Get_New_Transform_Target(float Delta_Seconds, const struct FVector& TransformMin, const struct FVector& TransformMax, float TransformBuffer, float Global_Transform_Scale, float Zoom_Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get New Transform Target");

	Params::BP_ZoneMap_C_Get_New_Transform_Target Parms{};

	Parms.Delta_Seconds = Delta_Seconds;
	Parms.TransformMin = std::move(TransformMin);
	Parms.TransformMax = std::move(TransformMax);
	Parms.TransformBuffer = TransformBuffer;
	Parms.Global_Transform_Scale = Global_Transform_Scale;
	Parms.Zoom_Delta = Zoom_Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Destroy Level Map Components
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Destroy_Level_Map_Components()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Destroy Level Map Components");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Set Pivot to Actor World Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          World_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Set_Pivot_to_Actor_World_Location(const struct FVector& World_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Set Pivot to Actor World Location");

	Params::BP_ZoneMap_C_Set_Pivot_to_Actor_World_Location Parms{};

	Parms.World_Location = std::move(World_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InitializeMapForPlanet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlanetData*                      Planet_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::InitializeMapForPlanet(class UPlanetData* Planet_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InitializeMapForPlanet");

	Params::BP_ZoneMap_C_InitializeMapForPlanet Parms{};

	Parms.Planet_Data = Planet_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Create Compass and Grid
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Create_Compass_and_Grid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Create Compass and Grid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Level Map Tick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Level_Map_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Level Map Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet Map Tick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Planet_Map_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet Map Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get Rotation Yaw Target
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YawMin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YawMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Get_Rotation_Yaw_Target(float Delta_Seconds, float YawMin, float YawMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get Rotation Yaw Target");

	Params::BP_ZoneMap_C_Get_Rotation_Yaw_Target Parms{};

	Parms.Delta_Seconds = Delta_Seconds;
	Parms.YawMin = YawMin;
	Parms.YawMax = YawMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get Rotation Pitch Target
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Get_Rotation_Pitch_Target(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get Rotation Pitch Target");

	Params::BP_ZoneMap_C_Get_Rotation_Pitch_Target Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Destroy Map Actor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Destroy_Map_Actor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Destroy Map Actor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Destroy Planet Map Components
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Destroy_Planet_Map_Components()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Destroy Planet Map Components");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.InitializeMapForGalaxy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGalaxyMapData_C*                 Galaxy_Map_Data                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::InitializeMapForGalaxy(class UGalaxyMapData_C* Galaxy_Map_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "InitializeMapForGalaxy");

	Params::BP_ZoneMap_C_InitializeMapForGalaxy Parms{};

	Parms.Galaxy_Map_Data = Galaxy_Map_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.GalaxyMapTick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::GalaxyMapTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "GalaxyMapTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.DestroyGalaxyMapComponents
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::DestroyGalaxyMapComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "DestroyGalaxyMapComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Base Tick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Base_Tick(float Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Base Tick");

	Params::BP_ZoneMap_C_Base_Tick Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get Default Level Map Pivot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Point_Of_Interest_Transform_Location                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Get_Default_Level_Map_Pivot(struct FVector* Point_Of_Interest_Transform_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get Default Level Map Pivot");

	Params::BP_ZoneMap_C_Get_Default_Level_Map_Pivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point_Of_Interest_Transform_Location != nullptr)
		*Point_Of_Interest_Transform_Location = std::move(Parms.Point_Of_Interest_Transform_Location);
}


// Function BP_ZoneMap.BP_ZoneMap_C.TransitionToPlanet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlanetMapData_C*                 Planet_Map_Data_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::TransitionToPlanet(class UPlanetMapData_C* Planet_Map_Data_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "TransitionToPlanet");

	Params::BP_ZoneMap_C_TransitionToPlanet Parms{};

	Parms.Planet_Map_Data_0 = Planet_Map_Data_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.TransitionToLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UZoneMapData*                     Level_Data                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::TransitionToLevel(class UZoneMapData* Level_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "TransitionToLevel");

	Params::BP_ZoneMap_C_TransitionToLevel Parms{};

	Parms.Level_Data = Level_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get Rotation For Level Transition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_ZoneMap_C::Get_Rotation_For_Level_Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get Rotation For Level Transition");

	Params::BP_ZoneMap_C_Get_Rotation_For_Level_Transition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.Focus Level
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UZoneMapData*                     Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInstant                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Focus_Level(class UZoneMapData* Level, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Focus Level");

	Params::BP_ZoneMap_C_Focus_Level Parms{};

	Parms.Level = Level;
	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Update Party Memeber Locations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Update_Party_Memeber_Locations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Update Party Memeber Locations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_HandleAxisInput
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InputAction                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AxisValue                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_HandleAxisInput(const class FName& InputAction, const float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_HandleAxisInput");

	Params::BP_ZoneMap_C_K2_HandleAxisInput Parms{};

	Parms.InputAction = InputAction;
	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_HandleInputAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InputAction                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_HandleInputAction(const class FName& InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_HandleInputAction");

	Params::BP_ZoneMap_C_K2_HandleInputAction Parms{};

	Parms.InputAction = InputAction;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.Reset Axis Input
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Reset_Axis_Input()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Reset Axis Input");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get Normalized Distance To POI Center
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USphereComponent*                 POI_Collision_Sphere                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Hit_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_ZoneMap_C::Get_Normalized_Distance_To_POI_Center(class USphereComponent* POI_Collision_Sphere, const struct FVector& Hit_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get Normalized Distance To POI Center");

	Params::BP_ZoneMap_C_Get_Normalized_Distance_To_POI_Center Parms{};

	Parms.POI_Collision_Sphere = POI_Collision_Sphere;
	Parms.Hit_Location = std::move(Hit_Location);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get New Scale Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_Min                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_Max                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_Rate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Zoom_Delta                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Get_New_Scale_Target(float Delta_Seconds, float Scale_Min, float Scale_Max, float Scale_Rate, float* Zoom_Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get New Scale Target");

	Params::BP_ZoneMap_C_Get_New_Scale_Target Parms{};

	Parms.Delta_Seconds = Delta_Seconds;
	Parms.Scale_Min = Scale_Min;
	Parms.Scale_Max = Scale_Max;
	Parms.Scale_Rate = Scale_Rate;

	UObject::ProcessEvent(Func, &Parms);

	if (Zoom_Delta != nullptr)
		*Zoom_Delta = Parms.Zoom_Delta;
}


// Function BP_ZoneMap.BP_ZoneMap_C.Set Global LUT Visibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibile                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Set_Global_LUT_Visibility(bool Visibile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Set Global LUT Visibility");

	Params::BP_ZoneMap_C_Set_Global_LUT_Visibility Parms{};

	Parms.Visibile = Visibile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Set Transitioning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Transitioning                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Set_Transitioning(bool Transitioning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Set Transitioning");

	Params::BP_ZoneMap_C_Set_Transitioning Parms{};

	Parms.Transitioning = Transitioning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.LevelMapTickNative
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::LevelMapTickNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "LevelMapTickNative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.SetVisibleRadiusBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> DMIArray                                               (BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   Alpha_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RadiusAlpha                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distortion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::SetVisibleRadiusBP(TArray<class UMaterialInstanceDynamic*>& DMIArray, float Alpha_0, float RadiusAlpha, float Distortion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "SetVisibleRadiusBP");

	Params::BP_ZoneMap_C_SetVisibleRadiusBP Parms{};

	Parms.DMIArray = std::move(DMIArray);
	Parms.Alpha_0 = Alpha_0;
	Parms.RadiusAlpha = RadiusAlpha;
	Parms.Distortion = Distortion;

	UObject::ProcessEvent(Func, &Parms);

	DMIArray = std::move(Parms.DMIArray);
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_UpdateTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_UpdateTransforms(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_UpdateTransforms");

	Params::BP_ZoneMap_C_K2_UpdateTransforms Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GetNewScaleTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ZoomDelta                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_GetNewScaleTarget(float DeltaSeconds_0, float* ZoomDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GetNewScaleTarget");

	Params::BP_ZoneMap_C_K2_GetNewScaleTarget Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ZoomDelta != nullptr)
		*ZoomDelta = Parms.ZoomDelta;

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GetNewTransformTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TransformMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TransformMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TransformBuffer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GlobalTransformScale                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ZoomDelta                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_GetNewTransformTarget(float DeltaSeconds_0, const struct FVector& TransformMin, const struct FVector& TransformMax, float TransformBuffer, float GlobalTransformScale, float ZoomDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GetNewTransformTarget");

	Params::BP_ZoneMap_C_K2_GetNewTransformTarget Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;
	Parms.TransformMin = std::move(TransformMin);
	Parms.TransformMax = std::move(TransformMax);
	Parms.TransformBuffer = TransformBuffer;
	Parms.GlobalTransformScale = GlobalTransformScale;
	Parms.ZoomDelta = ZoomDelta;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GetRotationPitchTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_GetRotationPitchTarget(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GetRotationPitchTarget");

	Params::BP_ZoneMap_C_K2_GetRotationPitchTarget Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.K2_GetRotationYawTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YawMin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YawMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ZoneMap_C::K2_GetRotationYawTarget(float DeltaSeconds_0, float YawMin, float YawMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "K2_GetRotationYawTarget");

	Params::BP_ZoneMap_C_K2_GetRotationYawTarget Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;
	Parms.YawMin = YawMin;
	Parms.YawMax = YawMax;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZoneMap.BP_ZoneMap_C.SetLevelMapPostProcess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::SetLevelMapPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "SetLevelMapPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.GetGalaxyRotationTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::GetGalaxyRotationTarget(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "GetGalaxyRotationTarget");

	Params::BP_ZoneMap_C_GetGalaxyRotationTarget Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.SpawnGalaxyMapPOIs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGalaxyMapData_C*                 Galaxy_Map_Data                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::SpawnGalaxyMapPOIs(class UGalaxyMapData_C* Galaxy_Map_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "SpawnGalaxyMapPOIs");

	Params::BP_ZoneMap_C_SpawnGalaxyMapPOIs Parms{};

	Parms.Galaxy_Map_Data = Galaxy_Map_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.FocusOnPlanet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlanetData*                      Planet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::FocusOnPlanet(class UPlanetData* Planet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "FocusOnPlanet");

	Params::BP_ZoneMap_C_FocusOnPlanet Parms{};

	Parms.Planet = Planet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Update_ZoneMap_DMIs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Update_ZoneMap_DMIs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Update_ZoneMap_DMIs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.ViewChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowingZoneMap_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::ViewChanged(bool bShowingZoneMap_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "ViewChanged");

	Params::BP_ZoneMap_C_ViewChanged Parms{};

	Parms.bShowingZoneMap_0 = bShowingZoneMap_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.SetCameraLag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Location_Lag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Rotation_Lag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Location_Lag_Speed                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotation_Lag_Speed                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::SetCameraLag(bool Location_Lag, bool Rotation_Lag, float Location_Lag_Speed, float Rotation_Lag_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "SetCameraLag");

	Params::BP_ZoneMap_C_SetCameraLag Parms{};

	Parms.Location_Lag = Location_Lag;
	Parms.Rotation_Lag = Rotation_Lag;
	Parms.Location_Lag_Speed = Location_Lag_Speed;
	Parms.Rotation_Lag_Speed = Rotation_Lag_Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Planet_Recenter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInstant                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::Planet_Recenter(bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Planet_Recenter");

	Params::BP_ZoneMap_C_Planet_Recenter Parms{};

	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.SetGamma
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Gamma                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::SetGamma(float Gamma)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "SetGamma");

	Params::BP_ZoneMap_C_SetGamma Parms{};

	Parms.Gamma = Gamma;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Initialize_LevelMap_Camera_Properties
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Initialize_LevelMap_Camera_Properties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Initialize_LevelMap_Camera_Properties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get_Planet_Rotation_Target
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Get_Planet_Rotation_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get_Planet_Rotation_Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get_Planet_and_Galaxy_Scale_Target
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Get_Planet_and_Galaxy_Scale_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get_Planet_and_Galaxy_Scale_Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Get_Planet_Gimbal_Target
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Get_Planet_Gimbal_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Get_Planet_Gimbal_Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Clear_Keyframes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Clear_Keyframes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Clear_Keyframes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Set_Keyframes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Transform_Target_Keyframe_0                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotation_Pitch_Target_Keyframe_0                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_Target_Keyframe_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZoneMap_C::Set_Keyframes(const struct FVector& Transform_Target_Keyframe_0, float Rotation_Pitch_Target_Keyframe_0, float Scale_Target_Keyframe_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Set_Keyframes");

	Params::BP_ZoneMap_C_Set_Keyframes Parms{};

	Parms.Transform_Target_Keyframe_0 = std::move(Transform_Target_Keyframe_0);
	Parms.Rotation_Pitch_Target_Keyframe_0 = Rotation_Pitch_Target_Keyframe_0;
	Parms.Scale_Target_Keyframe_0 = Scale_Target_Keyframe_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZoneMap.BP_ZoneMap_C.Initialize_Level_Map_DMIs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZoneMap_C::Initialize_Level_Map_DMIs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "Initialize_Level_Map_DMIs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZoneMap.BP_ZoneMap_C.PlanetMap_ZoneMagnetism
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Magnetized                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ZoneMap_C::PlanetMap_ZoneMagnetism(bool* Magnetized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZoneMap_C", "PlanetMap_ZoneMagnetism");

	Params::BP_ZoneMap_C_PlanetMap_ZoneMagnetism Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Magnetized != nullptr)
		*Magnetized = Parms.Magnetized;
}

}

