#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Weapon_BaseProjectile

#include "Basic.hpp"

#include "Proj_Weapon_BaseProjectile_classes.hpp"
#include "Proj_Weapon_BaseProjectile_parameters.hpp"


namespace SDK
{

// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.ExecuteUbergraph_Proj_Weapon_BaseProjectile
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_Weapon_BaseProjectile_C::ExecuteUbergraph_Proj_Weapon_BaseProjectile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "ExecuteUbergraph_Proj_Weapon_BaseProjectile");

	Params::Proj_Weapon_BaseProjectile_C_ExecuteUbergraph_Proj_Weapon_BaseProjectile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.Fallback
// (BlueprintCallable, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::Fallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "Fallback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.OnHitWorld
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProj_Weapon_BaseProjectile_C::OnHitWorld(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "OnHitWorld");

	Params::Proj_Weapon_BaseProjectile_C_OnHitWorld Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.Actor_Died
// (BlueprintCallable, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::Actor_Died()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "Actor_Died");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.Destructible_Fractured
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitPoint                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDetection                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_Weapon_BaseProjectile_C::Destructible_Fractured(const struct FVector& HitPoint, const struct FVector& HitDetection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "Destructible_Fractured");

	Params::Proj_Weapon_BaseProjectile_C_Destructible_Fractured Parms{};

	Parms.HitPoint = std::move(HitPoint);
	Parms.HitDetection = std::move(HitDetection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.OnExplode
// (Event, Protected, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::OnExplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "OnExplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProj_Weapon_BaseProjectile_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "ReceiveHit");

	Params::Proj_Weapon_BaseProjectile_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.WeaponProjectileExplode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::WeaponProjectileExplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "WeaponProjectileExplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.StickToActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    AttachedToActor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProj_Weapon_BaseProjectile_C::StickToActor(const struct FHitResult& HitResult, bool* AttachedToActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "StickToActor");

	Params::Proj_Weapon_BaseProjectile_C_StickToActor Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (AttachedToActor != nullptr)
		*AttachedToActor = Parms.AttachedToActor;
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.StickToWorld
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProj_Weapon_BaseProjectile_C::StickToWorld(const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "StickToWorld");

	Params::Proj_Weapon_BaseProjectile_C_StickToWorld Parms{};

	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.CallExplode
// (Public, BlueprintCallable, BlueprintEvent)

void AProj_Weapon_BaseProjectile_C::CallExplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "CallExplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.AddElementalTrail
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Collection                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttachPointName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewScale                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_Weapon_BaseProjectile_C::AddElementalTrail(class UClass* Collection, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& NewScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "AddElementalTrail");

	Params::Proj_Weapon_BaseProjectile_C_AddElementalTrail Parms{};

	Parms.Collection = Collection;
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.NewScale = std::move(NewScale);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.StickToTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Attached                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    StuckToActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProj_Weapon_BaseProjectile_C::StickToTarget(const struct FHitResult& Hit, bool* Attached, bool* StuckToActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "StickToTarget");

	Params::Proj_Weapon_BaseProjectile_C_StickToTarget Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (Attached != nullptr)
		*Attached = Parms.Attached;

	if (StuckToActor != nullptr)
		*StuckToActor = Parms.StuckToActor;
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.ProjectileDetonate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProj_Weapon_BaseProjectile_C::ProjectileDetonate(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "ProjectileDetonate");

	Params::Proj_Weapon_BaseProjectile_C_ProjectileDetonate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.ProjectileArm
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProj_Weapon_BaseProjectile_C::ProjectileArm(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "ProjectileArm");

	Params::Proj_Weapon_BaseProjectile_C_ProjectileArm Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function Proj_Weapon_BaseProjectile.Proj_Weapon_BaseProjectile_C.ProjectileDisarm
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProj_Weapon_BaseProjectile_C::ProjectileDisarm(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Weapon_BaseProjectile_C", "ProjectileDisarm");

	Params::Proj_Weapon_BaseProjectile_C_ProjectileDisarm Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

