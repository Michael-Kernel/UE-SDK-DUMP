#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Infestation_SlugFloater

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_Infestation_SlugFloater.Proj_Infestation_SlugFloater_C
// 0x0028 (0x0708 - 0x06E0)
class AProj_Infestation_SlugFloater_C final : public AOakProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Kevin;                                             // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_Proj_Infestation_SlugFloater(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_Infestation_SlugFloater_C">();
	}
	static class AProj_Infestation_SlugFloater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_Infestation_SlugFloater_C>();
	}
};
static_assert(alignof(AProj_Infestation_SlugFloater_C) == 0x000008, "Wrong alignment on AProj_Infestation_SlugFloater_C");
static_assert(sizeof(AProj_Infestation_SlugFloater_C) == 0x000708, "Wrong size on AProj_Infestation_SlugFloater_C");
static_assert(offsetof(AProj_Infestation_SlugFloater_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_Infestation_SlugFloater_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_Infestation_SlugFloater_C, RotatingMovement) == 0x0006E8, "Member 'AProj_Infestation_SlugFloater_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AProj_Infestation_SlugFloater_C, GbxProjectileMovement) == 0x0006F0, "Member 'AProj_Infestation_SlugFloater_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_Infestation_SlugFloater_C, Kevin) == 0x0006F8, "Member 'AProj_Infestation_SlugFloater_C::Kevin' has a wrong offset!");
static_assert(offsetof(AProj_Infestation_SlugFloater_C, DefaultSceneRoot) == 0x000700, "Member 'AProj_Infestation_SlugFloater_C::DefaultSceneRoot' has a wrong offset!");

}

