#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPTiesThatBindSphere

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.ExecuteUbergraph_BPTiesThatBindSphere
// 0x00B8 (0x00B8 - 0x0000)
struct BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_Event_Target;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageReceiver;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UOakDamageComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakPhaseTranceEffectSpec              K2Node_MakeStruct_OakPhaseTranceEffectSpec;        // 0x0038(0x0030)(NoDestructor)
	class UOakActionAbility_PhaseTrance*          CallFunc_GetOwnerActionAbilityPhaseTrance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEffect_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_RawAccumulateDamage;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakActionAbility_PhaseTrance*          CallFunc_GetOwnerActionAbilityPhaseTrance_ReturnValue1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakPhaseTranceEffectSpec              K2Node_MakeStruct_OakPhaseTranceEffectSpec1;       // 0x0080(0x0030)(NoDestructor)
	bool                                          CallFunc_TryEffect_ReturnValue1;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere");
static_assert(sizeof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere) == 0x0000B8, "Wrong size on BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, EntryPoint) == 0x000000, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_Event_Target) == 0x000008, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_CustomEvent_DamageReceiver) == 0x000010, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_CustomEvent_DamageCauser) == 0x000018, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_MakeStruct_OakPhaseTranceEffectSpec) == 0x000038, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_MakeStruct_OakPhaseTranceEffectSpec' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, CallFunc_GetOwnerActionAbilityPhaseTrance_ReturnValue) == 0x000068, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::CallFunc_GetOwnerActionAbilityPhaseTrance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, CallFunc_TryEffect_ReturnValue) == 0x000070, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::CallFunc_TryEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, CallFunc_HasAuthority_ReturnValue) == 0x000071, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_Event_RawAccumulateDamage) == 0x000074, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_Event_RawAccumulateDamage' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, CallFunc_GetOwnerActionAbilityPhaseTrance_ReturnValue1) == 0x000078, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::CallFunc_GetOwnerActionAbilityPhaseTrance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, K2Node_MakeStruct_OakPhaseTranceEffectSpec1) == 0x000080, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::K2Node_MakeStruct_OakPhaseTranceEffectSpec1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere, CallFunc_TryEffect_ReturnValue1) == 0x0000B0, "Member 'BPTiesThatBindSphere_C_ExecuteUbergraph_BPTiesThatBindSphere::CallFunc_TryEffect_ReturnValue1' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.ApplySapRefund
// 0x0004 (0x0004 - 0x0000)
struct BPTiesThatBindSphere_C_ApplySapRefund final
{
public:
	float                                         RawAccumulateDamage;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_ApplySapRefund) == 0x000004, "Wrong alignment on BPTiesThatBindSphere_C_ApplySapRefund");
static_assert(sizeof(BPTiesThatBindSphere_C_ApplySapRefund) == 0x000004, "Wrong size on BPTiesThatBindSphere_C_ApplySapRefund");
static_assert(offsetof(BPTiesThatBindSphere_C_ApplySapRefund, RawAccumulateDamage) == 0x000000, "Member 'BPTiesThatBindSphere_C_ApplySapRefund::RawAccumulateDamage' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.OnGraspedTargetDied
// 0x0010 (0x0010 - 0x0000)
struct BPTiesThatBindSphere_C_OnGraspedTargetDied final
{
public:
	class AActor*                                 DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_OnGraspedTargetDied) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_OnGraspedTargetDied");
static_assert(sizeof(BPTiesThatBindSphere_C_OnGraspedTargetDied) == 0x000010, "Wrong size on BPTiesThatBindSphere_C_OnGraspedTargetDied");
static_assert(offsetof(BPTiesThatBindSphere_C_OnGraspedTargetDied, DamageReceiver) == 0x000000, "Member 'BPTiesThatBindSphere_C_OnGraspedTargetDied::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_OnGraspedTargetDied, DamageCauser) == 0x000008, "Member 'BPTiesThatBindSphere_C_OnGraspedTargetDied::DamageCauser' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.OnWebTargetAdded
// 0x0008 (0x0008 - 0x0000)
struct BPTiesThatBindSphere_C_OnWebTargetAdded final
{
public:
	class AOakCharacter*                          Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_OnWebTargetAdded) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_OnWebTargetAdded");
static_assert(sizeof(BPTiesThatBindSphere_C_OnWebTargetAdded) == 0x000008, "Wrong size on BPTiesThatBindSphere_C_OnWebTargetAdded");
static_assert(offsetof(BPTiesThatBindSphere_C_OnWebTargetAdded, Target) == 0x000000, "Member 'BPTiesThatBindSphere_C_OnWebTargetAdded::Target' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BPTiesThatBindSphere_C_UserConstructionScript final
{
public:
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_UserConstructionScript) == 0x000004, "Wrong alignment on BPTiesThatBindSphere_C_UserConstructionScript");
static_assert(sizeof(BPTiesThatBindSphere_C_UserConstructionScript) == 0x000004, "Wrong size on BPTiesThatBindSphere_C_UserConstructionScript");
static_assert(offsetof(BPTiesThatBindSphere_C_UserConstructionScript, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000000, "Member 'BPTiesThatBindSphere_C_UserConstructionScript::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetSharedDamageData
// 0x00B8 (0x00B8 - 0x0000)
struct BPTiesThatBindSphere_C_GetSharedDamageData final
{
public:
	class AOakCharacter*                          LinkedTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageSource>              DamageSourceClass;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FOakPhaseWebSphere_SharedDamageData    SharedDamageData;                                  // 0x0018(0x0018)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  Web_Mastery_Scalar;                                // 0x0038(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  Web_Primary_Damage_Scalar;                         // 0x0050(0x0018)(Edit, BlueprintVisible, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue1;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue1;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakPhaseWebSphere_SharedDamageData    K2Node_MakeStruct_OakPhaseWebSphere_SharedDamageData; // 0x00A0(0x0018)(NoDestructor)
};
static_assert(alignof(BPTiesThatBindSphere_C_GetSharedDamageData) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_GetSharedDamageData");
static_assert(sizeof(BPTiesThatBindSphere_C_GetSharedDamageData) == 0x0000B8, "Wrong size on BPTiesThatBindSphere_C_GetSharedDamageData");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, LinkedTarget) == 0x000000, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::LinkedTarget' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, Damage) == 0x000008, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::Damage' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, DamageSourceClass) == 0x000010, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::DamageSourceClass' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, SharedDamageData) == 0x000018, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::SharedDamageData' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, ReturnValue) == 0x000030, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, Web_Mastery_Scalar) == 0x000038, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::Web_Mastery_Scalar' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, Web_Primary_Damage_Scalar) == 0x000050, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::Web_Primary_Damage_Scalar' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_ClassIsChildOf_ReturnValue) == 0x000068, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_ClassIsChildOf_ReturnValue1) == 0x000069, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_ClassIsChildOf_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_BooleanOR_ReturnValue) == 0x00006A, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000078, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_GetOwner_ReturnValue1) == 0x000080, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_GetValueOfAttribute_ReturnValue1) == 0x000088, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_GetValueOfAttribute_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x00008C, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000098, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetSharedDamageData, K2Node_MakeStruct_OakPhaseWebSphere_SharedDamageData) == 0x0000A0, "Member 'BPTiesThatBindSphere_C_GetSharedDamageData::K2Node_MakeStruct_OakPhaseWebSphere_SharedDamageData' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetMaxTime
// 0x0008 (0x0008 - 0x0000)
struct BPTiesThatBindSphere_C_GetMaxTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_GetMaxTime) == 0x000004, "Wrong alignment on BPTiesThatBindSphere_C_GetMaxTime");
static_assert(sizeof(BPTiesThatBindSphere_C_GetMaxTime) == 0x000008, "Wrong size on BPTiesThatBindSphere_C_GetMaxTime");
static_assert(offsetof(BPTiesThatBindSphere_C_GetMaxTime, ReturnValue) == 0x000000, "Member 'BPTiesThatBindSphere_C_GetMaxTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetMaxTime, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000004, "Member 'BPTiesThatBindSphere_C_GetMaxTime::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetBeamSystem
// 0x0048 (0x0048 - 0x0000)
struct BPTiesThatBindSphere_C_GetBeamSystem final
{
public:
	class UParticleSystem*                        Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_GetPhaseTranceElementType_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_GetBeamSystem) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_GetBeamSystem");
static_assert(sizeof(BPTiesThatBindSphere_C_GetBeamSystem) == 0x000048, "Wrong size on BPTiesThatBindSphere_C_GetBeamSystem");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Res) == 0x000000, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Res' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Temp_byte_Variable) == 0x000008, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Temp_object_Variable) == 0x000010, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Temp_object_Variable1) == 0x000018, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Temp_object_Variable2) == 0x000020, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Temp_object_Variable3) == 0x000028, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, Temp_object_Variable4) == 0x000030, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, CallFunc_GetPhaseTranceElementType_ReturnValue) == 0x000038, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::CallFunc_GetPhaseTranceElementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSystem, K2Node_Select_Default) == 0x000040, "Member 'BPTiesThatBindSphere_C_GetBeamSystem::K2Node_Select_Default' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetBeamDataForLinkedTarget
// 0x0078 (0x0078 - 0x0000)
struct BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget final
{
public:
	class AOakCharacter*                          LinkedTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakPhaseWebSphereBeamData             OutBeamData;                                       // 0x0008(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_GetBeamSourceSceneComponent_Res;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetBeamSystem_Res;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOakPhaseWebSphereBeamData             K2Node_MakeStruct_OakPhaseWebSphereBeamData;       // 0x0048(0x0030)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget");
static_assert(sizeof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget) == 0x000078, "Wrong size on BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget, LinkedTarget) == 0x000000, "Member 'BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget::LinkedTarget' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget, OutBeamData) == 0x000008, "Member 'BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget::OutBeamData' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget, CallFunc_GetBeamSourceSceneComponent_Res) == 0x000038, "Member 'BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget::CallFunc_GetBeamSourceSceneComponent_Res' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget, CallFunc_GetBeamSystem_Res) == 0x000040, "Member 'BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget::CallFunc_GetBeamSystem_Res' has a wrong offset!");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget, K2Node_MakeStruct_OakPhaseWebSphereBeamData) == 0x000048, "Member 'BPTiesThatBindSphere_C_GetBeamDataForLinkedTarget::K2Node_MakeStruct_OakPhaseWebSphereBeamData' has a wrong offset!");

// Function BPTiesThatBindSphere.BPTiesThatBindSphere_C.GetBeamSourceSceneComponent
// 0x0008 (0x0008 - 0x0000)
struct BPTiesThatBindSphere_C_GetBeamSourceSceneComponent final
{
public:
	class USceneComponent*                        Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPTiesThatBindSphere_C_GetBeamSourceSceneComponent) == 0x000008, "Wrong alignment on BPTiesThatBindSphere_C_GetBeamSourceSceneComponent");
static_assert(sizeof(BPTiesThatBindSphere_C_GetBeamSourceSceneComponent) == 0x000008, "Wrong size on BPTiesThatBindSphere_C_GetBeamSourceSceneComponent");
static_assert(offsetof(BPTiesThatBindSphere_C_GetBeamSourceSceneComponent, Res) == 0x000000, "Member 'BPTiesThatBindSphere_C_GetBeamSourceSceneComponent::Res' has a wrong offset!");

}

