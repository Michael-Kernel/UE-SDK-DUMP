#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_Siren_Phasecast_Revised_Base

#include "Basic.hpp"

#include "Projectile_Siren_Phasecast_Revised_Base_classes.hpp"
#include "Projectile_Siren_Phasecast_Revised_Base_parameters.hpp"


namespace SDK
{

// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.ExecuteUbergraph_Projectile_Siren_Phasecast_Revised_Base
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::ExecuteUbergraph_Projectile_Siren_Phasecast_Revised_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "ExecuteUbergraph_Projectile_Siren_Phasecast_Revised_Base");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_ExecuteUbergraph_Projectile_Siren_Phasecast_Revised_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "ReceiveEndPlay");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.OnOverlappedNeutral
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::OnOverlappedNeutral(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "OnOverlappedNeutral");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_OnOverlappedNeutral Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.OnOverlappedEnemy
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::OnOverlappedEnemy(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "OnOverlappedEnemy");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_OnOverlappedEnemy Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.OnHitEnemy
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::OnHitEnemy(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "OnHitEnemy");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_OnHitEnemy Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.OnHitWorld
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::OnHitWorld(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "OnHitWorld");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_OnHitWorld Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AProjectile_Siren_Phasecast_Revised_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AProjectile_Siren_Phasecast_Revised_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.ConfigureSkeletalMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProjectile_Siren_Phasecast_Revised_Base_C::ConfigureSkeletalMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "ConfigureSkeletalMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.PlayImpactEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       InHitInfo                                              (BlueprintVisible, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::PlayImpactEffect(struct FHitResult& InHitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "PlayImpactEffect");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_PlayImpactEffect Parms{};

	Parms.InHitInfo = std::move(InHitInfo);

	UObject::ProcessEvent(Func, &Parms);

	InHitInfo = std::move(Parms.InHitInfo);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.GetImpactEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UImpactData*                      Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::GetImpactEffect(class UImpactData** Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "GetImpactEffect");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_GetImpactEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.HandleEnemyHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::HandleEnemyHit(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "HandleEnemyHit");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_HandleEnemyHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.DoDamageToEnemy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::DoDamageToEnemy(class AActor* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "DoDamageToEnemy");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_DoDamageToEnemy Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.CalculateDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::CalculateDamage(float* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "CalculateDamage");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_CalculateDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = Parms.Res;
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.GetTargetedHitDirectionForDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Res                                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::GetTargetedHitDirectionForDamage(class AActor* Enemy, struct FVector* Res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "GetTargetedHitDirectionForDamage");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_GetTargetedHitDirectionForDamage Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);

	if (Res != nullptr)
		*Res = std::move(Parms.Res);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.DoDamageToWorld
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectile_Siren_Phasecast_Revised_Base_C::DoDamageToWorld(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "DoDamageToWorld");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_DoDamageToWorld Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.HandleWorldHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProjectile_Siren_Phasecast_Revised_Base_C::HandleWorldHit(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "HandleWorldHit");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_HandleWorldHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.TryToAllure
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProjectile_Siren_Phasecast_Revised_Base_C::TryToAllure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "TryToAllure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Projectile_Siren_Phasecast_Revised_Base.Projectile_Siren_Phasecast_Revised_Base_C.GetOverlapComponent
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UPrimitiveComponent* AProjectile_Siren_Phasecast_Revised_Base_C::GetOverlapComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_Siren_Phasecast_Revised_Base_C", "GetOverlapComponent");

	Params::Projectile_Siren_Phasecast_Revised_Base_C_GetOverlapComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

