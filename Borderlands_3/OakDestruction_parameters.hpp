#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OakDestruction

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function OakDestruction.OakDestructibleFXManager.ClientApplyDamage
// 0x0024 (0x0024 - 0x0000)
struct OakDestructibleFXManager_ClientApplyDamage final
{
public:
	uint32                                        SyncID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageAmount;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ImpulseDir;                                        // 0x0014(0x000C)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImpulseStrength;                                   // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OakDestructibleFXManager_ClientApplyDamage) == 0x000004, "Wrong alignment on OakDestructibleFXManager_ClientApplyDamage");
static_assert(sizeof(OakDestructibleFXManager_ClientApplyDamage) == 0x000024, "Wrong size on OakDestructibleFXManager_ClientApplyDamage");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyDamage, SyncID) == 0x000000, "Member 'OakDestructibleFXManager_ClientApplyDamage::SyncID' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyDamage, DamageAmount) == 0x000004, "Member 'OakDestructibleFXManager_ClientApplyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyDamage, HitLocation) == 0x000008, "Member 'OakDestructibleFXManager_ClientApplyDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyDamage, ImpulseDir) == 0x000014, "Member 'OakDestructibleFXManager_ClientApplyDamage::ImpulseDir' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyDamage, ImpulseStrength) == 0x000020, "Member 'OakDestructibleFXManager_ClientApplyDamage::ImpulseStrength' has a wrong offset!");

// Function OakDestruction.OakDestructibleFXManager.ClientApplyRadiusDamage
// 0x0020 (0x0020 - 0x0000)
struct OakDestructibleFXManager_ClientApplyRadiusDamage final
{
public:
	uint32                                        SyncID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageAmount;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HurtOrigin;                                        // 0x0008(0x000C)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageRadius;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImpulseStrength;                                   // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullDamage;                                       // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OakDestructibleFXManager_ClientApplyRadiusDamage) == 0x000004, "Wrong alignment on OakDestructibleFXManager_ClientApplyRadiusDamage");
static_assert(sizeof(OakDestructibleFXManager_ClientApplyRadiusDamage) == 0x000020, "Wrong size on OakDestructibleFXManager_ClientApplyRadiusDamage");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyRadiusDamage, SyncID) == 0x000000, "Member 'OakDestructibleFXManager_ClientApplyRadiusDamage::SyncID' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyRadiusDamage, DamageAmount) == 0x000004, "Member 'OakDestructibleFXManager_ClientApplyRadiusDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyRadiusDamage, HurtOrigin) == 0x000008, "Member 'OakDestructibleFXManager_ClientApplyRadiusDamage::HurtOrigin' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyRadiusDamage, DamageRadius) == 0x000014, "Member 'OakDestructibleFXManager_ClientApplyRadiusDamage::DamageRadius' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyRadiusDamage, ImpulseStrength) == 0x000018, "Member 'OakDestructibleFXManager_ClientApplyRadiusDamage::ImpulseStrength' has a wrong offset!");
static_assert(offsetof(OakDestructibleFXManager_ClientApplyRadiusDamage, bFullDamage) == 0x00001C, "Member 'OakDestructibleFXManager_ClientApplyRadiusDamage::bFullDamage' has a wrong offset!");

// Function OakDestruction.OakDestructibleFXManager.OnDestructibleDestroyed
// 0x0008 (0x0008 - 0x0000)
struct OakDestructibleFXManager_OnDestructibleDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OakDestructibleFXManager_OnDestructibleDestroyed) == 0x000008, "Wrong alignment on OakDestructibleFXManager_OnDestructibleDestroyed");
static_assert(sizeof(OakDestructibleFXManager_OnDestructibleDestroyed) == 0x000008, "Wrong size on OakDestructibleFXManager_OnDestructibleDestroyed");
static_assert(offsetof(OakDestructibleFXManager_OnDestructibleDestroyed, DestroyedActor) == 0x000000, "Member 'OakDestructibleFXManager_OnDestructibleDestroyed::DestroyedActor' has a wrong offset!");

}

