#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Lightspeed

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxWeapon_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_Lightspeed.LightProjectile_Lightspeed_C.OnRicochet
// 0x0340 (0x0340 - 0x0000)
struct LightProjectile_Lightspeed_C_OnRicochet final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0098(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_RunEnvQueryForBestActor_ResultActor;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunEnvQueryForBestActor_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01F8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_Lightspeed_C_OnRicochet) == 0x000010, "Wrong alignment on LightProjectile_Lightspeed_C_OnRicochet");
static_assert(sizeof(LightProjectile_Lightspeed_C_OnRicochet) == 0x000340, "Wrong size on LightProjectile_Lightspeed_C_OnRicochet");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, Projectile) == 0x000000, "Member 'LightProjectile_Lightspeed_C_OnRicochet::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, Hit) == 0x000008, "Member 'LightProjectile_Lightspeed_C_OnRicochet::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, ImpactVelocity) == 0x000098, "Member 'LightProjectile_Lightspeed_C_OnRicochet::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A4, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A5, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_Time) == 0x0000A8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_Distance) == 0x0000AC, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_Location) == 0x0000B0, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_ImpactPoint) == 0x0000BC, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_Normal) == 0x0000C8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D4, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, Temp_int_Array_Index_Variable) == 0x000120, "Member 'LightProjectile_Lightspeed_C_OnRicochet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'LightProjectile_Lightspeed_C_OnRicochet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_RunEnvQueryForBestActor_ResultActor) == 0x000130, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_RunEnvQueryForBestActor_ResultActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_RunEnvQueryForBestActor_ReturnValue) == 0x000138, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_RunEnvQueryForBestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_GetReflectionVector_ReturnValue) == 0x00013C, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000148, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Array_Get_Item) == 0x000160, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakTransform_Location) == 0x000194, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakTransform_Rotation) == 0x0001A0, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_BreakTransform_Scale) == 0x0001AC, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001BC, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001C8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D4, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_GetDamageCauser_ReturnValue) == 0x0001E0, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_GetSource_ReturnValue) == 0x0001E8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, CallFunc_GetInstigator_ReturnValue) == 0x0001F0, "Member 'LightProjectile_Lightspeed_C_OnRicochet::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnRicochet, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001F8, "Member 'LightProjectile_Lightspeed_C_OnRicochet::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function LightProjectile_Lightspeed.LightProjectile_Lightspeed_C.OnBegin
// 0x0230 (0x0230 - 0x0000)
struct LightProjectile_Lightspeed_C_OnBegin final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_RunEnvQueryForAllActors_ResultActors;     // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_RunEnvQueryForAllActors_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnFan_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item1;                          // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetDamageCauser_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00E0(0x0140)(ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Lightspeed_C_OnBegin) == 0x000010, "Wrong alignment on LightProjectile_Lightspeed_C_OnBegin");
static_assert(sizeof(LightProjectile_Lightspeed_C_OnBegin) == 0x000230, "Wrong size on LightProjectile_Lightspeed_C_OnBegin");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, Projectile) == 0x000000, "Member 'LightProjectile_Lightspeed_C_OnBegin::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, Temp_int_Array_Index_Variable) == 0x000008, "Member 'LightProjectile_Lightspeed_C_OnBegin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_RunEnvQueryForAllActors_ResultActors) == 0x000010, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_RunEnvQueryForAllActors_ResultActors' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_RunEnvQueryForAllActors_ReturnValue) == 0x000020, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_RunEnvQueryForAllActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Array_Get_Item) == 0x000028, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_GeneratePointsOnFan_ReturnValue) == 0x000030, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_GeneratePointsOnFan_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Array_Get_Item1) == 0x000040, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_BreakTransform_Location) == 0x000074, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_BreakTransform_Scale) == 0x00008C, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000098, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_GetDamageCauser_ReturnValue) == 0x0000C0, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_GetDamageCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_GetSource_ReturnValue) == 0x0000C8, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_GetInstigator_ReturnValue) == 0x0000D0, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'LightProjectile_Lightspeed_C_OnBegin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000E0, "Member 'LightProjectile_Lightspeed_C_OnBegin::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Less_IntInt_ReturnValue) == 0x000220, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Lightspeed_C_OnBegin, CallFunc_Add_IntInt_ReturnValue) == 0x000224, "Member 'LightProjectile_Lightspeed_C_OnBegin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

