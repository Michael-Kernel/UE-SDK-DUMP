#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_Wep_Overheated

#include "Basic.hpp"


namespace SDK::Params
{

// Function Condition_Wep_Overheated.Condition_Wep_Overheated_C.EvaluateCondition
// 0x0020 (0x0020 - 0x0000)
struct Condition_Wep_Overheated_C_EvaluateCondition final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OptionalContext;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Condition_Wep_Overheated_C_EvaluateCondition) == 0x000008, "Wrong alignment on Condition_Wep_Overheated_C_EvaluateCondition");
static_assert(sizeof(Condition_Wep_Overheated_C_EvaluateCondition) == 0x000020, "Wrong size on Condition_Wep_Overheated_C_EvaluateCondition");
static_assert(offsetof(Condition_Wep_Overheated_C_EvaluateCondition, Context) == 0x000000, "Member 'Condition_Wep_Overheated_C_EvaluateCondition::Context' has a wrong offset!");
static_assert(offsetof(Condition_Wep_Overheated_C_EvaluateCondition, OptionalContext) == 0x000008, "Member 'Condition_Wep_Overheated_C_EvaluateCondition::OptionalContext' has a wrong offset!");
static_assert(offsetof(Condition_Wep_Overheated_C_EvaluateCondition, ReturnValue) == 0x000010, "Member 'Condition_Wep_Overheated_C_EvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Wep_Overheated_C_EvaluateCondition, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000014, "Member 'Condition_Wep_Overheated_C_EvaluateCondition::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Wep_Overheated_C_EvaluateCondition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'Condition_Wep_Overheated_C_EvaluateCondition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Wep_Overheated_C_EvaluateCondition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'Condition_Wep_Overheated_C_EvaluateCondition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

