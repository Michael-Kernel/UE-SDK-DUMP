#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionGraph_DLC2

#include "Basic.hpp"


namespace SDK::Params
{

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Call of the Deep]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Call_of_the_Deep_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Call_of_the_Deep_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Call_of_the_Deep_");
static_assert(sizeof(MissionGraph_DLC2_C__Call_of_the_Deep_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Call_of_the_Deep_");
static_assert(offsetof(MissionGraph_DLC2_C__Call_of_the_Deep_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Call_of_the_Deep_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Call_of_the_Deep_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Call_of_the_Deep_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Cold Case: Buried Questions]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Cold_Case__Buried_Questions_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Cold_Case__Buried_Questions_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Cold_Case__Buried_Questions_");
static_assert(sizeof(MissionGraph_DLC2_C__Cold_Case__Buried_Questions_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Cold_Case__Buried_Questions_");
static_assert(offsetof(MissionGraph_DLC2_C__Cold_Case__Buried_Questions_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Cold_Case__Buried_Questions_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Cold_Case__Buried_Questions_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Cold_Case__Buried_Questions_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Cold Case: Forgotten Answers]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_");
static_assert(sizeof(MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_");
static_assert(offsetof(MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Cold_Case__Forgotten_Answers_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Cold Case: Restless Memories]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Cold_Case__Restless_Memories_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Cold_Case__Restless_Memories_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Cold_Case__Restless_Memories_");
static_assert(sizeof(MissionGraph_DLC2_C__Cold_Case__Restless_Memories_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Cold_Case__Restless_Memories_");
static_assert(offsetof(MissionGraph_DLC2_C__Cold_Case__Restless_Memories_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Cold_Case__Restless_Memories_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Cold_Case__Restless_Memories_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Cold_Case__Restless_Memories_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Happily Ever After]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Happily_Ever_After_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Happily_Ever_After_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Happily_Ever_After_");
static_assert(sizeof(MissionGraph_DLC2_C__Happily_Ever_After_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Happily_Ever_After_");
static_assert(offsetof(MissionGraph_DLC2_C__Happily_Ever_After_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Happily_Ever_After_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Happily_Ever_After_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Happily_Ever_After_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Kill Amach]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Kill_Amach_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Kill_Amach_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Kill_Amach_");
static_assert(sizeof(MissionGraph_DLC2_C__Kill_Amach_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Kill_Amach_");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Amach_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Kill_Amach_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Amach_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Kill_Amach_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Kill Fungal Gorger]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Kill_Fungal_Gorger_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Kill_Fungal_Gorger_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Kill_Fungal_Gorger_");
static_assert(sizeof(MissionGraph_DLC2_C__Kill_Fungal_Gorger_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Kill_Fungal_Gorger_");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Fungal_Gorger_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Kill_Fungal_Gorger_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Fungal_Gorger_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Kill_Fungal_Gorger_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Kill Shiverous the Unscathed]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_");
static_assert(sizeof(MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Kill_Shiverous_the_Unscathed_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Kill Voltborn]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Kill_Voltborn_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Kill_Voltborn_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Kill_Voltborn_");
static_assert(sizeof(MissionGraph_DLC2_C__Kill_Voltborn_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Kill_Voltborn_");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Voltborn_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Kill_Voltborn_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Kill_Voltborn_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Kill_Voltborn_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[On the Mountain of Mayhem]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_");
static_assert(sizeof(MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_");
static_assert(offsetof(MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__On_the_Mountain_of_Mayhem_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[Sinister Sounds]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__Sinister_Sounds_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__Sinister_Sounds_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__Sinister_Sounds_");
static_assert(sizeof(MissionGraph_DLC2_C__Sinister_Sounds_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__Sinister_Sounds_");
static_assert(offsetof(MissionGraph_DLC2_C__Sinister_Sounds_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__Sinister_Sounds_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__Sinister_Sounds_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__Sinister_Sounds_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Call of Gythian]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Call_of_Gythian_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Call_of_Gythian_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Call_of_Gythian_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Call_of_Gythian_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Call_of_Gythian_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Call_of_Gythian_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Call_of_Gythian_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Call_of_Gythian_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Call_of_Gythian_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Case of Wainwright Jakobs]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Case_of_Wainwright_Jakobs_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Great Escape (Part 2)]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Great_Escape__Part_2__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Great_Escape__Part_2__) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Great_Escape__Part_2__");
static_assert(sizeof(MissionGraph_DLC2_C__The_Great_Escape__Part_2__) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Great_Escape__Part_2__");
static_assert(offsetof(MissionGraph_DLC2_C__The_Great_Escape__Part_2__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Great_Escape__Part_2__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Great_Escape__Part_2__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Great_Escape__Part_2__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Horror in the Woods]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Horror_in_the_Woods_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Horror_in_the_Woods_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Horror_in_the_Woods_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Horror_in_the_Woods_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Horror_in_the_Woods_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Horror_in_the_Woods_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Horror_in_the_Woods_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Horror_in_the_Woods_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Horror_in_the_Woods_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Madness Beneath]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Madness_Beneath_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Madness_Beneath_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Madness_Beneath_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Madness_Beneath_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Madness_Beneath_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Madness_Beneath_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Madness_Beneath_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Madness_Beneath_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Madness_Beneath_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Nibblenomicon]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Nibblenomicon_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Nibblenomicon_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Nibblenomicon_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Nibblenomicon_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Nibblenomicon_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Nibblenomicon_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Nibblenomicon_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Nibblenomicon_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Nibblenomicon_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Party Out of Space]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Party_Out_of_Space_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Party_Out_of_Space_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Party_Out_of_Space_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Party_Out_of_Space_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Party_Out_of_Space_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Party_Out_of_Space_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Party_Out_of_Space_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Party_Out_of_Space_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Party_Out_of_Space_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Proprietor: Empty Bottles]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Proprietor__Empty_Bottles_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Proprietor: Rare Vintage]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Proprietor__Rare_Vintage_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[The Shadow Over Cursehaven]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_");
static_assert(sizeof(MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_) == 0x000010, "Wrong size on MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_");
static_assert(offsetof(MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__The_Shadow_Over_Cursehaven_::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[We Slass! (Part 2)]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__We_Slass___Part_2__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__We_Slass___Part_2__) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__We_Slass___Part_2__");
static_assert(sizeof(MissionGraph_DLC2_C__We_Slass___Part_2__) == 0x000010, "Wrong size on MissionGraph_DLC2_C__We_Slass___Part_2__");
static_assert(offsetof(MissionGraph_DLC2_C__We_Slass___Part_2__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__We_Slass___Part_2__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__We_Slass___Part_2__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__We_Slass___Part_2__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[We Slass! (Part 3)]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__We_Slass___Part_3__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__We_Slass___Part_3__) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__We_Slass___Part_3__");
static_assert(sizeof(MissionGraph_DLC2_C__We_Slass___Part_3__) == 0x000010, "Wrong size on MissionGraph_DLC2_C__We_Slass___Part_3__");
static_assert(offsetof(MissionGraph_DLC2_C__We_Slass___Part_3__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__We_Slass___Part_3__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__We_Slass___Part_3__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__We_Slass___Part_3__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.[We Slass!]
// 0x0010 (0x0010 - 0x0000)
struct MissionGraph_DLC2_C__We_Slass__ final
{
public:
	class UObject*                                Unlocks;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Next_Mission;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C__We_Slass__) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C__We_Slass__");
static_assert(sizeof(MissionGraph_DLC2_C__We_Slass__) == 0x000010, "Wrong size on MissionGraph_DLC2_C__We_Slass__");
static_assert(offsetof(MissionGraph_DLC2_C__We_Slass__, Unlocks) == 0x000000, "Member 'MissionGraph_DLC2_C__We_Slass__::Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C__We_Slass__, Next_Mission) == 0x000008, "Member 'MissionGraph_DLC2_C__We_Slass__::Next_Mission' has a wrong offset!");

// Function MissionGraph_DLC2.MissionGraph_DLC2_C.ExecuteUbergraph_MissionGraph_DLC2
// 0x0188 (0x0188 - 0x0000)
struct MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks23;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission23;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks22;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission22;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks21;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission21;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks20;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission20;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks19;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission19;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks18;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission18;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks17;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission17;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks16;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission16;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks15;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission15;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks14;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission14;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks13;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission13;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks12;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission12;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks11;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission11;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks10;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission10;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks9;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission9;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks8;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission8;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks7;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission7;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks6;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission6;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks5;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission5;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks4;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission4;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks3;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission3;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks2;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission2;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Unlocks1;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionRefEvent_Next_Mission1;       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2) == 0x000008, "Wrong alignment on MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2");
static_assert(sizeof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2) == 0x000188, "Wrong size on MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, EntryPoint) == 0x000000, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::EntryPoint' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks) == 0x000008, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission) == 0x000010, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks23) == 0x000018, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks23' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission23) == 0x000020, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission23' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks22) == 0x000028, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks22' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission22) == 0x000030, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission22' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks21) == 0x000038, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks21' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission21) == 0x000040, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission21' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks20) == 0x000048, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks20' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission20) == 0x000050, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission20' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks19) == 0x000058, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks19' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission19) == 0x000060, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission19' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks18) == 0x000068, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks18' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission18) == 0x000070, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission18' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks17) == 0x000078, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks17' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission17) == 0x000080, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission17' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks16) == 0x000088, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks16' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission16) == 0x000090, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission16' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks15) == 0x000098, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks15' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission15) == 0x0000A0, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission15' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks14) == 0x0000A8, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks14' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission14) == 0x0000B0, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission14' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks13) == 0x0000B8, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks13' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission13) == 0x0000C0, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission13' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks12) == 0x0000C8, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks12' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission12) == 0x0000D0, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission12' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks11) == 0x0000D8, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks11' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission11) == 0x0000E0, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission11' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks10) == 0x0000E8, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks10' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission10) == 0x0000F0, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission10' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks9) == 0x0000F8, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks9' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission9) == 0x000100, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission9' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks8) == 0x000108, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks8' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission8) == 0x000110, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission8' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks7) == 0x000118, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks7' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission7) == 0x000120, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission7' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks6) == 0x000128, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks6' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission6) == 0x000130, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission6' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks5) == 0x000138, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks5' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission5) == 0x000140, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission5' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks4) == 0x000148, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks4' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission4) == 0x000150, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission4' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks3) == 0x000158, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks3' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission3) == 0x000160, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission3' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks2) == 0x000168, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks2' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission2) == 0x000170, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission2' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Unlocks1) == 0x000178, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Unlocks1' has a wrong offset!");
static_assert(offsetof(MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2, MissionK2Node_MissionRefEvent_Next_Mission1) == 0x000180, "Member 'MissionGraph_DLC2_C_ExecuteUbergraph_MissionGraph_DLC2::MissionK2Node_MissionRefEvent_Next_Mission1' has a wrong offset!");

}

