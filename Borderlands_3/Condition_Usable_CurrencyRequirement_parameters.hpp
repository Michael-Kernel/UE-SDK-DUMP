#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_Usable_CurrencyRequirement

#include "Basic.hpp"


namespace SDK::Params
{

// Function Condition_Usable_CurrencyRequirement.Condition_Usable_CurrencyRequirement_C.EvaluateCondition
// 0x0058 (0x0058 - 0x0000)
struct Condition_Usable_CurrencyRequirement_C_EvaluateCondition final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OptionalContext;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxCharacter*                          CallFunc_GetPrimaryCharacter_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateAttributeInitializationData_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryListComponent*                CallFunc_GetInventoryComponent_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCategoryItemQuantity_ReturnValue;      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition) == 0x000008, "Wrong alignment on Condition_Usable_CurrencyRequirement_C_EvaluateCondition");
static_assert(sizeof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition) == 0x000058, "Wrong size on Condition_Usable_CurrencyRequirement_C_EvaluateCondition");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, Context) == 0x000000, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::Context' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, OptionalContext) == 0x000008, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::OptionalContext' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, ReturnValue) == 0x000010, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000018, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, CallFunc_GetPrimaryCharacter_ReturnValue) == 0x000028, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::CallFunc_GetPrimaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, K2Node_DynamicCast_AsOak_Character_Player) == 0x000030, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, CallFunc_EvaluateAttributeInitializationData_ReturnValue) == 0x00003C, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::CallFunc_EvaluateAttributeInitializationData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, CallFunc_GetInventoryComponent_ReturnValue) == 0x000040, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, CallFunc_GetCategoryItemQuantity_ReturnValue) == 0x000048, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::CallFunc_GetCategoryItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_Usable_CurrencyRequirement_C_EvaluateCondition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'Condition_Usable_CurrencyRequirement_C_EvaluateCondition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

