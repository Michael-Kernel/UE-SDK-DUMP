#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShieldAug_Torch

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "OakGame_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ShieldAug_Torch.ShieldAug_Torch_C.K2_TriggerEffect
// 0x02A0 (0x02A0 - 0x0000)
struct ShieldAug_Torch_C_K2_TriggerEffect final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentFacingRotation_ReturnValue;     // 0x0088(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0110(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0158(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(ShieldAug_Torch_C_K2_TriggerEffect) == 0x000010, "Wrong alignment on ShieldAug_Torch_C_K2_TriggerEffect");
static_assert(sizeof(ShieldAug_Torch_C_K2_TriggerEffect) == 0x0002A0, "Wrong size on ShieldAug_Torch_C_K2_TriggerEffect");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, Shield) == 0x000000, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, ResourcePool) == 0x000008, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::ResourcePool' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, StackData) == 0x000020, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, Temp_int_Array_Index_Variable) == 0x000050, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000068, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, K2Node_DynamicCast_AsOak_Character) == 0x000070, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00007C, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetCurrentFacingRotation_ReturnValue) == 0x000088, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetCurrentFacingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetValueFromStackCount_ReturnValue) == 0x000094, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetOwner_ReturnValue1) == 0x0000A8, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x0000B0, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetDamageType_ReturnValue) == 0x0000C0, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_BreakTransform_Location) == 0x000104, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_BreakTransform_Rotation) == 0x000110, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_BreakTransform_Scale) == 0x00011C, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetForwardVector_ReturnValue) == 0x00012C, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000138, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Add_VectorVector_ReturnValue) == 0x000144, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x000150, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000154, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_TriggerEffect, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000158, "Member 'ShieldAug_Torch_C_K2_TriggerEffect::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

// Function ShieldAug_Torch.ShieldAug_Torch_C.K2_NativeDelayCallback
// 0x0290 (0x0290 - 0x0000)
struct ShieldAug_Torch_C_K2_NativeDelayCallback final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   DelayName;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromStackCount_ReturnValue;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDamageType_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseShieldDamage_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentFacingRotation_ReturnValue;     // 0x0098(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0110(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x0150(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(ShieldAug_Torch_C_K2_NativeDelayCallback) == 0x000010, "Wrong alignment on ShieldAug_Torch_C_K2_NativeDelayCallback");
static_assert(sizeof(ShieldAug_Torch_C_K2_NativeDelayCallback) == 0x000290, "Wrong size on ShieldAug_Torch_C_K2_NativeDelayCallback");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, Shield) == 0x000000, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::Shield' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, StackData) == 0x000008, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::StackData' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, DelayName) == 0x000038, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::DelayName' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, Angle) == 0x000040, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::Angle' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, K2Node_SwitchName_CmpSuccess) == 0x000044, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, Temp_int_Array_Index_Variable) == 0x000048, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetValueFromStackCount_ReturnValue) == 0x000054, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetValueFromStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetDamageType_ReturnValue) == 0x000060, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetBaseShieldDamage_ReturnValue) == 0x000068, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetBaseShieldDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetOwner_ReturnValue1) == 0x000070, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000078, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, K2Node_DynamicCast_AsOak_Character) == 0x000080, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00008C, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetCurrentFacingRotation_ReturnValue) == 0x000098, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetCurrentFacingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_BreakRotator_Roll) == 0x0000A4, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_BreakRotator_Pitch) == 0x0000A8, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_BreakRotator_Yaw) == 0x0000AC, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x0000B8, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Location) == 0x000104, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Rotation) == 0x000110, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_BreakTransform_Scale) == 0x00011C, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_GetForwardVector_ReturnValue) == 0x000128, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000134, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShieldAug_Torch_C_K2_NativeDelayCallback, K2Node_MakeStruct_LightProjectileInitializationData) == 0x000150, "Member 'ShieldAug_Torch_C_K2_NativeDelayCallback::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

