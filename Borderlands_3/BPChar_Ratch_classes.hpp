#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_Ratch

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxAI_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "BPChar_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_Ratch.BPChar_Ratch_C
// 0x00D0 (0x2460 - 0x2390)
#pragma pack(push, 0x1)
class alignas(0x10) ABPChar_Ratch_C : public ABPChar_Enemy_C
{
public:
	uint8                                         Pad_2381[0x7];                                     // 0x2381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_Ratch_C;                     // 0x2388(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   Audio_DefaultComponent;                            // 0x2390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIUseSlotComponent*                    AIUseSlot;                                         // 0x2398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFoleyMainComponent*                    FoleyMain;                                         // 0x23A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USmartObjectComponent*                  SmartObject;                                       // 0x23A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpawnerStyle*                          PlayerMarkSpawnStyle;                              // 0x23B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         PlayerMarkDuration;                                // 0x23B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23BC[0x4];                                     // 0x23BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAITicketHandle                        PlayerMarkTicket;                                  // 0x23C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UParticleSystemComponent*               FreshCorpseParticle;                               // 0x23D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSmartObjectActionSet                  DeadActionSet;                                     // 0x23D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UGbxCondition*                          HasTarget;                                         // 0x23F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          TargetChanged;                                     // 0x2400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2401[0x3];                                     // 0x2401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UseHoleChance;                                     // 0x2404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Corpse_User;                                       // 0x2408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Corpse_HealthPercent;                              // 0x2410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Corpse_HealthPool;                                 // 0x2414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Corpse_HealthLostPerTick;                          // 0x2418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241C[0x4];                                     // 0x241C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Corpse_Timer;                                      // 0x2420(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Corpse_Timer_TickRate;                             // 0x2428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Corpse_User_RegenPercentPerTick;                   // 0x242C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             Corpse_User_CurrentResourcePool;                   // 0x2430(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	int32                                         Corpse_User_ResourcePoolIndex;                     // 0x2448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Corpse_User_HasSecondHealthBar;                    // 0x244C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Corpse_User_HasThirdHealthBar;                     // 0x244D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_244E[0x2];                                     // 0x244E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Corpse_User_AmountOfBarMissing;                    // 0x2450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Ratch_GetBadassProjectile(class UClass** BadassProjectile);
	void Ratch_SetCorpseUserRegenRate(float* RegenRate);
	void CheckResourcePoolValues(int32 ResourcePoolIndex, float* AmountMissing);
	void SetCurrentResourcePool(int32 ResourcePoolIndex);
	void RegenCorpseUsers();
	void UserConstructionScript();
	void Ratch_Charge(bool OnStart);
	void Ratch_PuddleSpawn(bool ShouldLoop);
	void Ratch_SwarmManagement();
	void Ratch_DistortionScreenParticle(class UScreenParticleManagerComponent* PlayerScreenFXManager);
	void Ratch_Fly_Start();
	void Ratch01Hunt_DrainHealth(class AActor* DamageTarget, float DamageDealt);
	void RatchEgg_Die();
	void Ratch_SpawnEggs();
	void Ratch_StopSpawnEggs();
	void Ratch_SpikeShot();
	void Ratch_VomitScreenParticle(class UScreenParticleManagerComponent* PlayerScreenFXManager);
	void Ratch_Sniff();
	void ReceiveBeginPlay();
	void BndEvt__DamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPChar_Ratch(class AActor* DamageReceiver, class AActor* DamageCauser);
	void CorpseHealthDepleted();
	void BndEvt__SmartObject_K2Node_ComponentBoundEvent_4_SmartObjectUsageEvent__DelegateSignature_BPChar_Ratch(class AController* Controller_0, const struct FGameplayTag& ActionTag);
	void Feast_FX();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_HitReactionPlayedDelegate__DelegateSignature_BPChar_Ratch(class AActor* DamageReceiver, class AActor* DamageCauser, class UHitReactionTag* Tag);
	void ExecuteUbergraph_BPChar_Ratch(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_Ratch_C">();
	}
	static class ABPChar_Ratch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_Ratch_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABPChar_Ratch_C) == 0x000010, "Wrong alignment on ABPChar_Ratch_C");
static_assert(sizeof(ABPChar_Ratch_C) == 0x002460, "Wrong size on ABPChar_Ratch_C");
static_assert(offsetof(ABPChar_Ratch_C, UberGraphFrame_BPChar_Ratch_C) == 0x002388, "Member 'ABPChar_Ratch_C::UberGraphFrame_BPChar_Ratch_C' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Audio_DefaultComponent) == 0x002390, "Member 'ABPChar_Ratch_C::Audio_DefaultComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, AIUseSlot) == 0x002398, "Member 'ABPChar_Ratch_C::AIUseSlot' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, FoleyMain) == 0x0023A0, "Member 'ABPChar_Ratch_C::FoleyMain' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, SmartObject) == 0x0023A8, "Member 'ABPChar_Ratch_C::SmartObject' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, PlayerMarkSpawnStyle) == 0x0023B0, "Member 'ABPChar_Ratch_C::PlayerMarkSpawnStyle' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, PlayerMarkDuration) == 0x0023B8, "Member 'ABPChar_Ratch_C::PlayerMarkDuration' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, PlayerMarkTicket) == 0x0023C0, "Member 'ABPChar_Ratch_C::PlayerMarkTicket' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, FreshCorpseParticle) == 0x0023D0, "Member 'ABPChar_Ratch_C::FreshCorpseParticle' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, DeadActionSet) == 0x0023D8, "Member 'ABPChar_Ratch_C::DeadActionSet' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, HasTarget) == 0x0023F8, "Member 'ABPChar_Ratch_C::HasTarget' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, TargetChanged) == 0x002400, "Member 'ABPChar_Ratch_C::TargetChanged' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, UseHoleChance) == 0x002404, "Member 'ABPChar_Ratch_C::UseHoleChance' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User) == 0x002408, "Member 'ABPChar_Ratch_C::Corpse_User' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_HealthPercent) == 0x002410, "Member 'ABPChar_Ratch_C::Corpse_HealthPercent' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_HealthPool) == 0x002414, "Member 'ABPChar_Ratch_C::Corpse_HealthPool' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_HealthLostPerTick) == 0x002418, "Member 'ABPChar_Ratch_C::Corpse_HealthLostPerTick' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_Timer) == 0x002420, "Member 'ABPChar_Ratch_C::Corpse_Timer' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_Timer_TickRate) == 0x002428, "Member 'ABPChar_Ratch_C::Corpse_Timer_TickRate' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User_RegenPercentPerTick) == 0x00242C, "Member 'ABPChar_Ratch_C::Corpse_User_RegenPercentPerTick' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User_CurrentResourcePool) == 0x002430, "Member 'ABPChar_Ratch_C::Corpse_User_CurrentResourcePool' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User_ResourcePoolIndex) == 0x002448, "Member 'ABPChar_Ratch_C::Corpse_User_ResourcePoolIndex' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User_HasSecondHealthBar) == 0x00244C, "Member 'ABPChar_Ratch_C::Corpse_User_HasSecondHealthBar' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User_HasThirdHealthBar) == 0x00244D, "Member 'ABPChar_Ratch_C::Corpse_User_HasThirdHealthBar' has a wrong offset!");
static_assert(offsetof(ABPChar_Ratch_C, Corpse_User_AmountOfBarMissing) == 0x002450, "Member 'ABPChar_Ratch_C::Corpse_User_AmountOfBarMissing' has a wrong offset!");

}

