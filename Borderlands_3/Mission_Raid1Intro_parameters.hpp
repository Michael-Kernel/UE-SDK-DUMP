#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_Raid1Intro

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK::Params
{

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.ExecuteUbergraph_Mission_Raid1Intro
// 0x0718 (0x0718 - 0x0000)
struct Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue;             // 0x0008(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0220(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue1;            // 0x0238(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation1;                // 0x0450(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID1;                  // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue1;                 // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue1;              // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         CallFunc_NewDialogContext_ReturnValue2;            // 0x0468(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation2;                // 0x0680(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID2;                  // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue2;                 // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue2;              // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0692(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3; // 0x0693(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent4;      // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount4;      // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context3;         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MissionK2Node_MissionCustomEvent_Context2;         // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2; // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x06C0(0x0010)(ZeroConstructor, NoDestructor)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1; // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveSetEvent                     MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent; // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent3;      // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3[0x1];                                      // 0x06D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount3;      // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context1;         // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent2;      // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E2[0x2];                                      // 0x06E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount2;      // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent1;      // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount1;      // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveEvent                        MissionK2Node_ObjectiveEvent_ObjectiveEvent;       // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionK2Node_ObjectiveEvent_ObjectiveCount;       // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MissionRemoteEvent_ReturnValue;           // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x06FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6FB[0x5];                                      // 0x06FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0700(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                MissionK2Node_MissionCustomEvent_Context;          // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro) == 0x000008, "Wrong alignment on Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro");
static_assert(sizeof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro) == 0x000718, "Wrong size on Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, EntryPoint) == 0x000000, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_NewDialogContext_ReturnValue) == 0x000008, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_NewDialogContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_Conversation) == 0x000220, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_SequenceID) == 0x00022C, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_ReturnValue) == 0x000230, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_Conv_IntToBool_ReturnValue) == 0x000231, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_NewDialogContext_ReturnValue1) == 0x000238, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_NewDialogContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_Conversation1) == 0x000450, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_Conversation1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_SequenceID1) == 0x00045C, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_SequenceID1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_ReturnValue1) == 0x000460, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_Conv_IntToBool_ReturnValue1) == 0x000461, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_Conv_IntToBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_NewDialogContext_ReturnValue2) == 0x000468, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_NewDialogContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_Conversation2) == 0x000680, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_Conversation2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_SequenceID2) == 0x00068C, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_SequenceID2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_FinishSpeak_ReturnValue2) == 0x000690, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_FinishSpeak_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_Conv_IntToBool_ReturnValue2) == 0x000691, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_Conv_IntToBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, Temp_bool_IsClosed_Variable) == 0x000692, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3) == 0x000693, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent3' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveEvent4) == 0x000694, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveEvent4' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveCount4) == 0x000698, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveCount4' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_MissionCustomEvent_Context3) == 0x0006A0, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_MissionCustomEvent_Context3' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, K2Node_SwitchEnum_CmpSuccess) == 0x0006A8, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_MissionCustomEvent_Context2) == 0x0006B0, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_MissionCustomEvent_Context2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2) == 0x0006B8, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, K2Node_CreateDelegate_OutputDelegate) == 0x0006C0, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1) == 0x0006D0, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent) == 0x0006D1, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveSetEvent_ObjectiveSetEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveEvent3) == 0x0006D2, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveEvent3' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveCount3) == 0x0006D4, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveCount3' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_MissionCustomEvent_Context1) == 0x0006D8, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_MissionCustomEvent_Context1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, K2Node_SwitchEnum1_CmpSuccess) == 0x0006E0, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveEvent2) == 0x0006E1, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveEvent2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveCount2) == 0x0006E4, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveCount2' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveEvent1) == 0x0006E8, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveEvent1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveCount1) == 0x0006EC, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveCount1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveEvent) == 0x0006F0, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_ObjectiveEvent_ObjectiveCount) == 0x0006F4, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_ObjectiveEvent_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, K2Node_SwitchEnum2_CmpSuccess) == 0x0006F8, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, CallFunc_MissionRemoteEvent_ReturnValue) == 0x0006F9, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::CallFunc_MissionRemoteEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, Temp_bool_Has_Been_Initd_Variable) == 0x0006FA, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, K2Node_CreateDelegate_OutputDelegate1) == 0x000700, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro, MissionK2Node_MissionCustomEvent_Context) == 0x000710, "Member 'Mission_Raid1Intro_C_ExecuteUbergraph_Mission_Raid1Intro::MissionK2Node_MissionCustomEvent_Context' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.AdvanceTo_PlanetTitleCard
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard) == 0x000008, "Wrong alignment on Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard");
static_assert(sizeof(Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard) == 0x000008, "Wrong size on Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard");
static_assert(offsetof(Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard, Context) == 0x000000, "Member 'Mission_Raid1Intro_C_AdvanceTo_PlanetTitleCard::Context' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Obj_MissionEnd
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_Obj_MissionEnd final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Obj_MissionEnd) == 0x000004, "Wrong alignment on Mission_Raid1Intro_C_Obj_MissionEnd");
static_assert(sizeof(Mission_Raid1Intro_C_Obj_MissionEnd) == 0x000008, "Wrong size on Mission_Raid1Intro_C_Obj_MissionEnd");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_MissionEnd, ObjectiveEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Obj_MissionEnd::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_MissionEnd, ObjectiveCount) == 0x000004, "Member 'Mission_Raid1Intro_C_Obj_MissionEnd::ObjectiveCount' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Obj_TITLECARD_RAIDPLANET
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET) == 0x000004, "Wrong alignment on Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET");
static_assert(sizeof(Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET) == 0x000008, "Wrong size on Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET, ObjectiveEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET, ObjectiveCount) == 0x000004, "Member 'Mission_Raid1Intro_C_Obj_TITLECARD_RAIDPLANET::ObjectiveCount' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Obj_UseDropPod
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_Obj_UseDropPod final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Obj_UseDropPod) == 0x000004, "Wrong alignment on Mission_Raid1Intro_C_Obj_UseDropPod");
static_assert(sizeof(Mission_Raid1Intro_C_Obj_UseDropPod) == 0x000008, "Wrong size on Mission_Raid1Intro_C_Obj_UseDropPod");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_UseDropPod, ObjectiveEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Obj_UseDropPod::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_UseDropPod, ObjectiveCount) == 0x000004, "Member 'Mission_Raid1Intro_C_Obj_UseDropPod::ObjectiveCount' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.UPDATE_ReNavigate_Raid1Planet
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet) == 0x000008, "Wrong alignment on Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet");
static_assert(sizeof(Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet) == 0x000008, "Wrong size on Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet");
static_assert(offsetof(Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet, Context) == 0x000000, "Member 'Mission_Raid1Intro_C_UPDATE_ReNavigate_Raid1Planet::Context' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Obj_ReNavigate_Raid1Planet
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet) == 0x000004, "Wrong alignment on Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet");
static_assert(sizeof(Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet) == 0x000008, "Wrong size on Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet, ObjectiveEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet, ObjectiveCount) == 0x000004, "Member 'Mission_Raid1Intro_C_Obj_ReNavigate_Raid1Planet::ObjectiveCount' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Set_MissionEnd
// 0x0001 (0x0001 - 0x0000)
struct Mission_Raid1Intro_C_Set_MissionEnd final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Set_MissionEnd) == 0x000001, "Wrong alignment on Mission_Raid1Intro_C_Set_MissionEnd");
static_assert(sizeof(Mission_Raid1Intro_C_Set_MissionEnd) == 0x000001, "Wrong size on Mission_Raid1Intro_C_Set_MissionEnd");
static_assert(offsetof(Mission_Raid1Intro_C_Set_MissionEnd, ObjectiveSetEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Set_MissionEnd::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Set_PlanetTitleCard
// 0x0001 (0x0001 - 0x0000)
struct Mission_Raid1Intro_C_Set_PlanetTitleCard final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Set_PlanetTitleCard) == 0x000001, "Wrong alignment on Mission_Raid1Intro_C_Set_PlanetTitleCard");
static_assert(sizeof(Mission_Raid1Intro_C_Set_PlanetTitleCard) == 0x000001, "Wrong size on Mission_Raid1Intro_C_Set_PlanetTitleCard");
static_assert(offsetof(Mission_Raid1Intro_C_Set_PlanetTitleCard, ObjectiveSetEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Set_PlanetTitleCard::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Set_UseDropPod
// 0x0001 (0x0001 - 0x0000)
struct Mission_Raid1Intro_C_Set_UseDropPod final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Set_UseDropPod) == 0x000001, "Wrong alignment on Mission_Raid1Intro_C_Set_UseDropPod");
static_assert(sizeof(Mission_Raid1Intro_C_Set_UseDropPod) == 0x000001, "Wrong size on Mission_Raid1Intro_C_Set_UseDropPod");
static_assert(offsetof(Mission_Raid1Intro_C_Set_UseDropPod, ObjectiveSetEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Set_UseDropPod::ObjectiveSetEvent' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.ADVANCE_Navigate_Raid1Planet
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet) == 0x000008, "Wrong alignment on Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet");
static_assert(sizeof(Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet) == 0x000008, "Wrong size on Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet");
static_assert(offsetof(Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet, Context) == 0x000000, "Member 'Mission_Raid1Intro_C_ADVANCE_Navigate_Raid1Planet::Context' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.UPDATE_Navigate_Raid1Planet
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet) == 0x000008, "Wrong alignment on Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet");
static_assert(sizeof(Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet) == 0x000008, "Wrong size on Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet");
static_assert(offsetof(Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet, Context) == 0x000000, "Member 'Mission_Raid1Intro_C_UPDATE_Navigate_Raid1Planet::Context' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Obj_Navigate_Raid1Planet
// 0x0008 (0x0008 - 0x0000)
struct Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet final
{
public:
	EMissionObjectiveEvent                        ObjectiveEvent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet) == 0x000004, "Wrong alignment on Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet");
static_assert(sizeof(Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet) == 0x000008, "Wrong size on Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet, ObjectiveEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet::ObjectiveEvent' has a wrong offset!");
static_assert(offsetof(Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet, ObjectiveCount) == 0x000004, "Member 'Mission_Raid1Intro_C_Obj_Navigate_Raid1Planet::ObjectiveCount' has a wrong offset!");

// Function Mission_Raid1Intro.Mission_Raid1Intro_C.Set_Navigate_Raid1Planet
// 0x0001 (0x0001 - 0x0000)
struct Mission_Raid1Intro_C_Set_Navigate_Raid1Planet final
{
public:
	EMissionObjectiveSetEvent                     ObjectiveSetEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mission_Raid1Intro_C_Set_Navigate_Raid1Planet) == 0x000001, "Wrong alignment on Mission_Raid1Intro_C_Set_Navigate_Raid1Planet");
static_assert(sizeof(Mission_Raid1Intro_C_Set_Navigate_Raid1Planet) == 0x000001, "Wrong size on Mission_Raid1Intro_C_Set_Navigate_Raid1Planet");
static_assert(offsetof(Mission_Raid1Intro_C_Set_Navigate_Raid1Planet, ObjectiveSetEvent) == 0x000000, "Member 'Mission_Raid1Intro_C_Set_Navigate_Raid1Planet::ObjectiveSetEvent' has a wrong offset!");

}

