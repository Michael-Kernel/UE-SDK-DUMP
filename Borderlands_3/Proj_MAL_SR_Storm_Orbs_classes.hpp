#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_MAL_SR_Storm_Orbs

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Proj_Weapon_BaseProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_MAL_SR_Storm_Orbs.Proj_MAL_SR_Storm_Orbs_C
// 0x0030 (0x07C0 - 0x0790)
class AProj_MAL_SR_Storm_Orbs_C final : public AProj_Weapon_BaseProjectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Proj_MAL_SR_Storm_Orbs_C;           // 0x0790(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       TriggerCollision;                                  // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_MAL_SMG_Plasma_Shock;                           // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakTriggerComponent*                   OakTrigger;                                        // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         AttachedTargets;                                   // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Proj_MAL_SR_Storm_Orbs(int32 EntryPoint);
	void Bobble();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_MAL_SR_Storm_Orbs(class AActor* LeavingActor, bool bIsPlayer);
	void WeaponProjectileExplode();
	void ReceiveDestroyed();
	void BndEvt__OakTrigger_K2Node_ComponentBoundEvent_0_OakTouchedTriggerDelegate__DelegateSignature_Proj_MAL_SR_Storm_Orbs(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_MAL_SR_Storm_Orbs_C">();
	}
	static class AProj_MAL_SR_Storm_Orbs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_MAL_SR_Storm_Orbs_C>();
	}
};
static_assert(alignof(AProj_MAL_SR_Storm_Orbs_C) == 0x000008, "Wrong alignment on AProj_MAL_SR_Storm_Orbs_C");
static_assert(sizeof(AProj_MAL_SR_Storm_Orbs_C) == 0x0007C0, "Wrong size on AProj_MAL_SR_Storm_Orbs_C");
static_assert(offsetof(AProj_MAL_SR_Storm_Orbs_C, UberGraphFrame_Proj_MAL_SR_Storm_Orbs_C) == 0x000790, "Member 'AProj_MAL_SR_Storm_Orbs_C::UberGraphFrame_Proj_MAL_SR_Storm_Orbs_C' has a wrong offset!");
static_assert(offsetof(AProj_MAL_SR_Storm_Orbs_C, TriggerCollision) == 0x000798, "Member 'AProj_MAL_SR_Storm_Orbs_C::TriggerCollision' has a wrong offset!");
static_assert(offsetof(AProj_MAL_SR_Storm_Orbs_C, PS_MAL_SMG_Plasma_Shock) == 0x0007A0, "Member 'AProj_MAL_SR_Storm_Orbs_C::PS_MAL_SMG_Plasma_Shock' has a wrong offset!");
static_assert(offsetof(AProj_MAL_SR_Storm_Orbs_C, OakTrigger) == 0x0007A8, "Member 'AProj_MAL_SR_Storm_Orbs_C::OakTrigger' has a wrong offset!");
static_assert(offsetof(AProj_MAL_SR_Storm_Orbs_C, AttachedTargets) == 0x0007B0, "Member 'AProj_MAL_SR_Storm_Orbs_C::AttachedTargets' has a wrong offset!");

}

