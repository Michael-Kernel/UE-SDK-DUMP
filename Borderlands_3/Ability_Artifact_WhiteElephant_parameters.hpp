#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_WhiteElephant

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxWeapon_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_WhiteElephant.Ability_Artifact_WhiteElephant_C.ExecuteUbergraph_Ability_Artifact_WhiteElephant
// 0x0240 (0x0240 - 0x0000)
struct Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0048(0x0060)(ContainsInstancedReference)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x00A8(0x0028)(NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorInt_ReturnValue;           // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue1;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00F8(0x0140)(ContainsInstancedReference)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant) == 0x000008, "Wrong alignment on Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant");
static_assert(sizeof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant) == 0x000240, "Wrong size on Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, EntryPoint) == 0x000000, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, Temp_int_Variable) == 0x000004, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000008, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CustomEvent_DamageInstigator) == 0x000020, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CustomEvent_Damage) == 0x000028, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CustomEvent_DamageType) == 0x000030, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CustomEvent_DamageSource) == 0x000038, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CustomEvent_DamagedActor) == 0x000040, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_CustomEvent_Details) == 0x000048, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0000A8, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_Subtract_VectorInt_ReturnValue) == 0x0000D0, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_Subtract_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_Compare_Damage_Source_Equal) == 0x0000DC, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_Compare_Damage_Source_Not_Equal) == 0x0000DD, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000E4, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_Select_Default) == 0x0000E8, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_GetValueOfAttribute_ReturnValue1) == 0x0000F0, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_GetValueOfAttribute_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000F8, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000238, "Member 'Ability_Artifact_WhiteElephant_C_ExecuteUbergraph_Ability_Artifact_WhiteElephant::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

// Function Ability_Artifact_WhiteElephant.Ability_Artifact_WhiteElephant_C.CausedDamage
// 0x0088 (0x0088 - 0x0000)
struct Ability_Artifact_WhiteElephant_C_CausedDamage final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Ability_Artifact_WhiteElephant_C_CausedDamage) == 0x000008, "Wrong alignment on Ability_Artifact_WhiteElephant_C_CausedDamage");
static_assert(sizeof(Ability_Artifact_WhiteElephant_C_CausedDamage) == 0x000088, "Wrong size on Ability_Artifact_WhiteElephant_C_CausedDamage");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_CausedDamage, DamageInstigator) == 0x000000, "Member 'Ability_Artifact_WhiteElephant_C_CausedDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_CausedDamage, Damage) == 0x000008, "Member 'Ability_Artifact_WhiteElephant_C_CausedDamage::Damage' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_CausedDamage, DamageType) == 0x000010, "Member 'Ability_Artifact_WhiteElephant_C_CausedDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_CausedDamage, DamageSource) == 0x000018, "Member 'Ability_Artifact_WhiteElephant_C_CausedDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_CausedDamage, DamagedActor) == 0x000020, "Member 'Ability_Artifact_WhiteElephant_C_CausedDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_CausedDamage, Details) == 0x000028, "Member 'Ability_Artifact_WhiteElephant_C_CausedDamage::Details' has a wrong offset!");

// Function Ability_Artifact_WhiteElephant.Ability_Artifact_WhiteElephant_C.Ammo Return
// 0x0020 (0x0020 - 0x0000)
struct Ability_Artifact_WhiteElephant_C_Ammo_Return final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Artifact_WhiteElephant_C_Ammo_Return) == 0x000008, "Wrong alignment on Ability_Artifact_WhiteElephant_C_Ammo_Return");
static_assert(sizeof(Ability_Artifact_WhiteElephant_C_Ammo_Return) == 0x000020, "Wrong size on Ability_Artifact_WhiteElephant_C_Ammo_Return");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_Ammo_Return, Character) == 0x000000, "Member 'Ability_Artifact_WhiteElephant_C_Ammo_Return::Character' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_Ammo_Return, CallFunc_GetWeapon_ReturnValue) == 0x000008, "Member 'Ability_Artifact_WhiteElephant_C_Ammo_Return::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_Ammo_Return, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000010, "Member 'Ability_Artifact_WhiteElephant_C_Ammo_Return::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_Ammo_Return, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Ability_Artifact_WhiteElephant_C_Ammo_Return::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_WhiteElephant_C_Ammo_Return, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'Ability_Artifact_WhiteElephant_C_Ammo_Return::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

