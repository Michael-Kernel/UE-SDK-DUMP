#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_SM_Hyperion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPWeap_BaseWeapon_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPWeap_SM_Hyperion.BPWeap_SM_Hyperion_C
// 0x0018 (0x09E8 - 0x09D0)
class ABPWeap_SM_Hyperion_C : public ABPWeap_BaseWeapon_C
{
public:
	uint8                                         Pad_9CC[0x4];                                      // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPWeap_SM_Hyperion_C;               // 0x09D0(0x0008)(Transient, DuplicateTransient)
	class UClass*                                 Projectile_ThrownWeapon;                           // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedLoadedAmmo;                                  // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPWeap_SM_Hyperion(int32 EntryPoint);
	void ThrowWeapon();
	void ShowWeapon();
	void HideWeapon();
	void Tediore_WeaponData(float* DamageRadius, class UClass** DamageTypeClass, int32* NumMirvProjectiles, float* FireRate, float* LoadedAmmo, int32* ThrowType);
	void Notify_ReloadStarted(bool bAutoReload);
	void WeaponAttached();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPWeap_SM_Hyperion_C">();
	}
	static class ABPWeap_SM_Hyperion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPWeap_SM_Hyperion_C>();
	}
};
static_assert(alignof(ABPWeap_SM_Hyperion_C) == 0x000008, "Wrong alignment on ABPWeap_SM_Hyperion_C");
static_assert(sizeof(ABPWeap_SM_Hyperion_C) == 0x0009E8, "Wrong size on ABPWeap_SM_Hyperion_C");
static_assert(offsetof(ABPWeap_SM_Hyperion_C, UberGraphFrame_BPWeap_SM_Hyperion_C) == 0x0009D0, "Member 'ABPWeap_SM_Hyperion_C::UberGraphFrame_BPWeap_SM_Hyperion_C' has a wrong offset!");
static_assert(offsetof(ABPWeap_SM_Hyperion_C, Projectile_ThrownWeapon) == 0x0009D8, "Member 'ABPWeap_SM_Hyperion_C::Projectile_ThrownWeapon' has a wrong offset!");
static_assert(offsetof(ABPWeap_SM_Hyperion_C, CachedLoadedAmmo) == 0x0009E0, "Member 'ABPWeap_SM_Hyperion_C::CachedLoadedAmmo' has a wrong offset!");

}

