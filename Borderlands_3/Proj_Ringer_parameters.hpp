#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Ringer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OakGame_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Proj_Ringer.Proj_Ringer_C.ExecuteUbergraph_Proj_Ringer
// 0x0260 (0x0260 - 0x0000)
struct Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOakElementalType                             K2Node_Event_ElementType;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewFuseTime;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewCurrentHealth;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_ImpactResult;           // 0x0010(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_ComponentBoundEvent_ImpactVelocity;         // 0x00A0(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x00C8(0x0018)()
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x00E8(0x0018)()
	class UDamageComponent*                       K2Node_ComponentBoundEvent_DamageReceiver;         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0110(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeMod*                            K2Node_DynamicCast_AsGrenade_Mod;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue1; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x01C0(0x0008)(NoDestructor)
	struct FHitResult                             Temp_struct_Variable;                              // 0x01C8(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer) == 0x000008, "Wrong alignment on Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer");
static_assert(sizeof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer) == 0x000260, "Wrong size on Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, EntryPoint) == 0x000000, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_Event_ElementType) == 0x000005, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_Event_ElementType' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_Event_NewFuseTime) == 0x000008, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_Event_NewFuseTime' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_Event_NewCurrentHealth) == 0x00000C, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_Event_NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_ComponentBoundEvent_ImpactResult) == 0x000010, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_ComponentBoundEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_ComponentBoundEvent_ImpactVelocity) == 0x0000A0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_ComponentBoundEvent_ImpactVelocity' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, Temp_bool_Has_Been_Initd_Variable) == 0x0000AC, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_GetDataTableValue_OutValue) == 0x0000BC, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_GetDataTableValue_ReturnValue) == 0x0000C0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_PostEventAtLocation_ReturnValue) == 0x0000C8, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_PostWwiseEvent_ReturnValue) == 0x0000E8, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_ComponentBoundEvent_DamageReceiver) == 0x000100, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_ComponentBoundEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_ComponentBoundEvent_DamageCauser) == 0x000108, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_Event_Hit) == 0x000110, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_GetOwner_ReturnValue) == 0x0001A0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_DynamicCast_AsGrenade_Mod) == 0x0001A8, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_DynamicCast_AsGrenade_Mod' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue) == 0x0001B4, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue1) == 0x0001B8, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_Conv_GbxAttributeFloatToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_K2_SetTimer_ReturnValue) == 0x0001C0, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, Temp_struct_Variable) == 0x0001C8, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000258, "Member 'Proj_Ringer_C_ExecuteUbergraph_Proj_Ringer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Proj_Ringer.Proj_Ringer_C.OnHitDamagableObject
// 0x0090 (0x0090 - 0x0000)
struct Proj_Ringer_C_OnHitDamagableObject final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_Ringer_C_OnHitDamagableObject) == 0x000008, "Wrong alignment on Proj_Ringer_C_OnHitDamagableObject");
static_assert(sizeof(Proj_Ringer_C_OnHitDamagableObject) == 0x000090, "Wrong size on Proj_Ringer_C_OnHitDamagableObject");
static_assert(offsetof(Proj_Ringer_C_OnHitDamagableObject, Hit) == 0x000000, "Member 'Proj_Ringer_C_OnHitDamagableObject::Hit' has a wrong offset!");

// Function Proj_Ringer.Proj_Ringer_C.BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb
// 0x0010 (0x0010 - 0x0000)
struct Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb) == 0x000008, "Wrong alignment on Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb");
static_assert(sizeof(Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb) == 0x000010, "Wrong size on Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb");
static_assert(offsetof(Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb, DamageReceiver) == 0x000000, "Member 'Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb::DamageReceiver' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb, DamageCauser) == 0x000008, "Member 'Proj_Ringer_C_BndEvt__OakDamage_K2Node_ComponentBoundEvent_2_DamageCompHealthDepletedDelegate__DelegateSignature_Proj_TinkSuicide_ExplosiveBomb::DamageCauser' has a wrong offset!");

// Function Proj_Ringer.Proj_Ringer_C.BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee
// 0x00A0 (0x00A0 - 0x0000)
struct Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0090(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee) == 0x000008, "Wrong alignment on Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee");
static_assert(sizeof(Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee) == 0x0000A0, "Wrong size on Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee");
static_assert(offsetof(Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee, ImpactResult) == 0x000000, "Member 'Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee::ImpactResult' has a wrong offset!");
static_assert(offsetof(Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee, ImpactVelocity) == 0x000090, "Member 'Proj_Ringer_C_BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileBounceDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownMelee::ImpactVelocity' has a wrong offset!");

// Function Proj_Ringer.Proj_Ringer_C.TinkSuicideBomb_SetCurrentHealth
// 0x0004 (0x0004 - 0x0000)
struct Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth final
{
public:
	float                                         NewCurrentHealth;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth) == 0x000004, "Wrong alignment on Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth");
static_assert(sizeof(Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth) == 0x000004, "Wrong size on Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth");
static_assert(offsetof(Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth, NewCurrentHealth) == 0x000000, "Member 'Proj_Ringer_C_TinkSuicideBomb_SetCurrentHealth::NewCurrentHealth' has a wrong offset!");

// Function Proj_Ringer.Proj_Ringer_C.TinkSuicideBomb_SetFuseTimer
// 0x0004 (0x0004 - 0x0000)
struct Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer final
{
public:
	float                                         NewFuseTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer) == 0x000004, "Wrong alignment on Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer");
static_assert(sizeof(Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer) == 0x000004, "Wrong size on Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer");
static_assert(offsetof(Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer, NewFuseTime) == 0x000000, "Member 'Proj_Ringer_C_TinkSuicideBomb_SetFuseTimer::NewFuseTime' has a wrong offset!");

// Function Proj_Ringer.Proj_Ringer_C.InitializeElement
// 0x0001 (0x0001 - 0x0000)
struct Proj_Ringer_C_InitializeElement final
{
public:
	EOakElementalType                             ElementType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_Ringer_C_InitializeElement) == 0x000001, "Wrong alignment on Proj_Ringer_C_InitializeElement");
static_assert(sizeof(Proj_Ringer_C_InitializeElement) == 0x000001, "Wrong size on Proj_Ringer_C_InitializeElement");
static_assert(offsetof(Proj_Ringer_C_InitializeElement, ElementType) == 0x000000, "Member 'Proj_Ringer_C_InitializeElement::ElementType' has a wrong offset!");

}

