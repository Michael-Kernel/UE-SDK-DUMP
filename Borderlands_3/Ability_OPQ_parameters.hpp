#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_OPQ

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ability_OPQ.Ability_OPQ_C.ExecuteUbergraph_Ability_OPQ
// 0x01B8 (0x01B8 - 0x0000)
struct Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0010(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetDataTableValue_OutValue1;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue1;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x00E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x00F8(0x0060)(ContainsInstancedReference)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0158(0x0028)(NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A0(0x0008)(NoDestructor)
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue1;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ) == 0x000008, "Wrong alignment on Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ");
static_assert(sizeof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ) == 0x0001B8, "Wrong size on Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, EntryPoint) == 0x000000, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetDataTableValue_OutValue) == 0x000004, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetDataTableValue_ReturnValue) == 0x000008, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, Temp_struct_Variable) == 0x000010, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetDataTableValue_OutValue1) == 0x0000A0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetDataTableValue_OutValue1' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetDataTableValue_ReturnValue1) == 0x0000A4, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetDataTableValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetAbilityOwner_ReturnValue) == 0x0000A8, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CreateDelegate_OutputDelegate) == 0x0000B0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_DynamicCast_AsOak_Character) == 0x0000C0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CustomEvent_DamageInstigator) == 0x0000D0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CustomEvent_Damage) == 0x0000D8, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CustomEvent_DamageType) == 0x0000E0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CustomEvent_DamageSource) == 0x0000E8, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CustomEvent_DamagedActor) == 0x0000F0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CustomEvent_Details) == 0x0000F8, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000158, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_Compare_Damage_Source_Equal) == 0x000180, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_Compare_Damage_Source_Not_Equal) == 0x000181, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000184, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000188, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, K2Node_CreateDelegate_OutputDelegate1) == 0x000190, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetAbilityOwner_ReturnValue1) == 0x0001A8, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetAbilityOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ, CallFunc_GetWeapon_ReturnValue) == 0x0001B0, "Member 'Ability_OPQ_C_ExecuteUbergraph_Ability_OPQ::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");

// Function Ability_OPQ.Ability_OPQ_C.DealtDamage
// 0x0088 (0x0088 - 0x0000)
struct Ability_OPQ_C_DealtDamage final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Ability_OPQ_C_DealtDamage) == 0x000008, "Wrong alignment on Ability_OPQ_C_DealtDamage");
static_assert(sizeof(Ability_OPQ_C_DealtDamage) == 0x000088, "Wrong size on Ability_OPQ_C_DealtDamage");
static_assert(offsetof(Ability_OPQ_C_DealtDamage, DamageInstigator) == 0x000000, "Member 'Ability_OPQ_C_DealtDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_DealtDamage, Damage) == 0x000008, "Member 'Ability_OPQ_C_DealtDamage::Damage' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_DealtDamage, DamageType) == 0x000010, "Member 'Ability_OPQ_C_DealtDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_DealtDamage, DamageSource) == 0x000018, "Member 'Ability_OPQ_C_DealtDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_DealtDamage, DamagedActor) == 0x000020, "Member 'Ability_OPQ_C_DealtDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_OPQ_C_DealtDamage, Details) == 0x000028, "Member 'Ability_OPQ_C_DealtDamage::Details' has a wrong offset!");

}

