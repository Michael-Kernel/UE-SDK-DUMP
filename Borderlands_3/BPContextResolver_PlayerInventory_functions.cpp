#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPContextResolver_PlayerInventory

#include "Basic.hpp"

#include "BPContextResolver_PlayerInventory_classes.hpp"
#include "BPContextResolver_PlayerInventory_parameters.hpp"


namespace SDK
{

// Function BPContextResolver_PlayerInventory.BPContextResolver_PlayerInventory_C.GetContextForAttribute
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGbxAttributeData*                Attribute                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ContextSource                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UObject*> UBPContextResolver_PlayerInventory_C::GetContextForAttribute(const class UGbxAttributeData* Attribute, class UObject* ContextSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPContextResolver_PlayerInventory_C", "GetContextForAttribute");

	Params::BPContextResolver_PlayerInventory_C_GetContextForAttribute Parms{};

	Parms.Attribute = Attribute;
	Parms.ContextSource = ContextSource;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

