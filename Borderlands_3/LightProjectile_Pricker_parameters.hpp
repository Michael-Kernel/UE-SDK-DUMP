#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_Pricker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_Pricker.LightProjectile_Pricker_C.HomeIn
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_Pricker_C_HomeIn final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Pricker_C_HomeIn) == 0x000008, "Wrong alignment on LightProjectile_Pricker_C_HomeIn");
static_assert(sizeof(LightProjectile_Pricker_C_HomeIn) == 0x000008, "Wrong size on LightProjectile_Pricker_C_HomeIn");
static_assert(offsetof(LightProjectile_Pricker_C_HomeIn, Projectile) == 0x000000, "Member 'LightProjectile_Pricker_C_HomeIn::Projectile' has a wrong offset!");

// Function LightProjectile_Pricker.LightProjectile_Pricker_C.OnAttached
// 0x0108 (0x0108 - 0x0000)
struct LightProjectile_Pricker_C_OnAttached final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AttachedActor;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectRemoveSpec                K2Node_MakeStruct_StatusEffectRemoveSpec;          // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_RemoveStatusEffect_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Temp_struct_Variable;                              // 0x0048(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FStatusEffectQuery                     K2Node_MakeStruct_StatusEffectQuery;               // 0x00D8(0x0018)(NoDestructor)
	struct FStatusEffectQueryResult               CallFunc_QueryStatusEffect_ReturnValue;            // 0x00F0(0x0010)(NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LightProjectile_Pricker_C_OnAttached) == 0x000008, "Wrong alignment on LightProjectile_Pricker_C_OnAttached");
static_assert(sizeof(LightProjectile_Pricker_C_OnAttached) == 0x000108, "Wrong size on LightProjectile_Pricker_C_OnAttached");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, Projectile) == 0x000000, "Member 'LightProjectile_Pricker_C_OnAttached::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, AttachedActor) == 0x000008, "Member 'LightProjectile_Pricker_C_OnAttached::AttachedActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_GetDataTableValue_OutValue) == 0x000010, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_GetDataTableValue_ReturnValue) == 0x000014, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, K2Node_MakeStruct_StatusEffectRemoveSpec) == 0x000028, "Member 'LightProjectile_Pricker_C_OnAttached::K2Node_MakeStruct_StatusEffectRemoveSpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_RemoveStatusEffect_ReturnValue) == 0x000038, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_RemoveStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_GetSource_ReturnValue) == 0x000040, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, Temp_struct_Variable) == 0x000048, "Member 'LightProjectile_Pricker_C_OnAttached::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, K2Node_MakeStruct_StatusEffectQuery) == 0x0000D8, "Member 'LightProjectile_Pricker_C_OnAttached::K2Node_MakeStruct_StatusEffectQuery' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_QueryStatusEffect_ReturnValue) == 0x0000F0, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_QueryStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnAttached, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000100, "Member 'LightProjectile_Pricker_C_OnAttached::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function LightProjectile_Pricker.LightProjectile_Pricker_C.OnBegin
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_Pricker_C_OnBegin final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Pricker_C_OnBegin) == 0x000008, "Wrong alignment on LightProjectile_Pricker_C_OnBegin");
static_assert(sizeof(LightProjectile_Pricker_C_OnBegin) == 0x000008, "Wrong size on LightProjectile_Pricker_C_OnBegin");
static_assert(offsetof(LightProjectile_Pricker_C_OnBegin, Projectile) == 0x000000, "Member 'LightProjectile_Pricker_C_OnBegin::Projectile' has a wrong offset!");

// Function LightProjectile_Pricker.LightProjectile_Pricker_C.OnDamage
// 0x0170 (0x0170 - 0x0000)
struct LightProjectile_Pricker_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0118(0x0038)(NoDestructor)
	bool                                          CallFunc_K2_EvaluateConditionType_ReturnValue;     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0158(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_Pricker_C_OnDamage) == 0x000008, "Wrong alignment on LightProjectile_Pricker_C_OnDamage");
static_assert(sizeof(LightProjectile_Pricker_C_OnDamage) == 0x000170, "Wrong size on LightProjectile_Pricker_C_OnDamage");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_Pricker_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_Pricker_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_Pricker_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x000099, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009A, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, K2Node_MakeStruct_StatusEffectSpec) == 0x000118, "Member 'LightProjectile_Pricker_C_OnDamage::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_K2_EvaluateConditionType_ReturnValue) == 0x000150, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_K2_EvaluateConditionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_Pricker_C_OnDamage, CallFunc_AddStatusEffect_ReturnValue) == 0x000158, "Member 'LightProjectile_Pricker_C_OnDamage::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");

// Function LightProjectile_Pricker.LightProjectile_Pricker_C.OnLifetimeExpired
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_Pricker_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_Pricker_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_Pricker_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_Pricker_C_OnLifetimeExpired) == 0x000008, "Wrong size on LightProjectile_Pricker_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_Pricker_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_Pricker_C_OnLifetimeExpired::Projectile' has a wrong offset!");

}

