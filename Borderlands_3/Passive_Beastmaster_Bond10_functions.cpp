#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_Bond10

#include "Basic.hpp"

#include "Passive_Beastmaster_Bond10_classes.hpp"
#include "Passive_Beastmaster_Bond10_parameters.hpp"


namespace SDK
{

// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.ExecuteUbergraph_Passive_Beastmaster_Bond10
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_Bond10_C::ExecuteUbergraph_Passive_Beastmaster_Bond10(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "ExecuteUbergraph_Passive_Beastmaster_Bond10");

	Params::Passive_Beastmaster_Bond10_C_ExecuteUbergraph_Passive_Beastmaster_Bond10 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UPassive_Beastmaster_Bond10_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.DoDominateExplosion
// (BlueprintCallable, BlueprintEvent)

void UPassive_Beastmaster_Bond10_C::DoDominateExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "DoDominateExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.OnCausedDamage_HitAndRun9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxDamageType*                   DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageSource*                    DamageSource                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDamageDetails             Details                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UPassive_Beastmaster_Bond10_C::OnCausedDamage_HitAndRun9(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "OnCausedDamage_HitAndRun9");

	Params::Passive_Beastmaster_Bond10_C_OnCausedDamage_HitAndRun9 Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.DamageSource = DamageSource;
	Parms.DamagedActor = DamagedActor;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.EndDomination
// (BlueprintCallable, BlueprintEvent)

void UPassive_Beastmaster_Bond10_C::EndDomination()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "EndDomination");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.OnDeath_DominateTarget_HitRun9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_Bond10_C::OnDeath_DominateTarget_HitRun9(class AActor* DamageReceiver, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "OnDeath_DominateTarget_HitRun9");

	Params::Passive_Beastmaster_Bond10_C_OnDeath_DominateTarget_HitRun9 Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.OnAbilityTimerEnded
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FOakAbilityTimerSpec             Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FOakAbilityTimerResult           Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPassive_Beastmaster_Bond10_C::OnAbilityTimerEnded(const struct FOakAbilityTimerSpec& Spec, const struct FOakAbilityTimerResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "OnAbilityTimerEnded");

	Params::Passive_Beastmaster_Bond10_C_OnAbilityTimerEnded Parms{};

	Parms.Spec = std::move(Spec);
	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.OnAbilityTimerStarted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FOakAbilityTimerSpec             Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPassive_Beastmaster_Bond10_C::OnAbilityTimerStarted(const struct FOakAbilityTimerSpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "OnAbilityTimerStarted");

	Params::Passive_Beastmaster_Bond10_C_OnAbilityTimerStarted Parms{};

	Parms.Spec = std::move(Spec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.DoHealthPercentDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPassive_Beastmaster_Bond10_C::DoHealthPercentDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "DoHealthPercentDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.HandleDominateTimerFinished
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InSpecTimer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOakAbilityTimerResult                  InResult                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_Bond10_C::HandleDominateTimerFinished(class UObject* InSpecTimer, EOakAbilityTimerResult InResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "HandleDominateTimerFinished");

	Params::Passive_Beastmaster_Bond10_C_HandleDominateTimerFinished Parms{};

	Parms.InSpecTimer = InSpecTimer;
	Parms.InResult = InResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.AddDominateTargetToList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_Bond10_C::AddDominateTargetToList(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "AddDominateTargetToList");

	Params::Passive_Beastmaster_Bond10_C_AddDominateTargetToList Parms{};

	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.TryApplyDominate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamageSource*                    DamageSource                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
// class AActor*                           ActorToDominate_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPassive_Beastmaster_Bond10_C::TryApplyDominate(const class UDamageSource* DamageSource, class UObject* Instigator, class AActor* Target, class AActor** ActorToDominate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "TryApplyDominate");

	Params::Passive_Beastmaster_Bond10_C_TryApplyDominate Parms{};

	Parms.DamageSource = DamageSource;
	Parms.Instigator = Instigator;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (ActorToDominate_0 != nullptr)
		*ActorToDominate_0 = Parms.ActorToDominate_0;

	return Parms.ReturnValue;
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.RemoveDominateTargetFromList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_Bond10_C::RemoveDominateTargetFromList(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "RemoveDominateTargetFromList");

	Params::Passive_Beastmaster_Bond10_C_RemoveDominateTargetFromList Parms{};

	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.DetermineTargetClassification
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FinalDurationScalar                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_Bond10_C::DetermineTargetClassification(int32* FinalDurationScalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "DetermineTargetClassification");

	Params::Passive_Beastmaster_Bond10_C_DetermineTargetClassification Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FinalDurationScalar != nullptr)
		*FinalDurationScalar = Parms.FinalDurationScalar;
}


// Function Passive_Beastmaster_Bond10.Passive_Beastmaster_Bond10_C.OnRep_DominateTarget
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void UPassive_Beastmaster_Bond10_C::OnRep_DominateTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_Bond10_C", "OnRep_DominateTarget");

	UObject::ProcessEvent(Func, nullptr);
}

}

