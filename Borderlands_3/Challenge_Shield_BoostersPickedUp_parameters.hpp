#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Shield_BoostersPickedUp

#include "Basic.hpp"


namespace SDK::Params
{

// Function Challenge_Shield_BoostersPickedUp.Challenge_Shield_BoostersPickedUp_C.CheckItemPickup
// 0x0020 (0x0020 - 0x0000)
struct Challenge_Shield_BoostersPickedUp_C_CheckItemPickup final
{
public:
	class AActor*                                 PickedUpActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Shield_BoostersPickedUp_C_CheckItemPickup) == 0x000008, "Wrong alignment on Challenge_Shield_BoostersPickedUp_C_CheckItemPickup");
static_assert(sizeof(Challenge_Shield_BoostersPickedUp_C_CheckItemPickup) == 0x000020, "Wrong size on Challenge_Shield_BoostersPickedUp_C_CheckItemPickup");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_CheckItemPickup, PickedUpActor) == 0x000000, "Member 'Challenge_Shield_BoostersPickedUp_C_CheckItemPickup::PickedUpActor' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_CheckItemPickup, Quantity) == 0x000008, "Member 'Challenge_Shield_BoostersPickedUp_C_CheckItemPickup::Quantity' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_CheckItemPickup, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'Challenge_Shield_BoostersPickedUp_C_CheckItemPickup::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_CheckItemPickup, CallFunc_ClassIsChildOf_ReturnValue) == 0x000018, "Member 'Challenge_Shield_BoostersPickedUp_C_CheckItemPickup::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function Challenge_Shield_BoostersPickedUp.Challenge_Shield_BoostersPickedUp_C.OnInitChallengeInstance
// 0x0030 (0x0030 - 0x0000)
struct Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* PickedUpActor, int32 Quantity)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance");
static_assert(sizeof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance) == 0x000030, "Wrong size on Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance, K2Node_DynamicCast_AsOak_Character) == 0x000020, "Member 'Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Challenge_Shield_BoostersPickedUp_C_OnInitChallengeInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

