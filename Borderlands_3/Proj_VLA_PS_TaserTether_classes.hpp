#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_VLA_PS_TaserTether

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Proj_Weapon_BaseProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_VLA_PS_TaserTether.Proj_VLA_PS_TaserTether_C
// 0x00E8 (0x0878 - 0x0790)
class AProj_VLA_PS_TaserTether_C : public AProj_Weapon_BaseProjectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Proj_VLA_PS_TaserTether_C;          // 0x0790(0x0008)(Transient, DuplicateTransient)
	class UOakTriggerComponent*                   OakTrigger;                                        // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ProximityRadius;                                   // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Shock_FX;                                          // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Attached;                                          // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttachedActor;                                     // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          OakCharacter;                                      // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakStatusEffectManagerComponent*       HitEnemy_StatusEffectComp;                         // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo_1;                                         // 0x07D0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         AttachedTargets;                                   // 0x0860(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         MaxTargets;                                        // 0x0870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Proj_VLA_PS_TaserTether(int32 EntryPoint);
	void BarrelExplode();
	void BndEvt__OakTrigger_K2Node_ComponentBoundEvent_2_OakUnTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether(class AActor* LeavingActor, bool bIsPlayer);
	void BndEvt__OakTrigger_K2Node_ComponentBoundEvent_1_OakTouchedTriggerDelegate__DelegateSignature_Proj_VLA_PS_TaserTether(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void BPI_SetNavPainterEnabled(bool Enabled);
	void BPI_ResetHealth();
	void BPI_ImpulseThrow(const struct FVector& ThrowVector, float Force, const struct FRotator& RotatorForSpin, float FuseSpeedScale, const struct FVector& AdditiveVector);
	void BPI_SetSimulatePhysics(bool PhysicsOn_);
	void BPI_Explode();
	void BPI_StartFuse();
	void StopMovementEnableTrigger();
	void AttachBeam(class AActor* BeamTarget, class UClass* Data);
	void Destructible_Fractured(const struct FVector& HitPoint, const struct FVector& HitDetection);
	void OnExplode();
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void UserConstructionScript();
	void TriggerElementalPuddles();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_VLA_PS_TaserTether_C">();
	}
	static class AProj_VLA_PS_TaserTether_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_VLA_PS_TaserTether_C>();
	}
};
static_assert(alignof(AProj_VLA_PS_TaserTether_C) == 0x000008, "Wrong alignment on AProj_VLA_PS_TaserTether_C");
static_assert(sizeof(AProj_VLA_PS_TaserTether_C) == 0x000878, "Wrong size on AProj_VLA_PS_TaserTether_C");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, UberGraphFrame_Proj_VLA_PS_TaserTether_C) == 0x000790, "Member 'AProj_VLA_PS_TaserTether_C::UberGraphFrame_Proj_VLA_PS_TaserTether_C' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, OakTrigger) == 0x000798, "Member 'AProj_VLA_PS_TaserTether_C::OakTrigger' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, ProximityRadius) == 0x0007A0, "Member 'AProj_VLA_PS_TaserTether_C::ProximityRadius' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, Shock_FX) == 0x0007A8, "Member 'AProj_VLA_PS_TaserTether_C::Shock_FX' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, Attached) == 0x0007B0, "Member 'AProj_VLA_PS_TaserTether_C::Attached' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, AttachedActor) == 0x0007B8, "Member 'AProj_VLA_PS_TaserTether_C::AttachedActor' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, OakCharacter) == 0x0007C0, "Member 'AProj_VLA_PS_TaserTether_C::OakCharacter' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, HitEnemy_StatusEffectComp) == 0x0007C8, "Member 'AProj_VLA_PS_TaserTether_C::HitEnemy_StatusEffectComp' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, HitInfo_1) == 0x0007D0, "Member 'AProj_VLA_PS_TaserTether_C::HitInfo_1' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, AttachedTargets) == 0x000860, "Member 'AProj_VLA_PS_TaserTether_C::AttachedTargets' has a wrong offset!");
static_assert(offsetof(AProj_VLA_PS_TaserTether_C, MaxTargets) == 0x000870, "Member 'AProj_VLA_PS_TaserTether_C::MaxTargets' has a wrong offset!");

}

