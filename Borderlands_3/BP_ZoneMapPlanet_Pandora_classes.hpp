#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZoneMapPlanet_Pandora

#include "Basic.hpp"

#include "BP_ZoneMap_Planet_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ZoneMapPlanet_Pandora.BP_ZoneMapPlanet_Pandora_C
// 0x0020 (0x05E0 - 0x05C0)
class ABP_ZoneMapPlanet_Pandora_C final : public ABP_ZoneMap_Planet_C
{
public:
	class UParticleSystemComponent*               PS_Giant_Nekrotafeyo_Beam_PandoraVersion;          // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CelestialBodyPlane;                             // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PandoraScarGas;                                 // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ZoneMapPlanet_Pandora_C">();
	}
	static class ABP_ZoneMapPlanet_Pandora_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ZoneMapPlanet_Pandora_C>();
	}
};
static_assert(alignof(ABP_ZoneMapPlanet_Pandora_C) == 0x000010, "Wrong alignment on ABP_ZoneMapPlanet_Pandora_C");
static_assert(sizeof(ABP_ZoneMapPlanet_Pandora_C) == 0x0005E0, "Wrong size on ABP_ZoneMapPlanet_Pandora_C");
static_assert(offsetof(ABP_ZoneMapPlanet_Pandora_C, PS_Giant_Nekrotafeyo_Beam_PandoraVersion) == 0x0005B8, "Member 'ABP_ZoneMapPlanet_Pandora_C::PS_Giant_Nekrotafeyo_Beam_PandoraVersion' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapPlanet_Pandora_C, PointLight1) == 0x0005C0, "Member 'ABP_ZoneMapPlanet_Pandora_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapPlanet_Pandora_C, PointLight) == 0x0005C8, "Member 'ABP_ZoneMapPlanet_Pandora_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapPlanet_Pandora_C, SM_CelestialBodyPlane) == 0x0005D0, "Member 'ABP_ZoneMapPlanet_Pandora_C::SM_CelestialBodyPlane' has a wrong offset!");
static_assert(offsetof(ABP_ZoneMapPlanet_Pandora_C, SM_PandoraScarGas) == 0x0005D8, "Member 'ABP_ZoneMapPlanet_Pandora_C::SM_PandoraScarGas' has a wrong offset!");

}

