#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Crew_Ger_Cemetery_00_AllComplete

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Challenge_Crew_Geranium_CemeteryOpportunity_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Challenge_Crew_Ger_Cemetery_00_AllComplete.Challenge_Crew_Ger_Cemetery_00_AllComplete_C
// 0x00B8 (0x03F8 - 0x0340)
class UChallenge_Crew_Ger_Cemetery_00_AllComplete_C final : public UChallenge_Crew_Geranium_CemeteryOpportunity_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Challenge_Crew_Ger_Cemetery_00_AllComplete_C; // 0x0340(0x0008)(Transient, DuplicateTransient)
	struct FDataTableRowHandle                    CrewChallengeMailRow_Random;                       // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FText                                   Beastmaster;                                       // 0x0358(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Gunner;                                            // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Operative;                                         // 0x0388(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Siren;                                             // 0x03A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    CrewChallengeMailRow_Beastmaster;                  // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CrewChallengeMailRow_Gunner;                       // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CrewChallengeMailRow_Operative;                    // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CrewChallengeMailRow_Siren;                        // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_Challenge_Crew_Ger_Cemetery_00_AllComplete(int32 EntryPoint);
	void CompletedChallenge(const class AGbxPlayerController* CompletedPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Challenge_Crew_Ger_Cemetery_00_AllComplete_C">();
	}
	static class UChallenge_Crew_Ger_Cemetery_00_AllComplete_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallenge_Crew_Ger_Cemetery_00_AllComplete_C>();
	}
};
static_assert(alignof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C) == 0x000008, "Wrong alignment on UChallenge_Crew_Ger_Cemetery_00_AllComplete_C");
static_assert(sizeof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C) == 0x0003F8, "Wrong size on UChallenge_Crew_Ger_Cemetery_00_AllComplete_C");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, UberGraphFrame_Challenge_Crew_Ger_Cemetery_00_AllComplete_C) == 0x000340, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::UberGraphFrame_Challenge_Crew_Ger_Cemetery_00_AllComplete_C' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, CrewChallengeMailRow_Random) == 0x000348, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::CrewChallengeMailRow_Random' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, Beastmaster) == 0x000358, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::Beastmaster' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, Gunner) == 0x000370, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::Gunner' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, Operative) == 0x000388, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::Operative' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, Siren) == 0x0003A0, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::Siren' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, CrewChallengeMailRow_Beastmaster) == 0x0003B8, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::CrewChallengeMailRow_Beastmaster' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, CrewChallengeMailRow_Gunner) == 0x0003C8, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::CrewChallengeMailRow_Gunner' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, CrewChallengeMailRow_Operative) == 0x0003D8, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::CrewChallengeMailRow_Operative' has a wrong offset!");
static_assert(offsetof(UChallenge_Crew_Ger_Cemetery_00_AllComplete_C, CrewChallengeMailRow_Siren) == 0x0003E8, "Member 'UChallenge_Crew_Ger_Cemetery_00_AllComplete_C::CrewChallengeMailRow_Siren' has a wrong offset!");

}

