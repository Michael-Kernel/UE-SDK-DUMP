#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_PlayerCharacter_Legs

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_PlayerCharacter_Legs.BPAnim_PlayerCharacter_Legs_C.ExecuteUbergraph_BPAnim_PlayerCharacter_Legs
// 0x0038 (0x0038 - 0x0000)
struct BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_Event_NewWeapon;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_Event_PrevWeapon;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs) == 0x000008, "Wrong alignment on BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs");
static_assert(sizeof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs) == 0x000038, "Wrong size on BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, EntryPoint) == 0x000000, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_BreakRotator_Roll1) == 0x000010, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_BreakRotator_Pitch1) == 0x000014, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_BreakRotator_Yaw1) == 0x000018, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_Not_PreBool_ReturnValue1) == 0x00001D, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, K2Node_Event_NewWeapon) == 0x000020, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::K2Node_Event_NewWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, K2Node_Event_PrevWeapon) == 0x000028, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::K2Node_Event_PrevWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BPAnim_PlayerCharacter_Legs_C_ExecuteUbergraph_BPAnim_PlayerCharacter_Legs::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BPAnim_PlayerCharacter_Legs.BPAnim_PlayerCharacter_Legs_C.OnWeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged final
{
public:
	class AWeapon*                                NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged) == 0x000008, "Wrong alignment on BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged");
static_assert(sizeof(BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged) == 0x000010, "Wrong size on BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged, NewWeapon) == 0x000000, "Member 'BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged, PrevWeapon) == 0x000008, "Member 'BPAnim_PlayerCharacter_Legs_C_OnWeaponChanged::PrevWeapon' has a wrong offset!");

}

