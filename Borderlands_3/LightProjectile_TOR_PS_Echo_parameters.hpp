#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_TOR_PS_Echo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_TOR_PS_Echo.LightProjectile_TOR_PS_Echo_C.LetsExplode
// 0x0308 (0x0308 - 0x0000)
struct LightProjectile_TOR_PS_Echo_C_LetsExplode final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SourceActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x001C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakLightProjectile*                    MyProjectile;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachedActor_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachedActor_ReturnValue1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAttachedImpactNormal_ReturnValue;      // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue1;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00C8(0x0140)(ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0208(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0214(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0220(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x022C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0244(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0250(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x02E0(0x0020)(NoDestructor)
	class AActor*                                 CallFunc_GetSource_ReturnValue2;                   // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_TOR_PS_Echo_C_LetsExplode) == 0x000008, "Wrong alignment on LightProjectile_TOR_PS_Echo_C_LetsExplode");
static_assert(sizeof(LightProjectile_TOR_PS_Echo_C_LetsExplode) == 0x000308, "Wrong size on LightProjectile_TOR_PS_Echo_C_LetsExplode");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, Projectile) == 0x000000, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, SourceActor) == 0x000008, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::SourceActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, EndLocation) == 0x000010, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::EndLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, StartLocation) == 0x00001C, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, MyProjectile) == 0x000028, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::MyProjectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, Temp_bool_Variable) == 0x000030, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetSource_ReturnValue) == 0x000038, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, Temp_struct_Variable) == 0x000040, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetValueOfAttribute_ReturnValue) == 0x00004C, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetAttachedActor_ReturnValue) == 0x000058, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetAttachedActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetAttachedActor_ReturnValue1) == 0x000060, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetAttachedActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetAttachedImpactNormal_ReturnValue) == 0x000068, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetAttachedImpactNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, K2Node_Select_Default) == 0x000074, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000098, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetInstigator_ReturnValue) == 0x0000A8, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetSource_ReturnValue1) == 0x0000B0, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetSource_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetModifierType_ReturnValue) == 0x0000B8, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetModifierValue_ReturnValue) == 0x0000BC, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000C0, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000C8, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_BreakTransform_Location) == 0x000208, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_BreakTransform_Rotation) == 0x000214, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_BreakTransform_Scale) == 0x000220, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetForwardVector_ReturnValue) == 0x00022C, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000238, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_Add_VectorVector_ReturnValue1) == 0x000244, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_MakeHitResult_ReturnValue) == 0x000250, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x0002E0, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_LetsExplode, CallFunc_GetSource_ReturnValue2) == 0x000300, "Member 'LightProjectile_TOR_PS_Echo_C_LetsExplode::CallFunc_GetSource_ReturnValue2' has a wrong offset!");

// Function LightProjectile_TOR_PS_Echo.LightProjectile_TOR_PS_Echo_C.OnExplode
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_TOR_PS_Echo_C_OnExplode final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_TOR_PS_Echo_C_OnExplode) == 0x000008, "Wrong alignment on LightProjectile_TOR_PS_Echo_C_OnExplode");
static_assert(sizeof(LightProjectile_TOR_PS_Echo_C_OnExplode) == 0x000008, "Wrong size on LightProjectile_TOR_PS_Echo_C_OnExplode");
static_assert(offsetof(LightProjectile_TOR_PS_Echo_C_OnExplode, Projectile) == 0x000000, "Member 'LightProjectile_TOR_PS_Echo_C_OnExplode::Projectile' has a wrong offset!");

}

