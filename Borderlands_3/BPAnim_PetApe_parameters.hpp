#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_PetApe

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPAnim_PetApe.BPAnim_PetApe_C.ExecuteUbergraph_BPAnim_PetApe
// 0x0038 (0x0038 - 0x0000)
struct BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_Event_NewWeapon;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                K2Node_Event_PrevWeapon;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ValidWeapon;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalculateWeaponHoldData_ValidWeapon;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid1;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue1;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe) == 0x000008, "Wrong alignment on BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe");
static_assert(sizeof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe) == 0x000038, "Wrong size on BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, EntryPoint) == 0x000000, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_Not_PreBool_ReturnValue1) == 0x000005, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid) == 0x000006, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue) == 0x000008, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, K2Node_Event_NewWeapon) == 0x000010, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::K2Node_Event_NewWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, K2Node_Event_PrevWeapon) == 0x000018, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::K2Node_Event_PrevWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, K2Node_CustomEvent_ValidWeapon) == 0x000020, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::K2Node_CustomEvent_ValidWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_CalculateWeaponHoldData_ValidWeapon) == 0x000021, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_CalculateWeaponHoldData_ValidWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid1) == 0x000022, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_GetAnimSeqBaseFromAnimSet_bIsValid1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue1) == 0x000028, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_GetAnimSeqBaseFromAnimSet_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe, CallFunc_BooleanAND_ReturnValue1) == 0x000031, "Member 'BPAnim_PetApe_C_ExecuteUbergraph_BPAnim_PetApe::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BPAnim_PetApe.BPAnim_PetApe_C.CheckWeaponPoses
// 0x0001 (0x0001 - 0x0000)
struct BPAnim_PetApe_C_CheckWeaponPoses final
{
public:
	bool                                          ValidWeapon;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PetApe_C_CheckWeaponPoses) == 0x000001, "Wrong alignment on BPAnim_PetApe_C_CheckWeaponPoses");
static_assert(sizeof(BPAnim_PetApe_C_CheckWeaponPoses) == 0x000001, "Wrong size on BPAnim_PetApe_C_CheckWeaponPoses");
static_assert(offsetof(BPAnim_PetApe_C_CheckWeaponPoses, ValidWeapon) == 0x000000, "Member 'BPAnim_PetApe_C_CheckWeaponPoses::ValidWeapon' has a wrong offset!");

// Function BPAnim_PetApe.BPAnim_PetApe_C.OnWeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_PetApe_C_OnWeaponChanged final
{
public:
	class AWeapon*                                NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_PetApe_C_OnWeaponChanged) == 0x000008, "Wrong alignment on BPAnim_PetApe_C_OnWeaponChanged");
static_assert(sizeof(BPAnim_PetApe_C_OnWeaponChanged) == 0x000010, "Wrong size on BPAnim_PetApe_C_OnWeaponChanged");
static_assert(offsetof(BPAnim_PetApe_C_OnWeaponChanged, NewWeapon) == 0x000000, "Member 'BPAnim_PetApe_C_OnWeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_OnWeaponChanged, PrevWeapon) == 0x000008, "Member 'BPAnim_PetApe_C_OnWeaponChanged::PrevWeapon' has a wrong offset!");

// Function BPAnim_PetApe.BPAnim_PetApe_C.EvaluateStances
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) BPAnim_PetApe_C_EvaluateStances final
{
public:
	class FName                                   StanceData_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StanceType_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue1;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue4;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue5;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue6;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue7;         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue8;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_PetApe_C_EvaluateStances) == 0x000008, "Wrong alignment on BPAnim_PetApe_C_EvaluateStances");
static_assert(sizeof(BPAnim_PetApe_C_EvaluateStances) == 0x000020, "Wrong size on BPAnim_PetApe_C_EvaluateStances");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, StanceData_0) == 0x000000, "Member 'BPAnim_PetApe_C_EvaluateStances::StanceData_0' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, StanceType_0) == 0x000008, "Member 'BPAnim_PetApe_C_EvaluateStances::StanceType_0' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue1) == 0x000011, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000012, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x000013, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue4) == 0x000014, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_BooleanOR_ReturnValue1) == 0x000016, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_BooleanOR_ReturnValue2) == 0x000017, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_BooleanOR_ReturnValue3) == 0x000018, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue5) == 0x000019, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue6) == 0x00001A, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue7) == 0x00001B, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_EvaluateStances, CallFunc_EqualEqual_NameName_ReturnValue8) == 0x00001C, "Member 'BPAnim_PetApe_C_EvaluateStances::CallFunc_EqualEqual_NameName_ReturnValue8' has a wrong offset!");

// Function BPAnim_PetApe.BPAnim_PetApe_C.CalculateWeaponHoldData
// 0x0058 (0x0058 - 0x0000)
struct BPAnim_PetApe_C_CalculateWeaponHoldData final
{
public:
	class AWeapon*                                New_Weapon;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidWeapon;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakWeapon*                             K2Node_DynamicCast_AsOak_Weapon;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue4;     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue5;     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue1;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakInventoryBalanceStateComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManufacturerData*                      CallFunc_GetManufacturer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue6;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue7;     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue8;     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue9;     // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue10;    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue11;    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue12;    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue13;    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue14;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_PetApe_C_CalculateWeaponHoldData) == 0x000008, "Wrong alignment on BPAnim_PetApe_C_CalculateWeaponHoldData");
static_assert(sizeof(BPAnim_PetApe_C_CalculateWeaponHoldData) == 0x000058, "Wrong size on BPAnim_PetApe_C_CalculateWeaponHoldData");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, New_Weapon) == 0x000000, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::New_Weapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, ValidWeapon) == 0x000008, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::ValidWeapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, K2Node_DynamicCast_AsOak_Weapon) == 0x000010, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::K2Node_DynamicCast_AsOak_Weapon' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00001A, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x00001B, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x00001C, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue4) == 0x00001D, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue5) == 0x00001E, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_Conv_ByteToInt_ReturnValue1) == 0x000024, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_Conv_ByteToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_GetManufacturer_ReturnValue) == 0x000038, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_GetManufacturer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue6) == 0x000040, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue7) == 0x000041, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue8) == 0x000042, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue9) == 0x000043, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue10) == 0x000044, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue11) == 0x000045, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue12) == 0x000046, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue13) == 0x000047, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_EqualEqual_ObjectObject_ReturnValue14) == 0x000048, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_EqualEqual_ObjectObject_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BPAnim_PetApe_C_CalculateWeaponHoldData, CallFunc_Array_Get_Item) == 0x000050, "Member 'BPAnim_PetApe_C_CalculateWeaponHoldData::CallFunc_Array_Get_Item' has a wrong offset!");

}

