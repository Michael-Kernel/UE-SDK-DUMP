#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tediore_Interface

#include "Basic.hpp"

#include "Tediore_Interface_classes.hpp"
#include "Tediore_Interface_parameters.hpp"


namespace SDK
{

// Function Tediore_Interface.Tediore_Interface_C.Tediore_WeaponData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageRadius                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DamageTypeClass                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumMirvProjectiles                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FireRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LoadedAmmo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ThrowType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ITediore_Interface_C::Tediore_WeaponData(float* DamageRadius, class UClass** DamageTypeClass, int32* NumMirvProjectiles, float* FireRate, float* LoadedAmmo, int32* ThrowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tediore_Interface_C", "Tediore_WeaponData");

	Params::Tediore_Interface_C_Tediore_WeaponData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageRadius != nullptr)
		*DamageRadius = Parms.DamageRadius;

	if (DamageTypeClass != nullptr)
		*DamageTypeClass = Parms.DamageTypeClass;

	if (NumMirvProjectiles != nullptr)
		*NumMirvProjectiles = Parms.NumMirvProjectiles;

	if (FireRate != nullptr)
		*FireRate = Parms.FireRate;

	if (LoadedAmmo != nullptr)
		*LoadedAmmo = Parms.LoadedAmmo;

	if (ThrowType != nullptr)
		*ThrowType = Parms.ThrowType;
}

}

