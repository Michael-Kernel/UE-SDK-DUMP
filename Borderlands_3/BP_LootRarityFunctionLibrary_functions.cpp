#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootRarityFunctionLibrary

#include "Basic.hpp"

#include "BP_LootRarityFunctionLibrary_classes.hpp"
#include "BP_LootRarityFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_LootRarityFunctionLibrary.BP_LootRarityFunctionLibrary_C.CalculateRarityWeight
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              RarityTableRowHandle                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   LevelToDetermineRarityAt                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GlobalRarityWeightLevelBias                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LocalRarityWeightLevelBias                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GlobalRarityWeightModifier                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LocalRarityWeightModifier                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Weight                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootRarityFunctionLibrary_C::CalculateRarityWeight(const struct FDataTableRowHandle& RarityTableRowHandle, float LevelToDetermineRarityAt, float GlobalRarityWeightLevelBias, float LocalRarityWeightLevelBias, float GlobalRarityWeightModifier, float LocalRarityWeightModifier, class UObject* __WorldContext, float* Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_LootRarityFunctionLibrary_C", "CalculateRarityWeight");

	Params::BP_LootRarityFunctionLibrary_C_CalculateRarityWeight Parms{};

	Parms.RarityTableRowHandle = std::move(RarityTableRowHandle);
	Parms.LevelToDetermineRarityAt = LevelToDetermineRarityAt;
	Parms.GlobalRarityWeightLevelBias = GlobalRarityWeightLevelBias;
	Parms.LocalRarityWeightLevelBias = LocalRarityWeightLevelBias;
	Parms.GlobalRarityWeightModifier = GlobalRarityWeightModifier;
	Parms.LocalRarityWeightModifier = LocalRarityWeightModifier;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Weight != nullptr)
		*Weight = Parms.Weight;
}


// Function BP_LootRarityFunctionLibrary.BP_LootRarityFunctionLibrary_C.ApplyRarityWeightLevelBias
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   LevelToDetermineRarityAt                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GlobalRarityWeightLevelBias                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LocalRarityWeightLevelBias                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RarityWeightLevelBiasMultiplier                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Biased_Level                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootRarityFunctionLibrary_C::ApplyRarityWeightLevelBias(float LevelToDetermineRarityAt, float GlobalRarityWeightLevelBias, float LocalRarityWeightLevelBias, float RarityWeightLevelBiasMultiplier, class UObject* __WorldContext, float* Biased_Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_LootRarityFunctionLibrary_C", "ApplyRarityWeightLevelBias");

	Params::BP_LootRarityFunctionLibrary_C_ApplyRarityWeightLevelBias Parms{};

	Parms.LevelToDetermineRarityAt = LevelToDetermineRarityAt;
	Parms.GlobalRarityWeightLevelBias = GlobalRarityWeightLevelBias;
	Parms.LocalRarityWeightLevelBias = LocalRarityWeightLevelBias;
	Parms.RarityWeightLevelBiasMultiplier = RarityWeightLevelBiasMultiplier;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Biased_Level != nullptr)
		*Biased_Level = Parms.Biased_Level;
}

}

