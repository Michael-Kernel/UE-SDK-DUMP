#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Collect_RewardStat_DLC1

#include "Basic.hpp"

#include "GbxDialog_structs.hpp"


namespace SDK::Params
{

// Function Challenge_Collect_RewardStat_DLC1.Challenge_Collect_RewardStat_DLC1_C.ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1
// 0x0038 (0x0038 - 0x0000)
struct Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengesComponent*                   K2Node_Event_OwningChallenges;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          K2Node_Event_AssociatedCharacter;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AGbxPlayerController*             K2Node_Event_CompletedPlayer;                      // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayCompletionVO_Played;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1) == 0x000008, "Wrong alignment on Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1");
static_assert(sizeof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1) == 0x000038, "Wrong size on Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, EntryPoint) == 0x000000, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::EntryPoint' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, K2Node_Event_OwningChallenges) == 0x000008, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::K2Node_Event_OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, K2Node_Event_AssociatedCharacter) == 0x000010, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::K2Node_Event_AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, K2Node_Event_CompletedPlayer) == 0x000020, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::K2Node_Event_CompletedPlayer' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000028, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1, CallFunc_PlayCompletionVO_Played) == 0x000031, "Member 'Challenge_Collect_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Collect_RewardStat_DLC1::CallFunc_PlayCompletionVO_Played' has a wrong offset!");

// Function Challenge_Collect_RewardStat_DLC1.Challenge_Collect_RewardStat_DLC1_C.CompletedChallenge
// 0x0008 (0x0008 - 0x0000)
struct Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge final
{
public:
	const class AGbxPlayerController*             CompletedPlayer;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge) == 0x000008, "Wrong alignment on Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge");
static_assert(sizeof(Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge) == 0x000008, "Wrong size on Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge, CompletedPlayer) == 0x000000, "Member 'Challenge_Collect_RewardStat_DLC1_C_CompletedChallenge::CompletedPlayer' has a wrong offset!");

// Function Challenge_Collect_RewardStat_DLC1.Challenge_Collect_RewardStat_DLC1_C.OnInitChallengeInstance
// 0x0010 (0x0010 - 0x0000)
struct Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance");
static_assert(sizeof(Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance) == 0x000010, "Wrong size on Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'Challenge_Collect_RewardStat_DLC1_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");

// Function Challenge_Collect_RewardStat_DLC1.Challenge_Collect_RewardStat_DLC1_C.PlayCompletionVO
// 0x0240 (0x0240 - 0x0000)
struct Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO final
{
public:
	class AGbxPlayerController*                   PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Played;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogContext                         K2Node_MakeStruct_DialogContext;                   // 0x0010(0x0218)()
	struct FDialogConversation                    CallFunc_FinishSpeak_Conversation;                 // 0x0228(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FinishSpeak_SequenceID;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FinishSpeak_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO) == 0x000008, "Wrong alignment on Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO");
static_assert(sizeof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO) == 0x000240, "Wrong size on Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO, PlayerController) == 0x000000, "Member 'Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO::PlayerController' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO, Played) == 0x000008, "Member 'Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO::Played' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO, K2Node_MakeStruct_DialogContext) == 0x000010, "Member 'Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO::K2Node_MakeStruct_DialogContext' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO, CallFunc_FinishSpeak_Conversation) == 0x000228, "Member 'Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO::CallFunc_FinishSpeak_Conversation' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO, CallFunc_FinishSpeak_SequenceID) == 0x000234, "Member 'Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO::CallFunc_FinishSpeak_SequenceID' has a wrong offset!");
static_assert(offsetof(Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO, CallFunc_FinishSpeak_ReturnValue) == 0x000238, "Member 'Challenge_Collect_RewardStat_DLC1_C_PlayCompletionVO::CallFunc_FinishSpeak_ReturnValue' has a wrong offset!");

}

