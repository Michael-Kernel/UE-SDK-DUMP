#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkill_Siren_DoUntoOthers

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "GbxAbilities_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PassiveSkill_Siren_DoUntoOthers.PassiveSkill_Siren_DoUntoOthers_C
// 0x0070 (0x0258 - 0x01E8)
class UPassiveSkill_Siren_DoUntoOthers_C final : public UOakPassiveAbility_Siren
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E8(0x0008)(Transient, DuplicateTransient)
	float                                         Cooldown_Time;                                     // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Homing_Target;                                     // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  Damage_Per_Rank;                                   // 0x0200(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_PassiveSkill_Siren_DoUntoOthers; // 0x0218(0x0028)()
	struct FDataTableValueHandle                  CooldownTime;                                      // 0x0240(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_PassiveSkill_Siren_DoUntoOthers(int32 EntryPoint);
	void Do_Harm_On_Took_Damage(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnActivated();
	EGbxAbilityState CalculateAbilityState();
	void IsActionSkillActionActive(bool* Res);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PassiveSkill_Siren_DoUntoOthers_C">();
	}
	static class UPassiveSkill_Siren_DoUntoOthers_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassiveSkill_Siren_DoUntoOthers_C>();
	}
};
static_assert(alignof(UPassiveSkill_Siren_DoUntoOthers_C) == 0x000008, "Wrong alignment on UPassiveSkill_Siren_DoUntoOthers_C");
static_assert(sizeof(UPassiveSkill_Siren_DoUntoOthers_C) == 0x000258, "Wrong size on UPassiveSkill_Siren_DoUntoOthers_C");
static_assert(offsetof(UPassiveSkill_Siren_DoUntoOthers_C, UberGraphFrame) == 0x0001E8, "Member 'UPassiveSkill_Siren_DoUntoOthers_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Siren_DoUntoOthers_C, Cooldown_Time) == 0x0001F0, "Member 'UPassiveSkill_Siren_DoUntoOthers_C::Cooldown_Time' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Siren_DoUntoOthers_C, Homing_Target) == 0x0001F8, "Member 'UPassiveSkill_Siren_DoUntoOthers_C::Homing_Target' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Siren_DoUntoOthers_C, Damage_Per_Rank) == 0x000200, "Member 'UPassiveSkill_Siren_DoUntoOthers_C::Damage_Per_Rank' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Siren_DoUntoOthers_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_PassiveSkill_Siren_DoUntoOthers) == 0x000218, "Member 'UPassiveSkill_Siren_DoUntoOthers_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_PassiveSkill_Siren_DoUntoOthers' has a wrong offset!");
static_assert(offsetof(UPassiveSkill_Siren_DoUntoOthers_C, CooldownTime) == 0x000240, "Member 'UPassiveSkill_Siren_DoUntoOthers_C::CooldownTime' has a wrong offset!");

}

