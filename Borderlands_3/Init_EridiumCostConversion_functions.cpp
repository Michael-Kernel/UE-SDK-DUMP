#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Init_EridiumCostConversion

#include "Basic.hpp"

#include "Init_EridiumCostConversion_classes.hpp"
#include "Init_EridiumCostConversion_parameters.hpp"


namespace SDK
{

// Function Init_EridiumCostConversion.Init_EridiumCostConversion_C.CalculateAttributeInitialValue
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UObject*                          Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UInit_EridiumCostConversion_C::CalculateAttributeInitialValue(const class UObject* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Init_EridiumCostConversion_C", "CalculateAttributeInitialValue");

	Params::Init_EridiumCostConversion_C_CalculateAttributeInitialValue Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Init_EridiumCostConversion.Init_EridiumCostConversion_C.GearTypeMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           GearItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GearTypeMult                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInit_EridiumCostConversion_C::GearTypeMultiplier(class AActor* GearItem, float* GearTypeMult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Init_EridiumCostConversion_C", "GearTypeMultiplier");

	Params::Init_EridiumCostConversion_C_GearTypeMultiplier Parms{};

	Parms.GearItem = GearItem;

	UObject::ProcessEvent(Func, &Parms);

	if (GearTypeMult != nullptr)
		*GearTypeMult = Parms.GearTypeMult;
}


// Function Init_EridiumCostConversion.Init_EridiumCostConversion_C.MoneyMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           GearItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GearTypeMult                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GearMoneyMult                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInit_EridiumCostConversion_C::MoneyMultiplier(class AActor* GearItem, float GearTypeMult, float* GearMoneyMult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Init_EridiumCostConversion_C", "MoneyMultiplier");

	Params::Init_EridiumCostConversion_C_MoneyMultiplier Parms{};

	Parms.GearItem = GearItem;
	Parms.GearTypeMult = GearTypeMult;

	UObject::ProcessEvent(Func, &Parms);

	if (GearMoneyMult != nullptr)
		*GearMoneyMult = Parms.GearMoneyMult;
}

}

