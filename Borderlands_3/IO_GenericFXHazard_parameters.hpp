#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_GenericFXHazard

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.ConvertRelativeLocationsToWorld
// 0x00D0 (0x00D0 - 0x0000)
struct IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseLocationOverride                 CallFunc_Array_Get_Item;                           // 0x006C(0x0020)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseLocationOverride                 K2Node_MakeStruct_WwiseLocationOverride;           // 0x00A0(0x0020)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld) == 0x000010, "Wrong alignment on IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld");
static_assert(sizeof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld) == 0x0000D0, "Wrong size on IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, Temp_int_Array_Index_Variable) == 0x000000, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_BreakTransform_Location) == 0x000040, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_GetMaxElement_ReturnValue) == 0x000064, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_Array_Get_Item) == 0x00006C, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_TransformLocation_ReturnValue) == 0x000094, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, K2Node_MakeStruct_WwiseLocationOverride) == 0x0000A0, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::K2Node_MakeStruct_WwiseLocationOverride' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'IO_GenericFXHazard_C_ConvertRelativeLocationsToWorld::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.Audio_PlayShutdown
// 0x0068 (0x0068 - 0x0000)
struct IO_GenericFXHazard_C_Audio_PlayShutdown final
{
public:
	class UDA_GenericFXHazard_C*                  Self3;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0038(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtMultipleLocations_ReturnValue; // 0x0050(0x0018)()
};
static_assert(alignof(IO_GenericFXHazard_C_Audio_PlayShutdown) == 0x000008, "Wrong alignment on IO_GenericFXHazard_C_Audio_PlayShutdown");
static_assert(sizeof(IO_GenericFXHazard_C_Audio_PlayShutdown) == 0x000068, "Wrong size on IO_GenericFXHazard_C_Audio_PlayShutdown");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, Self3) == 0x000000, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::Self3' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_GetActorBounds_Origin) == 0x00000C, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_GetActorBounds_BoxExtent) == 0x000018, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_GetMaxElement_ReturnValue) == 0x000028, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_PostEventAtLocation_ReturnValue) == 0x000038, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayShutdown, CallFunc_PostEventAtMultipleLocations_ReturnValue) == 0x000050, "Member 'IO_GenericFXHazard_C_Audio_PlayShutdown::CallFunc_PostEventAtMultipleLocations_ReturnValue' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.Audio_PlayWarmup
// 0x0068 (0x0068 - 0x0000)
struct IO_GenericFXHazard_C_Audio_PlayWarmup final
{
public:
	class UDA_GenericFXHazard_C*                  DataAsset_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0038(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtMultipleLocations_ReturnValue; // 0x0050(0x0018)()
};
static_assert(alignof(IO_GenericFXHazard_C_Audio_PlayWarmup) == 0x000008, "Wrong alignment on IO_GenericFXHazard_C_Audio_PlayWarmup");
static_assert(sizeof(IO_GenericFXHazard_C_Audio_PlayWarmup) == 0x000068, "Wrong size on IO_GenericFXHazard_C_Audio_PlayWarmup");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, DataAsset_0) == 0x000000, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::DataAsset_0' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_GetActorBounds_Origin) == 0x00000C, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_GetActorBounds_BoxExtent) == 0x000018, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_GetMaxElement_ReturnValue) == 0x000028, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_PostEventAtLocation_ReturnValue) == 0x000038, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_Audio_PlayWarmup, CallFunc_PostEventAtMultipleLocations_ReturnValue) == 0x000050, "Member 'IO_GenericFXHazard_C_Audio_PlayWarmup::CallFunc_PostEventAtMultipleLocations_ReturnValue' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.UserConstructionScript
// 0x0138 (0x0138 - 0x0000)
struct IO_GenericFXHazard_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0040(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue1;             // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue2;             // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue1;          // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue2;          // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue3;             // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_GenericFXHazard_C_UserConstructionScript) == 0x000008, "Wrong alignment on IO_GenericFXHazard_C_UserConstructionScript");
static_assert(sizeof(IO_GenericFXHazard_C_UserConstructionScript) == 0x000138, "Wrong size on IO_GenericFXHazard_C_UserConstructionScript");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue) == 0x000004, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_GetMaxElement_ReturnValue) == 0x000010, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000014, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000020, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000024, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000028, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000034, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000040, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue1) == 0x0000D0, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue2) == 0x0000DC, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_X1) == 0x0000E8, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_Y1) == 0x0000EC, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_Z1) == 0x0000F0, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_X2) == 0x0000F4, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_Y2) == 0x0000F8, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_BreakVector_Z2) == 0x0000FC, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_FClamp_ReturnValue1) == 0x000100, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue1) == 0x000104, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue2) == 0x000110, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue3) == 0x00011C, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000128, "Member 'IO_GenericFXHazard_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.__UserState_FireState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_GenericFXHazard_C___UserState_FireState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_GenericFXHazard_C___UserState_FireState_0) == 0x000001, "Wrong alignment on IO_GenericFXHazard_C___UserState_FireState_0");
static_assert(sizeof(IO_GenericFXHazard_C___UserState_FireState_0) == 0x000001, "Wrong size on IO_GenericFXHazard_C___UserState_FireState_0");
static_assert(offsetof(IO_GenericFXHazard_C___UserState_FireState_0, bFromLoad) == 0x000000, "Member 'IO_GenericFXHazard_C___UserState_FireState_0::bFromLoad' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.__UserState_FireState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_GenericFXHazard_C___UserState_FireState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_GenericFXHazard_C___UserState_FireState_1) == 0x000001, "Wrong alignment on IO_GenericFXHazard_C___UserState_FireState_1");
static_assert(sizeof(IO_GenericFXHazard_C___UserState_FireState_1) == 0x000001, "Wrong size on IO_GenericFXHazard_C___UserState_FireState_1");
static_assert(offsetof(IO_GenericFXHazard_C___UserState_FireState_1, bFromLoad) == 0x000000, "Member 'IO_GenericFXHazard_C___UserState_FireState_1::bFromLoad' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.SetPlaceableFireState
// 0x0001 (0x0001 - 0x0000)
struct IO_GenericFXHazard_C_SetPlaceableFireState final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_GenericFXHazard_C_SetPlaceableFireState) == 0x000001, "Wrong alignment on IO_GenericFXHazard_C_SetPlaceableFireState");
static_assert(sizeof(IO_GenericFXHazard_C_SetPlaceableFireState) == 0x000001, "Wrong size on IO_GenericFXHazard_C_SetPlaceableFireState");
static_assert(offsetof(IO_GenericFXHazard_C_SetPlaceableFireState, On) == 0x000000, "Member 'IO_GenericFXHazard_C_SetPlaceableFireState::On' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard
// 0x00B0 (0x00B0 - 0x0000)
struct IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard) == 0x000008, "Wrong alignment on IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard");
static_assert(sizeof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard) == 0x0000B0, "Wrong size on IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard");
static_assert(offsetof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard, OverlappedComponent) == 0x000000, "Member 'IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard, OtherActor) == 0x000008, "Member 'IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard::OtherActor' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard, OtherComp) == 0x000010, "Member 'IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard::OtherComp' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard, OtherBodyIndex) == 0x000018, "Member 'IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard, bFromSweep) == 0x00001C, "Member 'IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard::bFromSweep' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard, SweepResult) == 0x000020, "Member 'IO_GenericFXHazard_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature_IO_GenericFXHazard::SweepResult' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.ExecuteUbergraph_IO_GenericFXHazard
// 0x0120 (0x0120 - 0x0000)
struct IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_On;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0038(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AOakCharacter_Player*                   K2Node_DynamicCast_AsOak_Character_Player;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxPlayerController*                   K2Node_DynamicCast_AsGbx_Player_Controller;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALight*                                 CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALight*                                 CallFunc_Array_Get_Item1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard) == 0x000008, "Wrong alignment on IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard");
static_assert(sizeof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard) == 0x000120, "Wrong size on IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, EntryPoint) == 0x000000, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_UserStateEvent_bFromLoad1) == 0x000015, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_UserStateEvent_bFromLoad) == 0x000016, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_CustomEvent_On) == 0x000017, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_CustomEvent_On' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000018, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_ComponentBoundEvent_OtherActor) == 0x000020, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_ComponentBoundEvent_OtherComp) == 0x000028, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000030, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_ComponentBoundEvent_bFromSweep) == 0x000034, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_ComponentBoundEvent_SweepResult) == 0x000038, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_DynamicCast_AsOak_Character_Player) == 0x0000C8, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_DynamicCast_AsOak_Character_Player' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_GetController_ReturnValue) == 0x0000D8, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_DynamicCast_AsGbx_Player_Controller) == 0x0000E0, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_DynamicCast_AsGbx_Player_Controller' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, K2Node_DynamicCast_bSuccess1) == 0x0000E8, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_IsValid_ReturnValue1) == 0x0000FC, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Array_Get_Item1) == 0x000100, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Array_Length_ReturnValue1) == 0x000108, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_IsValid_ReturnValue2) == 0x00010C, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Less_IntInt_ReturnValue) == 0x00010D, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, Temp_int_Loop_Counter_Variable1) == 0x000110, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Less_IntInt_ReturnValue1) == 0x000114, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Add_IntInt_ReturnValue1) == 0x000118, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_IsValid_ReturnValue3) == 0x00011C, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00011D, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard, CallFunc_IsValid_ReturnValue4) == 0x00011E, "Member 'IO_GenericFXHazard_C_ExecuteUbergraph_IO_GenericFXHazard::CallFunc_IsValid_ReturnValue4' has a wrong offset!");

// Function IO_GenericFXHazard.IO_GenericFXHazard_C.Event_BeginPlayerOverlap__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature final
{
public:
	class AGbxPlayerController*                   GbxPlayerController;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature) == 0x000008, "Wrong alignment on IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature");
static_assert(sizeof(IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature) == 0x000008, "Wrong size on IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature");
static_assert(offsetof(IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature, GbxPlayerController) == 0x000000, "Member 'IO_GenericFXHazard_C_Event_BeginPlayerOverlap__DelegateSignature::GbxPlayerController' has a wrong offset!");

}

