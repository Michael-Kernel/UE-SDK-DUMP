#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_AnimFunctionLibrary

#include "Basic.hpp"

#include "BP_Character_AnimFunctionLibrary_classes.hpp"
#include "BP_Character_AnimFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.InitCharacterComponents
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AOakCharacter*                    Character                                              (BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxCharacterMovementComponent*   GbxMoveComp                                            (BlueprintVisible, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOakCharacterMovementComponent*   OakMoveComp                                            (BlueprintVisible, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AOakCharacter*                    Characteroutput                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxCharacterMovementComponent*   GbxCharacterMovement                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOakCharacterMovementComponent*   OakCharacterMovement                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Character_AnimFunctionLibrary_C::InitCharacterComponents(class APawn* Target, class AOakCharacter*& Character, class UGbxCharacterMovementComponent*& GbxMoveComp, class UOakCharacterMovementComponent*& OakMoveComp, class UObject* __WorldContext, class AOakCharacter** Characteroutput, class UGbxCharacterMovementComponent** GbxCharacterMovement, class UOakCharacterMovementComponent** OakCharacterMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Character_AnimFunctionLibrary_C", "InitCharacterComponents");

	Params::BP_Character_AnimFunctionLibrary_C_InitCharacterComponents Parms{};

	Parms.Target = Target;
	Parms.Character = Character;
	Parms.GbxMoveComp = GbxMoveComp;
	Parms.OakMoveComp = OakMoveComp;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Character = Parms.Character;
	GbxMoveComp = Parms.GbxMoveComp;
	OakMoveComp = Parms.OakMoveComp;

	if (Characteroutput != nullptr)
		*Characteroutput = Parms.Characteroutput;

	if (GbxCharacterMovement != nullptr)
		*GbxCharacterMovement = Parms.GbxCharacterMovement;

	if (OakCharacterMovement != nullptr)
		*OakCharacterMovement = Parms.OakCharacterMovement;
}


// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.Log Error
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Log_Text                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Character_AnimFunctionLibrary_C::Log_Error(class UObject* Object, const class FText& Log_Text, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Character_AnimFunctionLibrary_C", "Log Error");

	Params::BP_Character_AnimFunctionLibrary_C_Log_Error Parms{};

	Parms.Object = Object;
	Parms.Log_Text = std::move(Log_Text);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.PostInitCheck
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AOakCharacter*                    Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxCharacterMovementComponent*   GbxMoveComp                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOakCharacterMovementComponent*   OakMoveComp                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Character_AnimFunctionLibrary_C::PostInitCheck(class UObject* Object, class AOakCharacter* Character, class UGbxCharacterMovementComponent* GbxMoveComp, class UOakCharacterMovementComponent* OakMoveComp, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Character_AnimFunctionLibrary_C", "PostInitCheck");

	Params::BP_Character_AnimFunctionLibrary_C_PostInitCheck Parms{};

	Parms.Object = Object;
	Parms.Character = Character;
	Parms.GbxMoveComp = GbxMoveComp;
	Parms.OakMoveComp = OakMoveComp;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.SetLocalWeaponSequenceArray_Player
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAStruct_WeaponAnimContainer     AStruct_WeaponAnimContainer                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<class FName>                     LiveWeaponPoses                                        (BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   WeaponManufacturer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GripType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ForeGripType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug_Pose_Array_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Character_AnimFunctionLibrary_C::SetLocalWeaponSequenceArray_Player(const struct FAStruct_WeaponAnimContainer& AStruct_WeaponAnimContainer, TArray<class FName>& LiveWeaponPoses, int32 WeaponManufacturer, int32 WeaponType, int32 GripType, int32 ForeGripType, bool Debug_Pose_Array_, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Character_AnimFunctionLibrary_C", "SetLocalWeaponSequenceArray_Player");

	Params::BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Player Parms{};

	Parms.AStruct_WeaponAnimContainer = std::move(AStruct_WeaponAnimContainer);
	Parms.LiveWeaponPoses = std::move(LiveWeaponPoses);
	Parms.WeaponManufacturer = WeaponManufacturer;
	Parms.WeaponType = WeaponType;
	Parms.GripType = GripType;
	Parms.ForeGripType = ForeGripType;
	Parms.Debug_Pose_Array_ = Debug_Pose_Array_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LiveWeaponPoses = std::move(Parms.LiveWeaponPoses);
}


// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.SetLocalWeaponSequenceArray_Menu
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAStruct_WeaponAnimContainer_MenuAStruct_WeaponAnimContainer_Menu                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<class FName>                     LiveWeaponPoses                                        (BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   WeaponManufacturer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GripType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ForeGripType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug_Pose_Array_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Character_AnimFunctionLibrary_C::SetLocalWeaponSequenceArray_Menu(const struct FAStruct_WeaponAnimContainer_Menu& AStruct_WeaponAnimContainer_Menu, TArray<class FName>& LiveWeaponPoses, int32 WeaponManufacturer, int32 WeaponType, int32 GripType, int32 ForeGripType, bool Debug_Pose_Array_, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Character_AnimFunctionLibrary_C", "SetLocalWeaponSequenceArray_Menu");

	Params::BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Menu Parms{};

	Parms.AStruct_WeaponAnimContainer_Menu = std::move(AStruct_WeaponAnimContainer_Menu);
	Parms.LiveWeaponPoses = std::move(LiveWeaponPoses);
	Parms.WeaponManufacturer = WeaponManufacturer;
	Parms.WeaponType = WeaponType;
	Parms.GripType = GripType;
	Parms.ForeGripType = ForeGripType;
	Parms.Debug_Pose_Array_ = Debug_Pose_Array_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LiveWeaponPoses = std::move(Parms.LiveWeaponPoses);
}


// Function BP_Character_AnimFunctionLibrary.BP_Character_AnimFunctionLibrary_C.SetLocalWeaponSequenceArray_Generic
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAStruct_Generic_WeaponAnimContainerAStruct_WeaponAnimContainer_Menu                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<class FName>                     LiveWeaponPoses                                        (BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   WeaponManufacturer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GripType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ForeGripType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug_Pose_Array_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Character_AnimFunctionLibrary_C::SetLocalWeaponSequenceArray_Generic(const struct FAStruct_Generic_WeaponAnimContainer& AStruct_WeaponAnimContainer_Menu, TArray<class FName>& LiveWeaponPoses, int32 WeaponManufacturer, int32 WeaponType, int32 GripType, int32 ForeGripType, bool Debug_Pose_Array_, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Character_AnimFunctionLibrary_C", "SetLocalWeaponSequenceArray_Generic");

	Params::BP_Character_AnimFunctionLibrary_C_SetLocalWeaponSequenceArray_Generic Parms{};

	Parms.AStruct_WeaponAnimContainer_Menu = std::move(AStruct_WeaponAnimContainer_Menu);
	Parms.LiveWeaponPoses = std::move(LiveWeaponPoses);
	Parms.WeaponManufacturer = WeaponManufacturer;
	Parms.WeaponType = WeaponType;
	Parms.GripType = GripType;
	Parms.ForeGripType = ForeGripType;
	Parms.Debug_Pose_Array_ = Debug_Pose_Array_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LiveWeaponPoses = std::move(Parms.LiveWeaponPoses);
}

}

