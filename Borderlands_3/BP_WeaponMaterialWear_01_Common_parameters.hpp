#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponMaterialWear_01_Common

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WeaponMaterialWear_01_Common.BP_WeaponMaterialWear_01_Common_C.ExecuteUbergraph_BP_WeaponMaterialWear_01_Common
// 0x0038 (0x0038 - 0x0000)
struct BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InventoryActor;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        K2Node_Event_InventoryBalanceState;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InventoryActor2;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        K2Node_Event_InventoryBalanceState2;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InventoryActor1;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        K2Node_Event_InventoryBalanceState1;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common) == 0x000008, "Wrong alignment on BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common");
static_assert(sizeof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common) == 0x000038, "Wrong size on BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, EntryPoint) == 0x000000, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, K2Node_Event_InventoryActor) == 0x000008, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::K2Node_Event_InventoryActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, K2Node_Event_InventoryBalanceState) == 0x000010, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::K2Node_Event_InventoryBalanceState' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, K2Node_Event_InventoryActor2) == 0x000018, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::K2Node_Event_InventoryActor2' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, K2Node_Event_InventoryBalanceState2) == 0x000020, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::K2Node_Event_InventoryBalanceState2' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, K2Node_Event_InventoryActor1) == 0x000028, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::K2Node_Event_InventoryActor1' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common, K2Node_Event_InventoryBalanceState1) == 0x000030, "Member 'BP_WeaponMaterialWear_01_Common_C_ExecuteUbergraph_BP_WeaponMaterialWear_01_Common::K2Node_Event_InventoryBalanceState1' has a wrong offset!");

// Function BP_WeaponMaterialWear_01_Common.BP_WeaponMaterialWear_01_Common_C.OnBeginPlay
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponMaterialWear_01_Common_C_OnBeginPlay final
{
public:
	class AActor*                                 InventoryActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        InventoryBalanceState;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponMaterialWear_01_Common_C_OnBeginPlay) == 0x000008, "Wrong alignment on BP_WeaponMaterialWear_01_Common_C_OnBeginPlay");
static_assert(sizeof(BP_WeaponMaterialWear_01_Common_C_OnBeginPlay) == 0x000010, "Wrong size on BP_WeaponMaterialWear_01_Common_C_OnBeginPlay");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_OnBeginPlay, InventoryActor) == 0x000000, "Member 'BP_WeaponMaterialWear_01_Common_C_OnBeginPlay::InventoryActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_OnBeginPlay, InventoryBalanceState) == 0x000008, "Member 'BP_WeaponMaterialWear_01_Common_C_OnBeginPlay::InventoryBalanceState' has a wrong offset!");

// Function BP_WeaponMaterialWear_01_Common.BP_WeaponMaterialWear_01_Common_C.OnInitializeBalanceState
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState final
{
public:
	class AActor*                                 InventoryActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        InventoryBalanceState;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState) == 0x000008, "Wrong alignment on BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState");
static_assert(sizeof(BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState) == 0x000010, "Wrong size on BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState, InventoryActor) == 0x000000, "Member 'BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState::InventoryActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState, InventoryBalanceState) == 0x000008, "Member 'BP_WeaponMaterialWear_01_Common_C_OnInitializeBalanceState::InventoryBalanceState' has a wrong offset!");

// Function BP_WeaponMaterialWear_01_Common.BP_WeaponMaterialWear_01_Common_C.OnInitializeComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent final
{
public:
	class AActor*                                 InventoryActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBalanceStateComponent*        InventoryBalanceState;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent) == 0x000008, "Wrong alignment on BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent");
static_assert(sizeof(BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent) == 0x000010, "Wrong size on BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent, InventoryActor) == 0x000000, "Member 'BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent::InventoryActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent, InventoryBalanceState) == 0x000008, "Member 'BP_WeaponMaterialWear_01_Common_C_OnInitializeComponent::InventoryBalanceState' has a wrong offset!");

}

