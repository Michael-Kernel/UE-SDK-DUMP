#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlledMove_PhaseLock_WebGrasp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp
// 0x0118 (0x0118 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayTagContainerComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayTagContainerComponent*         CallFunc_GetComponentByClass_ReturnValue1;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInterrupted;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0040(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Receiver;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Causer;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x006C(0x000C)(IsPlainOldData, NoDestructor)
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class UBPEventHub_Siren_C*                    K2Node_DynamicCast_AsBPEvent_Hub_Siren;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_MoveDuration;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Instigator;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Siren_C*                    K2Node_DynamicCast_AsBPEvent_Hub_Siren1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhaseTranceElementalType                     CallFunc_BreakPhaseTranceElementData_ElementType;  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_BreakPhaseTranceElementData_DamageType;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceElementData_DamageCoefficientData; // 0x00E0(0x0038)(NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp) == 0x000118, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, EntryPoint) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_GetComponentByClass_ReturnValue1) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_RemoveGameplayTag_ReturnValue) == 0x000018, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_Event_bInterrupted) == 0x000019, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_Event_bInterrupted' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000028, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000034, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_MakeRotFromZ_ReturnValue) == 0x000040, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_BreakRotator_Roll) == 0x00004C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_BreakRotator_Pitch) == 0x000050, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_BreakRotator_Yaw) == 0x000054, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_CustomEvent_Receiver) == 0x000058, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_CustomEvent_Receiver' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_CustomEvent_Causer) == 0x000060, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_MakeRotator_ReturnValue) == 0x00006C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_CreateDelegate_OutputDelegate1) == 0x000088, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_CreateDelegate_OutputDelegate2) == 0x000098, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_DynamicCast_AsBPEvent_Hub_Siren) == 0x0000A8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_DynamicCast_AsBPEvent_Hub_Siren' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_Event_MoveDuration) == 0x0000B4, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_Event_MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_Event_TargetActor) == 0x0000B8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_Event_Instigator) == 0x0000C0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_DynamicCast_AsBPEvent_Hub_Siren1) == 0x0000C8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_DynamicCast_AsBPEvent_Hub_Siren1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, K2Node_DynamicCast_bSuccess1) == 0x0000D0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_BreakPhaseTranceElementData_ElementType) == 0x0000D1, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_BreakPhaseTranceElementData_ElementType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_BreakPhaseTranceElementData_DamageType) == 0x0000D8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_BreakPhaseTranceElementData_DamageType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp, CallFunc_BreakPhaseTranceElementData_DamageCoefficientData) == 0x0000E0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ExecuteUbergraph_ControlledMove_PhaseLock_WebGrasp::CallFunc_BreakPhaseTranceElementData_DamageCoefficientData' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.OnControlledCharacterDied
// 0x0010 (0x0010 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied final
{
public:
	class AActor*                                 Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied) == 0x000010, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied, Receiver) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied::Receiver' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied, Causer) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnControlledCharacterDied::Causer' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.OnServerStop
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_OnServerStop final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStop) == 0x000001, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_OnServerStop");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStop) == 0x000001, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_OnServerStop");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStop, bInterrupted) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnServerStop::bInterrupted' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.ApplyElementalEffect
// 0x0070 (0x0070 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect final
{
public:
	EPhaseTranceElementalType                     CallFunc_BreakPhaseTranceElementData_ElementType;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_BreakPhaseTranceElementData_DamageType;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceElementData_DamageCoefficientData; // 0x0010(0x0038)(NoDestructor)
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_TriggerElementalEffect_ReturnValue;       // 0x0058(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect) == 0x000070, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect, CallFunc_BreakPhaseTranceElementData_ElementType) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect::CallFunc_BreakPhaseTranceElementData_ElementType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect, CallFunc_BreakPhaseTranceElementData_DamageType) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect::CallFunc_BreakPhaseTranceElementData_DamageType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect, CallFunc_BreakPhaseTranceElementData_DamageCoefficientData) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect::CallFunc_BreakPhaseTranceElementData_DamageCoefficientData' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect, CallFunc_GetAbilityOwner_ReturnValue) == 0x000048, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000050, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect, CallFunc_TriggerElementalEffect_ReturnValue) == 0x000058, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ApplyElementalEffect::CallFunc_TriggerElementalEffect_ReturnValue' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.RemoveElementalEffect
// 0x0001 (0x0001 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect final
{
public:
	bool                                          CallFunc_RemoveStatusEffectInstance_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect) == 0x000001, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect) == 0x000001, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect, CallFunc_RemoveStatusEffectInstance_ReturnValue) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_RemoveElementalEffect::CallFunc_RemoveStatusEffectInstance_ReturnValue' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.ConfigureEmitters
// 0x0100 (0x0100 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters final
{
public:
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     Temp_byte_Variable1;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable5;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable6;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable7;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable8;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable9;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_BreakPhaseTranceElementData_ElementType;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_BreakPhaseTranceElementData_DamageType;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceElementData_DamageCoefficientData; // 0x0070(0x0038)(NoDestructor)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_BreakPhaseTranceElementData_ElementType1; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_BreakPhaseTranceElementData_DamageType1;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeInitializationData           CallFunc_BreakPhaseTranceElementData_DamageCoefficientData1; // 0x00C0(0x0038)(NoDestructor)
	class UParticleSystem*                        K2Node_Select1_Default;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters) == 0x000100, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_byte_Variable) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable1) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable2) == 0x000018, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable3) == 0x000020, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable4) == 0x000028, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_byte_Variable1) == 0x000030, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable5) == 0x000038, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable6) == 0x000040, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable7) == 0x000048, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable8) == 0x000050, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, Temp_object_Variable9) == 0x000058, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::Temp_object_Variable9' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, CallFunc_BreakPhaseTranceElementData_ElementType) == 0x000060, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::CallFunc_BreakPhaseTranceElementData_ElementType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, CallFunc_BreakPhaseTranceElementData_DamageType) == 0x000068, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::CallFunc_BreakPhaseTranceElementData_DamageType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, CallFunc_BreakPhaseTranceElementData_DamageCoefficientData) == 0x000070, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::CallFunc_BreakPhaseTranceElementData_DamageCoefficientData' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, K2Node_Select_Default) == 0x0000A8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, CallFunc_BreakPhaseTranceElementData_ElementType1) == 0x0000B0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::CallFunc_BreakPhaseTranceElementData_ElementType1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, CallFunc_BreakPhaseTranceElementData_DamageType1) == 0x0000B8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::CallFunc_BreakPhaseTranceElementData_DamageType1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, CallFunc_BreakPhaseTranceElementData_DamageCoefficientData1) == 0x0000C0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::CallFunc_BreakPhaseTranceElementData_DamageCoefficientData1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters, K2Node_Select1_Default) == 0x0000F8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_ConfigureEmitters::K2Node_Select1_Default' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.UnpackComboData
// 0x0028 (0x0028 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData final
{
public:
	struct FVector                                CallFunc_GetSuperSkunkworksReplicationData_ReturnValue; // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPhaseTranceActivationComboData        CallFunc_UnpackActivationComboDataFromReplication_ReturnValue; // 0x0010(0x0018)(NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData) == 0x000028, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData, CallFunc_GetSuperSkunkworksReplicationData_ReturnValue) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData::CallFunc_GetSuperSkunkworksReplicationData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData, CallFunc_UnpackActivationComboDataFromReplication_ReturnValue) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_UnpackComboData::CallFunc_UnpackActivationComboDataFromReplication_ReturnValue' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.DispatchGraspTargetDiedEvent
// 0x0008 (0x0008 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent final
{
public:
	class AGbxCharacter*                          Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent) == 0x000008, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent, Killer) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DispatchGraspTargetDiedEvent::Killer' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.DoPhaseTranceEffects
// 0x0188 (0x0188 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects final
{
public:
	class UOakActionAbility_PhaseTrance*          OwnerPhaseTrance;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnvQueryParams                        FindNearbyTargets;                                 // 0x0008(0x00B8)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakPhaseTranceEffectSpec              K2Node_MakeStruct_OakPhaseTranceEffectSpec;        // 0x00D0(0x0030)(NoDestructor)
	bool                                          CallFunc_TryEffect_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility_PhaseTrance*          K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPhaseTranceEffectType_ReturnValue;     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPhaseTranceEffectType_ReturnValue1;    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPhaseTranceEffectType_ReturnValue2;    // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_RunEnvQueryForAllActors_ResultActors;     // 0x0118(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_RunEnvQueryForAllActors_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakPhaseTranceEffectSpec              K2Node_MakeStruct_OakPhaseTranceEffectSpec1;       // 0x0140(0x0030)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryEffect_ReturnValue1;                   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects) == 0x000188, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, OwnerPhaseTrance) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::OwnerPhaseTrance' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, FindNearbyTargets) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::FindNearbyTargets' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, K2Node_MakeStruct_OakPhaseTranceEffectSpec) == 0x0000D0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::K2Node_MakeStruct_OakPhaseTranceEffectSpec' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_TryEffect_ReturnValue) == 0x000100, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_TryEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance) == 0x000108, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_HasPhaseTranceEffectType_ReturnValue) == 0x000111, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_HasPhaseTranceEffectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_HasPhaseTranceEffectType_ReturnValue1) == 0x000112, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_HasPhaseTranceEffectType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_HasPhaseTranceEffectType_ReturnValue2) == 0x000113, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_HasPhaseTranceEffectType_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_BooleanOR_ReturnValue) == 0x000114, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_RunEnvQueryForAllActors_ResultActors) == 0x000118, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_RunEnvQueryForAllActors_ResultActors' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_RunEnvQueryForAllActors_ReturnValue) == 0x000128, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_RunEnvQueryForAllActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_Array_Get_Item) == 0x000130, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, K2Node_MakeStruct_OakPhaseTranceEffectSpec1) == 0x000140, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::K2Node_MakeStruct_OakPhaseTranceEffectSpec1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, CallFunc_TryEffect_ReturnValue1) == 0x000171, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::CallFunc_TryEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects, K2Node_CreateDelegate_OutputDelegate) == 0x000178, "Member 'ControlledMove_PhaseLock_WebGrasp_C_DoPhaseTranceEffects::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.OnGraspLeechTarget
// 0x00B8 (0x00B8 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget final
{
public:
	class UDamageComponent*                       DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReceivedDamageDetails                 Details;                                           // 0x0030(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FDataTableValueHandle                  LeechScalar;                                       // 0x0088(0x0018)(Edit, BlueprintVisible, NoDestructor)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget) == 0x0000B8, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, DamageReceiver) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::DamageReceiver' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, Damage) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::Damage' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, DamageType) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::DamageType' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, DamageSource) == 0x000018, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::DamageSource' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, InstigatedBy) == 0x000020, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::InstigatedBy' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, DamageCauser) == 0x000028, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::DamageCauser' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, Details) == 0x000030, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::Details' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, LeechScalar) == 0x000088, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::LeechScalar' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, CallFunc_ClassIsChildOf_ReturnValue) == 0x0000A8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x0000AC, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnGraspLeechTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.GraspFinishLeech
// 0x00B0 (0x00B0 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech final
{
public:
	class UActionSkill_Siren_Phasetrance_C*       Phasetrance;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  LeechScalar;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, NoDestructor)
	int32                                         LeechProjectiles;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActionSkill_Siren_Phasetrance_C*       K2Node_DynamicCast_AsAction_Skill_Siren_Phasetrance; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPhaseTranceEffectType_ReturnValue;     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOakPhaseTranceEffectSpec              K2Node_MakeStruct_OakPhaseTranceEffectSpec;        // 0x0078(0x0030)(NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoEffect_SoulSap_bRes;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech) == 0x0000B0, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, Phasetrance) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::Phasetrance' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, LeechScalar) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::LeechScalar' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, LeechProjectiles) == 0x000020, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::LeechProjectiles' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, K2Node_DynamicCast_AsAction_Skill_Siren_Phasetrance) == 0x000030, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::K2Node_DynamicCast_AsAction_Skill_Siren_Phasetrance' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, Temp_int_Variable) == 0x00003C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000040, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_GetAbilityOwner_ReturnValue) == 0x000050, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000058, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_HasPhaseTranceEffectType_ReturnValue) == 0x00005C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_HasPhaseTranceEffectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000064, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x00006C, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_FTrunc_ReturnValue) == 0x000070, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, K2Node_MakeStruct_OakPhaseTranceEffectSpec) == 0x000078, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::K2Node_MakeStruct_OakPhaseTranceEffectSpec' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_Clamp_ReturnValue) == 0x0000A8, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech, CallFunc_DoEffect_SoulSap_bRes) == 0x0000AC, "Member 'ControlledMove_PhaseLock_WebGrasp_C_GraspFinishLeech::CallFunc_DoEffect_SoulSap_bRes' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.SetGraspTimerRunning
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility_PhaseTrance*          K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning) == 0x000018, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning, bRes) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning::bRes' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning, K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning::K2Node_DynamicCast_AsOak_Action_Ability_Phase_Trance' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_SetGraspTimerRunning::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.PlayFeedback
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback final
{
public:
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback) == 0x000018, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback, CallFunc_GetAbilityOwner_ReturnValue) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_PlayFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ControlledMove_PhaseLock_WebGrasp.ControlledMove_PhaseLock_WebGrasp_C.OnServerStart
// 0x0018 (0x0018 - 0x0000)
struct ControlledMove_PhaseLock_WebGrasp_C_OnServerStart final
{
public:
	float                                         MoveDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStart) == 0x000008, "Wrong alignment on ControlledMove_PhaseLock_WebGrasp_C_OnServerStart");
static_assert(sizeof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStart) == 0x000018, "Wrong size on ControlledMove_PhaseLock_WebGrasp_C_OnServerStart");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStart, MoveDuration) == 0x000000, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnServerStart::MoveDuration' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStart, TargetActor) == 0x000008, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnServerStart::TargetActor' has a wrong offset!");
static_assert(offsetof(ControlledMove_PhaseLock_WebGrasp_C_OnServerStart, Instigator) == 0x000010, "Member 'ControlledMove_PhaseLock_WebGrasp_C_OnServerStart::Instigator' has a wrong offset!");

}

