#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_HYP_IceBurger_Child1

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_HYP_IceBurger_Child1.LightProjectile_HYP_IceBurger_Child1_C.OnRicochet
// 0x00A8 (0x00A8 - 0x0000)
struct LightProjectile_HYP_IceBurger_Child1_C_OnRicochet final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0098(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceExplosionRadius;                             // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_HYP_IceBurger_Child1_C_OnRicochet) == 0x000008, "Wrong alignment on LightProjectile_HYP_IceBurger_Child1_C_OnRicochet");
static_assert(sizeof(LightProjectile_HYP_IceBurger_Child1_C_OnRicochet) == 0x0000A8, "Wrong size on LightProjectile_HYP_IceBurger_Child1_C_OnRicochet");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnRicochet, Projectile) == 0x000000, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnRicochet::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnRicochet, Hit) == 0x000008, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnRicochet::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnRicochet, ImpactVelocity) == 0x000098, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnRicochet::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnRicochet, BounceExplosionRadius) == 0x0000A4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnRicochet::BounceExplosionRadius' has a wrong offset!");

// Function LightProjectile_HYP_IceBurger_Child1.LightProjectile_HYP_IceBurger_Child1_C.OnLifetimeExpired
// 0x0008 (0x0008 - 0x0000)
struct LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired) == 0x000008, "Wrong size on LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnLifetimeExpired::Projectile' has a wrong offset!");

// Function LightProjectile_HYP_IceBurger_Child1.LightProjectile_HYP_IceBurger_Child1_C.OnExplode
// 0x0010 (0x0010 - 0x0000)
struct LightProjectile_HYP_IceBurger_Child1_C_OnExplode final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_PlayExplosion_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_HYP_IceBurger_Child1_C_OnExplode) == 0x000008, "Wrong alignment on LightProjectile_HYP_IceBurger_Child1_C_OnExplode");
static_assert(sizeof(LightProjectile_HYP_IceBurger_Child1_C_OnExplode) == 0x000010, "Wrong size on LightProjectile_HYP_IceBurger_Child1_C_OnExplode");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnExplode, Projectile) == 0x000000, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnExplode::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnExplode, CallFunc_PlayExplosion_ReturnValue) == 0x000008, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnExplode::CallFunc_PlayExplosion_ReturnValue' has a wrong offset!");

// Function LightProjectile_HYP_IceBurger_Child1.LightProjectile_HYP_IceBurger_Child1_C.OnDamage
// 0x0340 (0x0340 - 0x0000)
struct LightProjectile_HYP_IceBurger_Child1_C_OnDamage final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bCritical;                                         // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x00A8(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x00B4(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0140(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x019C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSource_ReturnValue;                    // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x01F8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage) == 0x000010, "Wrong alignment on LightProjectile_HYP_IceBurger_Child1_C_OnDamage");
static_assert(sizeof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage) == 0x000340, "Wrong size on LightProjectile_HYP_IceBurger_Child1_C_OnDamage");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, Projectile) == 0x000000, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, Hit) == 0x000008, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::Hit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, bCritical) == 0x000098, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::bCritical' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, Target) == 0x0000A0, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::Target' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, EndLocation) == 0x0000A8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::EndLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, StartLocation) == 0x0000B4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C0, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C1, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_Time) == 0x0000C4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_Distance) == 0x0000C8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_Location) == 0x0000CC, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_Normal) == 0x0000E4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F0, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000124, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_TraceStart) == 0x000128, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000134, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000140, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, Temp_int_Array_Index_Variable) == 0x000150, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_Array_Length_ReturnValue) == 0x000154, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_Array_Get_Item) == 0x000160, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakTransform_Location) == 0x000190, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakTransform_Rotation) == 0x00019C, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_BreakTransform_Scale) == 0x0001A8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, Temp_int_Loop_Counter_Variable) == 0x0001B4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_GetForwardVector_ReturnValue) == 0x0001B8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001C4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0001D0, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_Add_IntInt_ReturnValue) == 0x0001D4, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_GetModifierType_ReturnValue) == 0x0001D8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x0001DC, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_GetInstigator_ReturnValue) == 0x0001E8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, CallFunc_GetSource_ReturnValue) == 0x0001F0, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_HYP_IceBurger_Child1_C_OnDamage, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0001F8, "Member 'LightProjectile_HYP_IceBurger_Child1_C_OnDamage::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

