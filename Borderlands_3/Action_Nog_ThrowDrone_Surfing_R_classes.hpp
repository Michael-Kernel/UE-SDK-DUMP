#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Nog_ThrowDrone_Surfing_R

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Action_Nog_Shared_classes.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Action_Nog_ThrowDrone_Surfing_R.Action_Nog_ThrowDrone_Surfing_R_C
// 0x0008 (0x02A0 - 0x0298)
class UAction_Nog_ThrowDrone_Surfing_R_C final : public UAction_Nog_Shared_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Action_Nog_ThrowDrone_Surfing_R_C;  // 0x0298(0x0008)(Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_Action_Nog_ThrowDrone_Surfing_R(int32 EntryPoint);
	void OnEnd(EGbxActionEndState ActionEndState, class AActor* Actor);
	void NotifyEnableDrone();
	void NotifyThrow();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Action_Nog_ThrowDrone_Surfing_R_C">();
	}
	static class UAction_Nog_ThrowDrone_Surfing_R_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAction_Nog_ThrowDrone_Surfing_R_C>();
	}
};
static_assert(alignof(UAction_Nog_ThrowDrone_Surfing_R_C) == 0x000008, "Wrong alignment on UAction_Nog_ThrowDrone_Surfing_R_C");
static_assert(sizeof(UAction_Nog_ThrowDrone_Surfing_R_C) == 0x0002A0, "Wrong size on UAction_Nog_ThrowDrone_Surfing_R_C");
static_assert(offsetof(UAction_Nog_ThrowDrone_Surfing_R_C, UberGraphFrame_Action_Nog_ThrowDrone_Surfing_R_C) == 0x000298, "Member 'UAction_Nog_ThrowDrone_Surfing_R_C::UberGraphFrame_Action_Nog_ThrowDrone_Surfing_R_C' has a wrong offset!");

}

