#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShieldAug_Roid

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function BP_ShieldAug_Roid.BP_ShieldAug_Roid_C.K2_OnCausedDamage
// 0x00D8 (0x00D8 - 0x0000)
struct BP_ShieldAug_Roid_C_K2_OnCausedDamage final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0008(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
	class AActor*                                 DamageInstigator;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0048(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0050(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0060(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x00C0(0x0018)()
};
static_assert(alignof(BP_ShieldAug_Roid_C_K2_OnCausedDamage) == 0x000008, "Wrong alignment on BP_ShieldAug_Roid_C_K2_OnCausedDamage");
static_assert(sizeof(BP_ShieldAug_Roid_C_K2_OnCausedDamage) == 0x0000D8, "Wrong size on BP_ShieldAug_Roid_C_K2_OnCausedDamage");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, Shield) == 0x000000, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::Shield' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, StackData) == 0x000008, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::StackData' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, DamageInstigator) == 0x000038, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, Damage) == 0x000040, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, DamageType) == 0x000048, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, DamageSource) == 0x000050, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, DamagedActor) == 0x000058, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, Details) == 0x000060, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::Details' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnCausedDamage, CallFunc_PostEventAtLocation_ReturnValue) == 0x0000C0, "Member 'BP_ShieldAug_Roid_C_K2_OnCausedDamage::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");

// Function BP_ShieldAug_Roid.BP_ShieldAug_Roid_C.K2_OnShieldEquipped
// 0x0040 (0x0040 - 0x0000)
struct BP_ShieldAug_Roid_C_K2_OnShieldEquipped final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Equipper;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ShieldAug_Roid_C_K2_OnShieldEquipped) == 0x000008, "Wrong alignment on BP_ShieldAug_Roid_C_K2_OnShieldEquipped");
static_assert(sizeof(BP_ShieldAug_Roid_C_K2_OnShieldEquipped) == 0x000040, "Wrong size on BP_ShieldAug_Roid_C_K2_OnShieldEquipped");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldEquipped, Shield) == 0x000000, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldEquipped::Shield' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldEquipped, Equipper) == 0x000008, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldEquipped::Equipper' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldEquipped, StackData) == 0x000010, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldEquipped::StackData' has a wrong offset!");

// Function BP_ShieldAug_Roid.BP_ShieldAug_Roid_C.K2_OnShieldUnequipped
// 0x0040 (0x0040 - 0x0000)
struct BP_ShieldAug_Roid_C_K2_OnShieldUnequipped final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          Equipper;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAugmentData                           StackData;                                         // 0x0010(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ShieldAug_Roid_C_K2_OnShieldUnequipped) == 0x000008, "Wrong alignment on BP_ShieldAug_Roid_C_K2_OnShieldUnequipped");
static_assert(sizeof(BP_ShieldAug_Roid_C_K2_OnShieldUnequipped) == 0x000040, "Wrong size on BP_ShieldAug_Roid_C_K2_OnShieldUnequipped");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldUnequipped, Shield) == 0x000000, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldUnequipped::Shield' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldUnequipped, Equipper) == 0x000008, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldUnequipped::Equipper' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldUnequipped, StackData) == 0x000010, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldUnequipped::StackData' has a wrong offset!");

// Function BP_ShieldAug_Roid.BP_ShieldAug_Roid_C.K2_OnShieldFilled
// 0x0050 (0x0050 - 0x0000)
struct BP_ShieldAug_Roid_C_K2_OnShieldFilled final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ShieldAug_Roid_C_K2_OnShieldFilled) == 0x000008, "Wrong alignment on BP_ShieldAug_Roid_C_K2_OnShieldFilled");
static_assert(sizeof(BP_ShieldAug_Roid_C_K2_OnShieldFilled) == 0x000050, "Wrong size on BP_ShieldAug_Roid_C_K2_OnShieldFilled");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldFilled, Shield) == 0x000000, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldFilled::Shield' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldFilled, ResourcePool) == 0x000008, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldFilled::ResourcePool' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldFilled, StackData) == 0x000020, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldFilled::StackData' has a wrong offset!");

// Function BP_ShieldAug_Roid.BP_ShieldAug_Roid_C.K2_OnShieldDepleted
// 0x0050 (0x0050 - 0x0000)
struct BP_ShieldAug_Roid_C_K2_OnShieldDepleted final
{
public:
	class AShield*                                Shield;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameResourcePoolReference             ResourcePool;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FAugmentData                           StackData;                                         // 0x0020(0x0030)(BlueprintVisible, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ShieldAug_Roid_C_K2_OnShieldDepleted) == 0x000008, "Wrong alignment on BP_ShieldAug_Roid_C_K2_OnShieldDepleted");
static_assert(sizeof(BP_ShieldAug_Roid_C_K2_OnShieldDepleted) == 0x000050, "Wrong size on BP_ShieldAug_Roid_C_K2_OnShieldDepleted");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldDepleted, Shield) == 0x000000, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldDepleted::Shield' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldDepleted, ResourcePool) == 0x000008, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldDepleted::ResourcePool' has a wrong offset!");
static_assert(offsetof(BP_ShieldAug_Roid_C_K2_OnShieldDepleted, StackData) == 0x000020, "Member 'BP_ShieldAug_Roid_C_K2_OnShieldDepleted::StackData' has a wrong offset!");

}

