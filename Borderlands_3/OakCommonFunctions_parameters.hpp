#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OakCommonFunctions

#include "Basic.hpp"

#include "GbxMission_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function OakCommonFunctions.OakCommonFunctions_C.Get Regeneration Rate
// 0x0030 (0x0030 - 0x0000)
struct OakCommonFunctions_C_Get_Regeneration_Rate final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Regen_Rate;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Regen_Rate;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateAttributeInitializer_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_Get_Regeneration_Rate) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Get_Regeneration_Rate");
static_assert(sizeof(OakCommonFunctions_C_Get_Regeneration_Rate) == 0x000030, "Wrong size on OakCommonFunctions_C_Get_Regeneration_Rate");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, Context) == 0x000000, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::Context' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, Max_Regen_Rate) == 0x000008, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::Max_Regen_Rate' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, Regen_Rate) == 0x000018, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::Regen_Rate' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, CallFunc_GetValueOfAttribute_ReturnValue) == 0x00001C, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, CallFunc_EvaluateAttributeInitializer_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::CallFunc_EvaluateAttributeInitializer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Regeneration_Rate, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000028, "Member 'OakCommonFunctions_C_Get_Regeneration_Rate::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Get Player View Trace
// 0x0078 (0x0078 - 0x0000)
struct OakCommonFunctions_C_Get_Player_View_Trace final
{
public:
	class AOakCharacter_Player*                   Player_Character;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Trace_Length;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Trace_Start;                                       // 0x0018(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Trace_End;                                         // 0x0024(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorAimViewPoint_OutLocation;         // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorAimViewPoint_OutRotation;         // 0x0044(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_Get_Player_View_Trace) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Get_Player_View_Trace");
static_assert(sizeof(OakCommonFunctions_C_Get_Player_View_Trace) == 0x000078, "Wrong size on OakCommonFunctions_C_Get_Player_View_Trace");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, Player_Character) == 0x000000, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::Player_Character' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, Trace_Length) == 0x000008, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::Trace_Length' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, Trace_Start) == 0x000018, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::Trace_Start' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, Trace_End) == 0x000024, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::Trace_End' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, CallFunc_GetActorAimViewPoint_OutLocation) == 0x000038, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::CallFunc_GetActorAimViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, CallFunc_GetActorAimViewPoint_OutRotation) == 0x000044, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::CallFunc_GetActorAimViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000050, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Get_Player_View_Trace, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'OakCommonFunctions_C_Get_Player_View_Trace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Make Transforms Around Cone
// 0x0160 (0x0160 - 0x0000)
struct OakCommonFunctions_C_Make_Transforms_Around_Cone final
{
public:
	struct FVector                                Cone_Axis;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cone_Location;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cone_Angle_Min;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cone_Angle_Max;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_Angle_Divergence;                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sweep_Angle;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_From_Cone_Center;                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_Of_Transforms;                              // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     Out_Transforms;                                    // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FTransform>                     Transforms;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x007C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue1;        // 0x0114(0x000C)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_Make_Transforms_Around_Cone) == 0x000010, "Wrong alignment on OakCommonFunctions_C_Make_Transforms_Around_Cone");
static_assert(sizeof(OakCommonFunctions_C_Make_Transforms_Around_Cone) == 0x000160, "Wrong size on OakCommonFunctions_C_Make_Transforms_Around_Cone");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Cone_Axis) == 0x000000, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Cone_Axis' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Cone_Location) == 0x00000C, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Cone_Location' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Cone_Angle_Min) == 0x000018, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Cone_Angle_Min' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Cone_Angle_Max) == 0x00001C, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Cone_Angle_Max' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Rotation_Angle_Divergence) == 0x000020, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Rotation_Angle_Divergence' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Sweep_Angle) == 0x000024, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Sweep_Angle' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Distance_From_Cone_Center) == 0x000028, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Distance_From_Cone_Center' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Number_Of_Transforms) == 0x00002C, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Number_Of_Transforms' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, __WorldContext) == 0x000030, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Out_Transforms) == 0x000038, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Out_Transforms' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Transforms) == 0x000048, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Transforms' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_RandomFloatInRange_ReturnValue) == 0x000064, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000068, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00006C, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00007C, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000088, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, Temp_int_Variable) == 0x0000D0, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D4, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D8, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000E0, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000EC, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_TransformDirection_ReturnValue) == 0x0000FC, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Conv_VectorToRotator_ReturnValue1) == 0x000114, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Conv_VectorToRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_MakeTransform_ReturnValue1) == 0x000120, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Make_Transforms_Around_Cone, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'OakCommonFunctions_C_Make_Transforms_Around_Cone::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Compare Damage Source
// 0x0030 (0x0030 - 0x0000)
struct OakCommonFunctions_C_Compare_Damage_Source final
{
public:
	const class UDamageSource*                    Damage_Source_1;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Damage_Source_2;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Equal;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Not_Equal;                                         // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_Compare_Damage_Source) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Compare_Damage_Source");
static_assert(sizeof(OakCommonFunctions_C_Compare_Damage_Source) == 0x000030, "Wrong size on OakCommonFunctions_C_Compare_Damage_Source");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, Damage_Source_1) == 0x000000, "Member 'OakCommonFunctions_C_Compare_Damage_Source::Damage_Source_1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, Damage_Source_2) == 0x000008, "Member 'OakCommonFunctions_C_Compare_Damage_Source::Damage_Source_2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_Compare_Damage_Source::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, Equal) == 0x000018, "Member 'OakCommonFunctions_C_Compare_Damage_Source::Equal' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, Not_Equal) == 0x000019, "Member 'OakCommonFunctions_C_Compare_Damage_Source::Not_Equal' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_Compare_Damage_Source::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, CallFunc_ClassIsChildOf_ReturnValue) == 0x000028, "Member 'OakCommonFunctions_C_Compare_Damage_Source::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Compare_Damage_Source, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'OakCommonFunctions_C_Compare_Damage_Source::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.DisplayErrorMessage
// 0x0050 (0x0050 - 0x0000)
struct OakCommonFunctions_C_DisplayErrorMessage final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ErrorMessage;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_DisplayErrorMessage) == 0x000008, "Wrong alignment on OakCommonFunctions_C_DisplayErrorMessage");
static_assert(sizeof(OakCommonFunctions_C_DisplayErrorMessage) == 0x000050, "Wrong size on OakCommonFunctions_C_DisplayErrorMessage");
static_assert(offsetof(OakCommonFunctions_C_DisplayErrorMessage, Context) == 0x000000, "Member 'OakCommonFunctions_C_DisplayErrorMessage::Context' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_DisplayErrorMessage, ErrorMessage) == 0x000008, "Member 'OakCommonFunctions_C_DisplayErrorMessage::ErrorMessage' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_DisplayErrorMessage, __WorldContext) == 0x000018, "Member 'OakCommonFunctions_C_DisplayErrorMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_DisplayErrorMessage, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_DisplayErrorMessage::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_DisplayErrorMessage, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'OakCommonFunctions_C_DisplayErrorMessage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_DisplayErrorMessage, CallFunc_Concat_StrStr_ReturnValue1) == 0x000040, "Member 'OakCommonFunctions_C_DisplayErrorMessage::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.MissionTempSpeakText
// 0x0090 (0x0090 - 0x0000)
struct OakCommonFunctions_C_MissionTempSpeakText final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActorClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         TextSize;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FacePlayer;                                        // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakCharacter*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPInterface_TempHudTextProvider_C> K2Node_DynamicCast_AsBPInterface_Temp_Hud_Text_Provider; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_MissionTempSpeakText) == 0x000008, "Wrong alignment on OakCommonFunctions_C_MissionTempSpeakText");
static_assert(sizeof(OakCommonFunctions_C_MissionTempSpeakText) == 0x000090, "Wrong size on OakCommonFunctions_C_MissionTempSpeakText");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, WorldContextObject) == 0x000000, "Member 'OakCommonFunctions_C_MissionTempSpeakText::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, ActorClass) == 0x000008, "Member 'OakCommonFunctions_C_MissionTempSpeakText::ActorClass' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, Text) == 0x000010, "Member 'OakCommonFunctions_C_MissionTempSpeakText::Text' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, TextSize) == 0x000028, "Member 'OakCommonFunctions_C_MissionTempSpeakText::TextSize' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, Duration) == 0x00002C, "Member 'OakCommonFunctions_C_MissionTempSpeakText::Duration' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, TextColor) == 0x000030, "Member 'OakCommonFunctions_C_MissionTempSpeakText::TextColor' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, FacePlayer) == 0x000040, "Member 'OakCommonFunctions_C_MissionTempSpeakText::FacePlayer' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, __WorldContext) == 0x000048, "Member 'OakCommonFunctions_C_MissionTempSpeakText::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'OakCommonFunctions_C_MissionTempSpeakText::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'OakCommonFunctions_C_MissionTempSpeakText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, CallFunc_Array_Get_Item) == 0x000068, "Member 'OakCommonFunctions_C_MissionTempSpeakText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, K2Node_DynamicCast_AsBPInterface_Temp_Hud_Text_Provider) == 0x000070, "Member 'OakCommonFunctions_C_MissionTempSpeakText::K2Node_DynamicCast_AsBPInterface_Temp_Hud_Text_Provider' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'OakCommonFunctions_C_MissionTempSpeakText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'OakCommonFunctions_C_MissionTempSpeakText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempSpeakText, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'OakCommonFunctions_C_MissionTempSpeakText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.MissionTempHudText
// 0x0048 (0x0048 - 0x0000)
struct OakCommonFunctions_C_MissionTempHudText final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         TextSize;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_MissionTempHudText) == 0x000008, "Wrong alignment on OakCommonFunctions_C_MissionTempHudText");
static_assert(sizeof(OakCommonFunctions_C_MissionTempHudText) == 0x000048, "Wrong size on OakCommonFunctions_C_MissionTempHudText");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, WorldContextObject) == 0x000000, "Member 'OakCommonFunctions_C_MissionTempHudText::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, Text) == 0x000008, "Member 'OakCommonFunctions_C_MissionTempHudText::Text' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, TextSize) == 0x000020, "Member 'OakCommonFunctions_C_MissionTempHudText::TextSize' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, Duration) == 0x000024, "Member 'OakCommonFunctions_C_MissionTempHudText::Duration' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, TextColor) == 0x000028, "Member 'OakCommonFunctions_C_MissionTempHudText::TextColor' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, __WorldContext) == 0x000038, "Member 'OakCommonFunctions_C_MissionTempHudText::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_MissionTempHudText, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'OakCommonFunctions_C_MissionTempHudText::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.SetDebugConsoleCommands
// 0x0030 (0x0030 - 0x0000)
struct OakCommonFunctions_C_SetDebugConsoleCommands final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stat_Unit;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Stat_FPS;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowDebug_Missions;                                // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ToggleAllScreenMessages;                           // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BalanceMe;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoTarget;                                          // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          God;                                               // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Demigod;                                           // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Loaded;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllAmmo;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Player;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditorSession_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_SetDebugConsoleCommands) == 0x000008, "Wrong alignment on OakCommonFunctions_C_SetDebugConsoleCommands");
static_assert(sizeof(OakCommonFunctions_C_SetDebugConsoleCommands) == 0x000030, "Wrong size on OakCommonFunctions_C_SetDebugConsoleCommands");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, PlayerController) == 0x000000, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::PlayerController' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, Stat_Unit) == 0x000008, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::Stat_Unit' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, Stat_FPS) == 0x000009, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::Stat_FPS' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, ShowDebug_Missions) == 0x00000A, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::ShowDebug_Missions' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, ToggleAllScreenMessages) == 0x00000B, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::ToggleAllScreenMessages' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, BalanceMe) == 0x00000C, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::BalanceMe' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, NoTarget) == 0x00000D, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::NoTarget' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, God) == 0x00000E, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::God' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, Demigod) == 0x00000F, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::Demigod' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, Loaded) == 0x000010, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::Loaded' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, AllAmmo) == 0x000011, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::AllAmmo' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, __WorldContext) == 0x000018, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, Player) == 0x000020, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::Player' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetDebugConsoleCommands, CallFunc_IsEditorSession_ReturnValue) == 0x000028, "Member 'OakCommonFunctions_C_SetDebugConsoleCommands::CallFunc_IsEditorSession_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.SetMissionSwitchState
// 0x0090 (0x0090 - 0x0000)
struct OakCommonFunctions_C_SetMissionSwitchState final
{
public:
	struct FMissionObjectiveReference             ObjectiveRef;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                Context;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Switch;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_IO_Switch_C>      K2Node_DynamicCast_AsBPI_IO_Switch;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_IO_Switch_C>      K2Node_DynamicCast_AsBPI_IO_Switch1;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_IO_Switch_C>      K2Node_DynamicCast_AsBPI_IO_Switch2;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_SetMissionSwitchState) == 0x000008, "Wrong alignment on OakCommonFunctions_C_SetMissionSwitchState");
static_assert(sizeof(OakCommonFunctions_C_SetMissionSwitchState) == 0x000090, "Wrong size on OakCommonFunctions_C_SetMissionSwitchState");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, ObjectiveRef) == 0x000000, "Member 'OakCommonFunctions_C_SetMissionSwitchState::ObjectiveRef' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, Context) == 0x000030, "Member 'OakCommonFunctions_C_SetMissionSwitchState::Context' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, __WorldContext) == 0x000038, "Member 'OakCommonFunctions_C_SetMissionSwitchState::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, Switch) == 0x000040, "Member 'OakCommonFunctions_C_SetMissionSwitchState::Switch' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_DynamicCast_AsBPI_IO_Switch) == 0x000048, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_DynamicCast_AsBPI_IO_Switch' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, CallFunc_GetMissionObjectiveStatusRef_ReturnValue) == 0x000059, "Member 'OakCommonFunctions_C_SetMissionSwitchState::CallFunc_GetMissionObjectiveStatusRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_SwitchEnum_CmpSuccess) == 0x00005A, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_DynamicCast_AsBPI_IO_Switch1) == 0x000060, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_DynamicCast_AsBPI_IO_Switch1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_DynamicCast_bSuccess1) == 0x000070, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_DynamicCast_AsBPI_IO_Switch2) == 0x000078, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_DynamicCast_AsBPI_IO_Switch2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionSwitchState, K2Node_DynamicCast_bSuccess2) == 0x000088, "Member 'OakCommonFunctions_C_SetMissionSwitchState::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.SetMissionDoorState
// 0x0090 (0x0090 - 0x0000)
struct OakCommonFunctions_C_SetMissionDoorState final
{
public:
	struct FMissionObjectiveReference             ObjectiveRef;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                Context;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Door;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Door_C>           K2Node_DynamicCast_AsBPI_Door;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Door_C>           K2Node_DynamicCast_AsBPI_Door1;                    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Door_C>           K2Node_DynamicCast_AsBPI_Door2;                    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_SetMissionDoorState) == 0x000008, "Wrong alignment on OakCommonFunctions_C_SetMissionDoorState");
static_assert(sizeof(OakCommonFunctions_C_SetMissionDoorState) == 0x000090, "Wrong size on OakCommonFunctions_C_SetMissionDoorState");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, ObjectiveRef) == 0x000000, "Member 'OakCommonFunctions_C_SetMissionDoorState::ObjectiveRef' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, Context) == 0x000030, "Member 'OakCommonFunctions_C_SetMissionDoorState::Context' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, __WorldContext) == 0x000038, "Member 'OakCommonFunctions_C_SetMissionDoorState::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, Door) == 0x000040, "Member 'OakCommonFunctions_C_SetMissionDoorState::Door' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_DynamicCast_AsBPI_Door) == 0x000048, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_DynamicCast_AsBPI_Door' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_DynamicCast_AsBPI_Door1) == 0x000060, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_DynamicCast_AsBPI_Door1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_DynamicCast_bSuccess1) == 0x000070, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_DynamicCast_AsBPI_Door2) == 0x000078, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_DynamicCast_AsBPI_Door2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_DynamicCast_bSuccess2) == 0x000088, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, CallFunc_GetMissionObjectiveStatusRef_ReturnValue) == 0x000089, "Member 'OakCommonFunctions_C_SetMissionDoorState::CallFunc_GetMissionObjectiveStatusRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_SetMissionDoorState, K2Node_SwitchEnum_CmpSuccess) == 0x00008A, "Member 'OakCommonFunctions_C_SetMissionDoorState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Cosh
// 0x0028 (0x0028 - 0x0000)
struct OakCommonFunctions_C_Cosh final
{
public:
	float                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _result;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Exp_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Exp_ReturnValue1;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_Cosh) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Cosh");
static_assert(sizeof(OakCommonFunctions_C_Cosh) == 0x000028, "Wrong size on OakCommonFunctions_C_Cosh");
static_assert(offsetof(OakCommonFunctions_C_Cosh, A) == 0x000000, "Member 'OakCommonFunctions_C_Cosh::A' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, __WorldContext) == 0x000008, "Member 'OakCommonFunctions_C_Cosh::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, _result) == 0x000010, "Member 'OakCommonFunctions_C_Cosh::_result' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, CallFunc_Exp_ReturnValue) == 0x000014, "Member 'OakCommonFunctions_C_Cosh::CallFunc_Exp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'OakCommonFunctions_C_Cosh::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, CallFunc_Exp_ReturnValue1) == 0x00001C, "Member 'OakCommonFunctions_C_Cosh::CallFunc_Exp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_Cosh::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Cosh, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'OakCommonFunctions_C_Cosh::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.ChallengeActivate
// 0x0030 (0x0030 - 0x0000)
struct OakCommonFunctions_C_ChallengeActivate final
{
public:
	class AOakCharacter_Player*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Challenge;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengesComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_ChallengeActivate) == 0x000008, "Wrong alignment on OakCommonFunctions_C_ChallengeActivate");
static_assert(sizeof(OakCommonFunctions_C_ChallengeActivate) == 0x000030, "Wrong size on OakCommonFunctions_C_ChallengeActivate");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, Character) == 0x000000, "Member 'OakCommonFunctions_C_ChallengeActivate::Character' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, Challenge) == 0x000008, "Member 'OakCommonFunctions_C_ChallengeActivate::Challenge' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_ChallengeActivate::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000018, "Member 'OakCommonFunctions_C_ChallengeActivate::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_ChallengeActivate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'OakCommonFunctions_C_ChallengeActivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate, CallFunc_IsValid_ReturnValue1) == 0x000029, "Member 'OakCommonFunctions_C_ChallengeActivate::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.ChallengeComplete
// 0x0030 (0x0030 - 0x0000)
struct OakCommonFunctions_C_ChallengeComplete final
{
public:
	class AOakCharacter_Player*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Challenge;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengesComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_ChallengeComplete) == 0x000008, "Wrong alignment on OakCommonFunctions_C_ChallengeComplete");
static_assert(sizeof(OakCommonFunctions_C_ChallengeComplete) == 0x000030, "Wrong size on OakCommonFunctions_C_ChallengeComplete");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, Character) == 0x000000, "Member 'OakCommonFunctions_C_ChallengeComplete::Character' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, Challenge) == 0x000008, "Member 'OakCommonFunctions_C_ChallengeComplete::Challenge' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_ChallengeComplete::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000018, "Member 'OakCommonFunctions_C_ChallengeComplete::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_ChallengeComplete::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'OakCommonFunctions_C_ChallengeComplete::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete, CallFunc_IsValid_ReturnValue1) == 0x000029, "Member 'OakCommonFunctions_C_ChallengeComplete::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.ChallengeActivate_AllPlayers
// 0x0040 (0x0040 - 0x0000)
struct OakCommonFunctions_C_ChallengeActivate_AllPlayers final
{
public:
	class UClass*                                 Challenge;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakCharacter_Player*>           CallFunc_GetAllPlayerCharacters_Characters;        // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_ChallengeActivate_AllPlayers) == 0x000008, "Wrong alignment on OakCommonFunctions_C_ChallengeActivate_AllPlayers");
static_assert(sizeof(OakCommonFunctions_C_ChallengeActivate_AllPlayers) == 0x000040, "Wrong size on OakCommonFunctions_C_ChallengeActivate_AllPlayers");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, Challenge) == 0x000000, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::Challenge' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, __WorldContext) == 0x000008, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, CallFunc_GetAllPlayerCharacters_Characters) == 0x000010, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::CallFunc_GetAllPlayerCharacters_Characters' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, CallFunc_Array_Get_Item) == 0x000028, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeActivate_AllPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'OakCommonFunctions_C_ChallengeActivate_AllPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.ChallengeComplete_AllPlayers
// 0x0040 (0x0040 - 0x0000)
struct OakCommonFunctions_C_ChallengeComplete_AllPlayers final
{
public:
	class UClass*                                 Challenge;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOakCharacter_Player*>           CallFunc_GetAllPlayerCharacters_Characters;        // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter_Player*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_ChallengeComplete_AllPlayers) == 0x000008, "Wrong alignment on OakCommonFunctions_C_ChallengeComplete_AllPlayers");
static_assert(sizeof(OakCommonFunctions_C_ChallengeComplete_AllPlayers) == 0x000040, "Wrong size on OakCommonFunctions_C_ChallengeComplete_AllPlayers");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, Challenge) == 0x000000, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::Challenge' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, __WorldContext) == 0x000008, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, CallFunc_GetAllPlayerCharacters_Characters) == 0x000010, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::CallFunc_GetAllPlayerCharacters_Characters' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, CallFunc_Array_Get_Item) == 0x000028, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_ChallengeComplete_AllPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'OakCommonFunctions_C_ChallengeComplete_AllPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.CheckChallengeStatus
// 0x0030 (0x0030 - 0x0000)
struct OakCommonFunctions_C_CheckChallengeStatus final
{
public:
	class APlayerController*                      CharacterController;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Challenge;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Complete;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengesComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeComplete_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_CheckChallengeStatus) == 0x000008, "Wrong alignment on OakCommonFunctions_C_CheckChallengeStatus");
static_assert(sizeof(OakCommonFunctions_C_CheckChallengeStatus) == 0x000030, "Wrong size on OakCommonFunctions_C_CheckChallengeStatus");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, CharacterController) == 0x000000, "Member 'OakCommonFunctions_C_CheckChallengeStatus::CharacterController' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, Challenge) == 0x000008, "Member 'OakCommonFunctions_C_CheckChallengeStatus::Challenge' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_CheckChallengeStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, Complete) == 0x000018, "Member 'OakCommonFunctions_C_CheckChallengeStatus::Complete' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'OakCommonFunctions_C_CheckChallengeStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'OakCommonFunctions_C_CheckChallengeStatus::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, CallFunc_IsChallengeComplete_ReturnValue) == 0x000028, "Member 'OakCommonFunctions_C_CheckChallengeStatus::CallFunc_IsChallengeComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeStatus, CallFunc_IsValid_ReturnValue1) == 0x000029, "Member 'OakCommonFunctions_C_CheckChallengeStatus::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.CheckChallengeArrayStatus
// 0x0068 (0x0068 - 0x0000)
struct OakCommonFunctions_C_CheckChallengeArrayStatus final
{
public:
	TArray<class UClass*>                         Challenge_Array;                                   // 0x0000(0x0010)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class APlayerController*                      Chracter_Controller;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Completed_Challenges_Array;                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class UClass*>                         CompletedChallengeArray;                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckChallengeStatus_Complete;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_CheckChallengeArrayStatus) == 0x000008, "Wrong alignment on OakCommonFunctions_C_CheckChallengeArrayStatus");
static_assert(sizeof(OakCommonFunctions_C_CheckChallengeArrayStatus) == 0x000068, "Wrong size on OakCommonFunctions_C_CheckChallengeArrayStatus");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, Challenge_Array) == 0x000000, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::Challenge_Array' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, Chracter_Controller) == 0x000010, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::Chracter_Controller' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, __WorldContext) == 0x000018, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, Completed_Challenges_Array) == 0x000020, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::Completed_Challenges_Array' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CompletedChallengeArray) == 0x000030, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CompletedChallengeArray' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, Temp_int_Array_Index_Variable) == 0x000044, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CallFunc_Array_Get_Item) == 0x000050, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CallFunc_CheckChallengeStatus_Complete) == 0x000058, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CallFunc_CheckChallengeStatus_Complete' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_CheckChallengeArrayStatus, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'OakCommonFunctions_C_CheckChallengeArrayStatus::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Bitmask_RandomEnum
// 0x0178 (0x0178 - 0x0000)
struct OakCommonFunctions_C_Bitmask_RandomEnum final
{
public:
	int32                                         BitmaskInt;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RandomEnum;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, uint8>                            MyBitmaskLookup;                                   // 0x0018(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<int32>                                 MyBytes;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue1;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, uint8>                            K2Node_MakeVariable_MakeVariableOutput;            // 0x0088(0x0050)(ZeroConstructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue2;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue2;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue3;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue3;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue4;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Map_Find_Value;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue4;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue5;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue6;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue5;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue6;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue7;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue8;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue7;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue8;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue9;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue10;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue9;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue10;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue11;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue12;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue11;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue12;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue13;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue14;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue13;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue14;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue15;             // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0154(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue15;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OakCommonFunctions_C_Bitmask_RandomEnum) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Bitmask_RandomEnum");
static_assert(sizeof(OakCommonFunctions_C_Bitmask_RandomEnum) == 0x000178, "Wrong size on OakCommonFunctions_C_Bitmask_RandomEnum");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, BitmaskInt) == 0x000000, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::BitmaskInt' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, __WorldContext) == 0x000008, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, RandomEnum) == 0x000010, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::RandomEnum' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, MyBitmaskLookup) == 0x000018, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::MyBitmaskLookup' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, MyBytes) == 0x000068, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::MyBytes' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue) == 0x000078, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue1) == 0x00007C, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue) == 0x000080, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue1) == 0x000084, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, K2Node_MakeVariable_MakeVariableOutput) == 0x000088, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue2) == 0x0000D8, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue2) == 0x0000DC, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue3) == 0x0000E4, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_RandomInteger_ReturnValue) == 0x0000E8, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue3) == 0x0000EC, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue4) == 0x0000F4, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_Map_Find_Value) == 0x0000F8, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_Map_Find_ReturnValue) == 0x0000F9, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue4) == 0x0000FC, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue5) == 0x000100, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue6) == 0x000104, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue5) == 0x000108, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue6) == 0x00010C, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue7) == 0x000110, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue8) == 0x000114, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue7) == 0x000118, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue8) == 0x00011C, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue9) == 0x000120, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue10) == 0x000124, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue9) == 0x000128, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue10) == 0x00012C, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue11) == 0x000130, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue12) == 0x000134, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue11) == 0x000138, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue12) == 0x00013C, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue13) == 0x000140, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue14) == 0x000144, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue13) == 0x000148, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue14) == 0x00014C, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_MakeLiteralInt_ReturnValue15) == 0x000150, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_MakeLiteralInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, Temp_int_Variable) == 0x000154, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_And_IntInt_ReturnValue15) == 0x000158, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_And_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, K2Node_MakeArray_Array) == 0x000160, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_RandomEnum, CallFunc_Array_RemoveItem_ReturnValue) == 0x000170, "Member 'OakCommonFunctions_C_Bitmask_RandomEnum::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Bitmask_EnumToInt
// 0x00D8 (0x00D8 - 0x0000)
struct OakCommonFunctions_C_Bitmask_EnumToInt final
{
public:
	uint8                                         Enum;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bitmask;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MyBitmaskInt;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, uint8>                            MyBitmaskLookup;                                   // 0x0018(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<int32>                                 MyBytes;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TMap<int32, uint8>                            K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)(ZeroConstructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_Bitmask_EnumToInt) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Bitmask_EnumToInt");
static_assert(sizeof(OakCommonFunctions_C_Bitmask_EnumToInt) == 0x0000D8, "Wrong size on OakCommonFunctions_C_Bitmask_EnumToInt");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, Enum) == 0x000000, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::Enum' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, __WorldContext) == 0x000008, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, Bitmask) == 0x000010, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::Bitmask' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, MyBitmaskInt) == 0x000014, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::MyBitmaskInt' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, MyBitmaskLookup) == 0x000018, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::MyBitmaskLookup' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, MyBytes) == 0x000068, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::MyBytes' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000C8, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000CC, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumToInt, CallFunc_FTrunc_ReturnValue) == 0x0000D4, "Member 'OakCommonFunctions_C_Bitmask_EnumToInt::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function OakCommonFunctions.OakCommonFunctions_C.Bitmask_EnumArrayToInt
// 0x0128 (0x0128 - 0x0000)
struct OakCommonFunctions_C_Bitmask_EnumArrayToInt final
{
public:
	TArray<uint8>                                 Enum;                                              // 0x0000(0x0010)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bitmask;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MyBitmaskAdds;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 MyEnumUnique;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         MyBitmaskInt;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, uint8>                            MyBitmaskLookup;                                   // 0x0038(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<int32>                                 MyBytes;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, uint8>                            K2Node_MakeVariable_MakeVariableOutput;            // 0x00B0(0x0050)(ZeroConstructor)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item1;                          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Bitmask_EnumToInt_Bitmask;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OakCommonFunctions_C_Bitmask_EnumArrayToInt) == 0x000008, "Wrong alignment on OakCommonFunctions_C_Bitmask_EnumArrayToInt");
static_assert(sizeof(OakCommonFunctions_C_Bitmask_EnumArrayToInt) == 0x000128, "Wrong size on OakCommonFunctions_C_Bitmask_EnumArrayToInt");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, Enum) == 0x000000, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::Enum' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, __WorldContext) == 0x000010, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::__WorldContext' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, Bitmask) == 0x000018, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::Bitmask' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, MyBitmaskAdds) == 0x00001C, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::MyBitmaskAdds' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, MyEnumUnique) == 0x000020, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::MyEnumUnique' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, MyBitmaskInt) == 0x000030, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::MyBitmaskInt' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, MyBitmaskLookup) == 0x000038, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::MyBitmaskLookup' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, MyBytes) == 0x000088, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::MyBytes' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, Temp_int_Array_Index_Variable1) == 0x0000AC, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B0, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Array_Get_Item) == 0x000100, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, Temp_int_Loop_Counter_Variable1) == 0x000104, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Array_Get_Item1) == 0x000108, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Array_Length_ReturnValue1) == 0x00010C, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Bitmask_EnumToInt_Bitmask) == 0x000110, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Bitmask_EnumToInt_Bitmask' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Less_IntInt_ReturnValue1) == 0x000114, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Add_IntInt_ReturnValue1) == 0x000118, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Add_IntInt_ReturnValue2) == 0x00011C, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OakCommonFunctions_C_Bitmask_EnumArrayToInt, CallFunc_Array_AddUnique_ReturnValue) == 0x000120, "Member 'OakCommonFunctions_C_Bitmask_EnumArrayToInt::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

