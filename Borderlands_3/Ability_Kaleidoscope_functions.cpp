#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Kaleidoscope

#include "Basic.hpp"

#include "Ability_Kaleidoscope_classes.hpp"
#include "Ability_Kaleidoscope_parameters.hpp"


namespace SDK
{

// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.ExecuteUbergraph_Ability_Kaleidoscope
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_Kaleidoscope_C::ExecuteUbergraph_Ability_Kaleidoscope(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "ExecuteUbergraph_Ability_Kaleidoscope");

	Params::Ability_Kaleidoscope_C_ExecuteUbergraph_Ability_Kaleidoscope Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.NotifySwitchedMode_Event
// (BlueprintCallable, BlueprintEvent)

void UAbility_Kaleidoscope_C::NotifySwitchedMode_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "NotifySwitchedMode_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.NotifyZoomedOut_Event
// (BlueprintCallable, BlueprintEvent)

void UAbility_Kaleidoscope_C::NotifyZoomedOut_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "NotifyZoomedOut_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.NotifyZoomedIn_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_Kaleidoscope_C::NotifyZoomedIn_Event(uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "NotifyZoomedIn_Event");

	Params::Ability_Kaleidoscope_C_NotifyZoomedIn_Event Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.OnPaused
// (Event, Protected, BlueprintEvent)

void UAbility_Kaleidoscope_C::OnPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "OnPaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.OnUnregistered
// (Event, Protected, BlueprintEvent)

void UAbility_Kaleidoscope_C::OnUnregistered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "OnUnregistered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.OnDeactivated
// (Event, Protected, BlueprintEvent)

void UAbility_Kaleidoscope_C::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UAbility_Kaleidoscope_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ability_Kaleidoscope.Ability_Kaleidoscope_C.RefillOtherWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventorySlotData*               InventorySlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWeapon*                          EquippedWeapon                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAbility_Kaleidoscope_C::RefillOtherWeapon(class AOakCharacter* Character, class UInventorySlotData* InventorySlot, class AWeapon* EquippedWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Kaleidoscope_C", "RefillOtherWeapon");

	Params::Ability_Kaleidoscope_C_RefillOtherWeapon Parms{};

	Parms.Character = Character;
	Parms.InventorySlot = InventorySlot;
	Parms.EquippedWeapon = EquippedWeapon;

	UObject::ProcessEvent(Func, &Parms);
}

}

