#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Disruptor

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ability_Disruptor.Ability_Disruptor_C.ExecuteUbergraph_Ability_Disruptor
// 0x02E0 (0x02E0 - 0x0000)
struct Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValue_OutValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableValue_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetAbilityOwner_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent*                       K2Node_CustomEvent_Damaged;                        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    K2Node_CustomEvent_Details1;                       // 0x0030(0x0068)(ConstParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details)> K2Node_CreateDelegate_OutputDelegate1;             // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	EContainsTagComponent                         CallFunc_GetGameplayTagContainerFromActor_Branches; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayTagContainerComponent*         CallFunc_GetGameplayTagContainerFromActor_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate2;             // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0120(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0128(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0138(0x0060)(ContainsInstancedReference)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character1;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x01C0(0x0038)(NoDestructor)
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x01F8(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0210(0x0008)(NoDestructor)
	class AWeapon*                                K2Node_CustomEvent_EventWeapon;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AWeapon* EventWeapon)>   K2Node_CreateDelegate_OutputDelegate3;             // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0230(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x0240(0x0018)()
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0258(0x0028)(NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1; // 0x0280(0x0028)(NoDestructor)
	class AOakVehicle*                            CallFunc_GetVehicle_ReturnValue;                   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate2; // 0x02B8(0x0028)(NoDestructor)
};
static_assert(alignof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor) == 0x000008, "Wrong alignment on Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor");
static_assert(sizeof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor) == 0x0002E0, "Wrong size on Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, EntryPoint) == 0x000000, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetDataTableValue_OutValue) == 0x000004, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetDataTableValue_OutValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetDataTableValue_ReturnValue) == 0x000008, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetDataTableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetAbilityOwner_ReturnValue) == 0x000020, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetAbilityOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_Damaged) == 0x000028, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_Damaged' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_Details1) == 0x000030, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_Details1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_DynamicCast_AsOak_Character) == 0x0000A0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_Compare_Damage_Source_Equal) == 0x0000A9, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_Compare_Damage_Source_Not_Equal) == 0x0000AA, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetOwner_ReturnValue1) == 0x0000B0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CreateDelegate_OutputDelegate1) == 0x0000B8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetGameplayTagContainerFromActor_Branches) == 0x0000C8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetGameplayTagContainerFromActor_Branches' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetGameplayTagContainerFromActor_ReturnValue) == 0x0000D0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetGameplayTagContainerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000DC, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CreateDelegate_OutputDelegate2) == 0x0000E8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0000F8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000108, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_DamageInstigator) == 0x000110, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_Damage) == 0x000118, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_DamageType) == 0x000120, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_DamageSource) == 0x000128, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_DamagedActor) == 0x000130, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_Details) == 0x000138, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetObjectClass_ReturnValue) == 0x000198, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0001A4, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetController_ReturnValue) == 0x0001A8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_DynamicCast_AsOak_Character1) == 0x0001B0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_DynamicCast_AsOak_Character1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_DynamicCast_bSuccess1) == 0x0001B8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_MakeStruct_StatusEffectSpec) == 0x0001C0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_AddStatusEffect_ReturnValue) == 0x0001F8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000210, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CustomEvent_EventWeapon) == 0x000218, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CustomEvent_EventWeapon' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_CreateDelegate_OutputDelegate3) == 0x000220, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000230, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_PostEventAtLocation_ReturnValue) == 0x000240, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000258, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1) == 0x000280, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_GetVehicle_ReturnValue) == 0x0002A8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_GetVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate2) == 0x0002B8, "Member 'Ability_Disruptor_C_ExecuteUbergraph_Ability_Disruptor::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate2' has a wrong offset!");

// Function Ability_Disruptor.Ability_Disruptor_C.WeaponFired
// 0x0008 (0x0008 - 0x0000)
struct Ability_Disruptor_C_WeaponFired final
{
public:
	class AWeapon*                                EventWeapon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Disruptor_C_WeaponFired) == 0x000008, "Wrong alignment on Ability_Disruptor_C_WeaponFired");
static_assert(sizeof(Ability_Disruptor_C_WeaponFired) == 0x000008, "Wrong size on Ability_Disruptor_C_WeaponFired");
static_assert(offsetof(Ability_Disruptor_C_WeaponFired, EventWeapon) == 0x000000, "Member 'Ability_Disruptor_C_WeaponFired::EventWeapon' has a wrong offset!");

// Function Ability_Disruptor.Ability_Disruptor_C.OnCausedDamage
// 0x0088 (0x0088 - 0x0000)
struct Ability_Disruptor_C_OnCausedDamage final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Ability_Disruptor_C_OnCausedDamage) == 0x000008, "Wrong alignment on Ability_Disruptor_C_OnCausedDamage");
static_assert(sizeof(Ability_Disruptor_C_OnCausedDamage) == 0x000088, "Wrong size on Ability_Disruptor_C_OnCausedDamage");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDamage, DamageInstigator) == 0x000000, "Member 'Ability_Disruptor_C_OnCausedDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDamage, Damage) == 0x000008, "Member 'Ability_Disruptor_C_OnCausedDamage::Damage' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDamage, DamageType) == 0x000010, "Member 'Ability_Disruptor_C_OnCausedDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDamage, DamageSource) == 0x000018, "Member 'Ability_Disruptor_C_OnCausedDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDamage, DamagedActor) == 0x000020, "Member 'Ability_Disruptor_C_OnCausedDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDamage, Details) == 0x000028, "Member 'Ability_Disruptor_C_OnCausedDamage::Details' has a wrong offset!");

// Function Ability_Disruptor.Ability_Disruptor_C.OnCausedDeath_Event
// 0x0070 (0x0070 - 0x0000)
struct Ability_Disruptor_C_OnCausedDeath_Event final
{
public:
	class UDamageComponent*                       Damaged;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    Details;                                           // 0x0008(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Disruptor_C_OnCausedDeath_Event) == 0x000008, "Wrong alignment on Ability_Disruptor_C_OnCausedDeath_Event");
static_assert(sizeof(Ability_Disruptor_C_OnCausedDeath_Event) == 0x000070, "Wrong size on Ability_Disruptor_C_OnCausedDeath_Event");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDeath_Event, Damaged) == 0x000000, "Member 'Ability_Disruptor_C_OnCausedDeath_Event::Damaged' has a wrong offset!");
static_assert(offsetof(Ability_Disruptor_C_OnCausedDeath_Event, Details) == 0x000008, "Member 'Ability_Disruptor_C_OnCausedDeath_Event::Details' has a wrong offset!");

}

