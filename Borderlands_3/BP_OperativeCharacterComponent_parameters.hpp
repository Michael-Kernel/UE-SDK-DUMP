#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OperativeCharacterComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_OperativeCharacterComponent.BP_OperativeCharacterComponent_C.ExecuteUbergraph_BP_OperativeCharacterComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInterface_Operative_Character_C> K2Node_DynamicCast_AsInterface_Operative_Character; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bVisible;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent) == 0x000008, "Wrong alignment on BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent");
static_assert(sizeof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent) == 0x000028, "Wrong size on BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent");
static_assert(offsetof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent, EntryPoint) == 0x000000, "Member 'BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent, K2Node_DynamicCast_AsInterface_Operative_Character) == 0x000010, "Member 'BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent::K2Node_DynamicCast_AsInterface_Operative_Character' has a wrong offset!");
static_assert(offsetof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent, K2Node_Event_bVisible) == 0x000021, "Member 'BP_OperativeCharacterComponent_C_ExecuteUbergraph_BP_OperativeCharacterComponent::K2Node_Event_bVisible' has a wrong offset!");

// Function BP_OperativeCharacterComponent.BP_OperativeCharacterComponent_C.SetOperativeDeviceVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible) == 0x000001, "Wrong alignment on BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible");
static_assert(sizeof(BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible) == 0x000001, "Wrong size on BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible");
static_assert(offsetof(BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible, bVisible) == 0x000000, "Member 'BP_OperativeCharacterComponent_C_SetOperativeDeviceVisible::bVisible' has a wrong offset!");

}

