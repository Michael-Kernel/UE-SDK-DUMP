#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Mission_Side_DLC2_WhereIBelong_LakeMail

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Challenge_Mission_Side_DLC2_WhereIBelong_LakeMail.Challenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C
// 0x0090 (0x02F0 - 0x0260)
class UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C final : public UOakChallenge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	struct FDataTableRowHandle                    MailTable;                                         // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TSoftObjectPtr<class UInventoryPartData>      OutrunnerPart;                                     // 0x0278(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UInventoryPartData>      RevolverPart;                                      // 0x02A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UInventoryPartData>      TechnicalPart;                                     // 0x02C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Challenge_Mission_Side_DLC2_WhereIBelong_LakeMail(int32 EntryPoint);
	void CompletedChallenge(const class AGbxPlayerController* CompletedPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Challenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C">();
	}
	static class UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C>();
	}
};
static_assert(alignof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C) == 0x000008, "Wrong alignment on UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C");
static_assert(sizeof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C) == 0x0002F0, "Wrong size on UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C");
static_assert(offsetof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C, UberGraphFrame) == 0x000260, "Member 'UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C, MailTable) == 0x000268, "Member 'UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C::MailTable' has a wrong offset!");
static_assert(offsetof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C, OutrunnerPart) == 0x000278, "Member 'UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C::OutrunnerPart' has a wrong offset!");
static_assert(offsetof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C, RevolverPart) == 0x0002A0, "Member 'UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C::RevolverPart' has a wrong offset!");
static_assert(offsetof(UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C, TechnicalPart) == 0x0002C8, "Member 'UChallenge_Mission_Side_DLC2_WhereIBelong_LakeMail_C::TechnicalPart' has a wrong offset!");

}

