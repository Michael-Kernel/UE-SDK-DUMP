#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDialog

#include "Basic.hpp"

#include "GbxDialog_classes.hpp"
#include "GbxDialog_parameters.hpp"


namespace SDK
{

// Function GbxDialog.DialogActionBlueprintImplementation.Execute
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDialogContext                   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDialogActionBlueprintImplementation::Execute(const struct FDialogContext& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogActionBlueprintImplementation", "Execute");

	Params::DialogActionBlueprintImplementation_Execute Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GbxDialog.DialogEnumValueInterface.GetEnumValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UDialogEnumType*                  EnumType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogEnumValue*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogEnumValue* IDialogEnumValueInterface::GetEnumValue(const class UDialogEnumType* EnumType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogEnumValueInterface", "GetEnumValue");

	Params::DialogEnumValueInterface_GetEnumValue Parms{};

	Parms.EnumType = EnumType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.DialogPerformanceData.PlayWwiseEventPreview
// (Final, Native, Public)

void UDialogPerformanceData::PlayWwiseEventPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogPerformanceData", "PlayWwiseEventPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.DialogSelectorImplementation.PerformTest
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDialogContext                   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EDialogDecisionTestResult               Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogSelectorImplementation::PerformTest(const struct FDialogContext& Context, EDialogDecisionTestResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSelectorImplementation", "PerformTest");

	Params::DialogSelectorImplementation_PerformTest Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GbxDialog.DialogSpeakerInterface.CanPerformThisDialog
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UDialogPerformanceData*           Performance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IDialogSpeakerInterface::CanPerformThisDialog(class UDialogPerformanceData* Performance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeakerInterface", "CanPerformThisDialog");

	Params::DialogSpeakerInterface_CanPerformThisDialog Parms{};

	Parms.Performance = Performance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.DialogTimeSlotData.PreviewAudio
// (Final, Native, Public)

void UDialogTimeSlotData::PreviewAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTimeSlotData", "PreviewAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.ActivateDialogScript
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UDialogScriptData> SoftScript                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogScriptData*                Script                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::ActivateDialogScript(class UObject* WorldContextObject, TSoftObjectPtr<class UDialogScriptData> SoftScript, class UDialogScriptData* Script)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "ActivateDialogScript");

	Params::GbxDialogBlueprintLibrary_ActivateDialogScript Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoftScript = SoftScript;
	Parms.Script = Script;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.BindToDialogNotify
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayingSequenceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::BindToDialogNotify(class UObject* WorldContextObject, int32 PlayingSequenceID, class FName NotifyName, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "BindToDialogNotify");

	Params::GbxDialogBlueprintLibrary_BindToDialogNotify Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayingSequenceID = PlayingSequenceID;
	Parms.NotifyName = NotifyName;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.BindToDialogSequenceFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayingSequenceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::BindToDialogSequenceFinished(class UObject* WorldContextObject, int32 PlayingSequenceID, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "BindToDialogSequenceFinished");

	Params::GbxDialogBlueprintLibrary_BindToDialogSequenceFinished Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayingSequenceID = PlayingSequenceID;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.CancelDialogBlockingHold
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             HoldName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::CancelDialogBlockingHold(class UObject* WorldContextObject, class FName HoldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "CancelDialogBlockingHold");

	Params::GbxDialogBlueprintLibrary_CancelDialogBlockingHold Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.HoldName = HoldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.ConvertBoolToDialogTestResult
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDialogDecisionTestResult               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDialogDecisionTestResult UGbxDialogBlueprintLibrary::ConvertBoolToDialogTestResult(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "ConvertBoolToDialogTestResult");

	Params::GbxDialogBlueprintLibrary_ConvertBoolToDialogTestResult Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.DeactivateDialogScript
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UDialogScriptData> SoftScript                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogScriptData*                Script                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::DeactivateDialogScript(class UObject* WorldContextObject, TSoftObjectPtr<class UDialogScriptData> SoftScript, class UDialogScriptData* Script)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "DeactivateDialogScript");

	Params::GbxDialogBlueprintLibrary_DeactivateDialogScript Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoftScript = SoftScript;
	Parms.Script = Script;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.EnqueueDialogPerformance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxDialogComponent*              Speaker                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogPerformanceData*           Performance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDelay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogConversation              ContinueConversation                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogConversation              Conversation                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DialogPlaybackSequence                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogBlueprintLibrary::EnqueueDialogPerformance(class UObject* WorldContextObject, class UGbxDialogComponent* Speaker, class UDialogPerformanceData* Performance, float StartDelay, const struct FDialogConversation& ContinueConversation, struct FDialogConversation* Conversation, int32* DialogPlaybackSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "EnqueueDialogPerformance");

	Params::GbxDialogBlueprintLibrary_EnqueueDialogPerformance Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.Performance = Performance;
	Parms.StartDelay = StartDelay;
	Parms.ContinueConversation = std::move(ContinueConversation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Conversation != nullptr)
		*Conversation = std::move(Parms.Conversation);

	if (DialogPlaybackSequence != nullptr)
		*DialogPlaybackSequence = Parms.DialogPlaybackSequence;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.FindOrCreateNamedSpeaker
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogNameTag*                   NameTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludePureEchoSpeakers                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCreateIfNotFound                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxDialogComponent*              Speaker                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogBlueprintLibrary::FindOrCreateNamedSpeaker(class UDialogNameTag* NameTag, bool bIncludePureEchoSpeakers, bool bCreateIfNotFound, class UGbxDialogComponent** Speaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "FindOrCreateNamedSpeaker");

	Params::GbxDialogBlueprintLibrary_FindOrCreateNamedSpeaker Parms{};

	Parms.NameTag = NameTag;
	Parms.bIncludePureEchoSpeakers = bIncludePureEchoSpeakers;
	Parms.bCreateIfNotFound = bCreateIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Speaker != nullptr)
		*Speaker = Parms.Speaker;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.FinishSpeak
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogTimeSlotReference         TimeSlotRef                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// class UGbxDialogComponent*              OptionalSpeaker                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogContext                   Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDialogConversation              ContinueConversation                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogConversation              Conversation                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDelay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceID                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideMaxWait                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogBlueprintLibrary::FinishSpeak(class UObject* WorldContextObject, const struct FDialogTimeSlotReference& TimeSlotRef, class UGbxDialogComponent* OptionalSpeaker, struct FDialogContext& Context, const struct FDialogConversation& ContinueConversation, struct FDialogConversation* Conversation, float StartDelay, int32* SequenceID, float OverrideMaxWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "FinishSpeak");

	Params::GbxDialogBlueprintLibrary_FinishSpeak Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TimeSlotRef = std::move(TimeSlotRef);
	Parms.OptionalSpeaker = OptionalSpeaker;
	Parms.Context = std::move(Context);
	Parms.ContinueConversation = std::move(ContinueConversation);
	Parms.StartDelay = StartDelay;
	Parms.OverrideMaxWait = OverrideMaxWait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);

	if (Conversation != nullptr)
		*Conversation = std::move(Parms.Conversation);

	if (SequenceID != nullptr)
		*SequenceID = Parms.SequenceID;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.FinishTriggerDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogEvent*                     Event                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogContext                   Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDialogConversation              ContinueConversation                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogConversation              Conversation                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDelay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceID                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogBlueprintLibrary::FinishTriggerDialog(class UObject* WorldContextObject, class UDialogEvent* Event, struct FDialogContext& Context, const struct FDialogConversation& ContinueConversation, struct FDialogConversation* Conversation, float StartDelay, int32* SequenceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "FinishTriggerDialog");

	Params::GbxDialogBlueprintLibrary_FinishTriggerDialog Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Event = Event;
	Parms.Context = std::move(Context);
	Parms.ContinueConversation = std::move(ContinueConversation);
	Parms.StartDelay = StartDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);

	if (Conversation != nullptr)
		*Conversation = std::move(Parms.Conversation);

	if (SequenceID != nullptr)
		*SequenceID = Parms.SequenceID;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.GetConversationStatus
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FDialogConversation              Conversation                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGbxDialogConversationStatus            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGbxDialogConversationStatus UGbxDialogBlueprintLibrary::GetConversationStatus(const struct FDialogConversation& Conversation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "GetConversationStatus");

	Params::GbxDialogBlueprintLibrary_GetConversationStatus Parms{};

	Parms.Conversation = std::move(Conversation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.GetDialogContextParameter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogContext                   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UDialogParameter*                 Parameter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FloatValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBoolValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::GetDialogContextParameter(const struct FDialogContext& Context, class UDialogParameter* Parameter, class UObject** ObjectValue, float* FloatValue, bool* bBoolValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "GetDialogContextParameter");

	Params::GbxDialogBlueprintLibrary_GetDialogContextParameter Parms{};

	Parms.Context = std::move(Context);
	Parms.Parameter = Parameter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ObjectValue != nullptr)
		*ObjectValue = Parms.ObjectValue;

	if (FloatValue != nullptr)
		*FloatValue = Parms.FloatValue;

	if (bBoolValue != nullptr)
		*bBoolValue = Parms.bBoolValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.GetDialogContextParameterSummary
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogContext                   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UGbxDialogBlueprintLibrary::GetDialogContextParameterSummary(const struct FDialogContext& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "GetDialogContextParameterSummary");

	Params::GbxDialogBlueprintLibrary_GetDialogContextParameterSummary Parms{};

	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.GetDialogFlag
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogEnumValue*                 DialogEnumValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogBlueprintLibrary::GetDialogFlag(class UObject* WorldContextObject, class UDialogEnumValue* DialogEnumValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "GetDialogFlag");

	Params::GbxDialogBlueprintLibrary_GetDialogFlag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DialogEnumValue = DialogEnumValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.InterruptConversation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FDialogConversation              Conversation                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::InterruptConversation(const struct FDialogConversation& Conversation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "InterruptConversation");

	Params::GbxDialogBlueprintLibrary_InterruptConversation Parms{};

	Parms.Conversation = std::move(Conversation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.InterruptDialogInRadius
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Origin                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::InterruptDialogInRadius(class UObject* WorldContextObject, const struct FVector& Origin, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "InterruptDialogInRadius");

	Params::GbxDialogBlueprintLibrary_InterruptDialogInRadius Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = std::move(Origin);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.NewDialogContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FDialogContext                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDialogContext UGbxDialogBlueprintLibrary::NewDialogContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "NewDialogContext");

	Params::GbxDialogBlueprintLibrary_NewDialogContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.NewDialogConversation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           KeyActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogNameTag*                   KeySpeakerName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          KeyLocation                                            (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogConversation              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogConversation UGbxDialogBlueprintLibrary::NewDialogConversation(class UObject* WorldContextObject, class AActor* KeyActor, class UDialogNameTag* KeySpeakerName, const struct FVector& KeyLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "NewDialogConversation");

	Params::GbxDialogBlueprintLibrary_NewDialogConversation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.KeyActor = KeyActor;
	Parms.KeySpeakerName = KeySpeakerName;
	Parms.KeyLocation = std::move(KeyLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.PlaceGlobalDialogHold
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             HoldName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuietTimePredicate*              Rules                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::PlaceGlobalDialogHold(class UObject* WorldContextObject, class FName HoldName, class UQuietTimePredicate* Rules, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "PlaceGlobalDialogHold");

	Params::GbxDialogBlueprintLibrary_PlaceGlobalDialogHold Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.HoldName = HoldName;
	Parms.Rules = Rules;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.PlaceRegionalDialogHold
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             HoldName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuietTimePredicate*              Rules                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::PlaceRegionalDialogHold(class UObject* WorldContextObject, class FName HoldName, const struct FVector& Location, float Radius, class UQuietTimePredicate* Rules, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "PlaceRegionalDialogHold");

	Params::GbxDialogBlueprintLibrary_PlaceRegionalDialogHold Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.HoldName = HoldName;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;
	Parms.Rules = Rules;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.ResolveDialogTimeSlotReference
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogTimeSlotReference         Reference                                              (Parm, NativeAccessSpecifierPublic)
// class UDialogTimeSlotData*              TimeSlot                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogScriptData*                Script                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::ResolveDialogTimeSlotReference(const struct FDialogTimeSlotReference& Reference, class UDialogTimeSlotData** TimeSlot, class UDialogScriptData** Script)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "ResolveDialogTimeSlotReference");

	Params::GbxDialogBlueprintLibrary_ResolveDialogTimeSlotReference Parms{};

	Parms.Reference = std::move(Reference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TimeSlot != nullptr)
		*TimeSlot = Parms.TimeSlot;

	if (Script != nullptr)
		*Script = Parms.Script;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.SetConversationPlayerHints
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDialogConversation              Conversation                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogNameTag*                   NameTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::SetConversationPlayerHints(const struct FDialogConversation& Conversation, class AActor* Actor, class UDialogNameTag* NameTag, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "SetConversationPlayerHints");

	Params::GbxDialogBlueprintLibrary_SetConversationPlayerHints Parms{};

	Parms.Conversation = std::move(Conversation);
	Parms.Actor = Actor;
	Parms.NameTag = NameTag;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.SetDialogContextParameter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogContext                   Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UDialogParameter*                 Parameter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FloatValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBoolValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::SetDialogContextParameter(struct FDialogContext& Context, class UDialogParameter* Parameter, class UObject* ObjectValue, float FloatValue, bool bBoolValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "SetDialogContextParameter");

	Params::GbxDialogBlueprintLibrary_SetDialogContextParameter Parms{};

	Parms.Context = std::move(Context);
	Parms.Parameter = Parameter;
	Parms.ObjectValue = ObjectValue;
	Parms.FloatValue = FloatValue;
	Parms.bBoolValue = bBoolValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);
}


// Function GbxDialog.GbxDialogBlueprintLibrary.SetDialogFlag
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogEnumValue*                 DialogEnumValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::SetDialogFlag(class UObject* WorldContextObject, class UDialogEnumValue* DialogEnumValue, bool Value, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "SetDialogFlag");

	Params::GbxDialogBlueprintLibrary_SetDialogFlag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DialogEnumValue = DialogEnumValue;
	Parms.Value = Value;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.SetDialogGameCustomizationMetadata
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Cookie                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::SetDialogGameCustomizationMetadata(class UObject* WorldContextObject, int32 SequenceID, class UObject* Object, int32 Cookie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "SetDialogGameCustomizationMetadata");

	Params::GbxDialogBlueprintLibrary_SetDialogGameCustomizationMetadata Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SequenceID = SequenceID;
	Parms.Object = Object;
	Parms.Cookie = Cookie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.SetNextDialogPlayerHints
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogNameTag*                   NameTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::SetNextDialogPlayerHints(class UObject* WorldContextObject, class AActor* Actor, class UDialogNameTag* NameTag, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "SetNextDialogPlayerHints");

	Params::GbxDialogBlueprintLibrary_SetNextDialogPlayerHints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Actor = Actor;
	Parms.NameTag = NameTag;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.StopActiveDialog
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeDeathDialog                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::StopActiveDialog(class UObject* Target, bool bIncludeDeathDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "StopActiveDialog");

	Params::GbxDialogBlueprintLibrary_StopActiveDialog Parms{};

	Parms.Target = Target;
	Parms.bIncludeDeathDialog = bIncludeDeathDialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.TestDialogSelector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogSelectorFunction*          Selector                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogContext                   InputParameters                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogBlueprintLibrary::TestDialogSelector(class UObject* WorldContextObject, class UDialogSelectorFunction* Selector, const struct FDialogContext& InputParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "TestDialogSelector");

	Params::GbxDialogBlueprintLibrary_TestDialogSelector Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Selector = Selector;
	Parms.InputParameters = std::move(InputParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogBlueprintLibrary.WaitForDialog
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FDialogConversation              Conversation                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxDialogBlueprintLibrary::WaitForDialog(const struct FDialogConversation& Conversation, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDialogBlueprintLibrary", "WaitForDialog");

	Params::GbxDialogBlueprintLibrary_WaitForDialog Parms{};

	Parms.Conversation = std::move(Conversation);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogComponent.OnRep_InitialDialogInProgress
// (Final, Native, Private)

void UGbxDialogComponent::OnRep_InitialDialogInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDialogComponent", "OnRep_InitialDialogInProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogComponent.StartPerformance
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   DialogThreadID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DialogSequenceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogPerformanceData*           Performance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogComponent::StartPerformance(int32 DialogThreadID, int32 DialogSequenceID, class UDialogPerformanceData* Performance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDialogComponent", "StartPerformance");

	Params::GbxDialogComponent_StartPerformance Parms{};

	Parms.DialogThreadID = DialogThreadID;
	Parms.DialogSequenceID = DialogSequenceID;
	Parms.Performance = Performance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogComponent.StopPerformance
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   DialogThreadID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeDeathDialog                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDialogComponent::StopPerformance(int32 DialogThreadID, bool bIncludeDeathDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDialogComponent", "StopPerformance");

	Params::GbxDialogComponent_StopPerformance Parms{};

	Parms.DialogThreadID = DialogThreadID;
	Parms.bIncludeDeathDialog = bIncludeDeathDialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDialog.GbxDialogComponent.IsSpeakerActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludePendingVO                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogComponent::IsSpeakerActive(bool bIncludePendingVO) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDialogComponent", "IsSpeakerActive");

	Params::GbxDialogComponent_IsSpeakerActive Parms{};

	Parms.bIncludePendingVO = bIncludePendingVO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GbxDialogComponent.IsSpeakerClearToPlayDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogStyle*                     ProposedStyle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bProposingEcho                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogConversation              ProposedConversation                                   (Parm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxDialogComponent::IsSpeakerClearToPlayDialog(class UDialogStyle* ProposedStyle, bool bProposingEcho, const struct FDialogConversation& ProposedConversation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDialogComponent", "IsSpeakerClearToPlayDialog");

	Params::GbxDialogComponent_IsSpeakerClearToPlayDialog Parms{};

	Parms.ProposedStyle = ProposedStyle;
	Parms.bProposingEcho = bProposingEcho;
	Parms.ProposedConversation = std::move(ProposedConversation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxDialog.GlobalDialogParametersProviderInterface.InitDialogContext
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FDialogContext                   Parameters                                             (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IGlobalDialogParametersProviderInterface::InitDialogContext(struct FDialogContext& Parameters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalDialogParametersProviderInterface", "InitDialogContext");

	Params::GlobalDialogParametersProviderInterface_InitDialogContext Parms{};

	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Parameters = std::move(Parms.Parameters);
}

}

