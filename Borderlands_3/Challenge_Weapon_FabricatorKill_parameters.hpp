#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Weapon_FabricatorKill

#include "Basic.hpp"

#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Challenge_Weapon_FabricatorKill.Challenge_Weapon_FabricatorKill_C.ExecuteUbergraph_Challenge_Weapon_FabricatorKill
// 0x0030 (0x0030 - 0x0000)
struct Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UChallengesComponent*                   K2Node_Event_OwningChallenges;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          K2Node_Event_AssociatedCharacter;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageCauserComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill) == 0x000008, "Wrong alignment on Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill");
static_assert(sizeof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill) == 0x000030, "Wrong size on Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill, EntryPoint) == 0x000000, "Member 'Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill::EntryPoint' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill, K2Node_Event_OwningChallenges) == 0x000018, "Member 'Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill::K2Node_Event_OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill, K2Node_Event_AssociatedCharacter) == 0x000020, "Member 'Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill::K2Node_Event_AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'Challenge_Weapon_FabricatorKill_C_ExecuteUbergraph_Challenge_Weapon_FabricatorKill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function Challenge_Weapon_FabricatorKill.Challenge_Weapon_FabricatorKill_C.OnInitChallengeInstance
// 0x0010 (0x0010 - 0x0000)
struct Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance final
{
public:
	class UChallengesComponent*                   OwningChallenges;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGbxCharacter*                          AssociatedCharacter;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance) == 0x000008, "Wrong alignment on Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance");
static_assert(sizeof(Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance) == 0x000010, "Wrong size on Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance, OwningChallenges) == 0x000000, "Member 'Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance::OwningChallenges' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance, AssociatedCharacter) == 0x000008, "Member 'Challenge_Weapon_FabricatorKill_C_OnInitChallengeInstance::AssociatedCharacter' has a wrong offset!");

// Function Challenge_Weapon_FabricatorKill.Challenge_Weapon_FabricatorKill_C.CheckKillCondition
// 0x0080 (0x0080 - 0x0000)
struct Challenge_Weapon_FabricatorKill_C_CheckKillCondition final
{
public:
	const class UDamageComponent*                 Damaged;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDeathDetails                    Details;                                           // 0x0008(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Challenge_Weapon_FabricatorKill_C_CheckKillCondition) == 0x000008, "Wrong alignment on Challenge_Weapon_FabricatorKill_C_CheckKillCondition");
static_assert(sizeof(Challenge_Weapon_FabricatorKill_C_CheckKillCondition) == 0x000080, "Wrong size on Challenge_Weapon_FabricatorKill_C_CheckKillCondition");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_CheckKillCondition, Damaged) == 0x000000, "Member 'Challenge_Weapon_FabricatorKill_C_CheckKillCondition::Damaged' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_CheckKillCondition, Details) == 0x000008, "Member 'Challenge_Weapon_FabricatorKill_C_CheckKillCondition::Details' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_CheckKillCondition, CallFunc_GetObjectClass_ReturnValue) == 0x000070, "Member 'Challenge_Weapon_FabricatorKill_C_CheckKillCondition::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_Weapon_FabricatorKill_C_CheckKillCondition, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000078, "Member 'Challenge_Weapon_FabricatorKill_C_CheckKillCondition::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

}

