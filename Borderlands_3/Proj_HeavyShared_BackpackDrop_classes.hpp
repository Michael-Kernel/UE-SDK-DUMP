#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_HeavyShared_BackpackDrop

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_HeavyShared_BackpackDrop.Proj_HeavyShared_BackpackDrop_C
// 0x02E0 (0x09C0 - 0x06E0)
class AProj_HeavyShared_BackpackDrop_C final : public AOakAIBalancedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_Backpack;                                       // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URigidBodyComponent*                    RigidBody_Backpack;                                // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CapsulePlayerSlide;                                // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGameplayTasksComponent*                GameplayTasks;                                     // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTargetableComponent*                   Targetable;                                        // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakDamageComponent*                    OakDamage;                                         // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             ElementalMode;                                     // 0x0728(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EOakElementalType, class UStaticMesh*>   ElementToStaticMeshMap;                            // 0x0730(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackpackSpawnFXMap;                       // 0x0780(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackpackAttachedFXMap;                    // 0x07D0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UClass*>        ElementToBackpackDamageMap;                        // 0x0820(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class USplatData*>    ElementToBackpackSplatMap;                         // 0x0870(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UParticleSystem*> ElementToBackpackCriticalFXMap;                    // 0x08C0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class AActor*                                 HeavyKiller;                                       // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToBackpackSpawnFXMapAudio;                  // 0x0918(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EOakElementalType, class UWwiseEvent*>   ElementToBackpackCriticalFXMapAudio;               // 0x0968(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         CriticalToExplodeTime;                             // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToCritical;                                    // 0x09BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Proj_HeavyShared_BackpackDrop(int32 EntryPoint);
	void SpawnTransitionFX();
	void DamageEventBackpackCritical(const struct FDamageReactionEventSummary& Damage);
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature_Proj_HeavyShared_BackpackDrop(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnExplode();
	void BndEvt__OakDamage_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_IO_HeavyShared_Backpack(class AActor* DamageReceiver, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void GbxAsyncRequest_Spawned_13B6F83B4514DA370122EFBE2315310C(class AActor* Actor, int32 InstanceIndex);
	void GbxAsyncRequest_Failed_13B6F83B4514DA370122EFBE2315310C(class AActor* Actor, int32 InstanceIndex);
	void UserConstructionScript();
	void ApplyElementalMode();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_HeavyShared_BackpackDrop_C">();
	}
	static class AProj_HeavyShared_BackpackDrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_HeavyShared_BackpackDrop_C>();
	}
};
static_assert(alignof(AProj_HeavyShared_BackpackDrop_C) == 0x000008, "Wrong alignment on AProj_HeavyShared_BackpackDrop_C");
static_assert(sizeof(AProj_HeavyShared_BackpackDrop_C) == 0x0009C0, "Wrong size on AProj_HeavyShared_BackpackDrop_C");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_HeavyShared_BackpackDrop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, PS_Backpack) == 0x0006E8, "Member 'AProj_HeavyShared_BackpackDrop_C::PS_Backpack' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, GbxProjectileMovement) == 0x0006F0, "Member 'AProj_HeavyShared_BackpackDrop_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, RigidBody_Backpack) == 0x0006F8, "Member 'AProj_HeavyShared_BackpackDrop_C::RigidBody_Backpack' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, WwiseAudio) == 0x000700, "Member 'AProj_HeavyShared_BackpackDrop_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, CapsulePlayerSlide) == 0x000708, "Member 'AProj_HeavyShared_BackpackDrop_C::CapsulePlayerSlide' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, GameplayTasks) == 0x000710, "Member 'AProj_HeavyShared_BackpackDrop_C::GameplayTasks' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, Targetable) == 0x000718, "Member 'AProj_HeavyShared_BackpackDrop_C::Targetable' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, OakDamage) == 0x000720, "Member 'AProj_HeavyShared_BackpackDrop_C::OakDamage' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementalMode) == 0x000728, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementalMode' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToStaticMeshMap) == 0x000730, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToStaticMeshMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackSpawnFXMap) == 0x000780, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackSpawnFXMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackAttachedFXMap) == 0x0007D0, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackAttachedFXMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackDamageMap) == 0x000820, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackDamageMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackSplatMap) == 0x000870, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackSplatMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackCriticalFXMap) == 0x0008C0, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackCriticalFXMap' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, HeavyKiller) == 0x000910, "Member 'AProj_HeavyShared_BackpackDrop_C::HeavyKiller' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackSpawnFXMapAudio) == 0x000918, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackSpawnFXMapAudio' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, ElementToBackpackCriticalFXMapAudio) == 0x000968, "Member 'AProj_HeavyShared_BackpackDrop_C::ElementToBackpackCriticalFXMapAudio' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, CriticalToExplodeTime) == 0x0009B8, "Member 'AProj_HeavyShared_BackpackDrop_C::CriticalToExplodeTime' has a wrong offset!");
static_assert(offsetof(AProj_HeavyShared_BackpackDrop_C, TimeToCritical) == 0x0009BC, "Member 'AProj_HeavyShared_BackpackDrop_C::TimeToCritical' has a wrong offset!");

}

