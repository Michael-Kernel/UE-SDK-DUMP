#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_FastHands

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_FastHands.Ability_Artifact_FastHands_C.ExecuteUbergraph_Ability_Artifact_FastHands
// 0x0118 (0x0118 - 0x0000)
struct Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0028(0x0028)(NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0060(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0078(0x0060)(ContainsInstancedReference)
	bool                                          CallFunc_Compare_Damage_Source_Equal;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Equal1;             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal1;         // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Equal2;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_Damage_Source_Not_Equal2;         // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Player_C*                       K2Node_DynamicCast_AsBPChar_Player;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AOakCharacter_Player*>           CallFunc_GetAllPlayerCharacters_Characters;        // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter_Player*                   CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands) == 0x000008, "Wrong alignment on Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands");
static_assert(sizeof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands) == 0x000118, "Wrong size on Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, EntryPoint) == 0x000000, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000028, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CustomEvent_DamageInstigator) == 0x000050, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CustomEvent_Damage) == 0x000058, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CustomEvent_DamageType) == 0x000060, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CustomEvent_DamageSource) == 0x000068, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CustomEvent_DamagedActor) == 0x000070, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_CustomEvent_Details) == 0x000078, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Compare_Damage_Source_Equal) == 0x0000D8, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Compare_Damage_Source_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Compare_Damage_Source_Not_Equal) == 0x0000D9, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Compare_Damage_Source_Not_Equal' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Compare_Damage_Source_Equal1) == 0x0000DA, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Compare_Damage_Source_Equal1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Compare_Damage_Source_Not_Equal1) == 0x0000DB, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Compare_Damage_Source_Not_Equal1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Compare_Damage_Source_Equal2) == 0x0000DC, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Compare_Damage_Source_Equal2' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Compare_Damage_Source_Not_Equal2) == 0x0000DD, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Compare_Damage_Source_Not_Equal2' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_DynamicCast_AsBPChar_Player) == 0x0000E0, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_DynamicCast_AsBPChar_Player' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_BooleanOR_ReturnValue) == 0x0000E9, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_BooleanOR_ReturnValue1) == 0x0000EA, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_GetAllPlayerCharacters_Characters) == 0x0000F0, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_GetAllPlayerCharacters_Characters' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Array_Get_Item) == 0x000108, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'Ability_Artifact_FastHands_C_ExecuteUbergraph_Ability_Artifact_FastHands::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ability_Artifact_FastHands.Ability_Artifact_FastHands_C.OnHitEnemy_FastHands
// 0x0088 (0x0088 - 0x0000)
struct Ability_Artifact_FastHands_C_OnHitEnemy_FastHands final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands) == 0x000008, "Wrong alignment on Ability_Artifact_FastHands_C_OnHitEnemy_FastHands");
static_assert(sizeof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands) == 0x000088, "Wrong size on Ability_Artifact_FastHands_C_OnHitEnemy_FastHands");
static_assert(offsetof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands, DamageInstigator) == 0x000000, "Member 'Ability_Artifact_FastHands_C_OnHitEnemy_FastHands::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands, Damage) == 0x000008, "Member 'Ability_Artifact_FastHands_C_OnHitEnemy_FastHands::Damage' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands, DamageType) == 0x000010, "Member 'Ability_Artifact_FastHands_C_OnHitEnemy_FastHands::DamageType' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands, DamageSource) == 0x000018, "Member 'Ability_Artifact_FastHands_C_OnHitEnemy_FastHands::DamageSource' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands, DamagedActor) == 0x000020, "Member 'Ability_Artifact_FastHands_C_OnHitEnemy_FastHands::DamagedActor' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_OnHitEnemy_FastHands, Details) == 0x000028, "Member 'Ability_Artifact_FastHands_C_OnHitEnemy_FastHands::Details' has a wrong offset!");

// Function Ability_Artifact_FastHands.Ability_Artifact_FastHands_C.Ammo Return
// 0x0020 (0x0020 - 0x0000)
struct Ability_Artifact_FastHands_C_Ammo_Return final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Artifact_FastHands_C_Ammo_Return) == 0x000008, "Wrong alignment on Ability_Artifact_FastHands_C_Ammo_Return");
static_assert(sizeof(Ability_Artifact_FastHands_C_Ammo_Return) == 0x000020, "Wrong size on Ability_Artifact_FastHands_C_Ammo_Return");
static_assert(offsetof(Ability_Artifact_FastHands_C_Ammo_Return, Character) == 0x000000, "Member 'Ability_Artifact_FastHands_C_Ammo_Return::Character' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_Ammo_Return, CallFunc_GetWeapon_ReturnValue) == 0x000008, "Member 'Ability_Artifact_FastHands_C_Ammo_Return::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_Ammo_Return, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000010, "Member 'Ability_Artifact_FastHands_C_Ammo_Return::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_Ammo_Return, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Ability_Artifact_FastHands_C_Ammo_Return::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_Ammo_Return, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'Ability_Artifact_FastHands_C_Ammo_Return::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_FastHands_C_Ammo_Return, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'Ability_Artifact_FastHands_C_Ammo_Return::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

