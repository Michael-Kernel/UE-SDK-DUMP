#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_VendingMachineRepair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "GbxDialog_structs.hpp"
#include "BP_OakMission_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_VendingMachineRepair.Mission_VendingMachineRepair_C
// 0x00B8 (0x05C8 - 0x0510)
class UMission_VendingMachineRepair_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_VendingMachineRepair_C;     // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UMissionObjectiveSet*                   Set_VendingMachineInteraction_ObjSetVar;           // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GetSkagSpine_ObjVar;                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GetCoVSpine_ObjVar;                            // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_UseCOVSpine_ObjSetVar;                         // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_UseCoVSpine_ObjVar;                            // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Obj_CollectedHumanSpineButNotSkag_ObjSetVar;       // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Obj_CollectedSkagSpineButNotHuman_ObjSetVar;       // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_CollectSpines_ObjSetVar;                       // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_FindTheProblem_ObjVar;                         // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    Conversation;                                      // 0x0560(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjective*                      Obj_FakeCoVSpineUsedSkagSpineNotCollected_ObjVar;  // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_GetSkagSpineSingle_ObjSetVar;                  // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_UseSkageSpine_ObjSetVar;                       // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_MissionComplete_ObjSetVar;                     // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_CompleteMarcusVendingMachine_ObjVar;           // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_ShowSkagSpineObj_ObjSetVar;                    // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_CompleteGoSeeSecretArea_ObjSetVar;             // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GoSeeSecretArea_ObjVar;                        // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_UseSkagSpine_ObjVar;                           // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_UseSkagSpine_ObjSetVar;                        // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoTalking;                                         // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Mission_VendingMachineRepair(int32 EntryPoint);
	void MCE_UsedSkagSpineOnMachine(class UObject* Context);
	void Obj_UseSkagSpine(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_UseSkagSpine(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_VendingMachineInteraction(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Advance_GoSeeSecretArea(class UObject* Context);
	void Set_CompleteGoSeeSecretArea(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_GoSeeSecretArea(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_GetSkagSpine(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_GetCoVSpine(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_GetSkagSpine_Objective__PROXY_5();
	void Set_ShowSkagSpineObj(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_UseCOVSpine(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_CompleteMarcusVendingMachine(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_MissionComplete(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_UseCoVSpine(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_UseSkagSpine_Objective__PROXY_4();
	void Set_UseSkageSpine(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_CollectedHumanSpineButNotSkag(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void _Obj_GetSkagSpine_Objective__PROXY_3();
	void Set_GetSkagSpineSingle(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Advance_FakeCoVSpineUsedSkagSpineNotCollected(class UObject* Context);
	void Obj_FakeCoVSpineUsedSkagSpineNotCollected(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void CE_KeepSecretDoorOpen();
	void Obj_CollectedSkagSpineButNotHuman(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Advance_FindTheProblem(class UObject* Context);
	void Obj_FindTheProblem(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_CollectSpines(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void _Obj_GetCoVSpine_Objective__PROXY_1();
	void _Obj_GetSkagSpine_Objective__PROXY();
	void _Obj_UseCoVSpine_Objective__PROXY_0();
	void _Obj_UseSkagSpine_Objective__PROXY_2();
	void MCE_UsedHumanSpineOnMachine(class UObject* Context);
	void OnDialogSequenceFinished_12();
	void OnDialogSequenceFinished_13();
	void OnDialogSequenceFinished_14();
	void OnDialogSequenceFinished_15();
	void OnDialogSequenceFinished_16();
	void OnDialogSequenceFinished_17();
	void OnDialogSequenceFinished_18();
	void OnDialogSequenceFinished_19();
	void OnDialogSequenceFinished_20();
	void OnDialogSequenceFinished_21();
	void OnDialogSequenceFinished_22();
	void Update_MissionDeliverySpeak(class UObject* Context);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_VendingMachineRepair_C">();
	}
	static class UMission_VendingMachineRepair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_VendingMachineRepair_C>();
	}
};
static_assert(alignof(UMission_VendingMachineRepair_C) == 0x000008, "Wrong alignment on UMission_VendingMachineRepair_C");
static_assert(sizeof(UMission_VendingMachineRepair_C) == 0x0005C8, "Wrong size on UMission_VendingMachineRepair_C");
static_assert(offsetof(UMission_VendingMachineRepair_C, UberGraphFrame_Mission_VendingMachineRepair_C) == 0x000510, "Member 'UMission_VendingMachineRepair_C::UberGraphFrame_Mission_VendingMachineRepair_C' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_VendingMachineInteraction_ObjSetVar) == 0x000518, "Member 'UMission_VendingMachineRepair_C::Set_VendingMachineInteraction_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_GetSkagSpine_ObjVar) == 0x000520, "Member 'UMission_VendingMachineRepair_C::Obj_GetSkagSpine_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_GetCoVSpine_ObjVar) == 0x000528, "Member 'UMission_VendingMachineRepair_C::Obj_GetCoVSpine_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_UseCOVSpine_ObjSetVar) == 0x000530, "Member 'UMission_VendingMachineRepair_C::Set_UseCOVSpine_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_UseCoVSpine_ObjVar) == 0x000538, "Member 'UMission_VendingMachineRepair_C::Obj_UseCoVSpine_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_CollectedHumanSpineButNotSkag_ObjSetVar) == 0x000540, "Member 'UMission_VendingMachineRepair_C::Obj_CollectedHumanSpineButNotSkag_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_CollectedSkagSpineButNotHuman_ObjSetVar) == 0x000548, "Member 'UMission_VendingMachineRepair_C::Obj_CollectedSkagSpineButNotHuman_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_CollectSpines_ObjSetVar) == 0x000550, "Member 'UMission_VendingMachineRepair_C::Set_CollectSpines_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_FindTheProblem_ObjVar) == 0x000558, "Member 'UMission_VendingMachineRepair_C::Obj_FindTheProblem_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Conversation) == 0x000560, "Member 'UMission_VendingMachineRepair_C::Conversation' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_FakeCoVSpineUsedSkagSpineNotCollected_ObjVar) == 0x000570, "Member 'UMission_VendingMachineRepair_C::Obj_FakeCoVSpineUsedSkagSpineNotCollected_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_GetSkagSpineSingle_ObjSetVar) == 0x000578, "Member 'UMission_VendingMachineRepair_C::Set_GetSkagSpineSingle_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_UseSkageSpine_ObjSetVar) == 0x000580, "Member 'UMission_VendingMachineRepair_C::Set_UseSkageSpine_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_MissionComplete_ObjSetVar) == 0x000588, "Member 'UMission_VendingMachineRepair_C::Set_MissionComplete_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_CompleteMarcusVendingMachine_ObjVar) == 0x000590, "Member 'UMission_VendingMachineRepair_C::Obj_CompleteMarcusVendingMachine_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_ShowSkagSpineObj_ObjSetVar) == 0x000598, "Member 'UMission_VendingMachineRepair_C::Set_ShowSkagSpineObj_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_CompleteGoSeeSecretArea_ObjSetVar) == 0x0005A0, "Member 'UMission_VendingMachineRepair_C::Set_CompleteGoSeeSecretArea_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_GoSeeSecretArea_ObjVar) == 0x0005A8, "Member 'UMission_VendingMachineRepair_C::Obj_GoSeeSecretArea_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Obj_UseSkagSpine_ObjVar) == 0x0005B0, "Member 'UMission_VendingMachineRepair_C::Obj_UseSkagSpine_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, Set_UseSkagSpine_ObjSetVar) == 0x0005B8, "Member 'UMission_VendingMachineRepair_C::Set_UseSkagSpine_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_VendingMachineRepair_C, NoTalking) == 0x0005C0, "Member 'UMission_VendingMachineRepair_C::NoTalking' has a wrong offset!");

}

