#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Interface_IO_Operative_ShoulderCannon

#include "Basic.hpp"

#include "EOperativeShoulderCannon_structs.hpp"


namespace SDK::Params
{

// Function Interface_IO_Operative_ShoulderCannon.Interface_IO_Operative_ShoulderCannon_C.OperativeFireShoulderCannon
// 0x0001 (0x0001 - 0x0000)
struct Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon) == 0x000001, "Wrong alignment on Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon");
static_assert(sizeof(Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon) == 0x000001, "Wrong size on Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon, Res) == 0x000000, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeFireShoulderCannon::Res' has a wrong offset!");

// Function Interface_IO_Operative_ShoulderCannon.Interface_IO_Operative_ShoulderCannon_C.OperativeShoulderCannonDigistructFinished
// 0x0002 (0x0002 - 0x0000)
struct Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished final
{
public:
	bool                                          DigistructIn;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Res;                                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished) == 0x000001, "Wrong alignment on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished");
static_assert(sizeof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished) == 0x000002, "Wrong size on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished, DigistructIn) == 0x000000, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished::DigistructIn' has a wrong offset!");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished, Res) == 0x000001, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonDigistructFinished::Res' has a wrong offset!");

// Function Interface_IO_Operative_ShoulderCannon.Interface_IO_Operative_ShoulderCannon_C.OperativeRemoveShoulderCannon
// 0x0001 (0x0001 - 0x0000)
struct Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon final
{
public:
	bool                                          Fast;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon) == 0x000001, "Wrong alignment on Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon");
static_assert(sizeof(Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon) == 0x000001, "Wrong size on Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon, Fast) == 0x000000, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeRemoveShoulderCannon::Fast' has a wrong offset!");

// Function Interface_IO_Operative_ShoulderCannon.Interface_IO_Operative_ShoulderCannon_C.OperativeShoulderCannonReload
// 0x0001 (0x0001 - 0x0000)
struct Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload) == 0x000001, "Wrong alignment on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload");
static_assert(sizeof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload) == 0x000001, "Wrong size on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload, Start) == 0x000000, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonReload::Start' has a wrong offset!");

// Function Interface_IO_Operative_ShoulderCannon.Interface_IO_Operative_ShoulderCannon_C.OperativeShoulderCannonSetState
// 0x0002 (0x0002 - 0x0000)
struct Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState final
{
public:
	EOperativeShoulderCannon                      NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Res;                                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState) == 0x000001, "Wrong alignment on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState");
static_assert(sizeof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState) == 0x000002, "Wrong size on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState, NewState) == 0x000000, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState::NewState' has a wrong offset!");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState, Res) == 0x000001, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonSetState::Res' has a wrong offset!");

// Function Interface_IO_Operative_ShoulderCannon.Interface_IO_Operative_ShoulderCannon_C.OperativeShoulderCannonCreateLightProjectile
// 0x0001 (0x0001 - 0x0000)
struct Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile) == 0x000001, "Wrong alignment on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile");
static_assert(sizeof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile) == 0x000001, "Wrong size on Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile");
static_assert(offsetof(Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile, Res) == 0x000000, "Member 'Interface_IO_Operative_ShoulderCannon_C_OperativeShoulderCannonCreateLightProjectile::Res' has a wrong offset!");

}

