#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Artifact_SplatterGun

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK::Params
{

// Function Ability_Artifact_SplatterGun.Ability_Artifact_SplatterGun_C.ExecuteUbergraph_Ability_Artifact_SplatterGun
// 0x00E0 (0x00E0 - 0x0000)
struct Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FSlideEndedDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ConditionalDamageModifier K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier; // 0x0018(0x0028)(NoDestructor, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	struct FGbxAbilityResourceSpec_ConditionalDamageModifier K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier1; // 0x0050(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x0078(0x0028)(NoDestructor)
	struct FSlideEndedDetails                     K2Node_CustomEvent_Details;                        // 0x00A0(0x0018)(ConstParm, NoDestructor)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1; // 0x00B8(0x0028)(NoDestructor)
};
static_assert(alignof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun) == 0x000008, "Wrong alignment on Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun");
static_assert(sizeof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun) == 0x0000E0, "Wrong size on Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, EntryPoint) == 0x000000, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier) == 0x000018, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_CreateDelegate_OutputDelegate1) == 0x000040, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier1) == 0x000050, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_MakeStruct_GbxAbilityResourceSpec_ConditionalDamageModifier1' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x000078, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_CustomEvent_Details) == 0x0000A0, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1) == 0x0000B8, "Member 'Ability_Artifact_SplatterGun_C_ExecuteUbergraph_Ability_Artifact_SplatterGun::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate1' has a wrong offset!");

// Function Ability_Artifact_SplatterGun.Ability_Artifact_SplatterGun_C.EndSlide
// 0x0018 (0x0018 - 0x0000)
struct Ability_Artifact_SplatterGun_C_EndSlide final
{
public:
	struct FSlideEndedDetails                     Details;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Ability_Artifact_SplatterGun_C_EndSlide) == 0x000008, "Wrong alignment on Ability_Artifact_SplatterGun_C_EndSlide");
static_assert(sizeof(Ability_Artifact_SplatterGun_C_EndSlide) == 0x000018, "Wrong size on Ability_Artifact_SplatterGun_C_EndSlide");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_EndSlide, Details) == 0x000000, "Member 'Ability_Artifact_SplatterGun_C_EndSlide::Details' has a wrong offset!");

// Function Ability_Artifact_SplatterGun.Ability_Artifact_SplatterGun_C.Ammo Return
// 0x0020 (0x0020 - 0x0000)
struct Ability_Artifact_SplatterGun_C_Ammo_Return final
{
public:
	class AOakCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Artifact_SplatterGun_C_Ammo_Return) == 0x000008, "Wrong alignment on Ability_Artifact_SplatterGun_C_Ammo_Return");
static_assert(sizeof(Ability_Artifact_SplatterGun_C_Ammo_Return) == 0x000020, "Wrong size on Ability_Artifact_SplatterGun_C_Ammo_Return");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_Ammo_Return, Character) == 0x000000, "Member 'Ability_Artifact_SplatterGun_C_Ammo_Return::Character' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_Ammo_Return, CallFunc_GetWeapon_ReturnValue) == 0x000008, "Member 'Ability_Artifact_SplatterGun_C_Ammo_Return::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_Ammo_Return, CallFunc_GetValueOfAttribute_ReturnValue) == 0x000010, "Member 'Ability_Artifact_SplatterGun_C_Ammo_Return::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_Ammo_Return, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Ability_Artifact_SplatterGun_C_Ammo_Return::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Artifact_SplatterGun_C_Ammo_Return, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'Ability_Artifact_SplatterGun_C_Ammo_Return::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

