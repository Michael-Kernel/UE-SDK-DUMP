#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Phasetrance_Slam

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Action_Phasetrance_Slam_Base_classes.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Action_Phasetrance_Slam.Action_Phasetrance_Slam_C
// 0x0008 (0x02D8 - 0x02D0)
class UAction_Phasetrance_Slam_C final : public UAction_Phasetrance_Slam_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Action_Phasetrance_Slam_C;          // 0x02D0(0x0008)(Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_Action_Phasetrance_Slam(int32 EntryPoint);
	void AN_FeedbackSlamLoop();
	void AN_FeedbackSlamLand();
	void OnBegin(class AActor* Actor);
	void AN_SlamMoveLock();
	void OnBeginBringUpWeapon(class AActor* Actor);
	void AN_Unlockmovement();
	void InnerDoSlamDamage();
	void OnServerBegin(class AActor* Actor);
	void GetSlamTargetLocation(struct FVector* Res);
	void GetSlamControlledMove(class UClass** Res);
	void StopSlamLoopFeedback();
	void OnServerEnd(EGbxActionEndState ActionEndState, class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Action_Phasetrance_Slam_C">();
	}
	static class UAction_Phasetrance_Slam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAction_Phasetrance_Slam_C>();
	}
};
static_assert(alignof(UAction_Phasetrance_Slam_C) == 0x000008, "Wrong alignment on UAction_Phasetrance_Slam_C");
static_assert(sizeof(UAction_Phasetrance_Slam_C) == 0x0002D8, "Wrong size on UAction_Phasetrance_Slam_C");
static_assert(offsetof(UAction_Phasetrance_Slam_C, UberGraphFrame_Action_Phasetrance_Slam_C) == 0x0002D0, "Member 'UAction_Phasetrance_Slam_C::UberGraphFrame_Action_Phasetrance_Slam_C' has a wrong offset!");

}

