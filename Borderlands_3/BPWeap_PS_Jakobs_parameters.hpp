#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeap_PS_Jakobs

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPWeap_PS_Jakobs.BPWeap_PS_Jakobs_C.ExecuteUbergraph_BPWeap_PS_Jakobs
// 0x0038 (0x0038 - 0x0000)
struct BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bCompleted;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_CustomEvent_EventWeapon;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AWeapon* EventWeapon)>   K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs) == 0x000008, "Wrong alignment on BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs");
static_assert(sizeof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs) == 0x000038, "Wrong size on BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs");
static_assert(offsetof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs, EntryPoint) == 0x000000, "Member 'BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs, K2Node_Event_bCompleted) == 0x000018, "Member 'BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs::K2Node_Event_bCompleted' has a wrong offset!");
static_assert(offsetof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs, K2Node_CustomEvent_EventWeapon) == 0x000020, "Member 'BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs::K2Node_CustomEvent_EventWeapon' has a wrong offset!");
static_assert(offsetof(BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'BPWeap_PS_Jakobs_C_ExecuteUbergraph_BPWeap_PS_Jakobs::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");

// Function BPWeap_PS_Jakobs.BPWeap_PS_Jakobs_C.Weapon_NotifyPutDown
// 0x0008 (0x0008 - 0x0000)
struct BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown final
{
public:
	class AWeapon*                                EventWeapon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown) == 0x000008, "Wrong alignment on BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown");
static_assert(sizeof(BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown) == 0x000008, "Wrong size on BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown");
static_assert(offsetof(BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown, EventWeapon) == 0x000000, "Member 'BPWeap_PS_Jakobs_C_Weapon_NotifyPutDown::EventWeapon' has a wrong offset!");

// Function BPWeap_PS_Jakobs.BPWeap_PS_Jakobs_C.Notify_ReloadEnded
// 0x0001 (0x0001 - 0x0000)
struct BPWeap_PS_Jakobs_C_Notify_ReloadEnded final
{
public:
	bool                                          bCompleted;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeap_PS_Jakobs_C_Notify_ReloadEnded) == 0x000001, "Wrong alignment on BPWeap_PS_Jakobs_C_Notify_ReloadEnded");
static_assert(sizeof(BPWeap_PS_Jakobs_C_Notify_ReloadEnded) == 0x000001, "Wrong size on BPWeap_PS_Jakobs_C_Notify_ReloadEnded");
static_assert(offsetof(BPWeap_PS_Jakobs_C_Notify_ReloadEnded, bCompleted) == 0x000000, "Member 'BPWeap_PS_Jakobs_C_Notify_ReloadEnded::bCompleted' has a wrong offset!");

}

