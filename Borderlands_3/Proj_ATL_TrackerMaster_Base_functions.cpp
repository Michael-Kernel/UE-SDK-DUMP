#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_ATL_TrackerMaster_Base

#include "Basic.hpp"

#include "Proj_ATL_TrackerMaster_Base_classes.hpp"
#include "Proj_ATL_TrackerMaster_Base_parameters.hpp"


namespace SDK
{

// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.ExecuteUbergraph_Proj_ATL_TrackerMaster_Base
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_ATL_TrackerMaster_Base_C::ExecuteUbergraph_Proj_ATL_TrackerMaster_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "ExecuteUbergraph_Proj_ATL_TrackerMaster_Base");

	Params::Proj_ATL_TrackerMaster_Base_C_ExecuteUbergraph_Proj_ATL_TrackerMaster_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.MultiTargetActorDeath_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_ATL_TrackerMaster_Base_C::MultiTargetActorDeath_Event(class AActor* DamageReceiver, class AActor* DamageCauser_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "MultiTargetActorDeath_Event");

	Params::Proj_ATL_TrackerMaster_Base_C_MultiTargetActorDeath_Event Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.DamageCauser_0 = DamageCauser_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.TargetStuck
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::TargetStuck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "TargetStuck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.FuseTriggered
// (BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::FuseTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "FuseTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.FuseStart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FuseTime_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_ATL_TrackerMaster_Base_C::FuseStart(float FuseTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "FuseStart");

	Params::Proj_ATL_TrackerMaster_Base_C_FuseStart Parms{};

	Parms.FuseTime_0 = FuseTime_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.AttachedActorDeath
// (BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::AttachedActorDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "AttachedActorDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.SingleTargetTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::SingleTargetTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "SingleTargetTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.RemoveAllTargets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::RemoveAllTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "RemoveAllTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.MultiTargetTag
// (Public, BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::MultiTargetTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "MultiTargetTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProj_ATL_TrackerMaster_Base_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "ReceiveHit");

	Params::Proj_ATL_TrackerMaster_Base_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.OnExplode
// (Event, Protected, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::OnExplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "OnExplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.StartAudioLoopOnActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWwiseEvent*                      Wwise_Event                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_ATL_TrackerMaster_Base_C::StartAudioLoopOnActor(class AActor* Target_Actor, class UWwiseEvent* Wwise_Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "StartAudioLoopOnActor");

	Params::Proj_ATL_TrackerMaster_Base_C_StartAudioLoopOnActor Parms{};

	Parms.Target_Actor = Target_Actor;
	Parms.Wwise_Event = Wwise_Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_ATL_TrackerMaster_Base.Proj_ATL_TrackerMaster_Base_C.OnRep_StuckTarget
// (BlueprintCallable, BlueprintEvent)

void AProj_ATL_TrackerMaster_Base_C::OnRep_StuckTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_ATL_TrackerMaster_Base_C", "OnRep_StuckTarget");

	UObject::ProcessEvent(Func, nullptr);
}

}

