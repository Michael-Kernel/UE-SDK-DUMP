#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Phasetrance_Slam

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.ExecuteUbergraph_Action_Phasetrance_Slam
// 0x0118 (0x0118 - 0x0000)
struct Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWwiseEvent*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhaseTranceElementalType                     Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor3;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            K2Node_Event_ActionEndState;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor2;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue2;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor1;                               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue3;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSlamTargetLocation_Res;                // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWwiseAudioComponent*                   CallFunc_GetDefaultWwiseComponent_ReturnValue;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetSlamControlledMove_Res;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0090(0x0018)()
	bool                                          CallFunc_StartControlledMove_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhaseTranceElementalType                     CallFunc_GetPhaseTranceElementType_ReturnValue;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue4;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWwiseEvent*                            Temp_object_Variable4;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWwiseEvent*                            K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwisePlaybackInstance                 CallFunc_PostEventAtLocation_ReturnValue;          // 0x00F8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam");
static_assert(sizeof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam) == 0x000118, "Wrong size on Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, EntryPoint) == 0x000000, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::EntryPoint' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_object_Variable) == 0x000008, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_object_Variable1) == 0x000010, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_object_Variable2) == 0x000018, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_object_Variable3) == 0x000020, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_bool_Has_Been_Initd_Variable) == 0x000028, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_byte_Variable) == 0x000029, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, K2Node_Event_Actor3) == 0x000030, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::K2Node_Event_Actor3' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActor_ReturnValue) == 0x000038, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, K2Node_Event_ActionEndState) == 0x000040, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::K2Node_Event_ActionEndState' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, K2Node_Event_Actor2) == 0x000048, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::K2Node_Event_Actor2' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActor_ReturnValue1) == 0x000050, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActor_ReturnValue2) == 0x000058, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, K2Node_Event_Actor1) == 0x000060, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::K2Node_Event_Actor1' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActor_ReturnValue3) == 0x000068, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_GetSlamTargetLocation_Res) == 0x000070, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_GetSlamTargetLocation_Res' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_GetDefaultWwiseComponent_ReturnValue) == 0x000080, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_GetDefaultWwiseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_GetSlamControlledMove_Res) == 0x000088, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_GetSlamControlledMove_Res' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_PostWwiseEvent_ReturnValue) == 0x000090, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_StartControlledMove_ReturnValue) == 0x0000A8, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_StartControlledMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, K2Node_Event_Actor) == 0x0000B0, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_GetPhaseTranceElementType_ReturnValue) == 0x0000B8, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_GetPhaseTranceElementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActor_ReturnValue4) == 0x0000C8, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000D4, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_bool_IsClosed_Variable) == 0x0000E0, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, Temp_object_Variable4) == 0x0000E8, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, K2Node_Select_Default) == 0x0000F0, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_PostEventAtLocation_ReturnValue) == 0x0000F8, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam, CallFunc_IsValid_ReturnValue1) == 0x000110, "Member 'Action_Phasetrance_Slam_C_ExecuteUbergraph_Action_Phasetrance_Slam::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.OnBegin
// 0x0008 (0x0008 - 0x0000)
struct Action_Phasetrance_Slam_C_OnBegin final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Phasetrance_Slam_C_OnBegin) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_OnBegin");
static_assert(sizeof(Action_Phasetrance_Slam_C_OnBegin) == 0x000008, "Wrong size on Action_Phasetrance_Slam_C_OnBegin");
static_assert(offsetof(Action_Phasetrance_Slam_C_OnBegin, Actor) == 0x000000, "Member 'Action_Phasetrance_Slam_C_OnBegin::Actor' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.OnBeginBringUpWeapon
// 0x0008 (0x0008 - 0x0000)
struct Action_Phasetrance_Slam_C_OnBeginBringUpWeapon final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Phasetrance_Slam_C_OnBeginBringUpWeapon) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_OnBeginBringUpWeapon");
static_assert(sizeof(Action_Phasetrance_Slam_C_OnBeginBringUpWeapon) == 0x000008, "Wrong size on Action_Phasetrance_Slam_C_OnBeginBringUpWeapon");
static_assert(offsetof(Action_Phasetrance_Slam_C_OnBeginBringUpWeapon, Actor) == 0x000000, "Member 'Action_Phasetrance_Slam_C_OnBeginBringUpWeapon::Actor' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.OnServerBegin
// 0x0008 (0x0008 - 0x0000)
struct Action_Phasetrance_Slam_C_OnServerBegin final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Phasetrance_Slam_C_OnServerBegin) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_OnServerBegin");
static_assert(sizeof(Action_Phasetrance_Slam_C_OnServerBegin) == 0x000008, "Wrong size on Action_Phasetrance_Slam_C_OnServerBegin");
static_assert(offsetof(Action_Phasetrance_Slam_C_OnServerBegin, Actor) == 0x000000, "Member 'Action_Phasetrance_Slam_C_OnServerBegin::Actor' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.GetSlamTargetLocation
// 0x0090 (0x0090 - 0x0000)
struct Action_Phasetrance_Slam_C_GetSlamTargetLocation final
{
public:
	struct FVector                                Res;                                               // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Phasetrance_Slam_C_GetSlamTargetLocation) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_GetSlamTargetLocation");
static_assert(sizeof(Action_Phasetrance_Slam_C_GetSlamTargetLocation) == 0x000090, "Wrong size on Action_Phasetrance_Slam_C_GetSlamTargetLocation");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, Res) == 0x000000, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::Res' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_K2_GetActor_ReturnValue) == 0x000010, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_K2_GetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_GetMaxSpeed_ReturnValue) == 0x000024, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000034, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_GetActorUpVector_ReturnValue) == 0x000054, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000060, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x00006C, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamTargetLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x000084, "Member 'Action_Phasetrance_Slam_C_GetSlamTargetLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.GetSlamControlledMove
// 0x0050 (0x0050 - 0x0000)
struct Action_Phasetrance_Slam_C_GetSlamControlledMove final
{
public:
	class UClass*                                 Res;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetActor_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Phasetrance_Slam_C_GetSlamControlledMove) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_GetSlamControlledMove");
static_assert(sizeof(Action_Phasetrance_Slam_C_GetSlamControlledMove) == 0x000050, "Wrong size on Action_Phasetrance_Slam_C_GetSlamControlledMove");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, Res) == 0x000000, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::Res' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, Temp_bool_Variable) == 0x000008, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, Temp_class_Variable) == 0x000010, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, Temp_class_Variable1) == 0x000018, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, CallFunc_K2_GetActor_ReturnValue) == 0x000020, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::CallFunc_K2_GetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, CallFunc_BreakVector_X) == 0x000034, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, CallFunc_BreakVector_Y) == 0x000038, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, CallFunc_BreakVector_Z) == 0x00003C, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_GetSlamControlledMove, K2Node_Select_Default) == 0x000048, "Member 'Action_Phasetrance_Slam_C_GetSlamControlledMove::K2Node_Select_Default' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.StopSlamLoopFeedback
// 0x0001 (0x0001 - 0x0000)
struct Action_Phasetrance_Slam_C_StopSlamLoopFeedback final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Action_Phasetrance_Slam_C_StopSlamLoopFeedback) == 0x000001, "Wrong alignment on Action_Phasetrance_Slam_C_StopSlamLoopFeedback");
static_assert(sizeof(Action_Phasetrance_Slam_C_StopSlamLoopFeedback) == 0x000001, "Wrong size on Action_Phasetrance_Slam_C_StopSlamLoopFeedback");
static_assert(offsetof(Action_Phasetrance_Slam_C_StopSlamLoopFeedback, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Action_Phasetrance_Slam_C_StopSlamLoopFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Action_Phasetrance_Slam.Action_Phasetrance_Slam_C.OnServerEnd
// 0x0010 (0x0010 - 0x0000)
struct Action_Phasetrance_Slam_C_OnServerEnd final
{
public:
	EGbxActionEndState                            ActionEndState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Phasetrance_Slam_C_OnServerEnd) == 0x000008, "Wrong alignment on Action_Phasetrance_Slam_C_OnServerEnd");
static_assert(sizeof(Action_Phasetrance_Slam_C_OnServerEnd) == 0x000010, "Wrong size on Action_Phasetrance_Slam_C_OnServerEnd");
static_assert(offsetof(Action_Phasetrance_Slam_C_OnServerEnd, ActionEndState) == 0x000000, "Member 'Action_Phasetrance_Slam_C_OnServerEnd::ActionEndState' has a wrong offset!");
static_assert(offsetof(Action_Phasetrance_Slam_C_OnServerEnd, Actor) == 0x000008, "Member 'Action_Phasetrance_Slam_C_OnServerEnd::Actor' has a wrong offset!");

}

