#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_PS_VLA

#include "Basic.hpp"

#include "BPAnim_PS_VLA_classes.hpp"
#include "BPAnim_PS_VLA_parameters.hpp"


namespace SDK
{

// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.ExecuteUbergraph_BPAnim_PS_VLA
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPAnim_PS_VLA_C::ExecuteUbergraph_BPAnim_PS_VLA(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "ExecuteUbergraph_BPAnim_PS_VLA");

	Params::BPAnim_PS_VLA_C_ExecuteUbergraph_BPAnim_PS_VLA Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.CheckClipIndex
// (BlueprintCallable, BlueprintEvent)

void UBPAnim_PS_VLA_C::CheckClipIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "CheckClipIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.BlueprintSwitchedMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPAnim_PS_VLA_C::BlueprintSwitchedMode(int32 NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "BlueprintSwitchedMode");

	Params::BPAnim_PS_VLA_C_BlueprintSwitchedMode Parms{};

	Parms.NewMode = NewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UBPAnim_PS_VLA_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_36DA10BA418E27BC8989DBB463E09580
// (BlueprintEvent)

void UBPAnim_PS_VLA_C::EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_36DA10BA418E27BC8989DBB463E09580()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_36DA10BA418E27BC8989DBB463E09580");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_725558354C219365B9D739801201BCA3
// (BlueprintEvent)

void UBPAnim_PS_VLA_C::EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_725558354C219365B9D739801201BCA3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_725558354C219365B9D739801201BCA3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_EEC5598D4FEE3EDABDD5ADA324D74B7E
// (BlueprintEvent)

void UBPAnim_PS_VLA_C::EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_EEC5598D4FEE3EDABDD5ADA324D74B7E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_EEC5598D4FEE3EDABDD5ADA324D74B7E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_F3B7A5A847CA3B86C31549A4B00B2D89
// (BlueprintEvent)

void UBPAnim_PS_VLA_C::EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_F3B7A5A847CA3B86C31549A4B00B2D89()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_BPAnim_PS_VLA_AnimGraphNode_SequenceEvaluator_F3B7A5A847CA3B86C31549A4B00B2D89");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.UpdateIdleAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UseMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPAnim_PS_VLA_C::UpdateIdleAnim(int32 UseMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "UpdateIdleAnim");

	Params::BPAnim_PS_VLA_C_UpdateIdleAnim Parms{};

	Parms.UseMode = UseMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPAnim_PS_VLA.BPAnim_PS_VLA_C.UpdateMagIdle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseWeapon_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPAnim_PS_VLA_C::UpdateMagIdle(float BaseWeapon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPAnim_PS_VLA_C", "UpdateMagIdle");

	Params::BPAnim_PS_VLA_C_UpdateMagIdle Parms{};

	Parms.BaseWeapon_0 = BaseWeapon_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

