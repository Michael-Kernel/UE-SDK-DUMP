#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_ElectricWire

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_WireScale_structs.hpp"
#include "Enum_ElectricState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IO_ElectricWire.IO_ElectricWire_C
// 0x00B0 (0x0600 - 0x0550)
class AIO_ElectricWire_C final : public AInteractiveObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0550(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               FX_WireEnd;                                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_WireStart;                                      // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UElementalInteractionComponent*         ElementalInteraction;                              // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ElectricalCollisionStart;                          // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ElectricalCollisionEnd;                            // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WireEnd;                                           // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_WireEnd;                                     // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WireStart;                                         // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_WireStart;                                   // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakDamageComponent*                    OakDamage;                                         // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       BuilderSpline;                                     // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_WireScale                                WireScale;                                         // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            SplineMesh;                                        // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowSplinePoints;                                  // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     WireMaterial;                                      // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     WireMaterial_Electrified;                          // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     EndCapMaterial;                                    // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     EndCapMaterial_Electrified;                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ElectricState                            ElectricState;                                     // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FrayedStart;                                       // 0x05F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FrayedEnd;                                         // 0x05F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F3[0x5];                                      // 0x05F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCondition*                          Cond_ElectricState_NewEnumerator0;                 // 0x05F8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Init_WireScale();
	void Debug_ShowSplinePoints();
	void Init_GenerateWireSegments();
	void UserConstructionScript();
	void BndEvt__ElementalInteraction_K2Node_ComponentBoundEvent_4_ElementalInteractionStartedEvent__DelegateSignature_IO_Combat_ElectricWireSpline(class UElementalInteractionData* State, bool bIsInitialState);
	void __UserState_ElectricState_1(bool bFromLoad);
	void __UserState_ElectricState_0(bool bFromLoad);
	void ExecuteUbergraph_IO_ElectricWire(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IO_ElectricWire_C">();
	}
	static class AIO_ElectricWire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIO_ElectricWire_C>();
	}
};
static_assert(alignof(AIO_ElectricWire_C) == 0x000008, "Wrong alignment on AIO_ElectricWire_C");
static_assert(sizeof(AIO_ElectricWire_C) == 0x000600, "Wrong size on AIO_ElectricWire_C");
static_assert(offsetof(AIO_ElectricWire_C, UberGraphFrame) == 0x000550, "Member 'AIO_ElectricWire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, FX_WireEnd) == 0x000558, "Member 'AIO_ElectricWire_C::FX_WireEnd' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, FX_WireStart) == 0x000560, "Member 'AIO_ElectricWire_C::FX_WireStart' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, ElementalInteraction) == 0x000568, "Member 'AIO_ElectricWire_C::ElementalInteraction' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, ElectricalCollisionStart) == 0x000570, "Member 'AIO_ElectricWire_C::ElectricalCollisionStart' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, ElectricalCollisionEnd) == 0x000578, "Member 'AIO_ElectricWire_C::ElectricalCollisionEnd' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, WireEnd) == 0x000580, "Member 'AIO_ElectricWire_C::WireEnd' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, Scene_WireEnd) == 0x000588, "Member 'AIO_ElectricWire_C::Scene_WireEnd' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, WireStart) == 0x000590, "Member 'AIO_ElectricWire_C::WireStart' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, Scene_WireStart) == 0x000598, "Member 'AIO_ElectricWire_C::Scene_WireStart' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, OakDamage) == 0x0005A0, "Member 'AIO_ElectricWire_C::OakDamage' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, Scene) == 0x0005A8, "Member 'AIO_ElectricWire_C::Scene' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, BuilderSpline) == 0x0005B0, "Member 'AIO_ElectricWire_C::BuilderSpline' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, WireScale) == 0x0005B8, "Member 'AIO_ElectricWire_C::WireScale' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, SplineMesh) == 0x0005C0, "Member 'AIO_ElectricWire_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, ShowSplinePoints) == 0x0005C8, "Member 'AIO_ElectricWire_C::ShowSplinePoints' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, WireMaterial) == 0x0005D0, "Member 'AIO_ElectricWire_C::WireMaterial' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, WireMaterial_Electrified) == 0x0005D8, "Member 'AIO_ElectricWire_C::WireMaterial_Electrified' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, EndCapMaterial) == 0x0005E0, "Member 'AIO_ElectricWire_C::EndCapMaterial' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, EndCapMaterial_Electrified) == 0x0005E8, "Member 'AIO_ElectricWire_C::EndCapMaterial_Electrified' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, ElectricState) == 0x0005F0, "Member 'AIO_ElectricWire_C::ElectricState' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, FrayedStart) == 0x0005F1, "Member 'AIO_ElectricWire_C::FrayedStart' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, FrayedEnd) == 0x0005F2, "Member 'AIO_ElectricWire_C::FrayedEnd' has a wrong offset!");
static_assert(offsetof(AIO_ElectricWire_C, Cond_ElectricState_NewEnumerator0) == 0x0005F8, "Member 'AIO_ElectricWire_C::Cond_ElectricState_NewEnumerator0' has a wrong offset!");

}

