#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AHitReact_Trooper_Gib

#include "Basic.hpp"


namespace SDK::Params
{

// Function AHitReact_Trooper_Gib.AHitReact_Trooper_Gib_C.ExecuteUbergraph_AHitReact_Trooper_Gib
// 0x0028 (0x0028 - 0x0000)
struct AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectileHoldAndThrow_C> K2Node_DynamicCast_AsBPI_Projectile_Hold_and_Throw; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib) == 0x000008, "Wrong alignment on AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib");
static_assert(sizeof(AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib) == 0x000028, "Wrong size on AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib");
static_assert(offsetof(AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib, EntryPoint) == 0x000000, "Member 'AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib::EntryPoint' has a wrong offset!");
static_assert(offsetof(AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib, K2Node_Event_Actor) == 0x000008, "Member 'AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib, K2Node_DynamicCast_AsBPI_Projectile_Hold_and_Throw) == 0x000010, "Member 'AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib::K2Node_DynamicCast_AsBPI_Projectile_Hold_and_Throw' has a wrong offset!");
static_assert(offsetof(AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AHitReact_Trooper_Gib_C_ExecuteUbergraph_AHitReact_Trooper_Gib::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AHitReact_Trooper_Gib.AHitReact_Trooper_Gib_C.OnBegin
// 0x0008 (0x0008 - 0x0000)
struct AHitReact_Trooper_Gib_C_OnBegin final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AHitReact_Trooper_Gib_C_OnBegin) == 0x000008, "Wrong alignment on AHitReact_Trooper_Gib_C_OnBegin");
static_assert(sizeof(AHitReact_Trooper_Gib_C_OnBegin) == 0x000008, "Wrong size on AHitReact_Trooper_Gib_C_OnBegin");
static_assert(offsetof(AHitReact_Trooper_Gib_C_OnBegin, Actor) == 0x000000, "Member 'AHitReact_Trooper_Gib_C_OnBegin::Actor' has a wrong offset!");

}

