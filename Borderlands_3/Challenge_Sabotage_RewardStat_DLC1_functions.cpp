#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_Sabotage_RewardStat_DLC1

#include "Basic.hpp"

#include "Challenge_Sabotage_RewardStat_DLC1_classes.hpp"
#include "Challenge_Sabotage_RewardStat_DLC1_parameters.hpp"


namespace SDK
{

// Function Challenge_Sabotage_RewardStat_DLC1.Challenge_Sabotage_RewardStat_DLC1_C.ExecuteUbergraph_Challenge_Sabotage_RewardStat_DLC1
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_Sabotage_RewardStat_DLC1_C::ExecuteUbergraph_Challenge_Sabotage_RewardStat_DLC1(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_Sabotage_RewardStat_DLC1_C", "ExecuteUbergraph_Challenge_Sabotage_RewardStat_DLC1");

	Params::Challenge_Sabotage_RewardStat_DLC1_C_ExecuteUbergraph_Challenge_Sabotage_RewardStat_DLC1 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_Sabotage_RewardStat_DLC1.Challenge_Sabotage_RewardStat_DLC1_C.CompletedChallenge
// (Event, Public, BlueprintEvent)
// Parameters:
// class AGbxPlayerController*             CompletedPlayer                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_Sabotage_RewardStat_DLC1_C::CompletedChallenge(const class AGbxPlayerController* CompletedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_Sabotage_RewardStat_DLC1_C", "CompletedChallenge");

	Params::Challenge_Sabotage_RewardStat_DLC1_C_CompletedChallenge Parms{};

	Parms.CompletedPlayer = CompletedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_Sabotage_RewardStat_DLC1.Challenge_Sabotage_RewardStat_DLC1_C.OnInitChallengeInstance
// (Event, Public, BlueprintEvent)
// Parameters:
// class UChallengesComponent*             OwningChallenges                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGbxCharacter*                    AssociatedCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_Sabotage_RewardStat_DLC1_C::OnInitChallengeInstance(class UChallengesComponent* OwningChallenges, class AGbxCharacter* AssociatedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_Sabotage_RewardStat_DLC1_C", "OnInitChallengeInstance");

	Params::Challenge_Sabotage_RewardStat_DLC1_C_OnInitChallengeInstance Parms{};

	Parms.OwningChallenges = OwningChallenges;
	Parms.AssociatedCharacter = AssociatedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_Sabotage_RewardStat_DLC1.Challenge_Sabotage_RewardStat_DLC1_C.PlayCompletionVO
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGbxPlayerController*             PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Played                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallenge_Sabotage_RewardStat_DLC1_C::PlayCompletionVO(class AGbxPlayerController* PlayerController, bool* Played)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_Sabotage_RewardStat_DLC1_C", "PlayCompletionVO");

	Params::Challenge_Sabotage_RewardStat_DLC1_C_PlayCompletionVO Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Played != nullptr)
		*Played = Parms.Played;
}

}

