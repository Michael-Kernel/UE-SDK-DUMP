#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPAnim_NogSwarm

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPAnim_NogSwarm.BPAnim_NogSwarm_C.ExecuteUbergraph_BPAnim_NogSwarm
// 0x0058 (0x0058 - 0x0000)
struct BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_StateName;                            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_PathNodeList;                         // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          K2Node_Event_WasDestroyed;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_Event_NogBuff;                              // 0x0038(0x0010)(NoDestructor)
	class AActor*                                 K2Node_Event_BuffTarget;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_BuffReceiver;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm) == 0x000008, "Wrong alignment on BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm");
static_assert(sizeof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm) == 0x000058, "Wrong size on BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, EntryPoint) == 0x000000, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, K2Node_Event_StateName) == 0x000008, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::K2Node_Event_StateName' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000018, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, K2Node_Event_PathNodeList) == 0x000020, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::K2Node_Event_PathNodeList' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, K2Node_Event_WasDestroyed) == 0x000030, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::K2Node_Event_WasDestroyed' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, K2Node_Event_NogBuff) == 0x000038, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::K2Node_Event_NogBuff' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, K2Node_Event_BuffTarget) == 0x000048, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::K2Node_Event_BuffTarget' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm, K2Node_Event_BuffReceiver) == 0x000050, "Member 'BPAnim_NogSwarm_C_ExecuteUbergraph_BPAnim_NogSwarm::K2Node_Event_BuffReceiver' has a wrong offset!");

// Function BPAnim_NogSwarm.BPAnim_NogSwarm_C.Nog_BuffDrone_SwarmState
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState final
{
public:
	class FString                                 StateName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState) == 0x000008, "Wrong alignment on BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState");
static_assert(sizeof(BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState) == 0x000010, "Wrong size on BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState");
static_assert(offsetof(BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState, StateName) == 0x000000, "Member 'BPAnim_NogSwarm_C_Nog_BuffDrone_SwarmState::StateName' has a wrong offset!");

// Function BPAnim_NogSwarm.BPAnim_NogSwarm_C.Nog_BuffDrone_ReceiverInfo
// 0x0008 (0x0008 - 0x0000)
struct BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo final
{
public:
	class AActor*                                 BuffReceiver;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo) == 0x000008, "Wrong alignment on BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo");
static_assert(sizeof(BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo) == 0x000008, "Wrong size on BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo");
static_assert(offsetof(BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo, BuffReceiver) == 0x000000, "Member 'BPAnim_NogSwarm_C_Nog_BuffDrone_ReceiverInfo::BuffReceiver' has a wrong offset!");

// Function BPAnim_NogSwarm.BPAnim_NogSwarm_C.Nog_BuffDrone_Detonate
// 0x0001 (0x0001 - 0x0000)
struct BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate final
{
public:
	bool                                          WasDestroyed;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate) == 0x000001, "Wrong alignment on BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate");
static_assert(sizeof(BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate) == 0x000001, "Wrong size on BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate");
static_assert(offsetof(BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate, WasDestroyed) == 0x000000, "Member 'BPAnim_NogSwarm_C_Nog_BuffDrone_Detonate::WasDestroyed' has a wrong offset!");

// Function BPAnim_NogSwarm.BPAnim_NogSwarm_C.Nog_BuffDrone_SupplyPath
// 0x0010 (0x0010 - 0x0000)
struct BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath final
{
public:
	TArray<class AActor*>                         PathNodeList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath) == 0x000008, "Wrong alignment on BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath");
static_assert(sizeof(BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath) == 0x000010, "Wrong size on BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath");
static_assert(offsetof(BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath, PathNodeList) == 0x000000, "Member 'BPAnim_NogSwarm_C_Nog_BuffDrone_SupplyPath::PathNodeList' has a wrong offset!");

// Function BPAnim_NogSwarm.BPAnim_NogSwarm_C.Nog_BuffDrone_RegisterBuffData
// 0x0018 (0x0018 - 0x0000)
struct BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData final
{
public:
	struct FDataTableRowHandle                    NogBuff;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 BuffTarget;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData) == 0x000008, "Wrong alignment on BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData");
static_assert(sizeof(BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData) == 0x000018, "Wrong size on BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData");
static_assert(offsetof(BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData, NogBuff) == 0x000000, "Member 'BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData::NogBuff' has a wrong offset!");
static_assert(offsetof(BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData, BuffTarget) == 0x000010, "Member 'BPAnim_NogSwarm_C_Nog_BuffDrone_RegisterBuffData::BuffTarget' has a wrong offset!");

}

