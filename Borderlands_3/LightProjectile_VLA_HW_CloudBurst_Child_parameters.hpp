#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightProjectile_VLA_HW_CloudBurst_Child

#include "Basic.hpp"

#include "GbxWeapon_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LightProjectile_VLA_HW_CloudBurst_Child.LightProjectile_VLA_HW_CloudBurst_Child_C.Split
// 0x0028 (0x0028 - 0x0000)
struct LightProjectile_VLA_HW_CloudBurst_Child_C_Split final
{
public:
	class UOakLightProjectile*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightProjectile*                       MyProjectile;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_VLA_HW_CloudBurst_Child_C_Split) == 0x000008, "Wrong alignment on LightProjectile_VLA_HW_CloudBurst_Child_C_Split");
static_assert(sizeof(LightProjectile_VLA_HW_CloudBurst_Child_C_Split) == 0x000028, "Wrong size on LightProjectile_VLA_HW_CloudBurst_Child_C_Split");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_Split, Projectile) == 0x000000, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_Split::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_Split, EndLocation) == 0x000008, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_Split::EndLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_Split, StartLocation) == 0x000014, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_Split::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_Split, MyProjectile) == 0x000020, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_Split::MyProjectile' has a wrong offset!");

// Function LightProjectile_VLA_HW_CloudBurst_Child.LightProjectile_VLA_HW_CloudBurst_Child_C.OnLifetimeExpired
// 0x0028 (0x0028 - 0x0000)
struct LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightProjectile*                       MyProjectile;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired) == 0x000008, "Wrong alignment on LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired");
static_assert(sizeof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired) == 0x000028, "Wrong size on LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired, Projectile) == 0x000000, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired, EndLocation) == 0x000008, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired::EndLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired, StartLocation) == 0x000014, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired, MyProjectile) == 0x000020, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnLifetimeExpired::MyProjectile' has a wrong offset!");

// Function LightProjectile_VLA_HW_CloudBurst_Child.LightProjectile_VLA_HW_CloudBurst_Child_C.OnExplode
// 0x0240 (0x0240 - 0x0000)
struct LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode final
{
public:
	class ULightProjectile*                       Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightProjectile*                       MyProjectile;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GeneratePointsOnCone_ReturnValue;         // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifierValue_ReturnValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShotModifierType                       CallFunc_GetModifierType_ReturnValue;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        CallFunc_Conv_FloatToForceSelection_ReturnValue;   // 0x00D8(0x0020)(NoDestructor)
	struct FLightProjectileInitializationData     K2Node_MakeStruct_LightProjectileInitializationData; // 0x00F8(0x0140)(ContainsInstancedReference)
};
static_assert(alignof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode) == 0x000010, "Wrong alignment on LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode");
static_assert(sizeof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode) == 0x000240, "Wrong size on LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, Projectile) == 0x000000, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::Projectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, EndLocation) == 0x000008, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::EndLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, StartLocation) == 0x000014, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::StartLocation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, MyProjectile) == 0x000020, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::MyProjectile' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_GeneratePointsOnCone_ReturnValue) == 0x000028, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_GeneratePointsOnCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, Temp_int_Array_Index_Variable) == 0x000038, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Array_Get_Item) == 0x000040, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_BreakTransform_Location) == 0x000070, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_GetInstigator_ReturnValue) == 0x0000C8, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_GetModifierValue_ReturnValue) == 0x0000D0, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_GetModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_GetModifierType_ReturnValue) == 0x0000D4, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_GetModifierType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, CallFunc_Conv_FloatToForceSelection_ReturnValue) == 0x0000D8, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::CallFunc_Conv_FloatToForceSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode, K2Node_MakeStruct_LightProjectileInitializationData) == 0x0000F8, "Member 'LightProjectile_VLA_HW_CloudBurst_Child_C_OnExplode::K2Node_MakeStruct_LightProjectileInitializationData' has a wrong offset!");

}

