#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_MissionUsable

#include "Basic.hpp"

#include "Enum_MissionUsableState_structs.hpp"
#include "GbxMission_structs.hpp"


namespace SDK::Params
{

// Function IO_MissionUsable.IO_MissionUsable_C.SetLastUser
// 0x0018 (0x0018 - 0x0000)
struct IO_MissionUsable_C_SetLastUser final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakPlayerController*                   K2Node_DynamicCast_AsOak_Player_Controller;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionUsable_C_SetLastUser) == 0x000008, "Wrong alignment on IO_MissionUsable_C_SetLastUser");
static_assert(sizeof(IO_MissionUsable_C_SetLastUser) == 0x000018, "Wrong size on IO_MissionUsable_C_SetLastUser");
static_assert(offsetof(IO_MissionUsable_C_SetLastUser, Controller) == 0x000000, "Member 'IO_MissionUsable_C_SetLastUser::Controller' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_SetLastUser, K2Node_DynamicCast_AsOak_Player_Controller) == 0x000008, "Member 'IO_MissionUsable_C_SetLastUser::K2Node_DynamicCast_AsOak_Player_Controller' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_SetLastUser, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'IO_MissionUsable_C_SetLastUser::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.CheckForMissionSequenceFailsafe
// 0x0003 (0x0003 - 0x0000)
struct IO_MissionUsable_C_CheckForMissionSequenceFailsafe final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionUsable_C_CheckForMissionSequenceFailsafe) == 0x000001, "Wrong alignment on IO_MissionUsable_C_CheckForMissionSequenceFailsafe");
static_assert(sizeof(IO_MissionUsable_C_CheckForMissionSequenceFailsafe) == 0x000003, "Wrong size on IO_MissionUsable_C_CheckForMissionSequenceFailsafe");
static_assert(offsetof(IO_MissionUsable_C_CheckForMissionSequenceFailsafe, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'IO_MissionUsable_C_CheckForMissionSequenceFailsafe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_CheckForMissionSequenceFailsafe, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'IO_MissionUsable_C_CheckForMissionSequenceFailsafe::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_CheckForMissionSequenceFailsafe, CallFunc_IsValidClass_ReturnValue1) == 0x000002, "Member 'IO_MissionUsable_C_CheckForMissionSequenceFailsafe::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.SetUsableState
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionUsable_C_SetUsableState final
{
public:
	Enum_MissionUsableState                       State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionUsable_C_SetUsableState) == 0x000001, "Wrong alignment on IO_MissionUsable_C_SetUsableState");
static_assert(sizeof(IO_MissionUsable_C_SetUsableState) == 0x000001, "Wrong size on IO_MissionUsable_C_SetUsableState");
static_assert(offsetof(IO_MissionUsable_C_SetUsableState, State) == 0x000000, "Member 'IO_MissionUsable_C_SetUsableState::State' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable
// 0x0010 (0x0010 - 0x0000)
struct IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable) == 0x000008, "Wrong alignment on IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable");
static_assert(sizeof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable) == 0x000010, "Wrong size on IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable");
static_assert(offsetof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable, UserController) == 0x000000, "Member 'IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable::UserController' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable, UsedComponent) == 0x000008, "Member 'IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_3_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable::UsedComponent' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable
// 0x0010 (0x0010 - 0x0000)
struct IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    UsedComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable) == 0x000008, "Wrong alignment on IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable");
static_assert(sizeof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable) == 0x000010, "Wrong size on IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable");
static_assert(offsetof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable, UserController) == 0x000000, "Member 'IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable::UserController' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable, UsedComponent) == 0x000008, "Member 'IO_MissionUsable_C_BndEvt__Usable_K2Node_ComponentBoundEvent_4_UsableUsedOnChannelSignature__DelegateSignature_IO_MissionUsable::UsedComponent' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.__UserState_MissionUsableState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionUsable_C___UserState_MissionUsableState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionUsable_C___UserState_MissionUsableState_0) == 0x000001, "Wrong alignment on IO_MissionUsable_C___UserState_MissionUsableState_0");
static_assert(sizeof(IO_MissionUsable_C___UserState_MissionUsableState_0) == 0x000001, "Wrong size on IO_MissionUsable_C___UserState_MissionUsableState_0");
static_assert(offsetof(IO_MissionUsable_C___UserState_MissionUsableState_0, bFromLoad) == 0x000000, "Member 'IO_MissionUsable_C___UserState_MissionUsableState_0::bFromLoad' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.__UserState_MissionUsableState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionUsable_C___UserState_MissionUsableState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionUsable_C___UserState_MissionUsableState_1) == 0x000001, "Wrong alignment on IO_MissionUsable_C___UserState_MissionUsableState_1");
static_assert(sizeof(IO_MissionUsable_C___UserState_MissionUsableState_1) == 0x000001, "Wrong size on IO_MissionUsable_C___UserState_MissionUsableState_1");
static_assert(offsetof(IO_MissionUsable_C___UserState_MissionUsableState_1, bFromLoad) == 0x000000, "Member 'IO_MissionUsable_C___UserState_MissionUsableState_1::bFromLoad' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.__UserState_MissionUsableState_2
// 0x0001 (0x0001 - 0x0000)
struct IO_MissionUsable_C___UserState_MissionUsableState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionUsable_C___UserState_MissionUsableState_2) == 0x000001, "Wrong alignment on IO_MissionUsable_C___UserState_MissionUsableState_2");
static_assert(sizeof(IO_MissionUsable_C___UserState_MissionUsableState_2) == 0x000001, "Wrong size on IO_MissionUsable_C___UserState_MissionUsableState_2");
static_assert(offsetof(IO_MissionUsable_C___UserState_MissionUsableState_2, bFromLoad) == 0x000000, "Member 'IO_MissionUsable_C___UserState_MissionUsableState_2::bFromLoad' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.ExecuteUbergraph_IO_MissionUsable
// 0x0030 (0x0030 - 0x0000)
struct IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_MissionUsableState                       K2Node_Event_State;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_ComponentBoundEvent_UserController1;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent1;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent_UserController;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_UsedComponent;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMissionObjectiveStatus                       CallFunc_GetMissionObjectiveStatusRef_ReturnValue; // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable) == 0x000008, "Wrong alignment on IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable");
static_assert(sizeof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable) == 0x000030, "Wrong size on IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, EntryPoint) == 0x000000, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_Event_State) == 0x000005, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_ComponentBoundEvent_UserController1) == 0x000008, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_ComponentBoundEvent_UserController1' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_ComponentBoundEvent_UsedComponent1) == 0x000010, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_ComponentBoundEvent_UsedComponent1' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_ComponentBoundEvent_UserController) == 0x000018, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_ComponentBoundEvent_UserController' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_ComponentBoundEvent_UsedComponent) == 0x000020, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_ComponentBoundEvent_UsedComponent' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_UserStateEvent_bFromLoad2) == 0x000028, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_UserStateEvent_bFromLoad1) == 0x000029, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_UserStateEvent_bFromLoad) == 0x00002A, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, CallFunc_GetMissionObjectiveStatusRef_ReturnValue) == 0x00002B, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::CallFunc_GetMissionObjectiveStatusRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, K2Node_SwitchEnum1_CmpSuccess) == 0x00002C, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, CallFunc_IsValidClass_ReturnValue) == 0x00002D, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, CallFunc_HasAuthority_ReturnValue1) == 0x00002E, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable, CallFunc_IsValidClass_ReturnValue1) == 0x00002F, "Member 'IO_MissionUsable_C_ExecuteUbergraph_IO_MissionUsable::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");

// Function IO_MissionUsable.IO_MissionUsable_C.MissionUsableStartedUse__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature final
{
public:
	class AController*                            UserController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature) == 0x000008, "Wrong alignment on IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature");
static_assert(sizeof(IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature) == 0x000008, "Wrong size on IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature");
static_assert(offsetof(IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature, UserController) == 0x000000, "Member 'IO_MissionUsable_C_MissionUsableStartedUse__DelegateSignature::UserController' has a wrong offset!");

}

