#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputComponent_GunnersNest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function InputComponent_GunnersNest.InputComponent_GunnersNest_C.ExecuteUbergraph_InputComponent_GunnersNest
// 0x0040 (0x0040 - 0x0000)
struct InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Val;                            // 0x0004(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGamepad;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASeatPawn*                              K2Node_DynamicCast_AsSeat_Pawn;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_GbxInputEvent_OakLookAxis_Val;              // 0x002C(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_GbxInputEvent_OakLookAxis_bGamepad;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest) == 0x000008, "Wrong alignment on InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest");
static_assert(sizeof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest) == 0x000040, "Wrong size on InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, EntryPoint) == 0x000000, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::EntryPoint' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, K2Node_CustomEvent_Val) == 0x000004, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::K2Node_CustomEvent_Val' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, K2Node_CustomEvent_bGamepad) == 0x000010, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::K2Node_CustomEvent_bGamepad' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, K2Node_DynamicCast_AsSeat_Pawn) == 0x000020, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::K2Node_DynamicCast_AsSeat_Pawn' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, K2Node_GbxInputEvent_OakLookAxis_Val) == 0x00002C, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::K2Node_GbxInputEvent_OakLookAxis_Val' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest, K2Node_GbxInputEvent_OakLookAxis_bGamepad) == 0x000038, "Member 'InputComponent_GunnersNest_C_ExecuteUbergraph_InputComponent_GunnersNest::K2Node_GbxInputEvent_OakLookAxis_bGamepad' has a wrong offset!");

// Function InputComponent_GunnersNest.InputComponent_GunnersNest_C.GbxInputEvent_5
// 0x0010 (0x0010 - 0x0000)
struct InputComponent_GunnersNest_C_GbxInputEvent_5 final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamePad;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_GunnersNest_C_GbxInputEvent_5) == 0x000004, "Wrong alignment on InputComponent_GunnersNest_C_GbxInputEvent_5");
static_assert(sizeof(InputComponent_GunnersNest_C_GbxInputEvent_5) == 0x000010, "Wrong size on InputComponent_GunnersNest_C_GbxInputEvent_5");
static_assert(offsetof(InputComponent_GunnersNest_C_GbxInputEvent_5, Val) == 0x000000, "Member 'InputComponent_GunnersNest_C_GbxInputEvent_5::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_GbxInputEvent_5, bGamePad) == 0x00000C, "Member 'InputComponent_GunnersNest_C_GbxInputEvent_5::bGamePad' has a wrong offset!");

// Function InputComponent_GunnersNest.InputComponent_GunnersNest_C.K2Node_GbxInputEvent_OakLookAxis_6_def_exec
// 0x0010 (0x0010 - 0x0000)
struct InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamePad;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec) == 0x000004, "Wrong alignment on InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec");
static_assert(sizeof(InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec) == 0x000010, "Wrong size on InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec");
static_assert(offsetof(InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec, Val) == 0x000000, "Member 'InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec, bGamePad) == 0x00000C, "Member 'InputComponent_GunnersNest_C_K2Node_GbxInputEvent_OakLookAxis_6_def_exec::bGamePad' has a wrong offset!");

// Function InputComponent_GunnersNest.InputComponent_GunnersNest_C.Look
// 0x0020 (0x0020 - 0x0000)
struct InputComponent_GunnersNest_C_Look final
{
public:
	struct FVector                                Val;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputComponent_GunnersNest_C_Look) == 0x000008, "Wrong alignment on InputComponent_GunnersNest_C_Look");
static_assert(sizeof(InputComponent_GunnersNest_C_Look) == 0x000020, "Wrong size on InputComponent_GunnersNest_C_Look");
static_assert(offsetof(InputComponent_GunnersNest_C_Look, Val) == 0x000000, "Member 'InputComponent_GunnersNest_C_Look::Val' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_Look, CallFunc_BreakVector_X) == 0x00000C, "Member 'InputComponent_GunnersNest_C_Look::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_Look, CallFunc_BreakVector_Y) == 0x000010, "Member 'InputComponent_GunnersNest_C_Look::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_Look, CallFunc_BreakVector_Z) == 0x000014, "Member 'InputComponent_GunnersNest_C_Look::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(InputComponent_GunnersNest_C_Look, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000018, "Member 'InputComponent_GunnersNest_C_Look::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");

}

