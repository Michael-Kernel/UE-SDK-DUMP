#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPChar_DigiClone_Base

#include "Basic.hpp"

#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "BPChar_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPChar_DigiClone_Base.BPChar_DigiClone_Base_C
// 0x0180 (0x2510 - 0x2390)
class ABPChar_DigiClone_Base_C : public ABPChar_Enemy_C
{
public:
	uint8                                         Pad_2381[0x7];                                     // 0x2381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPChar_DigiClone_Base_C;            // 0x2388(0x0008)(Transient, DuplicateTransient)
	class UWwiseAudioComponent*                   DigicloneAudioComponent;                           // 0x2390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOakInventoryListComponent*             InventoryList;                                     // 0x2398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAICloakComponent*                      AICloak;                                           // 0x23A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Provoke;                                           // 0x23A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxSkeletalMeshComponent*              Head;                                              // 0x23B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxCustomizationComponent*             GbxCustomization;                                  // 0x23B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTerritoryComponent*                    Territory;                                         // 0x23C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BlowUpDigiCloneTimeLine_Scale_4BDCA3914B737F3B3EF31AAC2D0727AD; // 0x23C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BlowUpDigiCloneTimeLine__Direction_4BDCA3914B737F3B3EF31AAC2D0727AD; // 0x23CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23CD[0x3];                                     // 0x23CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BlowUpDigiCloneTimeLine;                           // 0x23D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleDigiClone_Scale_22CA4A9B46611182B8749287980055A1; // 0x23D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ScaleDigiClone__Direction_22CA4A9B46611182B8749287980055A1; // 0x23DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23DD[0x3];                                     // 0x23DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ScaleDigiClone;                                    // 0x23E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableDigiCloneModEffects;                        // 0x23E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E9[0x7];                                     // 0x23E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakActionAbility_Digiclone*            OwnerActionAbility;                                // 0x23F0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         SizeIncreaseOperand;                               // 0x23F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23FC[0x4];                                     // 0x23FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter_Player*                   OwnerPlayer;                                       // 0x2400(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UParticleSystemComponent*               ProvokeFX;                                         // 0x2408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableValueHandle                  ProvokeDuration;                                   // 0x2410(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bHasBeenReleased;                                  // 0x2428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2429[0x7];                                     // 0x2429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  PanicButtonDamage;                                 // 0x2430(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  Panic_Button_Radius;                               // 0x2448(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	EOakElementalType                             AutomagicallyDamageType;                           // 0x2460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2461[0x7];                                     // 0x2461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  AutomagicallyBonusDamage;                          // 0x2468(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         AutomagicallyGrade;                                // 0x2480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2484[0x4];                                     // 0x2484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  MaxRangeBase;                                      // 0x2488(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  MaxRangeSeperationAnxiety;                         // 0x24A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           ProvokeFXTimer;                                    // 0x24B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableValueHandle                  TrapCardDamage;                                    // 0x24C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           Provoke_Sound_Timer;                               // 0x24D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWwiseAudioComponent*                   ProvokeAudioComponent;                             // 0x24E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkill_Operative_WantVsNeed_C*   LivesOfOthers;                                     // 0x24E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsNotUsingMummersWeapon;                          // 0x24F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_24F1[0x7];                                     // 0x24F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        SpawnParticleSystem;                               // 0x24F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinMaxStatusEffectStackCount;                      // 0x2500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTeleporting;                                    // 0x2504(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2505[0x3];                                     // 0x2505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           IsStillFallingTimer;                               // 0x2508(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BPChar_DigiClone_Base(int32 EntryPoint);
	void CheckIfStillFalling();
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void SetIsTeleporting(bool bIsTeleporting_0);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OpenTrapCardGate();
	void OnClientWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnWeaponEquipped(class AWeapon* DetachedWeapon, class AWeapon* AttachedWeapon, class UWeaponSlotData* AttachedSlot);
	void BindDelegates();
	void Setup_Lives_of_Others();
	void StartProvoke();
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_1_TakeAnyPipelineDamageDelegate__DelegateSignature_BPCharParent_DigiClone_UNIX1536311531(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnInventoryPickedUp(class AActor* PickedUpActor, int32 Quantity);
	void OnInventoryUnequipped(class AActor* InventoryActor, class UInventorySlotData* SlotData);
	void OnInventoryEquipped(class AActor* InventoryActor, class UInventorySlotData* SlotData);
	void BndEvt__AICloak_K2Node_ComponentBoundEvent_1_AICloakEvent__DelegateSignature_BPChar_DigiClone_Base();
	void BndEvt__AICloak_K2Node_ComponentBoundEvent_0_AICloakEvent__DelegateSignature_BPChar_DigiClone_Base();
	void OnDigicloneTeleport();
	void UpdateMaxTeleportRange();
	void SpawnDigiCloneGrenadeOnDeath();
	void DigiCloneThrowGrenade();
	void Automagically_Deal_Bonus_Damage(class AActor* Actor, class UClass* DamageSource, float Damage);
	void AutomagicallyRemoveDamageOverride();
	void AutomagicallyRegisterDamageOverride(EOakElementalType ElementalType, int32 Grade);
	void DoExplode();
	void OnDigicloneDied();
	void ReleaseDigiclone();
	void KillDigiCloneNow();
	void BlowUpDigiClone();
	void StopScalingDigiClone();
	void BeginScalingDigiClone();
	void BndEvt__OakDamageCauserComponent_K2Node_ComponentBoundEvent_0_CauseDeathDelegate__DelegateSignature_BPCharParent_DigiClone(const class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void BndEvt__OakDamageComponent_K2Node_ComponentBoundEvent_0_DamageCompDiedDelegate__DelegateSignature_BPCharParent_DigiClone(class AActor* DamageReceiver, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void BlowUpDigiCloneTimeLine__UpdateFunc();
	void BlowUpDigiCloneTimeLine__FinishedFunc();
	void ScaleDigiClone__UpdateFunc();
	void ScaleDigiClone__FinishedFunc();
	void UserConstructionScript();
	void GetSizeIncreaseOperand(float* Res);
	void TrySpawnMummersWeapon(class AWeapon** Weapon);
	void TryConfigureProvoke(bool* Provoke_equiped);
	void RemoveProvokeFX();
	void TryConfigureAbstractGrenades();
	class AWeapon* SpawnDefaultWeapon();
	void ConfigureShield();
	void TryConfigureTrapCard();
	void ApplyOperativeWeaponMaterials(class AWeapon* Weapon);
	void OnRep_bIsNotUsingMummersWeapon();
	void ConfigureMinMax();
	void TrySpawnLevelTwoWeapon(class AWeapon** Res);
	void HandleTeleportSwapStart();
	void HandleTeleportSwapEnd();
	void Get_Owners_Grenade_Projectile_Class(class UClass** Grenade_Projectile_Class);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPChar_DigiClone_Base_C">();
	}
	static class ABPChar_DigiClone_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPChar_DigiClone_Base_C>();
	}
};
static_assert(alignof(ABPChar_DigiClone_Base_C) == 0x000010, "Wrong alignment on ABPChar_DigiClone_Base_C");
static_assert(sizeof(ABPChar_DigiClone_Base_C) == 0x002510, "Wrong size on ABPChar_DigiClone_Base_C");
static_assert(offsetof(ABPChar_DigiClone_Base_C, UberGraphFrame_BPChar_DigiClone_Base_C) == 0x002388, "Member 'ABPChar_DigiClone_Base_C::UberGraphFrame_BPChar_DigiClone_Base_C' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, DigicloneAudioComponent) == 0x002390, "Member 'ABPChar_DigiClone_Base_C::DigicloneAudioComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, InventoryList) == 0x002398, "Member 'ABPChar_DigiClone_Base_C::InventoryList' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, AICloak) == 0x0023A0, "Member 'ABPChar_DigiClone_Base_C::AICloak' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, Provoke) == 0x0023A8, "Member 'ABPChar_DigiClone_Base_C::Provoke' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, Head) == 0x0023B0, "Member 'ABPChar_DigiClone_Base_C::Head' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, GbxCustomization) == 0x0023B8, "Member 'ABPChar_DigiClone_Base_C::GbxCustomization' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, Territory) == 0x0023C0, "Member 'ABPChar_DigiClone_Base_C::Territory' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, BlowUpDigiCloneTimeLine_Scale_4BDCA3914B737F3B3EF31AAC2D0727AD) == 0x0023C8, "Member 'ABPChar_DigiClone_Base_C::BlowUpDigiCloneTimeLine_Scale_4BDCA3914B737F3B3EF31AAC2D0727AD' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, BlowUpDigiCloneTimeLine__Direction_4BDCA3914B737F3B3EF31AAC2D0727AD) == 0x0023CC, "Member 'ABPChar_DigiClone_Base_C::BlowUpDigiCloneTimeLine__Direction_4BDCA3914B737F3B3EF31AAC2D0727AD' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, BlowUpDigiCloneTimeLine) == 0x0023D0, "Member 'ABPChar_DigiClone_Base_C::BlowUpDigiCloneTimeLine' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ScaleDigiClone_Scale_22CA4A9B46611182B8749287980055A1) == 0x0023D8, "Member 'ABPChar_DigiClone_Base_C::ScaleDigiClone_Scale_22CA4A9B46611182B8749287980055A1' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ScaleDigiClone__Direction_22CA4A9B46611182B8749287980055A1) == 0x0023DC, "Member 'ABPChar_DigiClone_Base_C::ScaleDigiClone__Direction_22CA4A9B46611182B8749287980055A1' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ScaleDigiClone) == 0x0023E0, "Member 'ABPChar_DigiClone_Base_C::ScaleDigiClone' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, bEnableDigiCloneModEffects) == 0x0023E8, "Member 'ABPChar_DigiClone_Base_C::bEnableDigiCloneModEffects' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, OwnerActionAbility) == 0x0023F0, "Member 'ABPChar_DigiClone_Base_C::OwnerActionAbility' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, SizeIncreaseOperand) == 0x0023F8, "Member 'ABPChar_DigiClone_Base_C::SizeIncreaseOperand' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, OwnerPlayer) == 0x002400, "Member 'ABPChar_DigiClone_Base_C::OwnerPlayer' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ProvokeFX) == 0x002408, "Member 'ABPChar_DigiClone_Base_C::ProvokeFX' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ProvokeDuration) == 0x002410, "Member 'ABPChar_DigiClone_Base_C::ProvokeDuration' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, bHasBeenReleased) == 0x002428, "Member 'ABPChar_DigiClone_Base_C::bHasBeenReleased' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, PanicButtonDamage) == 0x002430, "Member 'ABPChar_DigiClone_Base_C::PanicButtonDamage' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, Panic_Button_Radius) == 0x002448, "Member 'ABPChar_DigiClone_Base_C::Panic_Button_Radius' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, AutomagicallyDamageType) == 0x002460, "Member 'ABPChar_DigiClone_Base_C::AutomagicallyDamageType' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, AutomagicallyBonusDamage) == 0x002468, "Member 'ABPChar_DigiClone_Base_C::AutomagicallyBonusDamage' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, AutomagicallyGrade) == 0x002480, "Member 'ABPChar_DigiClone_Base_C::AutomagicallyGrade' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, MaxRangeBase) == 0x002488, "Member 'ABPChar_DigiClone_Base_C::MaxRangeBase' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, MaxRangeSeperationAnxiety) == 0x0024A0, "Member 'ABPChar_DigiClone_Base_C::MaxRangeSeperationAnxiety' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ProvokeFXTimer) == 0x0024B8, "Member 'ABPChar_DigiClone_Base_C::ProvokeFXTimer' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, TrapCardDamage) == 0x0024C0, "Member 'ABPChar_DigiClone_Base_C::TrapCardDamage' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, Provoke_Sound_Timer) == 0x0024D8, "Member 'ABPChar_DigiClone_Base_C::Provoke_Sound_Timer' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, ProvokeAudioComponent) == 0x0024E0, "Member 'ABPChar_DigiClone_Base_C::ProvokeAudioComponent' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, LivesOfOthers) == 0x0024E8, "Member 'ABPChar_DigiClone_Base_C::LivesOfOthers' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, bIsNotUsingMummersWeapon) == 0x0024F0, "Member 'ABPChar_DigiClone_Base_C::bIsNotUsingMummersWeapon' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, SpawnParticleSystem) == 0x0024F8, "Member 'ABPChar_DigiClone_Base_C::SpawnParticleSystem' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, MinMaxStatusEffectStackCount) == 0x002500, "Member 'ABPChar_DigiClone_Base_C::MinMaxStatusEffectStackCount' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, bIsTeleporting) == 0x002504, "Member 'ABPChar_DigiClone_Base_C::bIsTeleporting' has a wrong offset!");
static_assert(offsetof(ABPChar_DigiClone_Base_C, IsStillFallingTimer) == 0x002508, "Member 'ABPChar_DigiClone_Base_C::IsStillFallingTimer' has a wrong offset!");

}

