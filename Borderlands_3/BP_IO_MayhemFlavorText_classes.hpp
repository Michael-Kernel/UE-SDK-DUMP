#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IO_MayhemFlavorText

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IO_MayhemFlavorText.BP_IO_MayhemFlavorText_C
// 0x0028 (0x06B8 - 0x0690)
class ABP_IO_MayhemFlavorText_C final : public AConditionalFlavorTextIO
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(Transient, DuplicateTransient)
	class UOakMinimapIconComponent*               OakMinimapIcon;                                    // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UsableCollision;                                   // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGbxChildActorComponent*                IO_Switch_GenericButton_V1;                        // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_IO_Switch_Parent_V1_C*              MySwitch;                                          // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void BndEvt__UsableComponent_K2Node_ComponentBoundEvent_0_UsableUsedSignature__DelegateSignature_BP_IO_MayhemFlavorText(const struct FUseEvent& UseEvent);
	void ExecuteUbergraph_BP_IO_MayhemFlavorText(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IO_MayhemFlavorText_C">();
	}
	static class ABP_IO_MayhemFlavorText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IO_MayhemFlavorText_C>();
	}
};
static_assert(alignof(ABP_IO_MayhemFlavorText_C) == 0x000008, "Wrong alignment on ABP_IO_MayhemFlavorText_C");
static_assert(sizeof(ABP_IO_MayhemFlavorText_C) == 0x0006B8, "Wrong size on ABP_IO_MayhemFlavorText_C");
static_assert(offsetof(ABP_IO_MayhemFlavorText_C, UberGraphFrame) == 0x000690, "Member 'ABP_IO_MayhemFlavorText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_IO_MayhemFlavorText_C, OakMinimapIcon) == 0x000698, "Member 'ABP_IO_MayhemFlavorText_C::OakMinimapIcon' has a wrong offset!");
static_assert(offsetof(ABP_IO_MayhemFlavorText_C, UsableCollision) == 0x0006A0, "Member 'ABP_IO_MayhemFlavorText_C::UsableCollision' has a wrong offset!");
static_assert(offsetof(ABP_IO_MayhemFlavorText_C, IO_Switch_GenericButton_V1) == 0x0006A8, "Member 'ABP_IO_MayhemFlavorText_C::IO_Switch_GenericButton_V1' has a wrong offset!");
static_assert(offsetof(ABP_IO_MayhemFlavorText_C, MySwitch) == 0x0006B0, "Member 'ABP_IO_MayhemFlavorText_C::MySwitch' has a wrong offset!");

}

