#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Init_Ranged2_ReloadSpeedBonus

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Init_Ranged2_ReloadSpeedBonus.Init_Ranged2_ReloadSpeedBonus_C.CalculateAttributeInitialValue
// 0x0050 (0x0050 - 0x0000)
struct Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue final
{
public:
	const class UObject*                          Context;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0010(0x0010)(NoDestructor)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueFromAttributeDefinedRow_ReturnValue; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPassiveSkillGrade_Grade;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue) == 0x000008, "Wrong alignment on Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue");
static_assert(sizeof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue) == 0x000050, "Wrong size on Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, Context) == 0x000000, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::Context' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, ReturnValue) == 0x000008, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, K2Node_MakeStruct_DataTableRowHandle) == 0x000010, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, K2Node_DynamicCast_AsOak_Character) == 0x000020, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, CallFunc_GetValueFromAttributeDefinedRow_ReturnValue) == 0x000038, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::CallFunc_GetValueFromAttributeDefinedRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, CallFunc_GetValueOfAttribute_ReturnValue) == 0x00003C, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, CallFunc_GetPassiveSkillGrade_Grade) == 0x000040, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::CallFunc_GetPassiveSkillGrade_Grade' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000044, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Init_Ranged2_ReloadSpeedBonus_C_CalculateAttributeInitialValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

