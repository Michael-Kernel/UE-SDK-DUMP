#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_OperativeDLC_10

#include "Basic.hpp"

#include "GbxAbilities_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function Passive_OperativeDLC_10.Passive_OperativeDLC_10_C.ExecuteUbergraph_Passive_OperativeDLC_10
// 0x00C8 (0x00C8 - 0x0000)
struct Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   K2Node_CustomEvent_DamageType;                     // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    K2Node_CustomEvent_DamageSource;                   // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   K2Node_CustomEvent_Details;                        // 0x0040(0x0060)(ContainsInstancedReference)
	struct FGbxAbilityResourceSpec_ScriptDelegate K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate; // 0x00A0(0x0028)(NoDestructor)
};
static_assert(alignof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10) == 0x000008, "Wrong alignment on Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10");
static_assert(sizeof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10) == 0x0000C8, "Wrong size on Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, EntryPoint) == 0x000000, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::EntryPoint' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CustomEvent_DamageInstigator) == 0x000018, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CustomEvent_Damage) == 0x000020, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CustomEvent_DamageType) == 0x000028, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CustomEvent_DamageSource) == 0x000030, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CustomEvent_DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CustomEvent_DamagedActor) == 0x000038, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_CustomEvent_Details) == 0x000040, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10, K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate) == 0x0000A0, "Member 'Passive_OperativeDLC_10_C_ExecuteUbergraph_Passive_OperativeDLC_10::K2Node_MakeStruct_GbxAbilityResourceSpec_ScriptDelegate' has a wrong offset!");

// Function Passive_OperativeDLC_10.Passive_OperativeDLC_10_C.DLCSkill10_OnCausedAnyDamage
// 0x0088 (0x0088 - 0x0000)
struct Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGbxDamageType*                   DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageSource*                    DamageSource;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamagedActor;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCausedDamageDetails                   Details;                                           // 0x0028(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage) == 0x000008, "Wrong alignment on Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage");
static_assert(sizeof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage) == 0x000088, "Wrong size on Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage");
static_assert(offsetof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage, DamageInstigator) == 0x000000, "Member 'Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage::DamageInstigator' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage, Damage) == 0x000008, "Member 'Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage, DamageType) == 0x000010, "Member 'Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage, DamageSource) == 0x000018, "Member 'Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage::DamageSource' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage, DamagedActor) == 0x000020, "Member 'Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage, Details) == 0x000028, "Member 'Passive_OperativeDLC_10_C_DLCSkill10_OnCausedAnyDamage::Details' has a wrong offset!");

}

