#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Condition_InventoryAbility_PlayerLevelReq

#include "Basic.hpp"


namespace SDK::Params
{

// Function Condition_InventoryAbility_PlayerLevelReq.Condition_InventoryAbility_PlayerLevelReq_C.EvaluateCondition
// 0x0050 (0x0050 - 0x0000)
struct Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OptionalContext;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MyLevel;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueOfAttribute_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition) == 0x000008, "Wrong alignment on Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition");
static_assert(sizeof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition) == 0x000050, "Wrong size on Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, Context) == 0x000000, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::Context' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, OptionalContext) == 0x000008, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::OptionalContext' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, ReturnValue) == 0x000010, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, MyLevel) == 0x000014, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::MyLevel' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, K2Node_DynamicCast_AsActor) == 0x000018, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, K2Node_DynamicCast_AsOak_Character) == 0x000030, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_GetValueOfAttribute_ReturnValue) == 0x00003C, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_GetValueOfAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000045, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_Greater_IntInt_ReturnValue) == 0x000046, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000047, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000049, "Member 'Condition_InventoryAbility_PlayerLevelReq_C_EvaluateCondition::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

}

