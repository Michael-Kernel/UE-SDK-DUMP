#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_IO_ExplodingPipe

#include "Basic.hpp"

#include "Enum_IO_ExplodingPipe_DestroyedState_structs.hpp"


namespace SDK::Params
{

// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.SetPipeFlowState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_ExplodingPipe_C_SetPipeFlowState final
{
public:
	bool                                          HasFlow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_ExplodingPipe_C_SetPipeFlowState) == 0x000001, "Wrong alignment on BPI_IO_ExplodingPipe_C_SetPipeFlowState");
static_assert(sizeof(BPI_IO_ExplodingPipe_C_SetPipeFlowState) == 0x000001, "Wrong size on BPI_IO_ExplodingPipe_C_SetPipeFlowState");
static_assert(offsetof(BPI_IO_ExplodingPipe_C_SetPipeFlowState, HasFlow) == 0x000000, "Member 'BPI_IO_ExplodingPipe_C_SetPipeFlowState::HasFlow' has a wrong offset!");

// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.SetPipeState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_ExplodingPipe_C_SetPipeState final
{
public:
	Enum_IO_ExplodingPipe_DestroyedState          PipeState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_IO_ExplodingPipe_C_SetPipeState) == 0x000001, "Wrong alignment on BPI_IO_ExplodingPipe_C_SetPipeState");
static_assert(sizeof(BPI_IO_ExplodingPipe_C_SetPipeState) == 0x000001, "Wrong size on BPI_IO_ExplodingPipe_C_SetPipeState");
static_assert(offsetof(BPI_IO_ExplodingPipe_C_SetPipeState, PipeState) == 0x000000, "Member 'BPI_IO_ExplodingPipe_C_SetPipeState::PipeState' has a wrong offset!");

// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.GetPipeDestroyedState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_ExplodingPipe_C_GetPipeDestroyedState final
{
public:
	bool                                          Destroyed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_ExplodingPipe_C_GetPipeDestroyedState) == 0x000001, "Wrong alignment on BPI_IO_ExplodingPipe_C_GetPipeDestroyedState");
static_assert(sizeof(BPI_IO_ExplodingPipe_C_GetPipeDestroyedState) == 0x000001, "Wrong size on BPI_IO_ExplodingPipe_C_GetPipeDestroyedState");
static_assert(offsetof(BPI_IO_ExplodingPipe_C_GetPipeDestroyedState, Destroyed) == 0x000000, "Member 'BPI_IO_ExplodingPipe_C_GetPipeDestroyedState::Destroyed' has a wrong offset!");

// Function BPI_IO_ExplodingPipe.BPI_IO_ExplodingPipe_C.GetPipeFlowState
// 0x0001 (0x0001 - 0x0000)
struct BPI_IO_ExplodingPipe_C_GetPipeFlowState final
{
public:
	bool                                          HasFlow;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_IO_ExplodingPipe_C_GetPipeFlowState) == 0x000001, "Wrong alignment on BPI_IO_ExplodingPipe_C_GetPipeFlowState");
static_assert(sizeof(BPI_IO_ExplodingPipe_C_GetPipeFlowState) == 0x000001, "Wrong size on BPI_IO_ExplodingPipe_C_GetPipeFlowState");
static_assert(offsetof(BPI_IO_ExplodingPipe_C_GetPipeFlowState, HasFlow) == 0x000000, "Member 'BPI_IO_ExplodingPipe_C_GetPipeFlowState::HasFlow' has a wrong offset!");

}

