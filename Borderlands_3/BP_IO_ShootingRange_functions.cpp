#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IO_ShootingRange

#include "Basic.hpp"

#include "BP_IO_ShootingRange_classes.hpp"
#include "BP_IO_ShootingRange_parameters.hpp"


namespace SDK
{

// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.TurnOffScoreboard
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::TurnOffScoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "TurnOffScoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.TurnOnScoreboard
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::TurnOnScoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "TurnOnScoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShootingRange_Stop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::ShootingRange_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShootingRange_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShootingRange_Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ShootingRangeState                 Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::ShootingRange_Start(Enum_ShootingRangeState Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShootingRange_Start");

	Params::BP_IO_ShootingRange_C_ShootingRange_Start Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Presentation_UpdateScore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::Presentation_UpdateScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Presentation_UpdateScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Presentation_UpdateTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::Presentation_UpdateTimer(float TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Presentation_UpdateTimer");

	Params::BP_IO_ShootingRange_C_Presentation_UpdateTimer Parms{};

	Parms.TimeRemaining = TimeRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.OnRep_Score
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::OnRep_Score()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "OnRep_Score");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Target_Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_IO_Fidget_C*                  Fidget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::Target_Start(class ABP_IO_Fidget_C* Fidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Target_Start");

	Params::BP_IO_ShootingRange_C_Target_Start Parms{};

	Parms.Fidget = Fidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Target_Stop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_IO_Fidget_C*                  Fidget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::Target_Stop(class ABP_IO_Fidget_C* Fidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Target_Stop");

	Params::BP_IO_ShootingRange_C_Target_Stop Parms{};

	Parms.Fidget = Fidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Timer__FinishedFunc
// (BlueprintEvent)

void ABP_IO_ShootingRange_C::Timer__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Timer__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Timer__UpdateFunc
// (BlueprintEvent)

void ABP_IO_ShootingRange_C::Timer__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Timer__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_IO_ShootingRange_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShotTarget_Hit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_IO_Fidget_C*                  Fidget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::ShotTarget_Hit(class ABP_IO_Fidget_C* Fidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShotTarget_Hit");

	Params::BP_IO_ShootingRange_C_ShotTarget_Hit Parms{};

	Parms.Fidget = Fidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.NextTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::NextTarget(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "NextTarget");

	Params::BP_IO_ShootingRange_C_NextTarget Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.TargetStopped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_IO_Fidget_C*                  Fidget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::TargetStopped(class ABP_IO_Fidget_C* Fidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "TargetStopped");

	Params::BP_IO_ShootingRange_C_TargetStopped Parms{};

	Parms.Fidget = Fidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShotTarget_HandsomeJack
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::ShotTarget_HandsomeJack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShotTarget_HandsomeJack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShotTarget_Claptrap
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::ShotTarget_Claptrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShotTarget_Claptrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Init_HandsomeJackTargets
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::Init_HandsomeJackTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Init_HandsomeJackTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.SpawnClaptrap
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::SpawnClaptrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "SpawnClaptrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Timer_Start
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::Timer_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Timer_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Timer_Stop
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::Timer_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Timer_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Button_StartNormal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::Button_StartNormal(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Button_StartNormal");

	Params::BP_IO_ShootingRange_C_Button_StartNormal Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Button_StartHard
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::Button_StartHard(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Button_StartHard");

	Params::BP_IO_ShootingRange_C_Button_StartHard Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.__UserState_ShootingRangeState_0
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_IO_ShootingRange_C::__UserState_ShootingRangeState_0(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "__UserState_ShootingRangeState_0");

	Params::BP_IO_ShootingRange_C___UserState_ShootingRangeState_0 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.__UserState_ShootingRangeState_1
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_IO_ShootingRange_C::__UserState_ShootingRangeState_1(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "__UserState_ShootingRangeState_1");

	Params::BP_IO_ShootingRange_C___UserState_ShootingRangeState_1 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.__UserState_ShootingRangeState_2
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_IO_ShootingRange_C::__UserState_ShootingRangeState_2(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "__UserState_ShootingRangeState_2");

	Params::BP_IO_ShootingRange_C___UserState_ShootingRangeState_2 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Presentation_Start
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::Presentation_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Presentation_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Presentation_Finished
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Perfect                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_IO_ShootingRange_C::Presentation_Finished(bool Perfect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Presentation_Finished");

	Params::BP_IO_ShootingRange_C_Presentation_Finished Parms{};

	Parms.Perfect = Perfect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange");

	Params::BP_IO_ShootingRange_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange");

	Params::BP_IO_ShootingRange_C_BndEvt__Usable_K2Node_ComponentBoundEvent_1_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.SpawnHandsomeJack
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::SpawnHandsomeJack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "SpawnHandsomeJack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.Init_ClaptrapTargets
// (BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::Init_ClaptrapTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "Init_ClaptrapTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.BndEvt__Usable_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange
// (BlueprintEvent)
// Parameters:
// class AController*                      UserController                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              UsedComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::BndEvt__Usable_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange(class AController* UserController, class UPrimitiveComponent* UsedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange");

	Params::BP_IO_ShootingRange_C_BndEvt__Usable_K2Node_ComponentBoundEvent_2_UsableUsedOnChannelSignature__DelegateSignature_BP_IO_ShootingRange Parms{};

	Parms.UserController = UserController;
	Parms.UsedComponent = UsedComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.PlayPerfectCelebration
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::PlayPerfectCelebration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "PlayPerfectCelebration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.__UserState_ShootingRangeState_MissionLocked_0
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_IO_ShootingRange_C::__UserState_ShootingRangeState_MissionLocked_0(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "__UserState_ShootingRangeState_MissionLocked_0");

	Params::BP_IO_ShootingRange_C___UserState_ShootingRangeState_MissionLocked_0 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.__UserState_ShootingRangeState_MissionLocked_1
// (BlueprintEvent)
// Parameters:
// bool                                    bFromLoad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_IO_ShootingRange_C::__UserState_ShootingRangeState_MissionLocked_1(bool bFromLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "__UserState_ShootingRangeState_MissionLocked_1");

	Params::BP_IO_ShootingRange_C___UserState_ShootingRangeState_MissionLocked_1 Parms{};

	Parms.bFromLoad = bFromLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ExecuteUbergraph_BP_IO_ShootingRange
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::ExecuteUbergraph_BP_IO_ShootingRange(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ExecuteUbergraph_BP_IO_ShootingRange");

	Params::BP_IO_ShootingRange_C_ExecuteUbergraph_BP_IO_ShootingRange Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShootingRange_Started__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::ShootingRange_Started__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShootingRange_Started__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ShootingRange_Finished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Score_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::ShootingRange_Finished__DelegateSignature(int32 Score_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ShootingRange_Finished__DelegateSignature");

	Params::BP_IO_ShootingRange_C_ShootingRange_Finished__DelegateSignature Parms{};

	Parms.Score_0 = Score_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ChallengeStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_IO_ShootingRange_C::ChallengeStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ChallengeStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_IO_ShootingRange.BP_IO_ShootingRange_C.ChallengeCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetsHit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IO_ShootingRange_C::ChallengeCompleted__DelegateSignature(int32 TargetsHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IO_ShootingRange_C", "ChallengeCompleted__DelegateSignature");

	Params::BP_IO_ShootingRange_C_ChallengeCompleted__DelegateSignature Parms{};

	Parms.TargetsHit = TargetsHit;

	UObject::ProcessEvent(Func, &Parms);
}

}

