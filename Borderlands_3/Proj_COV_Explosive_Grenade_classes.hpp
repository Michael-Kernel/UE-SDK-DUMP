#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_COV_Explosive_Grenade

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_COV_Explosive_Grenade.Proj_COV_Explosive_Grenade_C
// 0x0050 (0x0730 - 0x06E0)
class AProj_COV_Explosive_Grenade_C final : public AOakAIBalancedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(Transient, DuplicateTransient)
	class UGbxProjectileMovementComponent*        GbxProjectileMovement;                             // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWwiseAudioComponent*                   WwiseAudio;                                        // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ExplosiveMesh;                                     // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PrimedLight;                                       // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PrimedFX;                                          // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MyDamageData;                                      // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MaxBounces;                                        // 0x0720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         FuseLength;                                        // 0x0724(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bAutoPrimeWhenThrown;                              // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_Proj_COV_Explosive_Grenade(int32 EntryPoint);
	void BndEvt__GbxProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileStopDelegate__DelegateSignature_Proj_PsychoMale_Shared_ThrownExplosive_Grenade(const struct FHitResult& ImpactResult);
	void BndEvt__MolotovMesh_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature_Proj_PsychoMale_Shared_Molotov(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void HNT_Drop();
	void HNT_Prime();
	void HNT_Throw();
	void OnBounce(const struct FHitResult& Hit, const struct FVector& ImpactVelocity);
	void OnExplode();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_COV_Explosive_Grenade_C">();
	}
	static class AProj_COV_Explosive_Grenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_COV_Explosive_Grenade_C>();
	}
};
static_assert(alignof(AProj_COV_Explosive_Grenade_C) == 0x000008, "Wrong alignment on AProj_COV_Explosive_Grenade_C");
static_assert(sizeof(AProj_COV_Explosive_Grenade_C) == 0x000730, "Wrong size on AProj_COV_Explosive_Grenade_C");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, UberGraphFrame) == 0x0006E0, "Member 'AProj_COV_Explosive_Grenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, GbxProjectileMovement) == 0x0006E8, "Member 'AProj_COV_Explosive_Grenade_C::GbxProjectileMovement' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, WwiseAudio) == 0x0006F0, "Member 'AProj_COV_Explosive_Grenade_C::WwiseAudio' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, ExplosiveMesh) == 0x0006F8, "Member 'AProj_COV_Explosive_Grenade_C::ExplosiveMesh' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, RotatingMovement) == 0x000700, "Member 'AProj_COV_Explosive_Grenade_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, PrimedLight) == 0x000708, "Member 'AProj_COV_Explosive_Grenade_C::PrimedLight' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, PrimedFX) == 0x000710, "Member 'AProj_COV_Explosive_Grenade_C::PrimedFX' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, MyDamageData) == 0x000718, "Member 'AProj_COV_Explosive_Grenade_C::MyDamageData' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, MaxBounces) == 0x000720, "Member 'AProj_COV_Explosive_Grenade_C::MaxBounces' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, FuseLength) == 0x000724, "Member 'AProj_COV_Explosive_Grenade_C::FuseLength' has a wrong offset!");
static_assert(offsetof(AProj_COV_Explosive_Grenade_C, bAutoPrimeWhenThrown) == 0x000728, "Member 'AProj_COV_Explosive_Grenade_C::bAutoPrimeWhenThrown' has a wrong offset!");

}

