#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIStolenProjDetector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_AIThrowAtStyle_structs.hpp"
#include "OakGame_structs.hpp"


namespace SDK::Params
{

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProjectileUpdated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature final
{
public:
	class AActor*                                 MyStolenProjectile;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature) == 0x000008, "Wrong size on AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature, MyStolenProjectile) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProjectileUpdated__DelegateSignature::MyStolenProjectile' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProjectileReturnFX__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature final
{
public:
	class AActor*                                 MyStolenProjectile;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature) == 0x000008, "Wrong size on AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature, MyStolenProjectile) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProjectileReturnFX__DelegateSignature::MyStolenProjectile' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProjectileDestroyFX__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature final
{
public:
	class AActor*                                 MyStolenProjectile;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature) == 0x000008, "Wrong size on AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature, MyStolenProjectile) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProjectileDestroyFX__DelegateSignature::MyStolenProjectile' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.ExecuteUbergraph_AIStolenProjDetector
// 0x0050 (0x0050 - 0x0000)
struct AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_StolenProjectile;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* StolenProjectile)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* StolenProjectile)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* StolenProjectile)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_StolenProjectile2;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_StolenProjectile1;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector");
static_assert(sizeof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector) == 0x000050, "Wrong size on AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, EntryPoint) == 0x000000, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, K2Node_CustomEvent_StolenProjectile) == 0x000008, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::K2Node_CustomEvent_StolenProjectile' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, K2Node_CreateDelegate_OutputDelegate2) == 0x000030, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, K2Node_CustomEvent_StolenProjectile2) == 0x000040, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::K2Node_CustomEvent_StolenProjectile2' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector, K2Node_CustomEvent_StolenProjectile1) == 0x000048, "Member 'AIStolenProjDetector_C_ExecuteUbergraph_AIStolenProjDetector::K2Node_CustomEvent_StolenProjectile1' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.OnStolenProjectileReturned_Event_0
// 0x0008 (0x0008 - 0x0000)
struct AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0 final
{
public:
	class AActor*                                 StolenProjectile_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0");
static_assert(sizeof(AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0) == 0x000008, "Wrong size on AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0");
static_assert(offsetof(AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0, StolenProjectile_0) == 0x000000, "Member 'AIStolenProjDetector_C_OnStolenProjectileReturned_Event_0::StolenProjectile_0' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.OnStolenProjectileDestroyed_Event_0
// 0x0008 (0x0008 - 0x0000)
struct AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0 final
{
public:
	class AActor*                                 StolenProjectile_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0");
static_assert(sizeof(AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0) == 0x000008, "Wrong size on AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0");
static_assert(offsetof(AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0, StolenProjectile_0) == 0x000000, "Member 'AIStolenProjDetector_C_OnStolenProjectileDestroyed_Event_0::StolenProjectile_0' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.OnStolenProjectileUpdated_Event_0
// 0x0008 (0x0008 - 0x0000)
struct AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0 final
{
public:
	class AActor*                                 StolenProjectile_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0");
static_assert(sizeof(AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0) == 0x000008, "Wrong size on AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0");
static_assert(offsetof(AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0, StolenProjectile_0) == 0x000000, "Member 'AIStolenProjDetector_C_OnStolenProjectileUpdated_Event_0::StolenProjectile_0' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_GetElementalTypeFromStolenProjectile
// 0x0002 (0x0002 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile final
{
public:
	EOakElementalType                             StolenProjectileElement;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOakElementalType                             CallFunc_GetElementalType_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile) == 0x000001, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile) == 0x000002, "Wrong size on AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile, StolenProjectileElement) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile::StolenProjectileElement' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile, CallFunc_GetElementalType_ReturnValue) == 0x000001, "Member 'AIStolenProjDetector_C_AIStolenProj_GetElementalTypeFromStolenProjectile::CallFunc_GetElementalType_ReturnValue' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_AttemptLerpToSocket
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket final
{
public:
	class FName                                   SocketToLerpTo;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpDuration;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LerpToSocket_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket) == 0x000010, "Wrong size on AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket, SocketToLerpTo) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket::SocketToLerpTo' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket, LerpDuration) == 0x000008, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket::LerpDuration' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket, Success) == 0x00000C, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket::Success' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket, CallFunc_LerpToSocket_ReturnValue) == 0x00000D, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptLerpToSocket::CallFunc_LerpToSocket_ReturnValue' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_AttemptReturnTo
// 0x0058 (0x0058 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo final
{
public:
	Enum_AIThrowAtStyle                           ReturnTo;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPrediction;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnglePercent;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DirectionOffset;                                   // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                TargetOffset;                                      // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpecifiedActor;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReturnProjectileToLocation_ReturnValue;   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReturnProjectileToActor_ReturnValue;      // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReturnProjectileToOwner_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReturnProjectileToTarget_ReturnValue;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo) == 0x000058, "Wrong size on AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, ReturnTo) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::ReturnTo' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, TargetSocket) == 0x000008, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::TargetSocket' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, MaxPrediction) == 0x000010, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::MaxPrediction' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, Speed) == 0x000014, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::Speed' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, AnglePercent) == 0x000018, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::AnglePercent' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, DirectionOffset) == 0x00001C, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::DirectionOffset' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, TargetOffset) == 0x000028, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::TargetOffset' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, SpecifiedActor) == 0x000038, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::SpecifiedActor' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, WorldLocation) == 0x000040, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::WorldLocation' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, Success) == 0x00004C, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::Success' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, K2Node_SwitchEnum_CmpSuccess) == 0x00004D, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, CallFunc_ReturnProjectileToLocation_ReturnValue) == 0x00004E, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::CallFunc_ReturnProjectileToLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, CallFunc_ReturnProjectileToActor_ReturnValue) == 0x00004F, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::CallFunc_ReturnProjectileToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, CallFunc_ReturnProjectileToOwner_ReturnValue) == 0x000050, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::CallFunc_ReturnProjectileToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo, CallFunc_ReturnProjectileToTarget_ReturnValue) == 0x000051, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptReturnTo::CallFunc_ReturnProjectileToTarget_ReturnValue' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_AttemptAttach
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) AIStolenProjDetector_C_AIStolenProj_AttemptAttach final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AttachProjectile_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_AttemptAttach) == 0x000008, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_AttemptAttach");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_AttemptAttach) == 0x000010, "Wrong size on AIStolenProjDetector_C_AIStolenProj_AttemptAttach");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptAttach, SocketName) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptAttach::SocketName' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptAttach, Success) == 0x000008, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptAttach::Success' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptAttach, CallFunc_AttachProjectile_ReturnValue) == 0x000009, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptAttach::CallFunc_AttachProjectile_ReturnValue' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_AttemptDestroy
// 0x0002 (0x0002 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProj_AttemptDestroy final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DestroyProjectile_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_AttemptDestroy) == 0x000001, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_AttemptDestroy");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_AttemptDestroy) == 0x000002, "Wrong size on AIStolenProjDetector_C_AIStolenProj_AttemptDestroy");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptDestroy, Success) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptDestroy::Success' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptDestroy, CallFunc_DestroyProjectile_ReturnValue) == 0x000001, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptDestroy::CallFunc_DestroyProjectile_ReturnValue' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_AttemptDisarm
// 0x0002 (0x0002 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProj_AttemptDisarm final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DisarmProjectile_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_AttemptDisarm) == 0x000001, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_AttemptDisarm");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_AttemptDisarm) == 0x000002, "Wrong size on AIStolenProjDetector_C_AIStolenProj_AttemptDisarm");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptDisarm, Success) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptDisarm::Success' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptDisarm, CallFunc_DisarmProjectile_ReturnValue) == 0x000001, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptDisarm::CallFunc_DisarmProjectile_ReturnValue' has a wrong offset!");

// Function AIStolenProjDetector.AIStolenProjDetector_C.AIStolenProj_AttemptDetonate
// 0x0002 (0x0002 - 0x0000)
struct AIStolenProjDetector_C_AIStolenProj_AttemptDetonate final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DetonateProjectile_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIStolenProjDetector_C_AIStolenProj_AttemptDetonate) == 0x000001, "Wrong alignment on AIStolenProjDetector_C_AIStolenProj_AttemptDetonate");
static_assert(sizeof(AIStolenProjDetector_C_AIStolenProj_AttemptDetonate) == 0x000002, "Wrong size on AIStolenProjDetector_C_AIStolenProj_AttemptDetonate");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptDetonate, Success) == 0x000000, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptDetonate::Success' has a wrong offset!");
static_assert(offsetof(AIStolenProjDetector_C_AIStolenProj_AttemptDetonate, CallFunc_DetonateProjectile_ReturnValue) == 0x000001, "Member 'AIStolenProjDetector_C_AIStolenProj_AttemptDetonate::CallFunc_DetonateProjectile_ReturnValue' has a wrong offset!");

}

