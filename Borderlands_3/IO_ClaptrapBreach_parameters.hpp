#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_ClaptrapBreach

#include "Basic.hpp"

#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"


namespace SDK::Params
{

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522
// 0x0008 (0x0008 - 0x0000)
struct IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522) == 0x000008, "Wrong alignment on IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522");
static_assert(sizeof(IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522) == 0x000008, "Wrong size on IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522");
static_assert(offsetof(IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522, Actor) == 0x000000, "Member 'IO_ClaptrapBreach_C_OnActorFailedToArrive_1A4C06044D4AD7ECBEF6A3921ED51522::Actor' has a wrong offset!");

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522
// 0x0008 (0x0008 - 0x0000)
struct IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522) == 0x000008, "Wrong alignment on IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522");
static_assert(sizeof(IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522) == 0x000008, "Wrong size on IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522");
static_assert(offsetof(IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522, Actor) == 0x000000, "Member 'IO_ClaptrapBreach_C_OnActorArrived_1A4C06044D4AD7ECBEF6A3921ED51522::Actor' has a wrong offset!");

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.OnEnd_C2390F064F334D969D8D17AACD6823E6
// 0x0010 (0x0010 - 0x0000)
struct IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6 final
{
public:
	EGbxActionEndState                            EndState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6) == 0x000008, "Wrong alignment on IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6");
static_assert(sizeof(IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6) == 0x000010, "Wrong size on IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6");
static_assert(offsetof(IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6, EndState) == 0x000000, "Member 'IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6::EndState' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6, Actor) == 0x000008, "Member 'IO_ClaptrapBreach_C_OnEnd_C2390F064F334D969D8D17AACD6823E6::Actor' has a wrong offset!");

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.__UserState_BreachState_0
// 0x0001 (0x0001 - 0x0000)
struct IO_ClaptrapBreach_C___UserState_BreachState_0 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_ClaptrapBreach_C___UserState_BreachState_0) == 0x000001, "Wrong alignment on IO_ClaptrapBreach_C___UserState_BreachState_0");
static_assert(sizeof(IO_ClaptrapBreach_C___UserState_BreachState_0) == 0x000001, "Wrong size on IO_ClaptrapBreach_C___UserState_BreachState_0");
static_assert(offsetof(IO_ClaptrapBreach_C___UserState_BreachState_0, bFromLoad) == 0x000000, "Member 'IO_ClaptrapBreach_C___UserState_BreachState_0::bFromLoad' has a wrong offset!");

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.__UserState_BreachState_2
// 0x0001 (0x0001 - 0x0000)
struct IO_ClaptrapBreach_C___UserState_BreachState_2 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_ClaptrapBreach_C___UserState_BreachState_2) == 0x000001, "Wrong alignment on IO_ClaptrapBreach_C___UserState_BreachState_2");
static_assert(sizeof(IO_ClaptrapBreach_C___UserState_BreachState_2) == 0x000001, "Wrong size on IO_ClaptrapBreach_C___UserState_BreachState_2");
static_assert(offsetof(IO_ClaptrapBreach_C___UserState_BreachState_2, bFromLoad) == 0x000000, "Member 'IO_ClaptrapBreach_C___UserState_BreachState_2::bFromLoad' has a wrong offset!");

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.__UserState_BreachState_1
// 0x0001 (0x0001 - 0x0000)
struct IO_ClaptrapBreach_C___UserState_BreachState_1 final
{
public:
	bool                                          bFromLoad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_ClaptrapBreach_C___UserState_BreachState_1) == 0x000001, "Wrong alignment on IO_ClaptrapBreach_C___UserState_BreachState_1");
static_assert(sizeof(IO_ClaptrapBreach_C___UserState_BreachState_1) == 0x000001, "Wrong size on IO_ClaptrapBreach_C___UserState_BreachState_1");
static_assert(offsetof(IO_ClaptrapBreach_C___UserState_BreachState_1, bFromLoad) == 0x000000, "Member 'IO_ClaptrapBreach_C___UserState_BreachState_1::bFromLoad' has a wrong offset!");

// Function IO_ClaptrapBreach.IO_ClaptrapBreach_C.ExecuteUbergraph_IO_ClaptrapBreach
// 0x0170 (0x0170 - 0x0000)
struct IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor2;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate2;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	EGbxActionEndState                            K2Node_CustomEvent_EndState;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGbxActionEndState EndState, class AActor* Actor)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 Temp_object_Variable1;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGbxActionEndState                            Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_UserStateEvent_bFromLoad2;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Claptrap_C*                     CallFunc_GetMissionCharacter_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayTask_ScriptedMoveToLevelSequence* CallFunc_BeginScriptedMoveToLevelSequence_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPChar_Claptrap_C*                     CallFunc_GetMissionCharacter_ReturnValue1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPChar_Claptrap_C*                     CallFunc_GetMissionCharacter_ReturnValue2;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_UserStateEvent_bFromLoad1;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActionRegister>             Temp_struct_Variable;                              // 0x00E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UGameplayTask_PlayGbxAction*            CallFunc_PlayGbxAction_ReturnValue;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue;            // 0x0108(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue1;           // 0x0120(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue2;           // 0x0138(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostAttachedEvent_ReturnValue3;           // 0x0150(0x0018)()
	bool                                          K2Node_UserStateEvent_bFromLoad;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach) == 0x000008, "Wrong alignment on IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach");
static_assert(sizeof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach) == 0x000170, "Wrong size on IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, EntryPoint) == 0x000000, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CustomEvent_Actor2) == 0x000018, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CustomEvent_Actor2' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CustomEvent_Actor1) == 0x000030, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CustomEvent_Actor1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate2) == 0x000038, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, Temp_object_Variable) == 0x000048, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate3) == 0x000058, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CustomEvent_EndState) == 0x000068, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CustomEvent_EndState' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CustomEvent_Actor) == 0x000070, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate4) == 0x000078, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, Temp_object_Variable1) == 0x000088, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, Temp_byte_Variable) == 0x000090, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_UserStateEvent_bFromLoad2) == 0x000091, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_UserStateEvent_bFromLoad2' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_GetMissionCharacter_ReturnValue) == 0x000098, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_GetMissionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_BeginScriptedMoveToLevelSequence_ReturnValue) == 0x0000A0, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_BeginScriptedMoveToLevelSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate5) == 0x0000A8, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_IsValid_ReturnValue1) == 0x0000B8, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_GetMissionCharacter_ReturnValue1) == 0x0000C0, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_GetMissionCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_GetMissionCharacter_ReturnValue2) == 0x0000C8, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_GetMissionCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_CreateDelegate_OutputDelegate6) == 0x0000D0, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_HasAuthority_ReturnValue) == 0x0000E0, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_UserStateEvent_bFromLoad1) == 0x0000E1, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_UserStateEvent_bFromLoad1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, Temp_struct_Variable) == 0x0000E8, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_PlayGbxAction_ReturnValue) == 0x0000F8, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_PlayGbxAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_IsValid_ReturnValue2) == 0x000100, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_PostAttachedEvent_ReturnValue) == 0x000108, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_PostAttachedEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_PostAttachedEvent_ReturnValue1) == 0x000120, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_PostAttachedEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_PostAttachedEvent_ReturnValue2) == 0x000138, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_PostAttachedEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, CallFunc_PostAttachedEvent_ReturnValue3) == 0x000150, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::CallFunc_PostAttachedEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach, K2Node_UserStateEvent_bFromLoad) == 0x000168, "Member 'IO_ClaptrapBreach_C_ExecuteUbergraph_IO_ClaptrapBreach::K2Node_UserStateEvent_bFromLoad' has a wrong offset!");

}

