#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitReactionLayer_Death

#include "Basic.hpp"

#include "GbxGameSystemCore_classes.hpp"
#include "OakGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HitReactionLayer_Death.HitReactionLayer_Death_C
// 0x0008 (0x0038 - 0x0030)
class UHitReactionLayer_Death_C final : public UHitReactionLayer_Blueprint
{
public:
	float                                         OverkillThresholdPercent;                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalcHealthPercent(class UOakDamageComponent* Receiver, float Damage_Amount, float* Damage_Percent);

	class UHitReactionTag* EvaluateTag(class UDamageComponent* Receiver, class UDamageCauserComponent* Causer, float DamageAmount, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class UHitRegionData* HitRegion, float Force, class UHitReactionTag* PreviousTag) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HitReactionLayer_Death_C">();
	}
	static class UHitReactionLayer_Death_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitReactionLayer_Death_C>();
	}
};
static_assert(alignof(UHitReactionLayer_Death_C) == 0x000008, "Wrong alignment on UHitReactionLayer_Death_C");
static_assert(sizeof(UHitReactionLayer_Death_C) == 0x000038, "Wrong size on UHitReactionLayer_Death_C");
static_assert(offsetof(UHitReactionLayer_Death_C, OverkillThresholdPercent) == 0x000030, "Member 'UHitReactionLayer_Death_C::OverkillThresholdPercent' has a wrong offset!");

}

