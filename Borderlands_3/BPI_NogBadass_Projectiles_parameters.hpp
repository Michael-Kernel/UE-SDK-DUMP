#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NogBadass_Projectiles

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_NogBadass_Projectiles.BPI_NogBadass_Projectiles_C.NogBadass_Projectiles_LaserWireSetChild
// 0x0008 (0x0008 - 0x0000)
struct BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild final
{
public:
	class AActor*                                 MyChild;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild) == 0x000008, "Wrong alignment on BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild");
static_assert(sizeof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild) == 0x000008, "Wrong size on BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild");
static_assert(offsetof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild, MyChild) == 0x000000, "Member 'BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_LaserWireSetChild::MyChild' has a wrong offset!");

// Function BPI_NogBadass_Projectiles.BPI_NogBadass_Projectiles_C.NogBadass_Projectiles_BombLaunch
// 0x0010 (0x0010 - 0x0000)
struct BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OptionalYOffset;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch) == 0x000008, "Wrong alignment on BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch");
static_assert(sizeof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch) == 0x000010, "Wrong size on BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch");
static_assert(offsetof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch, MyTarget) == 0x000000, "Member 'BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch::MyTarget' has a wrong offset!");
static_assert(offsetof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch, OptionalYOffset) == 0x000008, "Member 'BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_BombLaunch::OptionalYOffset' has a wrong offset!");

// Function BPI_NogBadass_Projectiles.BPI_NogBadass_Projectiles_C.NogBadass_Projectiles_GetHomingTargetLocation
// 0x000C (0x000C - 0x0000)
struct BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation) == 0x000004, "Wrong alignment on BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation");
static_assert(sizeof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation) == 0x00000C, "Wrong size on BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation");
static_assert(offsetof(BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation, Location) == 0x000000, "Member 'BPI_NogBadass_Projectiles_C_NogBadass_Projectiles_GetHomingTargetLocation::Location' has a wrong offset!");

}

