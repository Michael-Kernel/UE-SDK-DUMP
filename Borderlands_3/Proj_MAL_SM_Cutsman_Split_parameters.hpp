#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_MAL_SM_Cutsman_Split

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Proj_MAL_SM_Cutsman_Split.Proj_MAL_SM_Cutsman_Split_C.ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split
// 0x00E8 (0x00E8 - 0x0000)
struct Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0048(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_StaticGetParticleEffect_ReturnValue;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split) == 0x000008, "Wrong alignment on Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split");
static_assert(sizeof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split) == 0x0000E8, "Wrong size on Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, EntryPoint) == 0x000000, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_MyComp) == 0x000008, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_Other) == 0x000010, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_OtherComp) == 0x000018, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_bSelfMoved) == 0x000020, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_HitLocation) == 0x000024, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_HitNormal) == 0x000030, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_NormalImpulse) == 0x00003C, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, K2Node_Event_Hit) == 0x000048, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, CallFunc_GetOwner_ReturnValue) == 0x0000D8, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split, CallFunc_StaticGetParticleEffect_ReturnValue) == 0x0000E0, "Member 'Proj_MAL_SM_Cutsman_Split_C_ExecuteUbergraph_Proj_MAL_SM_Cutsman_Split::CallFunc_StaticGetParticleEffect_ReturnValue' has a wrong offset!");

// Function Proj_MAL_SM_Cutsman_Split.Proj_MAL_SM_Cutsman_Split_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct Proj_MAL_SM_Cutsman_Split_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit) == 0x000008, "Wrong alignment on Proj_MAL_SM_Cutsman_Split_C_ReceiveHit");
static_assert(sizeof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit) == 0x0000D0, "Wrong size on Proj_MAL_SM_Cutsman_Split_C_ReceiveHit");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, MyComp) == 0x000000, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, Other) == 0x000008, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, HitNormal) == 0x000028, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_ReceiveHit, Hit) == 0x000040, "Member 'Proj_MAL_SM_Cutsman_Split_C_ReceiveHit::Hit' has a wrong offset!");

// Function Proj_MAL_SM_Cutsman_Split.Proj_MAL_SM_Cutsman_Split_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript final
{
public:
	struct FGbxAttributeFloat                     CallFunc_MakeGbxAttributeFloat_ReturnValue;        // 0x0000(0x000C)(HasGetValueTypeHash)
};
static_assert(alignof(Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript) == 0x000004, "Wrong alignment on Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript");
static_assert(sizeof(Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript) == 0x00000C, "Wrong size on Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript");
static_assert(offsetof(Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript, CallFunc_MakeGbxAttributeFloat_ReturnValue) == 0x000000, "Member 'Proj_MAL_SM_Cutsman_Split_C_UserConstructionScript::CallFunc_MakeGbxAttributeFloat_ReturnValue' has a wrong offset!");

}

