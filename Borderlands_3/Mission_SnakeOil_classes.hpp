#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mission_SnakeOil

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxMission_structs.hpp"
#include "GbxDialog_structs.hpp"
#include "BP_OakMission_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mission_SnakeOil.Mission_SnakeOil_C
// 0x0158 (0x0668 - 0x0510)
class UMission_SnakeOil_C final : public UBP_OakMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Mission_SnakeOil_C;                 // 0x0510(0x0008)(Transient, DuplicateTransient)
	class UMissionObjectiveSet*                   Set_PickUpVial_ObjSetVar;                          // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_PickUpVial_ObjVar;                             // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_GiveVial_ObjSetVar;                            // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GiveVial_ObjVar;                               // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_SabotageElixirRefinery_ObjSetVar;              // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_SabotageElixirReginery_ObjVar;                 // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_KillDocStanley_ObjSetVar;                      // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_KillDocStanley_ObjVar;                         // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ShootOilWell_ObjVar;                           // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_ShootOilWell_ObjSetVar;                        // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_ReturnToPriscilla_ObjSetVar;                   // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ReturnToPriscilla_ObjVar;                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_DestroyElixirInventory_ObjVar;                 // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_GoToBottlingPlant_ObjSetVar;                   // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_PickUpTNT_ObjVar;                              // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_PickUpTNT_ObjSetVar;                           // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_AttendMeeting_ObjVar;                          // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_PlaceTNT_ObjVar;                               // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_PlaceTNT_ObjSetVar;                            // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_ShootTNT_ObjSetVar;                            // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_FireExecutives_ObjSetVar;                      // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_AttendMeeting_ObjSetVar;                       // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_DoorExplosion_ObjVar;                         // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_FireExecutives_ObjVar;                         // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_KahnIncinerated_ObjVar;                       // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      INVS_SecondStockpile_ObjVar;                       // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_ThirdStockpile_ObjVar;                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_GoToRefinery_ObjVar;                          // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_IncreasePressure_ObjVar;                       // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_ShootTNT_ObjVar;                               // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_GoToBottlingPlant_ObjVar;                      // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjectiveSet*                   Set_DestroyInventory_ObjSetVar;                    // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_DestroyRefineryMachines_ObjVar;                // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_FourthStockpile_ObjVar;                       // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDialogConversation                    PreMissionVO;                                      // 0x0628(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjectiveSet*                   Set_DestroyPumps_ObjSetVar;                        // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Obj_DestroyPumps_ObjVar;                           // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_OilWell2_ObjVar;                              // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_OilWell3_ObjVar;                              // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_OilWell2Pressure_ObjVar;                      // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      Invs_Oil3Pressure_ObjVar;                          // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mission_SnakeOil(int32 EntryPoint);
	void MCE_BeckonConvo(class UObject* Context);
	void Set_PickUpVial(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void MRE_LeavingHinaVO2(class UObject* Context);
	void MRE_LeavingHinaVO1(class UObject* Context);
	void Obj_PickUpVial(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_OilWell2Pressure(class UObject* Context);
	void Update_OilWell3Pressure(class UObject* Context);
	void Invs_Oil3Pressure(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Invs_OilWell2Pressure(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_OilWell3(class UObject* Context);
	void Update_OilWell2(class UObject* Context);
	void Invs_OilWell3(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Invs_OilWell2(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_SabotageElixirReginery_Objective__PROXY_2();
	void Set_DestroyPumps(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_GiveVial(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_GiveVial(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_SabotageElixirRefinery(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_SabotageElixirReginery(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_KillDocStanley(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Update_DestroyPumps(class UObject* Context);
	void Obj_DestroyPumps(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_SabotageElixirReginery_Objective__PROXY_1();
	void Update_FourthStockpile(class UObject* Context);
	void Invs_FourthStockpile(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_DestroyRefineryMachines(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_DestroyInventory(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_KillDocStanley(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Advance_GiveVial(class UObject* Context);
	void Advance_PickUpVial(class UObject* Context);
	void Update_GoBottlingPlant(class UObject* Context);
	void Obj_GoToBottlingPlant(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_IncreasePressure(class UObject* Context);
	void Obj_IncreasePressure(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_GoToRefinery(class UObject* Context);
	void Invs_GoToRefinery(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_ThirdStockpile(class UObject* Context);
	void Invs_ThirdStockpile(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_SecondStockpile(class UObject* Context);
	void INVS_SecondStockpile(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Update_KahnIncinerated(class UObject* Context);
	void Invs_KahnIncinerated(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void _Obj_DestroyElixirInventory_Objective__PROXY_0();
	void _Obj_DestroyElixirInventory_Objective__PROXY();
	void Update_PickUpTNT(class UObject* Context);
	void Update_PlaceTNT(class UObject* Context);
	void Update_AttendMeeting(class UObject* Context);
	void Update_FireExecutives(class UObject* Context);
	void Update_DestroyElixirInventory(class UObject* Context);
	void Update_ShootTNT(class UObject* Context);
	void Update_DoorExplosion(class UObject* Context);
	void Invs_DoorExplosion(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Obj_PlaceTNT(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_PlaceTNT(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void MissionKickoff();
	void Update_SabotageElixirRefinery(class UObject* Context);
	void Obj_AttendMeeting(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_AttendMeeting(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_ShootOilWell(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Advance_ShootOilWell(class UObject* Context);
	void Set_ShootOilWell(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_FireExecutives(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_FireExecutives(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_ReturnToPriscilla(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_ReturnToPriscilla(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Advance_RetunToPriscilla(class UObject* Context);
	void Obj_ShootTNT(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_ShootTNT(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Set_GoToBottlingPlant(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_DestroyElixirInventory(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void Set_PickUpTNT(EMissionObjectiveSetEvent ObjectiveSetEvent);
	void Obj_PickUpTNT(EMissionObjectiveEvent ObjectiveEvent, int32 ObjectiveCount);
	void OnDialogSequenceFinished_16();
	void OnDialogSequenceFinished_17();
	void OnDialogSequenceFinished_18();
	void OnDialogSequenceFinished_19();
	void OnDialogSequenceFinished_20();
	void OnDialogSequenceFinished_21();
	void OnDialogSequenceFinished_22();
	void OnDialogSequenceFinished_23();
	void OnDialogSequenceFinished_24();
	void OnDialogSequenceFinished_25();
	void OnDialogSequenceFinished_26();
	void OnDialogSequenceFinished_27();
	void OnDialogSequenceFinished_28();
	void OnDialogSequenceFinished_29();
	void OnDialogSequenceFinished_30();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mission_SnakeOil_C">();
	}
	static class UMission_SnakeOil_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMission_SnakeOil_C>();
	}
};
static_assert(alignof(UMission_SnakeOil_C) == 0x000008, "Wrong alignment on UMission_SnakeOil_C");
static_assert(sizeof(UMission_SnakeOil_C) == 0x000668, "Wrong size on UMission_SnakeOil_C");
static_assert(offsetof(UMission_SnakeOil_C, UberGraphFrame_Mission_SnakeOil_C) == 0x000510, "Member 'UMission_SnakeOil_C::UberGraphFrame_Mission_SnakeOil_C' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_PickUpVial_ObjSetVar) == 0x000518, "Member 'UMission_SnakeOil_C::Set_PickUpVial_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_PickUpVial_ObjVar) == 0x000520, "Member 'UMission_SnakeOil_C::Obj_PickUpVial_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_GiveVial_ObjSetVar) == 0x000528, "Member 'UMission_SnakeOil_C::Set_GiveVial_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_GiveVial_ObjVar) == 0x000530, "Member 'UMission_SnakeOil_C::Obj_GiveVial_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_SabotageElixirRefinery_ObjSetVar) == 0x000538, "Member 'UMission_SnakeOil_C::Set_SabotageElixirRefinery_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_SabotageElixirReginery_ObjVar) == 0x000540, "Member 'UMission_SnakeOil_C::Obj_SabotageElixirReginery_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_KillDocStanley_ObjSetVar) == 0x000548, "Member 'UMission_SnakeOil_C::Set_KillDocStanley_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_KillDocStanley_ObjVar) == 0x000550, "Member 'UMission_SnakeOil_C::Obj_KillDocStanley_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_ShootOilWell_ObjVar) == 0x000558, "Member 'UMission_SnakeOil_C::Obj_ShootOilWell_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_ShootOilWell_ObjSetVar) == 0x000560, "Member 'UMission_SnakeOil_C::Set_ShootOilWell_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_ReturnToPriscilla_ObjSetVar) == 0x000568, "Member 'UMission_SnakeOil_C::Set_ReturnToPriscilla_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_ReturnToPriscilla_ObjVar) == 0x000570, "Member 'UMission_SnakeOil_C::Obj_ReturnToPriscilla_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_DestroyElixirInventory_ObjVar) == 0x000578, "Member 'UMission_SnakeOil_C::Obj_DestroyElixirInventory_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_GoToBottlingPlant_ObjSetVar) == 0x000580, "Member 'UMission_SnakeOil_C::Set_GoToBottlingPlant_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_PickUpTNT_ObjVar) == 0x000588, "Member 'UMission_SnakeOil_C::Obj_PickUpTNT_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_PickUpTNT_ObjSetVar) == 0x000590, "Member 'UMission_SnakeOil_C::Set_PickUpTNT_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_AttendMeeting_ObjVar) == 0x000598, "Member 'UMission_SnakeOil_C::Obj_AttendMeeting_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_PlaceTNT_ObjVar) == 0x0005A0, "Member 'UMission_SnakeOil_C::Obj_PlaceTNT_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_PlaceTNT_ObjSetVar) == 0x0005A8, "Member 'UMission_SnakeOil_C::Set_PlaceTNT_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_ShootTNT_ObjSetVar) == 0x0005B0, "Member 'UMission_SnakeOil_C::Set_ShootTNT_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_FireExecutives_ObjSetVar) == 0x0005B8, "Member 'UMission_SnakeOil_C::Set_FireExecutives_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_AttendMeeting_ObjSetVar) == 0x0005C0, "Member 'UMission_SnakeOil_C::Set_AttendMeeting_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_DoorExplosion_ObjVar) == 0x0005C8, "Member 'UMission_SnakeOil_C::Invs_DoorExplosion_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_FireExecutives_ObjVar) == 0x0005D0, "Member 'UMission_SnakeOil_C::Obj_FireExecutives_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_KahnIncinerated_ObjVar) == 0x0005D8, "Member 'UMission_SnakeOil_C::Invs_KahnIncinerated_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, INVS_SecondStockpile_ObjVar) == 0x0005E0, "Member 'UMission_SnakeOil_C::INVS_SecondStockpile_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_ThirdStockpile_ObjVar) == 0x0005E8, "Member 'UMission_SnakeOil_C::Invs_ThirdStockpile_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_GoToRefinery_ObjVar) == 0x0005F0, "Member 'UMission_SnakeOil_C::Invs_GoToRefinery_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_IncreasePressure_ObjVar) == 0x0005F8, "Member 'UMission_SnakeOil_C::Obj_IncreasePressure_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_ShootTNT_ObjVar) == 0x000600, "Member 'UMission_SnakeOil_C::Obj_ShootTNT_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_GoToBottlingPlant_ObjVar) == 0x000608, "Member 'UMission_SnakeOil_C::Obj_GoToBottlingPlant_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_DestroyInventory_ObjSetVar) == 0x000610, "Member 'UMission_SnakeOil_C::Set_DestroyInventory_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_DestroyRefineryMachines_ObjVar) == 0x000618, "Member 'UMission_SnakeOil_C::Obj_DestroyRefineryMachines_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_FourthStockpile_ObjVar) == 0x000620, "Member 'UMission_SnakeOil_C::Invs_FourthStockpile_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, PreMissionVO) == 0x000628, "Member 'UMission_SnakeOil_C::PreMissionVO' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Set_DestroyPumps_ObjSetVar) == 0x000638, "Member 'UMission_SnakeOil_C::Set_DestroyPumps_ObjSetVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Obj_DestroyPumps_ObjVar) == 0x000640, "Member 'UMission_SnakeOil_C::Obj_DestroyPumps_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_OilWell2_ObjVar) == 0x000648, "Member 'UMission_SnakeOil_C::Invs_OilWell2_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_OilWell3_ObjVar) == 0x000650, "Member 'UMission_SnakeOil_C::Invs_OilWell3_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_OilWell2Pressure_ObjVar) == 0x000658, "Member 'UMission_SnakeOil_C::Invs_OilWell2Pressure_ObjVar' has a wrong offset!");
static_assert(offsetof(UMission_SnakeOil_C, Invs_Oil3Pressure_ObjVar) == 0x000660, "Member 'UMission_SnakeOil_C::Invs_Oil3Pressure_ObjVar' has a wrong offset!");

}

