#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IO_Operative_Barrier

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WwiseAudio_structs.hpp"
#include "GbxGameSystemCore_structs.hpp"
#include "OakGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ExecuteUbergraph_IO_Operative_Barrier
// 0x0268 (0x0268 - 0x0000)
struct IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0008(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EOperativeBarrierState                        Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        Temp_struct_Variable1;                             // 0x00A0(0x0020)(NoDestructor)
	struct FForceSelection                        Temp_struct_Variable2;                             // 0x00C0(0x0020)(NoDestructor)
	struct FForceSelection                        Temp_struct_Variable3;                             // 0x00E0(0x0020)(NoDestructor)
	struct FForceSelection                        Temp_struct_Variable4;                             // 0x0100(0x0020)(NoDestructor)
	TArray<struct FGbxActionRegister>             Temp_struct_Variable5;                             // 0x0120(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetDamageRTPCValue_Res;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue;               // 0x0138(0x0018)()
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue1;              // 0x0150(0x0018)()
	bool                                          CallFunc_HasBarrierMod_ReturnValue;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue2;              // 0x0170(0x0018)()
	float                                         CallFunc_GetDamageRTPCValue_Res1;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShuttingDown_Res;                       // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwisePlaybackInstance                 CallFunc_PostWwiseEvent_ReturnValue3;              // 0x0190(0x0018)()
	bool                                          Temp_bool_Variable1;                               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBarrierMod_ReturnValue1;               // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select1_Default;                            // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOperativeBarrierState                        K2Node_Event_OldState;                             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOperativeBarrierState                        K2Node_Event_NewState;                             // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InbIsTurbocharged;                    // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C6[0x2];                                      // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Enemy;                                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeterrenceFieldDamageForCharacter_Val; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        K2Node_Select2_Default;                            // 0x01F8(0x0020)(NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGbxAction*                             CallFunc_K2Play_ReturnValue;                       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOakPlayerAbilityManagerComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPEventHub_Operative_C*                K2Node_DynamicCast_AsBPEvent_Hub_Operative;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier");
static_assert(sizeof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier) == 0x000268, "Wrong size on IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, EntryPoint) == 0x000000, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::EntryPoint' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_struct_Variable) == 0x000008, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_byte_Variable) == 0x000098, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_struct_Variable1) == 0x0000A0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_struct_Variable2) == 0x0000C0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_struct_Variable3) == 0x0000E0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_struct_Variable4) == 0x000100, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_struct_Variable5) == 0x000120, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetDamageRTPCValue_Res) == 0x000130, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetDamageRTPCValue_Res' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_PostWwiseEvent_ReturnValue) == 0x000138, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_PostWwiseEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_PostWwiseEvent_ReturnValue1) == 0x000150, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_PostWwiseEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_HasBarrierMod_ReturnValue) == 0x000168, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_HasBarrierMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_bool_Variable) == 0x000169, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_PostWwiseEvent_ReturnValue2) == 0x000170, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_PostWwiseEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetDamageRTPCValue_Res1) == 0x000188, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetDamageRTPCValue_Res1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_IsServer_ReturnValue) == 0x00018C, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_IsShuttingDown_Res) == 0x00018D, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_IsShuttingDown_Res' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_PostWwiseEvent_ReturnValue3) == 0x000190, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_PostWwiseEvent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, Temp_bool_Variable1) == 0x0001A8, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_HasBarrierMod_ReturnValue1) == 0x0001A9, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_HasBarrierMod_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Select_Default) == 0x0001B0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Select1_Default) == 0x0001B8, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Event_OldState) == 0x0001C0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Event_NewState) == 0x0001C1, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_SwitchEnum_CmpSuccess) == 0x0001C2, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_SwitchEnum1_CmpSuccess) == 0x0001C3, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_SwitchEnum2_CmpSuccess) == 0x0001C4, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Event_InbIsTurbocharged) == 0x0001C5, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Event_InbIsTurbocharged' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Event_Enemy) == 0x0001C8, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Event_Enemy' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001D0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_DynamicCast_AsOak_Character) == 0x0001E0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetDeterrenceFieldDamageForCharacter_Val) == 0x0001EC, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetDeterrenceFieldDamageForCharacter_Val' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_HasAuthority_ReturnValue) == 0x0001F0, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_Select2_Default) == 0x0001F8, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_IsServer_ReturnValue1) == 0x000218, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000220, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetOwner_ReturnValue) == 0x000228, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_K2Play_ReturnValue) == 0x000230, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_K2Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetOwner_ReturnValue1) == 0x000238, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetOwner_ReturnValue2) == 0x000240, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetOwner_ReturnValue3) == 0x000248, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, CallFunc_GetComponentByClass_ReturnValue) == 0x000250, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_DynamicCast_AsBPEvent_Hub_Operative) == 0x000258, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_DynamicCast_AsBPEvent_Hub_Operative' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier, K2Node_DynamicCast_bSuccess1) == 0x000260, "Member 'IO_Operative_Barrier_C_ExecuteUbergraph_IO_Operative_Barrier::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ApplyDeterrenceFieldToEnemy
// 0x0008 (0x0008 - 0x0000)
struct IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy final
{
public:
	class AActor*                                 Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy");
static_assert(sizeof(IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy) == 0x000008, "Wrong size on IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy");
static_assert(offsetof(IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy, Enemy) == 0x000000, "Member 'IO_Operative_Barrier_C_ApplyDeterrenceFieldToEnemy::Enemy' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.OnTurbochargedStateChanged
// 0x0001 (0x0001 - 0x0000)
struct IO_Operative_Barrier_C_OnTurbochargedStateChanged final
{
public:
	bool                                          InbIsTurbocharged;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_OnTurbochargedStateChanged) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_OnTurbochargedStateChanged");
static_assert(sizeof(IO_Operative_Barrier_C_OnTurbochargedStateChanged) == 0x000001, "Wrong size on IO_Operative_Barrier_C_OnTurbochargedStateChanged");
static_assert(offsetof(IO_Operative_Barrier_C_OnTurbochargedStateChanged, InbIsTurbocharged) == 0x000000, "Member 'IO_Operative_Barrier_C_OnTurbochargedStateChanged::InbIsTurbocharged' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.HandleBarrierStateChange
// 0x0002 (0x0002 - 0x0000)
struct IO_Operative_Barrier_C_HandleBarrierStateChange final
{
public:
	EOperativeBarrierState                        OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOperativeBarrierState                        NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Operative_Barrier_C_HandleBarrierStateChange) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_HandleBarrierStateChange");
static_assert(sizeof(IO_Operative_Barrier_C_HandleBarrierStateChange) == 0x000002, "Wrong size on IO_Operative_Barrier_C_HandleBarrierStateChange");
static_assert(offsetof(IO_Operative_Barrier_C_HandleBarrierStateChange, OldState) == 0x000000, "Member 'IO_Operative_Barrier_C_HandleBarrierStateChange::OldState' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_HandleBarrierStateChange, NewState) == 0x000001, "Member 'IO_Operative_Barrier_C_HandleBarrierStateChange::NewState' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetBarrierHoldScalar
// 0x0070 (0x0070 - 0x0000)
struct IO_Operative_Barrier_C_SetBarrierHoldScalar final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectRemoveSpec                K2Node_MakeStruct_StatusEffectRemoveSpec;          // 0x0008(0x0010)(NoDestructor)
	struct FStatusEffectSpec                      K2Node_MakeStruct_StatusEffectSpec;                // 0x0018(0x0038)(NoDestructor)
	bool                                          CallFunc_RemoveStatusEffect_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatusEffectInstanceReference         CallFunc_AddStatusEffect_ReturnValue;              // 0x0058(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(IO_Operative_Barrier_C_SetBarrierHoldScalar) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_SetBarrierHoldScalar");
static_assert(sizeof(IO_Operative_Barrier_C_SetBarrierHoldScalar) == 0x000070, "Wrong size on IO_Operative_Barrier_C_SetBarrierHoldScalar");
static_assert(offsetof(IO_Operative_Barrier_C_SetBarrierHoldScalar, Enable) == 0x000000, "Member 'IO_Operative_Barrier_C_SetBarrierHoldScalar::Enable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetBarrierHoldScalar, K2Node_MakeStruct_StatusEffectRemoveSpec) == 0x000008, "Member 'IO_Operative_Barrier_C_SetBarrierHoldScalar::K2Node_MakeStruct_StatusEffectRemoveSpec' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetBarrierHoldScalar, K2Node_MakeStruct_StatusEffectSpec) == 0x000018, "Member 'IO_Operative_Barrier_C_SetBarrierHoldScalar::K2Node_MakeStruct_StatusEffectSpec' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetBarrierHoldScalar, CallFunc_RemoveStatusEffect_ReturnValue) == 0x000050, "Member 'IO_Operative_Barrier_C_SetBarrierHoldScalar::CallFunc_RemoveStatusEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetBarrierHoldScalar, CallFunc_AddStatusEffect_ReturnValue) == 0x000058, "Member 'IO_Operative_Barrier_C_SetBarrierHoldScalar::CallFunc_AddStatusEffect_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupDeterrenceField
// 0x0001 (0x0001 - 0x0000)
struct IO_Operative_Barrier_C_SetupDeterrenceField final
{
public:
	bool                                          CallFunc_HasBarrierMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupDeterrenceField) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_SetupDeterrenceField");
static_assert(sizeof(IO_Operative_Barrier_C_SetupDeterrenceField) == 0x000001, "Wrong size on IO_Operative_Barrier_C_SetupDeterrenceField");
static_assert(offsetof(IO_Operative_Barrier_C_SetupDeterrenceField, CallFunc_HasBarrierMod_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupDeterrenceField::CallFunc_HasBarrierMod_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupChargedRelay
// 0x0001 (0x0001 - 0x0000)
struct IO_Operative_Barrier_C_SetupChargedRelay final
{
public:
	bool                                          CallFunc_HasBarrierMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupChargedRelay) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_SetupChargedRelay");
static_assert(sizeof(IO_Operative_Barrier_C_SetupChargedRelay) == 0x000001, "Wrong size on IO_Operative_Barrier_C_SetupChargedRelay");
static_assert(offsetof(IO_Operative_Barrier_C_SetupChargedRelay, CallFunc_HasBarrierMod_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupChargedRelay::CallFunc_HasBarrierMod_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupElectromagneticTherapy
// 0x0001 (0x0001 - 0x0000)
struct IO_Operative_Barrier_C_SetupElectromagneticTherapy final
{
public:
	bool                                          CallFunc_HasBarrierMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupElectromagneticTherapy) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_SetupElectromagneticTherapy");
static_assert(sizeof(IO_Operative_Barrier_C_SetupElectromagneticTherapy) == 0x000001, "Wrong size on IO_Operative_Barrier_C_SetupElectromagneticTherapy");
static_assert(offsetof(IO_Operative_Barrier_C_SetupElectromagneticTherapy, CallFunc_HasBarrierMod_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupElectromagneticTherapy::CallFunc_HasBarrierMod_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupModMaterial
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) IO_Operative_Barrier_C_SetupModMaterial final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupModMaterial) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_SetupModMaterial");
static_assert(sizeof(IO_Operative_Barrier_C_SetupModMaterial) == 0x000010, "Wrong size on IO_Operative_Barrier_C_SetupModMaterial");
static_assert(offsetof(IO_Operative_Barrier_C_SetupModMaterial, ParamName) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupModMaterial::ParamName' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetupModMaterial, Val) == 0x000008, "Member 'IO_Operative_Barrier_C_SetupModMaterial::Val' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.ConfigureTemplates
// 0x0040 (0x0040 - 0x0000)
struct IO_Operative_Barrier_C_ConfigureTemplates final
{
public:
	EOperativeBarrierState                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOperativeBarrierState                        Temp_byte_Variable1;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select1_Default;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Operative_Barrier_C_ConfigureTemplates) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_ConfigureTemplates");
static_assert(sizeof(IO_Operative_Barrier_C_ConfigureTemplates) == 0x000040, "Wrong size on IO_Operative_Barrier_C_ConfigureTemplates");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, Temp_byte_Variable) == 0x000000, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, Temp_object_Variable) == 0x000008, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, Temp_object_Variable1) == 0x000010, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, Temp_byte_Variable1) == 0x000018, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, Temp_object_Variable2) == 0x000020, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, Temp_object_Variable3) == 0x000028, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, K2Node_Select_Default) == 0x000030, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_ConfigureTemplates, K2Node_Select1_Default) == 0x000038, "Member 'IO_Operative_Barrier_C_ConfigureTemplates::K2Node_Select1_Default' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.TryActivateSystem
// 0x0010 (0x0010 - 0x0000)
struct IO_Operative_Barrier_C_TryActivateSystem final
{
public:
	class UParticleSystemComponent*               Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_TryActivateSystem) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_TryActivateSystem");
static_assert(sizeof(IO_Operative_Barrier_C_TryActivateSystem) == 0x000010, "Wrong size on IO_Operative_Barrier_C_TryActivateSystem");
static_assert(offsetof(IO_Operative_Barrier_C_TryActivateSystem, Component) == 0x000000, "Member 'IO_Operative_Barrier_C_TryActivateSystem::Component' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_TryActivateSystem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'IO_Operative_Barrier_C_TryActivateSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupStressTest
// 0x0001 (0x0001 - 0x0000)
struct IO_Operative_Barrier_C_SetupStressTest final
{
public:
	bool                                          CallFunc_HasBarrierMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupStressTest) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_SetupStressTest");
static_assert(sizeof(IO_Operative_Barrier_C_SetupStressTest) == 0x000001, "Wrong size on IO_Operative_Barrier_C_SetupStressTest");
static_assert(offsetof(IO_Operative_Barrier_C_SetupStressTest, CallFunc_HasBarrierMod_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupStressTest::CallFunc_HasBarrierMod_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.GetDamageRTPCValue
// 0x0014 (0x0014 - 0x0000)
struct IO_Operative_Barrier_C_GetDamageRTPCValue final
{
public:
	float                                         Res;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentHealth_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Operative_Barrier_C_GetDamageRTPCValue) == 0x000004, "Wrong alignment on IO_Operative_Barrier_C_GetDamageRTPCValue");
static_assert(sizeof(IO_Operative_Barrier_C_GetDamageRTPCValue) == 0x000014, "Wrong size on IO_Operative_Barrier_C_GetDamageRTPCValue");
static_assert(offsetof(IO_Operative_Barrier_C_GetDamageRTPCValue, Res) == 0x000000, "Member 'IO_Operative_Barrier_C_GetDamageRTPCValue::Res' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDamageRTPCValue, CallFunc_GetMaxHealth_ReturnValue) == 0x000004, "Member 'IO_Operative_Barrier_C_GetDamageRTPCValue::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDamageRTPCValue, CallFunc_GetCurrentHealth_ReturnValue) == 0x000008, "Member 'IO_Operative_Barrier_C_GetDamageRTPCValue::CallFunc_GetCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDamageRTPCValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'IO_Operative_Barrier_C_GetDamageRTPCValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDamageRTPCValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'IO_Operative_Barrier_C_GetDamageRTPCValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupMultiModBarrierFX
// 0x0003 (0x0003 - 0x0000)
struct IO_Operative_Barrier_C_SetupMultiModBarrierFX final
{
public:
	bool                                          CallFunc_HasBarrierMod_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBarrierMod_ReturnValue1;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupMultiModBarrierFX) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_SetupMultiModBarrierFX");
static_assert(sizeof(IO_Operative_Barrier_C_SetupMultiModBarrierFX) == 0x000003, "Wrong size on IO_Operative_Barrier_C_SetupMultiModBarrierFX");
static_assert(offsetof(IO_Operative_Barrier_C_SetupMultiModBarrierFX, CallFunc_HasBarrierMod_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupMultiModBarrierFX::CallFunc_HasBarrierMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetupMultiModBarrierFX, CallFunc_HasBarrierMod_ReturnValue1) == 0x000001, "Member 'IO_Operative_Barrier_C_SetupMultiModBarrierFX::CallFunc_HasBarrierMod_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetupMultiModBarrierFX, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'IO_Operative_Barrier_C_SetupMultiModBarrierFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetupPhysicsAssetOverride
// 0x0010 (0x0010 - 0x0000)
struct IO_Operative_Barrier_C_SetupPhysicsAssetOverride final
{
public:
	class UPhysicsAsset*                          InAssetOverride;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetupPhysicsAssetOverride) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_SetupPhysicsAssetOverride");
static_assert(sizeof(IO_Operative_Barrier_C_SetupPhysicsAssetOverride) == 0x000010, "Wrong size on IO_Operative_Barrier_C_SetupPhysicsAssetOverride");
static_assert(offsetof(IO_Operative_Barrier_C_SetupPhysicsAssetOverride, InAssetOverride) == 0x000000, "Member 'IO_Operative_Barrier_C_SetupPhysicsAssetOverride::InAssetOverride' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_SetupPhysicsAssetOverride, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'IO_Operative_Barrier_C_SetupPhysicsAssetOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.IsShuttingDown
// 0x0002 (0x0002 - 0x0000)
struct IO_Operative_Barrier_C_IsShuttingDown final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_IsShuttingDown) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_IsShuttingDown");
static_assert(sizeof(IO_Operative_Barrier_C_IsShuttingDown) == 0x000002, "Wrong size on IO_Operative_Barrier_C_IsShuttingDown");
static_assert(offsetof(IO_Operative_Barrier_C_IsShuttingDown, Res) == 0x000000, "Member 'IO_Operative_Barrier_C_IsShuttingDown::Res' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_IsShuttingDown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'IO_Operative_Barrier_C_IsShuttingDown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.AttachToPlayer
// 0x0018 (0x0018 - 0x0000)
struct IO_Operative_Barrier_C_AttachToPlayer final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOakCharacter*                          K2Node_DynamicCast_AsOak_Character;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_AttachToPlayer) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_AttachToPlayer");
static_assert(sizeof(IO_Operative_Barrier_C_AttachToPlayer) == 0x000018, "Wrong size on IO_Operative_Barrier_C_AttachToPlayer");
static_assert(offsetof(IO_Operative_Barrier_C_AttachToPlayer, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_AttachToPlayer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_AttachToPlayer, K2Node_DynamicCast_AsOak_Character) == 0x000008, "Member 'IO_Operative_Barrier_C_AttachToPlayer::K2Node_DynamicCast_AsOak_Character' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_AttachToPlayer, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'IO_Operative_Barrier_C_AttachToPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_AttachToPlayer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000011, "Member 'IO_Operative_Barrier_C_AttachToPlayer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.DetachFromPlayer
// 0x00A8 (0x00A8 - 0x0000)
struct IO_Operative_Barrier_C_DetachFromPlayer final
{
public:
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0010(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_DetachFromPlayer) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_DetachFromPlayer");
static_assert(sizeof(IO_Operative_Barrier_C_DetachFromPlayer) == 0x0000A8, "Wrong size on IO_Operative_Barrier_C_DetachFromPlayer");
static_assert(offsetof(IO_Operative_Barrier_C_DetachFromPlayer, CallFunc_GetAttachParent_ReturnValue) == 0x000000, "Member 'IO_Operative_Barrier_C_DetachFromPlayer::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_DetachFromPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'IO_Operative_Barrier_C_DetachFromPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_DetachFromPlayer, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000010, "Member 'IO_Operative_Barrier_C_DetachFromPlayer::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_DetachFromPlayer, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000A0, "Member 'IO_Operative_Barrier_C_DetachFromPlayer::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.SetBarrierHidden
// 0x0001 (0x0001 - 0x0000)
struct IO_Operative_Barrier_C_SetBarrierHidden final
{
public:
	bool                                          bIsHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IO_Operative_Barrier_C_SetBarrierHidden) == 0x000001, "Wrong alignment on IO_Operative_Barrier_C_SetBarrierHidden");
static_assert(sizeof(IO_Operative_Barrier_C_SetBarrierHidden) == 0x000001, "Wrong size on IO_Operative_Barrier_C_SetBarrierHidden");
static_assert(offsetof(IO_Operative_Barrier_C_SetBarrierHidden, bIsHidden) == 0x000000, "Member 'IO_Operative_Barrier_C_SetBarrierHidden::bIsHidden' has a wrong offset!");

// Function IO_Operative_Barrier.IO_Operative_Barrier_C.GetDeterrenceFieldDamageForCharacter
// 0x0068 (0x0068 - 0x0000)
struct IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter final
{
public:
	class AOakCharacter*                          Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableValueHandle                  DamageCalc;                                        // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableValueHandle                  BonusDamage;                                       // 0x0028(0x0018)(Edit, BlueprintVisible, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasHealthOfType_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTableValueFromHandle_ReturnValue1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter) == 0x000008, "Wrong alignment on IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter");
static_assert(sizeof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter) == 0x000068, "Wrong size on IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, Enemy) == 0x000000, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::Enemy' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, Val) == 0x000008, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::Val' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, DamageCalc) == 0x000010, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::DamageCalc' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, BonusDamage) == 0x000028, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::BonusDamage' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, Temp_float_Variable) == 0x000040, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, CallFunc_HasHealthOfType_ReturnValue) == 0x000044, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::CallFunc_HasHealthOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, Temp_bool_Variable) == 0x000045, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, CallFunc_GetDataTableValueFromHandle_ReturnValue) == 0x000048, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::CallFunc_GetDataTableValueFromHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, K2Node_Select_Default) == 0x000058, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, CallFunc_GetDataTableValueFromHandle_ReturnValue1) == 0x00005C, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::CallFunc_GetDataTableValueFromHandle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'IO_Operative_Barrier_C_GetDeterrenceFieldDamageForCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

