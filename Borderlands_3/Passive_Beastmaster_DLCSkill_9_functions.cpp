#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Passive_Beastmaster_DLCSkill_9

#include "Basic.hpp"

#include "Passive_Beastmaster_DLCSkill_9_classes.hpp"
#include "Passive_Beastmaster_DLCSkill_9_parameters.hpp"


namespace SDK
{

// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.ExecuteUbergraph_Passive_Beastmaster_DLCSkill_9
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_DLCSkill_9_C::ExecuteUbergraph_Passive_Beastmaster_DLCSkill_9(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "ExecuteUbergraph_Passive_Beastmaster_DLCSkill_9");

	Params::Passive_Beastmaster_DLCSkill_9_C_ExecuteUbergraph_Passive_Beastmaster_DLCSkill_9 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UPassive_Beastmaster_DLCSkill_9_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.DLCSkill9_Player_OnWeaponUsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          EventWeapon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_DLCSkill_9_C::DLCSkill9_Player_OnWeaponUsed(class AWeapon* EventWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "DLCSkill9_Player_OnWeaponUsed");

	Params::Passive_Beastmaster_DLCSkill_9_C_DLCSkill9_Player_OnWeaponUsed Parms{};

	Parms.EventWeapon = EventWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.DLCSkill9_Pet_OnCausedAnyDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGbxDamageType*                   DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageSource*                    DamageSource                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCausedDamageDetails             Details                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UPassive_Beastmaster_DLCSkill_9_C::DLCSkill9_Pet_OnCausedAnyDamage(class AActor* DamageInstigator, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "DLCSkill9_Pet_OnCausedAnyDamage");

	Params::Passive_Beastmaster_DLCSkill_9_C_DLCSkill9_Pet_OnCausedAnyDamage Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.DamageSource = DamageSource;
	Parms.DamagedActor = DamagedActor;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.DLCSkill9_OnBeastmasterPetReleased
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Pet_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_DLCSkill_9_C::DLCSkill9_OnBeastmasterPetReleased(class AOakCharacter* Pet_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "DLCSkill9_OnBeastmasterPetReleased");

	Params::Passive_Beastmaster_DLCSkill_9_C_DLCSkill9_OnBeastmasterPetReleased Parms{};

	Parms.Pet_0 = Pet_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.DLCSkill9_OnBeastPetSpawned
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Pet_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_DLCSkill_9_C::DLCSkill9_OnBeastPetSpawned(class AOakCharacter* Pet_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "DLCSkill9_OnBeastPetSpawned");

	Params::Passive_Beastmaster_DLCSkill_9_C_DLCSkill9_OnBeastPetSpawned Parms{};

	Parms.Pet_0 = Pet_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.RemovePetDamageEvent
// (BlueprintCallable, BlueprintEvent)

void UPassive_Beastmaster_DLCSkill_9_C::RemovePetDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "RemovePetDamageEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.SetupPetDamageEvent
// (BlueprintCallable, BlueprintEvent)

void UPassive_Beastmaster_DLCSkill_9_C::SetupPetDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "SetupPetDamageEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Passive_Beastmaster_DLCSkill_9.Passive_Beastmaster_DLCSkill_9_C.GetManualHUDIconValues
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   OutStackCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDuration                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutTimeRemaining                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassive_Beastmaster_DLCSkill_9_C::GetManualHUDIconValues(int32* OutStackCount, float* OutDuration, float* OutTimeRemaining) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Passive_Beastmaster_DLCSkill_9_C", "GetManualHUDIconValues");

	Params::Passive_Beastmaster_DLCSkill_9_C_GetManualHUDIconValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutStackCount != nullptr)
		*OutStackCount = Parms.OutStackCount;

	if (OutDuration != nullptr)
		*OutDuration = Parms.OutDuration;

	if (OutTimeRemaining != nullptr)
		*OutTimeRemaining = Parms.OutTimeRemaining;
}

}

