#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_PetShared_GeneticLink

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GbxAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_PetShared_GeneticLink.Ability_PetShared_GeneticLink_C
// 0x0060 (0x0210 - 0x01B0)
class UAbility_PetShared_GeneticLink_C final : public UOakPassiveAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 PetSpiderant;                                      // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGbxAbilityResourceController_ScriptDelegate RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_PetSpiderant_GeneticLink; // 0x01C0(0x0028)()
	struct FGbxAbilityResourceController_ConditionalDamageModifier RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_PetShared_GeneticLink; // 0x01E8(0x0028)()

public:
	void ExecuteUbergraph_Ability_PetShared_GeneticLink(int32 EntryPoint);
	void OnAbilityTimerEnded(const struct FOakAbilityTimerSpec& Spec, const struct FOakAbilityTimerResult& Result);
	void EnablePetBonusDamage();
	void OnTakeDamage_GeneticLink(class UDamageComponent* DamageReceiver, float Damage, const class UGbxDamageType* DamageType, const class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnActivated();
	void NewFunction_0(float DamageDealt);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_PetShared_GeneticLink_C">();
	}
	static class UAbility_PetShared_GeneticLink_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_PetShared_GeneticLink_C>();
	}
};
static_assert(alignof(UAbility_PetShared_GeneticLink_C) == 0x000008, "Wrong alignment on UAbility_PetShared_GeneticLink_C");
static_assert(sizeof(UAbility_PetShared_GeneticLink_C) == 0x000210, "Wrong size on UAbility_PetShared_GeneticLink_C");
static_assert(offsetof(UAbility_PetShared_GeneticLink_C, UberGraphFrame) == 0x0001B0, "Member 'UAbility_PetShared_GeneticLink_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbility_PetShared_GeneticLink_C, PetSpiderant) == 0x0001B8, "Member 'UAbility_PetShared_GeneticLink_C::PetSpiderant' has a wrong offset!");
static_assert(offsetof(UAbility_PetShared_GeneticLink_C, RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_PetSpiderant_GeneticLink) == 0x0001C0, "Member 'UAbility_PetShared_GeneticLink_C::RsrcCntrlr_GbxAbilityResourceController_ScriptDelegate_Ability_PetSpiderant_GeneticLink' has a wrong offset!");
static_assert(offsetof(UAbility_PetShared_GeneticLink_C, RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_PetShared_GeneticLink) == 0x0001E8, "Member 'UAbility_PetShared_GeneticLink_C::RsrcCntrlr_GbxAbilityResourceController_ConditionalDamageModifier_Ability_PetShared_GeneticLink' has a wrong offset!");

}

