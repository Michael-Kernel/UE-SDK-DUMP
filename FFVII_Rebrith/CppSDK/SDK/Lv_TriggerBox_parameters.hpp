#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lv_TriggerBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Lv_TriggerBox_CtrlGim_structs.hpp"
#include "TresGame_structs.hpp"


namespace SDK::Params
{

// Function lv_TriggerBox.lv_TriggerBox_C.OnTresActorBeginOverlap__DelegateSignature
// 0x6C0061 (0x6C0061 - 0x0000)
struct alignas(0x6C0061) Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature) == 0x6C0061, "Wrong alignment on Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature");
static_assert(sizeof(Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature) == 0x6C0061, "Wrong size on Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature");
static_assert(offsetof(Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature, OtherActor) == 0x000000, "Member 'Lv_TriggerBox_C_OnTresActorBeginOverlap__DelegateSignature::OtherActor' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.OnTresActorEndOverlap__DelegateSignature
// 0x800000 (0x800000 - 0x0000)
struct alignas(0x800000) Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature) == 0x800000, "Wrong alignment on Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature");
static_assert(sizeof(Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature) == 0x800000, "Wrong size on Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature");
static_assert(offsetof(Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature, OtherActor) == 0x000000, "Member 'Lv_TriggerBox_C_OnTresActorEndOverlap__DelegateSignature::OtherActor' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.ExecuteUbergraph_lv_TriggerBox
// 0x4DD28000 (0x4DD28000 - 0x0000)
struct alignas(0x4DD28000) Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Name;                                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Param1;                               // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Param2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Param3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Param4;                               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Param5;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Param6;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ControllerID4;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SqEX_IsObjTypeFriend_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SqEX_IsObjTypePlayer_ReturnValue;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresPlayerPawnBase*                    K2Node_DynamicCast_AsTres_Player_Pawn_Base;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETresStateID                                  CallFunc_GetStateID_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SqEX_IsObjTypeFriend_ReturnValue2;        // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SqEX_IsObjTypePlayer_ReturnValue2;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresPlayerPawnBase*                    K2Node_DynamicCast_AsTres_Player_Pawn_Base2;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETresStateID                                  CallFunc_GetStateID_ReturnValue2;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLv_TriggerBox_CtrlGim                 CallFunc_Array_Get_Item;                           // 0x0098(0x2E002E)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IG_ITresGimmickController_C> K2Node_DynamicCast_AsG_ITres_Gimmick_Controller;   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IG_ITresGimmickController_C> K2Node_DynamicCast_AsG_ITres_Gimmick_Controller2;  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ActivateGimmick;                      // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Reset;                                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_playAnimation2;                       // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ControllerID3;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLv_TriggerBox_CtrlGim                 CallFunc_Array_Get_Item2;                          // 0x00E8(0x2E002E)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IG_ITresGimmickController_C> K2Node_DynamicCast_AsG_ITres_Gimmick_Controller3;  // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IG_ITresGimmickController_C> K2Node_DynamicCast_AsG_ITres_Gimmick_Controller4;  // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_playAnimation;                        // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ControllerID2;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ControllerID;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetWorldMainFlagNameString_ReturnValue;   // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue2;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistGameFlag_ReturnValue;              // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FlagLabel_ReturnValue;       // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox) == 0x4DD28000, "Wrong alignment on Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox");
static_assert(sizeof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox) == 0x4DD28000, "Wrong size on Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, EntryPoint) == 0x000000, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_bool_IsClosed_Variable) == 0x000014, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_int_Loop_Counter_Variable2) == 0x000018, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Add_IntInt_ReturnValue2) == 0x00001C, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_int_Array_Index_Variable2) == 0x000020, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Name) == 0x000028, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Param1) == 0x000030, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Param1' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Param2) == 0x00003C, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Param2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Param3) == 0x000040, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Param3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Param4) == 0x000044, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Param4' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Param5) == 0x000048, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Param5' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Param6) == 0x000050, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Param6' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_ControllerID4) == 0x000058, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_ControllerID4' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_OtherActor2) == 0x000060, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_OtherActor2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_OtherActor) == 0x000068, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_SqEX_IsObjTypeFriend_ReturnValue) == 0x000070, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_SqEX_IsObjTypeFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_SqEX_IsObjTypePlayer_ReturnValue) == 0x000071, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_SqEX_IsObjTypePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_AsTres_Player_Pawn_Base) == 0x000078, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_AsTres_Player_Pawn_Base' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_GetStateID_ReturnValue) == 0x000081, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_GetStateID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_SqEX_IsObjTypeFriend_ReturnValue2) == 0x000082, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_SqEX_IsObjTypeFriend_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000083, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_BooleanAND_ReturnValue2) == 0x000084, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_SqEX_IsObjTypePlayer_ReturnValue2) == 0x000085, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_SqEX_IsObjTypePlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_AsTres_Player_Pawn_Base2) == 0x000088, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_AsTres_Player_Pawn_Base2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_bSuccess2) == 0x000090, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_GetStateID_ReturnValue2) == 0x000091, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_GetStateID_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x000092, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Array_Get_Item) == 0x000098, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_SwitchEnum_CmpSuccess) == 0x0000AD, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_AsG_ITres_Gimmick_Controller) == 0x0000B0, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_AsG_ITres_Gimmick_Controller' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_bSuccess3) == 0x0000C0, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_AsG_ITres_Gimmick_Controller2) == 0x0000C8, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_AsG_ITres_Gimmick_Controller2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_bSuccess4) == 0x0000D8, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_bool_Has_Been_Initd_Variable2) == 0x0000DA, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_ActivateGimmick) == 0x0000DB, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_ActivateGimmick' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_Reset) == 0x0000DC, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_Reset' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_playAnimation2) == 0x0000DD, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_playAnimation2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_ControllerID3) == 0x0000E0, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_ControllerID3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Array_Get_Item2) == 0x0000E8, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Array_Length_ReturnValue2) == 0x0000F8, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Less_IntInt_ReturnValue2) == 0x0000FC, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_SwitchEnum2_CmpSuccess) == 0x0000FD, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_AsG_ITres_Gimmick_Controller3) == 0x000100, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_AsG_ITres_Gimmick_Controller3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_bSuccess5) == 0x000110, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_AsG_ITres_Gimmick_Controller4) == 0x000118, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_AsG_ITres_Gimmick_Controller4' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_DynamicCast_bSuccess6) == 0x000128, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_IsValid_ReturnValue2) == 0x000129, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_playAnimation) == 0x00012A, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_playAnimation' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_ControllerID2) == 0x000130, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_ControllerID2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, K2Node_Event_ControllerID) == 0x000138, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::K2Node_Event_ControllerID' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_BooleanAND_ReturnValue3) == 0x000140, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_NotEqual_NameName_ReturnValue) == 0x000141, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_GetWorldMainFlagNameString_ReturnValue) == 0x000148, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_GetWorldMainFlagNameString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_Conv_StringToName_ReturnValue) == 0x000158, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, Temp_bool_IsClosed_Variable2) == 0x000160, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_NotEqual_NameName_ReturnValue2) == 0x000161, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_NotEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_IsExistGameFlag_ReturnValue) == 0x000162, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_IsExistGameFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_GreaterEqual_FlagLabel_ReturnValue) == 0x000163, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_GreaterEqual_FlagLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox, CallFunc_IsValid_ReturnValue3) == 0x000164, "Member 'Lv_TriggerBox_C_ExecuteUbergraph_lv_TriggerBox::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.TresResetGimmick
// 0x10101 (0x10101 - 0x0000)
struct alignas(0x10101) Lv_TriggerBox_C_TresResetGimmick final
{
public:
	class FName                                   ControllerId_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_TresResetGimmick) == 0x010101, "Wrong alignment on Lv_TriggerBox_C_TresResetGimmick");
static_assert(sizeof(Lv_TriggerBox_C_TresResetGimmick) == 0x010101, "Wrong size on Lv_TriggerBox_C_TresResetGimmick");
static_assert(offsetof(Lv_TriggerBox_C_TresResetGimmick, ControllerId_0) == 0x000000, "Member 'Lv_TriggerBox_C_TresResetGimmick::ControllerId_0' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.TresStopGimmick
// 0x0010 (0x0010 - 0x0000)
struct Lv_TriggerBox_C_TresStopGimmick final
{
public:
	bool                                          PlayAnimation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ControllerId_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_TresStopGimmick) == 0x000004, "Wrong alignment on Lv_TriggerBox_C_TresStopGimmick");
static_assert(sizeof(Lv_TriggerBox_C_TresStopGimmick) == 0x000010, "Wrong size on Lv_TriggerBox_C_TresStopGimmick");
static_assert(offsetof(Lv_TriggerBox_C_TresStopGimmick, PlayAnimation) == 0x000000, "Member 'Lv_TriggerBox_C_TresStopGimmick::PlayAnimation' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresStopGimmick, ControllerId_0) == 0x000008, "Member 'Lv_TriggerBox_C_TresStopGimmick::ControllerId_0' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.TresStartGimmick
// 0x0010 (0x0010 - 0x0000)
struct Lv_TriggerBox_C_TresStartGimmick final
{
public:
	bool                                          ActivateGimmick;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reset;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayAnimation;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ControllerId_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_TresStartGimmick) == 0x000004, "Wrong alignment on Lv_TriggerBox_C_TresStartGimmick");
static_assert(sizeof(Lv_TriggerBox_C_TresStartGimmick) == 0x000010, "Wrong size on Lv_TriggerBox_C_TresStartGimmick");
static_assert(offsetof(Lv_TriggerBox_C_TresStartGimmick, ActivateGimmick) == 0x000000, "Member 'Lv_TriggerBox_C_TresStartGimmick::ActivateGimmick' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresStartGimmick, Reset) == 0x000001, "Member 'Lv_TriggerBox_C_TresStartGimmick::Reset' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresStartGimmick, PlayAnimation) == 0x000002, "Member 'Lv_TriggerBox_C_TresStartGimmick::PlayAnimation' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresStartGimmick, ControllerId_0) == 0x000008, "Member 'Lv_TriggerBox_C_TresStartGimmick::ControllerId_0' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct Lv_TriggerBox_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on Lv_TriggerBox_C_ReceiveActorEndOverlap");
static_assert(sizeof(Lv_TriggerBox_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on Lv_TriggerBox_C_ReceiveActorEndOverlap");
static_assert(offsetof(Lv_TriggerBox_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'Lv_TriggerBox_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.ReceiveActorBeginOverlap
// 0x1425BC80 (0x1425BC80 - 0x0000)
struct alignas(0x1425BC80) Lv_TriggerBox_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_ReceiveActorBeginOverlap) == 0x1425BC80, "Wrong alignment on Lv_TriggerBox_C_ReceiveActorBeginOverlap");
static_assert(sizeof(Lv_TriggerBox_C_ReceiveActorBeginOverlap) == 0x1425BC80, "Wrong size on Lv_TriggerBox_C_ReceiveActorBeginOverlap");
static_assert(offsetof(Lv_TriggerBox_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'Lv_TriggerBox_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.TresSetControlGimmick
// 0x0038 (0x0038 - 0x0000)
struct Lv_TriggerBox_C_TresSetControlGimmick final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param1;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param2;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param3;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param4;                                            // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param5;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Param6;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerId_0;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_TresSetControlGimmick) == 0x000008, "Wrong alignment on Lv_TriggerBox_C_TresSetControlGimmick");
static_assert(sizeof(Lv_TriggerBox_C_TresSetControlGimmick) == 0x000038, "Wrong size on Lv_TriggerBox_C_TresSetControlGimmick");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Name_0) == 0x000000, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Name_0' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Param1) == 0x000008, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Param1' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Param2) == 0x000014, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Param2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Param3) == 0x000018, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Param3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Param4) == 0x00001C, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Param4' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Param5) == 0x000020, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Param5' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, Param6) == 0x000028, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::Param6' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresSetControlGimmick, ControllerId_0) == 0x000030, "Member 'Lv_TriggerBox_C_TresSetControlGimmick::ControllerId_0' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.UserConstructionScript
// 0x112F5920 (0x112F5920 - 0x0000)
struct Lv_TriggerBox_C_UserConstructionScript final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x112E9D50)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x112E9AF0)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTresStaticMeshComponent*               CallFunc_GetDebugStaticMeshComponent_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0060(0x112F5920)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lv_TriggerBox_C_UserConstructionScript) == 0x112F5920, "Wrong alignment on Lv_TriggerBox_C_UserConstructionScript");
static_assert(sizeof(Lv_TriggerBox_C_UserConstructionScript) == 0x112F5920, "Wrong size on Lv_TriggerBox_C_UserConstructionScript");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, Temp_struct_Variable) == 0x000000, "Member 'Lv_TriggerBox_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_GetDebugStaticMeshComponent_ReturnValue) == 0x000050, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_GetDebugStaticMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000060, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_IsValid_ReturnValue2) == 0x0000E8, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000EC, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_IsValid_ReturnValue3) == 0x0000F8, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, K2Node_DynamicCast_AsBox_Collision) == 0x000100, "Member 'Lv_TriggerBox_C_UserConstructionScript::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Lv_TriggerBox_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00010C, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000110, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000114, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue2) == 0x000124, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_SelectVector_ReturnValue) == 0x000130, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x00013C, "Member 'Lv_TriggerBox_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.SetEnableTrigger
// 0x44178260 (0x44178260 - 0x0000)
struct alignas(0x44178260) Lv_TriggerBox_C_SetEnableTrigger final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lv_TriggerBox_C_SetEnableTrigger) == 0x44178260, "Wrong alignment on Lv_TriggerBox_C_SetEnableTrigger");
static_assert(sizeof(Lv_TriggerBox_C_SetEnableTrigger) == 0x44178260, "Wrong size on Lv_TriggerBox_C_SetEnableTrigger");
static_assert(offsetof(Lv_TriggerBox_C_SetEnableTrigger, NewEnable) == 0x000000, "Member 'Lv_TriggerBox_C_SetEnableTrigger::NewEnable' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.DestroyBlock
// 0x44177D00 (0x44177D00 - 0x0000)
struct alignas(0x44177D00) Lv_TriggerBox_C_DestroyBlock final
{
public:
	bool                                          CallFunc_K2_IsCollisionEnabled_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lv_TriggerBox_C_DestroyBlock) == 0x44177D00, "Wrong alignment on Lv_TriggerBox_C_DestroyBlock");
static_assert(sizeof(Lv_TriggerBox_C_DestroyBlock) == 0x44177D00, "Wrong size on Lv_TriggerBox_C_DestroyBlock");
static_assert(offsetof(Lv_TriggerBox_C_DestroyBlock, CallFunc_K2_IsCollisionEnabled_ReturnValue) == 0x000000, "Member 'Lv_TriggerBox_C_DestroyBlock::CallFunc_K2_IsCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_DestroyBlock, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Lv_TriggerBox_C_DestroyBlock::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function lv_TriggerBox.lv_TriggerBox_C.TresGetControlGimmick
// 0x0068 (0x0068 - 0x0000)
struct Lv_TriggerBox_C_TresGetControlGimmick final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param1_;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param2_;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param3_;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param4_;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param5_;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Param6_;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerId_0;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param1;                                            // 0x0040(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param2;                                            // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param3;                                            // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param4;                                            // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param5;                                            // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Param6;                                            // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv_TriggerBox_C_TresGetControlGimmick) == 0x000008, "Wrong alignment on Lv_TriggerBox_C_TresGetControlGimmick");
static_assert(sizeof(Lv_TriggerBox_C_TresGetControlGimmick) == 0x000068, "Wrong size on Lv_TriggerBox_C_TresGetControlGimmick");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Name_0) == 0x000000, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Name_0' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param1_) == 0x000008, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param1_' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param2_) == 0x000014, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param2_' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param3_) == 0x000018, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param3_' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param4_) == 0x000020, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param4_' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param5_) == 0x000028, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param5_' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param6_) == 0x000030, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param6_' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, ControllerId_0) == 0x000038, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::ControllerId_0' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param1) == 0x000040, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param1' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param2) == 0x00004C, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param2' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param3) == 0x000050, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param3' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param4) == 0x000054, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param4' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param5) == 0x000058, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param5' has a wrong offset!");
static_assert(offsetof(Lv_TriggerBox_C_TresGetControlGimmick, Param6) == 0x000060, "Member 'Lv_TriggerBox_C_TresGetControlGimmick::Param6' has a wrong offset!");

}

