#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_viking

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TresGame_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TresPlayerStateEventCamera_viking.BP_TresPlayerStateEventCamera_viking_C
// 0x112E9AA0 (0x112E9AF0 - 0x0050)
class UBP_TresPlayerStateEventCamera_viking_C final : public UTresPlayerStateEvent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x6F26)(Transient, DuplicateTransient)
	class ATresCameraRotTarget*                   Viking_cam_rot_target;                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraAnim*                        Viking_cam_anim;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   Disneymajic_cimba_start;                           // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Vikingship;                                        // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresCharPawnBase*                      TresCharPawnBase;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vikingship_atari;                                  // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Viking_cut03;                                      // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresCameraRotTarget*                   Camera_Rot_Target;                                 // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Chant;                                             // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Dummy;                                             // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Cut03_Rot;                                         // 0x00A8(0x112E9AF0)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             PC_location;                                       // 0x00C0(0x112E9D50)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 Shake;                                             // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraAnim*                        Camera_Anim_Cut01;                                 // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ATARI;                                             // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnim*                            Camera_Anim_Cut01_file;                            // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x0110(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Cut03_Rot_2;                                       // 0x011C(0x112E9AF0)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AActor*                                 Dummy2;                                            // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BasePos;                                           // 0x0130(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Disneymajic_cimba_start__DelegateSignature();
	void ExecuteUbergraph_BP_TresPlayerStateEventCamera_viking(int32 EntryPoint);
	void Vikingship_cut02();
	void ReceivePlayerSpecificAction(ETresPlayerSpecificActionID ActionID, int32 SubID);
	void ReceivePlayerDtorState(ETresStateID StateID);
	void UserConstructionScript();
	void NewFunction_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TresPlayerStateEventCamera_viking_C">();
	}
	static class UBP_TresPlayerStateEventCamera_viking_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TresPlayerStateEventCamera_viking_C>();
	}
};
static_assert(alignof(UBP_TresPlayerStateEventCamera_viking_C) == 0x112E9AF0, "Wrong alignment on UBP_TresPlayerStateEventCamera_viking_C");
static_assert(sizeof(UBP_TresPlayerStateEventCamera_viking_C) == 0x112E9AF0, "Wrong size on UBP_TresPlayerStateEventCamera_viking_C");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, UberGraphFrame) == 0x000050, "Member 'UBP_TresPlayerStateEventCamera_viking_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Viking_cam_rot_target) == 0x000058, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Viking_cam_rot_target' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Viking_cam_anim) == 0x000060, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Viking_cam_anim' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Disneymajic_cimba_start) == 0x000068, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Disneymajic_cimba_start' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Vikingship) == 0x000078, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Vikingship' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, TresCharPawnBase) == 0x000080, "Member 'UBP_TresPlayerStateEventCamera_viking_C::TresCharPawnBase' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Vikingship_atari) == 0x000088, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Vikingship_atari' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Viking_cut03) == 0x000089, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Viking_cut03' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Camera_Rot_Target) == 0x000090, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Camera_Rot_Target' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Chant) == 0x000098, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Chant' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Dummy) == 0x0000A0, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Dummy' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Cut03_Rot) == 0x0000A8, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Cut03_Rot' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, PC_location) == 0x0000C0, "Member 'UBP_TresPlayerStateEventCamera_viking_C::PC_location' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Shake) == 0x0000F0, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Shake' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Camera_Anim_Cut01) == 0x0000F8, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Camera_Anim_Cut01' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, ATARI) == 0x000100, "Member 'UBP_TresPlayerStateEventCamera_viking_C::ATARI' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Camera_Anim_Cut01_file) == 0x000108, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Camera_Anim_Cut01_file' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Vector) == 0x000110, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Vector' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Cut03_Rot_2) == 0x00011C, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Cut03_Rot_2' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, Dummy2) == 0x000128, "Member 'UBP_TresPlayerStateEventCamera_viking_C::Dummy2' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_viking_C, BasePos) == 0x000130, "Member 'UBP_TresPlayerStateEventCamera_viking_C::BasePos' has a wrong offset!");

}

