#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: P_ex001_PawnBase

#include "Basic.hpp"

#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass p_ex001_PawnBase.p_ex001_PawnBase_C
// 0x0000 (0x1EF72E00 - 0x1EF72E00)
class AP_ex001_PawnBase_C : public ATresPlayerPawnSora
{
public:
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive13;                           // 0x15D8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive12;                           // 0x15E0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive11;                           // 0x15E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive10;                           // 0x15F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive9;                            // 0x15F8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive8;                            // 0x1600(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive7;                            // 0x1608(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive6;                            // 0x1610(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive5;                            // 0x1618(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive4;                            // 0x1620(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive3;                            // 0x1628(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQEXSEADAutoSeComponent*               SQEXSEADAutoSe;                                    // 0x1630(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive2;                            // 0x1638(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresBodyCollPrimitive*                 TresBodyCollPrimitive1;                            // 0x1640(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"p_ex001_PawnBase_C">();
	}
	static class AP_ex001_PawnBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AP_ex001_PawnBase_C>();
	}
};
static_assert(alignof(AP_ex001_PawnBase_C) == 0x1EF72E00, "Wrong alignment on AP_ex001_PawnBase_C");
static_assert(sizeof(AP_ex001_PawnBase_C) == 0x1EF72E00, "Wrong size on AP_ex001_PawnBase_C");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive13) == 0x0015D8, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive13' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive12) == 0x0015E0, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive12' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive11) == 0x0015E8, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive11' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive10) == 0x0015F0, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive10' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive9) == 0x0015F8, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive9' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive8) == 0x001600, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive8' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive7) == 0x001608, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive7' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive6) == 0x001610, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive6' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive5) == 0x001618, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive5' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive4) == 0x001620, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive4' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive3) == 0x001628, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive3' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, SQEXSEADAutoSe) == 0x001630, "Member 'AP_ex001_PawnBase_C::SQEXSEADAutoSe' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive2) == 0x001638, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive2' has a wrong offset!");
static_assert(offsetof(AP_ex001_PawnBase_C, TresBodyCollPrimitive1) == 0x001640, "Member 'AP_ex001_PawnBase_C::TresBodyCollPrimitive1' has a wrong offset!");

}

