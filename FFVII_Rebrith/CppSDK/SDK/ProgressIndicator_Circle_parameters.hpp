#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressIndicator_Circle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.UserConstructionScript
// 0xC020000 (0xC020000 - 0x0000)
struct alignas(0xC020000) ProgressIndicator_Circle_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressIndicator_Circle_C_UserConstructionScript) == 0xC020000, "Wrong alignment on ProgressIndicator_Circle_C_UserConstructionScript");
static_assert(sizeof(ProgressIndicator_Circle_C_UserConstructionScript) == 0xC020000, "Wrong size on ProgressIndicator_Circle_C_UserConstructionScript");
static_assert(offsetof(ProgressIndicator_Circle_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'ProgressIndicator_Circle_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Border Thickness
// 0xC020000 (0xC020000 - 0x0000)
struct alignas(0xC020000) ProgressIndicator_Circle_C_Set_Border_Thickness final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressIndicator_Circle_C_Set_Border_Thickness) == 0xC020000, "Wrong alignment on ProgressIndicator_Circle_C_Set_Border_Thickness");
static_assert(sizeof(ProgressIndicator_Circle_C_Set_Border_Thickness) == 0xC020000, "Wrong size on ProgressIndicator_Circle_C_Set_Border_Thickness");
static_assert(offsetof(ProgressIndicator_Circle_C_Set_Border_Thickness, Value) == 0x000000, "Member 'ProgressIndicator_Circle_C_Set_Border_Thickness::Value' has a wrong offset!");

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Percent Complete
// 0xC020000 (0xC020000 - 0x0000)
struct alignas(0xC020000) ProgressIndicator_Circle_C_Set_Percent_Complete final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressIndicator_Circle_C_Set_Percent_Complete) == 0xC020000, "Wrong alignment on ProgressIndicator_Circle_C_Set_Percent_Complete");
static_assert(sizeof(ProgressIndicator_Circle_C_Set_Percent_Complete) == 0xC020000, "Wrong size on ProgressIndicator_Circle_C_Set_Percent_Complete");
static_assert(offsetof(ProgressIndicator_Circle_C_Set_Percent_Complete, Value) == 0x000000, "Member 'ProgressIndicator_Circle_C_Set_Percent_Complete::Value' has a wrong offset!");

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Fill Color
// 0x112EAE80 (0x112EAE80 - 0x0000)
struct ProgressIndicator_Circle_C_Set_Fill_Color final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x112EAE80)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressIndicator_Circle_C_Set_Fill_Color) == 0x112EAE80, "Wrong alignment on ProgressIndicator_Circle_C_Set_Fill_Color");
static_assert(sizeof(ProgressIndicator_Circle_C_Set_Fill_Color) == 0x112EAE80, "Wrong size on ProgressIndicator_Circle_C_Set_Fill_Color");
static_assert(offsetof(ProgressIndicator_Circle_C_Set_Fill_Color, Value) == 0x000000, "Member 'ProgressIndicator_Circle_C_Set_Fill_Color::Value' has a wrong offset!");

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Border Color
// 0x112EAE80 (0x112EAE80 - 0x0000)
struct ProgressIndicator_Circle_C_Set_Border_Color final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x112EAE80)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressIndicator_Circle_C_Set_Border_Color) == 0x112EAE80, "Wrong alignment on ProgressIndicator_Circle_C_Set_Border_Color");
static_assert(sizeof(ProgressIndicator_Circle_C_Set_Border_Color) == 0x112EAE80, "Wrong size on ProgressIndicator_Circle_C_Set_Border_Color");
static_assert(offsetof(ProgressIndicator_Circle_C_Set_Border_Color, Value) == 0x000000, "Member 'ProgressIndicator_Circle_C_Set_Border_Color::Value' has a wrong offset!");

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Background Color
// 0x112EAE80 (0x112EAE80 - 0x0000)
struct ProgressIndicator_Circle_C_Set_Background_Color final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x112EAE80)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressIndicator_Circle_C_Set_Background_Color) == 0x112EAE80, "Wrong alignment on ProgressIndicator_Circle_C_Set_Background_Color");
static_assert(sizeof(ProgressIndicator_Circle_C_Set_Background_Color) == 0x112EAE80, "Wrong size on ProgressIndicator_Circle_C_Set_Background_Color");
static_assert(offsetof(ProgressIndicator_Circle_C_Set_Background_Color, Value) == 0x000000, "Member 'ProgressIndicator_Circle_C_Set_Background_Color::Value' has a wrong offset!");

}

