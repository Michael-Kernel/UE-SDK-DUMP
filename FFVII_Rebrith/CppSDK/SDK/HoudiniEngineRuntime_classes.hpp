#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoudiniEngineRuntime

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "HoudiniEngineRuntime_structs.hpp"


namespace SDK
{

// Class HoudiniEngineRuntime.HoudiniAsset
// 0x0030 (0x0070 - 0x0040)
class UHoudiniAsset final : public UObject
{
public:
	class FString                                 AssetFileName;                                     // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UThumbnailInfo*                         ThumbnailInfo;                                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAsset">();
	}
	static class UHoudiniAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAsset>();
	}
};
static_assert(alignof(UHoudiniAsset) == 0x000008, "Wrong alignment on UHoudiniAsset");
static_assert(sizeof(UHoudiniAsset) == 0x000070, "Wrong size on UHoudiniAsset");
static_assert(offsetof(UHoudiniAsset, AssetFileName) == 0x000040, "Member 'UHoudiniAsset::AssetFileName' has a wrong offset!");
static_assert(offsetof(UHoudiniAsset, ThumbnailInfo) == 0x000050, "Member 'UHoudiniAsset::ThumbnailInfo' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniAssetActor
// 0x0000 (0x1EF72E00 - 0x1EF72E00)
class AHoudiniAssetActor final : public AActor
{
public:
	class UHoudiniAssetComponent*                 HoudiniAssetComponent;                             // 0x03E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetActor">();
	}
	static class AHoudiniAssetActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHoudiniAssetActor>();
	}
};
static_assert(alignof(AHoudiniAssetActor) == 0x1EF72E00, "Wrong alignment on AHoudiniAssetActor");
static_assert(sizeof(AHoudiniAssetActor) == 0x1EF72E00, "Wrong size on AHoudiniAssetActor");
static_assert(offsetof(AHoudiniAssetActor, HoudiniAssetComponent) == 0x0003E0, "Member 'AHoudiniAssetActor::HoudiniAssetComponent' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniAssetComponent
// 0xA0370 (0x11389E60 - 0x112E9AF0)
class UHoudiniAssetComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_868[0x8];                                      // 0x0868(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bGeneratedDoubleSidedGeometry : 1;                 // 0x0870(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      GeneratedPhysMaterial;                             // 0x0878(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionTraceFlag                           GeneratedCollisionTraceFlag;                       // 0x0880(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GeneratedLightMapResolution;                       // 0x0884(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GeneratedLpvBiasMultiplier;                        // 0x0888(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GeneratedDistanceFieldResolutionScale;             // 0x088C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWalkableSlopeOverride                 GeneratedWalkableSlopeOverride;                    // 0x0890(0x11389E60)(Edit, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	int32                                         GeneratedLightMapCoordinateIndex;                  // 0x08A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bGeneratedUseMaximumStreamingTexelRatio : 1;       // 0x08A4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_8A5[0x3];                                      // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GeneratedStreamingDistanceMultiplier;              // 0x08A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFoliageType_InstancedStaticMesh*       GeneratedFoliageDefaultSettings;                   // 0x08B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAssetUserData*>                 GeneratedAssetUserData;                            // 0x08B8(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C8[0x478];                                    // 0x08C8(0x0478)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BakeFolder;                                        // 0x0D40(0x0018)(Protected, NativeAccessSpecifierProtected)
	class FText                                   TempCookFolder;                                    // 0x0D58(0x0018)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_D70[0x1A0];                                    // 0x0D70(0x01A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetAssetId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetComponent">();
	}
	static class UHoudiniAssetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetComponent>();
	}
};
static_assert(alignof(UHoudiniAssetComponent) == 0x11389E60, "Wrong alignment on UHoudiniAssetComponent");
static_assert(sizeof(UHoudiniAssetComponent) == 0x11389E60, "Wrong size on UHoudiniAssetComponent");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedPhysMaterial) == 0x000878, "Member 'UHoudiniAssetComponent::GeneratedPhysMaterial' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedCollisionTraceFlag) == 0x000880, "Member 'UHoudiniAssetComponent::GeneratedCollisionTraceFlag' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedLightMapResolution) == 0x000884, "Member 'UHoudiniAssetComponent::GeneratedLightMapResolution' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedLpvBiasMultiplier) == 0x000888, "Member 'UHoudiniAssetComponent::GeneratedLpvBiasMultiplier' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedDistanceFieldResolutionScale) == 0x00088C, "Member 'UHoudiniAssetComponent::GeneratedDistanceFieldResolutionScale' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedWalkableSlopeOverride) == 0x000890, "Member 'UHoudiniAssetComponent::GeneratedWalkableSlopeOverride' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedLightMapCoordinateIndex) == 0x0008A0, "Member 'UHoudiniAssetComponent::GeneratedLightMapCoordinateIndex' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedStreamingDistanceMultiplier) == 0x0008A8, "Member 'UHoudiniAssetComponent::GeneratedStreamingDistanceMultiplier' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedFoliageDefaultSettings) == 0x0008B0, "Member 'UHoudiniAssetComponent::GeneratedFoliageDefaultSettings' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, GeneratedAssetUserData) == 0x0008B8, "Member 'UHoudiniAssetComponent::GeneratedAssetUserData' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, BakeFolder) == 0x000D40, "Member 'UHoudiniAssetComponent::BakeFolder' has a wrong offset!");
static_assert(offsetof(UHoudiniAssetComponent, TempCookFolder) == 0x000D58, "Member 'UHoudiniAssetComponent::TempCookFolder' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniAssetComponentMaterials
// 0x00A8 (0x00E8 - 0x0040)
class UHoudiniAssetComponentMaterials final : public UObject
{
public:
	uint8                                         Pad_40[0xA8];                                      // 0x0040(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetComponentMaterials">();
	}
	static class UHoudiniAssetComponentMaterials* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetComponentMaterials>();
	}
};
static_assert(alignof(UHoudiniAssetComponentMaterials) == 0x000008, "Wrong alignment on UHoudiniAssetComponentMaterials");
static_assert(sizeof(UHoudiniAssetComponentMaterials) == 0x0000E8, "Wrong size on UHoudiniAssetComponentMaterials");

// Class HoudiniEngineRuntime.HoudiniAssetParameter
// 0x0078 (0x00B8 - 0x0040)
class UHoudiniAssetParameter : public UObject
{
public:
	uint8                                         Pad_40[0x78];                                      // 0x0040(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameter">();
	}
	static class UHoudiniAssetParameter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameter>();
	}
};
static_assert(alignof(UHoudiniAssetParameter) == 0x000008, "Wrong alignment on UHoudiniAssetParameter");
static_assert(sizeof(UHoudiniAssetParameter) == 0x0000B8, "Wrong size on UHoudiniAssetParameter");

// Class HoudiniEngineRuntime.HoudiniAssetInput
// 0x0148 (0x0200 - 0x00B8)
class UHoudiniAssetInput final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x148];                                     // 0x00B8(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetInput">();
	}
	static class UHoudiniAssetInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetInput>();
	}
};
static_assert(alignof(UHoudiniAssetInput) == 0x000008, "Wrong alignment on UHoudiniAssetInput");
static_assert(sizeof(UHoudiniAssetInput) == 0x000200, "Wrong size on UHoudiniAssetInput");

// Class HoudiniEngineRuntime.HoudiniAssetInstanceInput
// 0x00E8 (0x01A0 - 0x00B8)
class UHoudiniAssetInstanceInput final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0xE8];                                      // 0x00B8(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetInstanceInput">();
	}
	static class UHoudiniAssetInstanceInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetInstanceInput>();
	}
};
static_assert(alignof(UHoudiniAssetInstanceInput) == 0x000008, "Wrong alignment on UHoudiniAssetInstanceInput");
static_assert(sizeof(UHoudiniAssetInstanceInput) == 0x0001A0, "Wrong size on UHoudiniAssetInstanceInput");

// Class HoudiniEngineRuntime.HoudiniAssetInstanceInputField
// 0x0160 (0x01A0 - 0x0040)
class UHoudiniAssetInstanceInputField final : public UObject
{
public:
	uint8                                         Pad_40[0x160];                                     // 0x0040(0x0160)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetInstanceInputField">();
	}
	static class UHoudiniAssetInstanceInputField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetInstanceInputField>();
	}
};
static_assert(alignof(UHoudiniAssetInstanceInputField) == 0x000008, "Wrong alignment on UHoudiniAssetInstanceInputField");
static_assert(sizeof(UHoudiniAssetInstanceInputField) == 0x0001A0, "Wrong size on UHoudiniAssetInstanceInputField");

// Class HoudiniEngineRuntime.HoudiniAssetParameterButton
// 0x0000 (0x00B8 - 0x00B8)
class UHoudiniAssetParameterButton final : public UHoudiniAssetParameter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterButton">();
	}
	static class UHoudiniAssetParameterButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterButton>();
	}
};
static_assert(alignof(UHoudiniAssetParameterButton) == 0x000008, "Wrong alignment on UHoudiniAssetParameterButton");
static_assert(sizeof(UHoudiniAssetParameterButton) == 0x0000B8, "Wrong size on UHoudiniAssetParameterButton");

// Class HoudiniEngineRuntime.HoudiniAssetParameterChoice
// 0x0038 (0x00F0 - 0x00B8)
class UHoudiniAssetParameterChoice final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x38];                                      // 0x00B8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterChoice">();
	}
	static class UHoudiniAssetParameterChoice* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterChoice>();
	}
};
static_assert(alignof(UHoudiniAssetParameterChoice) == 0x000008, "Wrong alignment on UHoudiniAssetParameterChoice");
static_assert(sizeof(UHoudiniAssetParameterChoice) == 0x0000F0, "Wrong size on UHoudiniAssetParameterChoice");

// Class HoudiniEngineRuntime.HoudiniAssetParameterColor
// 0x0010 (0x00C8 - 0x00B8)
class UHoudiniAssetParameterColor final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterColor">();
	}
	static class UHoudiniAssetParameterColor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterColor>();
	}
};
static_assert(alignof(UHoudiniAssetParameterColor) == 0x000008, "Wrong alignment on UHoudiniAssetParameterColor");
static_assert(sizeof(UHoudiniAssetParameterColor) == 0x0000C8, "Wrong size on UHoudiniAssetParameterColor");

// Class HoudiniEngineRuntime.HoudiniAssetParameterFile
// 0x0020 (0x00D8 - 0x00B8)
class UHoudiniAssetParameterFile final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x20];                                      // 0x00B8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterFile">();
	}
	static class UHoudiniAssetParameterFile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterFile>();
	}
};
static_assert(alignof(UHoudiniAssetParameterFile) == 0x000008, "Wrong alignment on UHoudiniAssetParameterFile");
static_assert(sizeof(UHoudiniAssetParameterFile) == 0x0000D8, "Wrong size on UHoudiniAssetParameterFile");

// Class HoudiniEngineRuntime.HoudiniAssetParameterFloat
// 0x0030 (0x00E8 - 0x00B8)
class UHoudiniAssetParameterFloat final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x30];                                      // 0x00B8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterFloat">();
	}
	static class UHoudiniAssetParameterFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterFloat>();
	}
};
static_assert(alignof(UHoudiniAssetParameterFloat) == 0x000008, "Wrong alignment on UHoudiniAssetParameterFloat");
static_assert(sizeof(UHoudiniAssetParameterFloat) == 0x0000E8, "Wrong size on UHoudiniAssetParameterFloat");

// Class HoudiniEngineRuntime.HoudiniAssetParameterFolder
// 0x0000 (0x00B8 - 0x00B8)
class UHoudiniAssetParameterFolder final : public UHoudiniAssetParameter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterFolder">();
	}
	static class UHoudiniAssetParameterFolder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterFolder>();
	}
};
static_assert(alignof(UHoudiniAssetParameterFolder) == 0x000008, "Wrong alignment on UHoudiniAssetParameterFolder");
static_assert(sizeof(UHoudiniAssetParameterFolder) == 0x0000B8, "Wrong size on UHoudiniAssetParameterFolder");

// Class HoudiniEngineRuntime.HoudiniAssetParameterFolderList
// 0x0000 (0x00B8 - 0x00B8)
class UHoudiniAssetParameterFolderList final : public UHoudiniAssetParameter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterFolderList">();
	}
	static class UHoudiniAssetParameterFolderList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterFolderList>();
	}
};
static_assert(alignof(UHoudiniAssetParameterFolderList) == 0x000008, "Wrong alignment on UHoudiniAssetParameterFolderList");
static_assert(sizeof(UHoudiniAssetParameterFolderList) == 0x0000B8, "Wrong size on UHoudiniAssetParameterFolderList");

// Class HoudiniEngineRuntime.HoudiniAssetParameterInt
// 0x0030 (0x00E8 - 0x00B8)
class UHoudiniAssetParameterInt final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x30];                                      // 0x00B8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterInt">();
	}
	static class UHoudiniAssetParameterInt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterInt>();
	}
};
static_assert(alignof(UHoudiniAssetParameterInt) == 0x000008, "Wrong alignment on UHoudiniAssetParameterInt");
static_assert(sizeof(UHoudiniAssetParameterInt) == 0x0000E8, "Wrong size on UHoudiniAssetParameterInt");

// Class HoudiniEngineRuntime.HoudiniAssetParameterLabel
// 0x0000 (0x00B8 - 0x00B8)
class UHoudiniAssetParameterLabel final : public UHoudiniAssetParameter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterLabel">();
	}
	static class UHoudiniAssetParameterLabel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterLabel>();
	}
};
static_assert(alignof(UHoudiniAssetParameterLabel) == 0x000008, "Wrong alignment on UHoudiniAssetParameterLabel");
static_assert(sizeof(UHoudiniAssetParameterLabel) == 0x0000B8, "Wrong size on UHoudiniAssetParameterLabel");

// Class HoudiniEngineRuntime.HoudiniAssetParameterMultiparm
// 0x0010 (0x00C8 - 0x00B8)
class UHoudiniAssetParameterMultiparm : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterMultiparm">();
	}
	static class UHoudiniAssetParameterMultiparm* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterMultiparm>();
	}
};
static_assert(alignof(UHoudiniAssetParameterMultiparm) == 0x000008, "Wrong alignment on UHoudiniAssetParameterMultiparm");
static_assert(sizeof(UHoudiniAssetParameterMultiparm) == 0x0000C8, "Wrong size on UHoudiniAssetParameterMultiparm");

// Class HoudiniEngineRuntime.HoudiniAssetParameterRampCurveFloat
// 0x0000 (0x11102 - 0x11102)
class UHoudiniAssetParameterRampCurveFloat final : public UCurveFloat
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterRampCurveFloat">();
	}
	static class UHoudiniAssetParameterRampCurveFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterRampCurveFloat>();
	}
};
static_assert(alignof(UHoudiniAssetParameterRampCurveFloat) == 0x011102, "Wrong alignment on UHoudiniAssetParameterRampCurveFloat");
static_assert(sizeof(UHoudiniAssetParameterRampCurveFloat) == 0x011102, "Wrong size on UHoudiniAssetParameterRampCurveFloat");

// Class HoudiniEngineRuntime.HoudiniAssetParameterRampCurveColor
// 0x0000 (0x11102 - 0x11102)
class UHoudiniAssetParameterRampCurveColor final : public UCurveLinearColor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterRampCurveColor">();
	}
	static class UHoudiniAssetParameterRampCurveColor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterRampCurveColor>();
	}
};
static_assert(alignof(UHoudiniAssetParameterRampCurveColor) == 0x011102, "Wrong alignment on UHoudiniAssetParameterRampCurveColor");
static_assert(sizeof(UHoudiniAssetParameterRampCurveColor) == 0x011102, "Wrong size on UHoudiniAssetParameterRampCurveColor");

// Class HoudiniEngineRuntime.HoudiniAssetParameterRamp
// 0x0018 (0x00E0 - 0x00C8)
class UHoudiniAssetParameterRamp final : public UHoudiniAssetParameterMultiparm
{
public:
	uint8                                         Pad_C8[0x18];                                      // 0x00C8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterRamp">();
	}
	static class UHoudiniAssetParameterRamp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterRamp>();
	}
};
static_assert(alignof(UHoudiniAssetParameterRamp) == 0x000008, "Wrong alignment on UHoudiniAssetParameterRamp");
static_assert(sizeof(UHoudiniAssetParameterRamp) == 0x0000E0, "Wrong size on UHoudiniAssetParameterRamp");

// Class HoudiniEngineRuntime.HoudiniAssetParameterSeparator
// 0x0000 (0x00B8 - 0x00B8)
class UHoudiniAssetParameterSeparator final : public UHoudiniAssetParameter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterSeparator">();
	}
	static class UHoudiniAssetParameterSeparator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterSeparator>();
	}
};
static_assert(alignof(UHoudiniAssetParameterSeparator) == 0x000008, "Wrong alignment on UHoudiniAssetParameterSeparator");
static_assert(sizeof(UHoudiniAssetParameterSeparator) == 0x0000B8, "Wrong size on UHoudiniAssetParameterSeparator");

// Class HoudiniEngineRuntime.HoudiniAssetParameterString
// 0x0010 (0x00C8 - 0x00B8)
class UHoudiniAssetParameterString final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterString">();
	}
	static class UHoudiniAssetParameterString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterString>();
	}
};
static_assert(alignof(UHoudiniAssetParameterString) == 0x000008, "Wrong alignment on UHoudiniAssetParameterString");
static_assert(sizeof(UHoudiniAssetParameterString) == 0x0000C8, "Wrong size on UHoudiniAssetParameterString");

// Class HoudiniEngineRuntime.HoudiniAssetParameterToggle
// 0x0010 (0x00C8 - 0x00B8)
class UHoudiniAssetParameterToggle final : public UHoudiniAssetParameter
{
public:
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAssetParameterToggle">();
	}
	static class UHoudiniAssetParameterToggle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAssetParameterToggle>();
	}
};
static_assert(alignof(UHoudiniAssetParameterToggle) == 0x000008, "Wrong alignment on UHoudiniAssetParameterToggle");
static_assert(sizeof(UHoudiniAssetParameterToggle) == 0x0000C8, "Wrong size on UHoudiniAssetParameterToggle");

// Class HoudiniEngineRuntime.HoudiniAttributeDataComponent
// 0x0000 (0xD38D - 0xD38D)
class UHoudiniAttributeDataComponent final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniAttributeDataComponent">();
	}
	static class UHoudiniAttributeDataComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniAttributeDataComponent>();
	}
};
static_assert(alignof(UHoudiniAttributeDataComponent) == 0x00D38D, "Wrong alignment on UHoudiniAttributeDataComponent");
static_assert(sizeof(UHoudiniAttributeDataComponent) == 0x00D38D, "Wrong size on UHoudiniAttributeDataComponent");

// Class HoudiniEngineRuntime.TestHoudiniParameterBuilder
// 0x00A0 (0x00E0 - 0x0040)
class UTestHoudiniParameterBuilder final : public UObject
{
public:
	uint8                                         Pad_40[0xA0];                                      // 0x0040(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TestHoudiniParameterBuilder">();
	}
	static class UTestHoudiniParameterBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestHoudiniParameterBuilder>();
	}
};
static_assert(alignof(UTestHoudiniParameterBuilder) == 0x000008, "Wrong alignment on UTestHoudiniParameterBuilder");
static_assert(sizeof(UTestHoudiniParameterBuilder) == 0x0000E0, "Wrong size on UTestHoudiniParameterBuilder");

// Class HoudiniEngineRuntime.HoudiniHandleComponent
// 0x0000 (0x112E9AF0 - 0x112E9AF0)
class UHoudiniHandleComponent final : public USceneComponent
{
public:
	uint8                                         Pad_418[0xB0];                                     // 0x0418(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	EHoudiniHandleType                            HandleType;                                        // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniHandleComponent">();
	}
	static class UHoudiniHandleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniHandleComponent>();
	}
};
static_assert(alignof(UHoudiniHandleComponent) == 0x112E9AF0, "Wrong alignment on UHoudiniHandleComponent");
static_assert(sizeof(UHoudiniHandleComponent) == 0x112E9AF0, "Wrong size on UHoudiniHandleComponent");
static_assert(offsetof(UHoudiniHandleComponent, HandleType) == 0x0004C8, "Member 'UHoudiniHandleComponent::HandleType' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniInstancedActorComponent
// 0x0000 (0x112E9AF0 - 0x112E9AF0)
class UHoudiniInstancedActorComponent final : public USceneComponent
{
public:
	class UObject*                                InstancedAsset;                                    // 0x0418(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         Instances;                                         // 0x0420(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniInstancedActorComponent">();
	}
	static class UHoudiniInstancedActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniInstancedActorComponent>();
	}
};
static_assert(alignof(UHoudiniInstancedActorComponent) == 0x112E9AF0, "Wrong alignment on UHoudiniInstancedActorComponent");
static_assert(sizeof(UHoudiniInstancedActorComponent) == 0x112E9AF0, "Wrong size on UHoudiniInstancedActorComponent");
static_assert(offsetof(UHoudiniInstancedActorComponent, InstancedAsset) == 0x000418, "Member 'UHoudiniInstancedActorComponent::InstancedAsset' has a wrong offset!");
static_assert(offsetof(UHoudiniInstancedActorComponent, Instances) == 0x000420, "Member 'UHoudiniInstancedActorComponent::Instances' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniMeshSplitInstancerComponent
// 0x0000 (0x112E9AF0 - 0x112E9AF0)
class UHoudiniMeshSplitInstancerComponent final : public USceneComponent
{
public:
	TArray<class UStaticMeshComponent*>           Instances;                                         // 0x0418(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0428(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                            InstancedMesh;                                     // 0x0430(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniMeshSplitInstancerComponent">();
	}
	static class UHoudiniMeshSplitInstancerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniMeshSplitInstancerComponent>();
	}
};
static_assert(alignof(UHoudiniMeshSplitInstancerComponent) == 0x112E9AF0, "Wrong alignment on UHoudiniMeshSplitInstancerComponent");
static_assert(sizeof(UHoudiniMeshSplitInstancerComponent) == 0x112E9AF0, "Wrong size on UHoudiniMeshSplitInstancerComponent");
static_assert(offsetof(UHoudiniMeshSplitInstancerComponent, Instances) == 0x000418, "Member 'UHoudiniMeshSplitInstancerComponent::Instances' has a wrong offset!");
static_assert(offsetof(UHoudiniMeshSplitInstancerComponent, OverrideMaterial) == 0x000428, "Member 'UHoudiniMeshSplitInstancerComponent::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(UHoudiniMeshSplitInstancerComponent, InstancedMesh) == 0x000430, "Member 'UHoudiniMeshSplitInstancerComponent::InstancedMesh' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniRuntimeSettings
// 0x11389E20 (0x11389E60 - 0x0040)
class UHoudiniRuntimeSettings final : public UObject
{
public:
	EHoudiniRuntimeSettingsSessionType            SessionType;                                       // 0x0040(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerHost;                                        // 0x0048(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ServerPort;                                        // 0x0058(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerPipeName;                                    // 0x0060(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartAutomaticServer;                             // 0x0070(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutomaticServerTimeout;                            // 0x0074(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowMultiAssetDialog;                             // 0x0078(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCooking;                                    // 0x0079(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUploadTransformsToHoudiniEngine;                  // 0x007A(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransformChangeTriggersCooks;                     // 0x007B(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplaySlateCookingNotifications;                 // 0x007C(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCookCurvesOnMouseRelease;                         // 0x007D(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TemporaryCookFolder;                               // 0x0080(0x0018)(Edit, Config, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	bool                                          bTreatRampParametersAsMultiparms;                  // 0x0098(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CollisionGroupNamePrefix;                          // 0x00A0(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RenderedCollisionGroupNamePrefix;                  // 0x00B0(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UCXCollisionGroupNamePrefix;                       // 0x00C0(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UCXRenderedCollisionGroupNamePrefix;               // 0x00D0(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SimpleCollisionGroupNamePrefix;                    // 0x00E0(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SimpleRenderedCollisionGroupNamePrefix;            // 0x00F0(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeMaterial;                      // 0x0100(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeMaterialHole;                  // 0x0110(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeInstanceOverride;              // 0x0120(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeFaceSmoothingMask;             // 0x0130(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeLightmapResolution;            // 0x0140(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeGeneratedMeshName;             // 0x0150(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeInputMeshName;                 // 0x0160(0x0010)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MarshallingAttributeInputSourceFile;               // 0x0170(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MarshallingSplineResolution;                       // 0x0180(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MarshallingLandscapesUseFullResolution;            // 0x0184(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MarshallingLandscapesForceMinMaxValues;            // 0x0185(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MarshallingLandscapesForcedMinValue;               // 0x0188(0x0004)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MarshallingLandscapesForcedMaxValue;               // 0x018C(0x0004)(Edit, ZeroConstructor, Config, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GeneratedGeometryScaleFactor;                      // 0x0190(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransformScaleFactor;                              // 0x0194(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHoudiniRuntimeSettingsAxisImport             ImportAxis;                                        // 0x0198(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bDoubleSidedGeometry : 1;                          // 0x019C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      PhysMaterial;                                      // 0x01A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionTraceFlag                           CollisionTraceFlag;                                // 0x01A8(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LightMapResolution;                                // 0x01AC(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LpvBiasMultiplier;                                 // 0x01B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GeneratedDistanceFieldResolutionScale;             // 0x01B4(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWalkableSlopeOverride                 WalkableSlopeOverride;                             // 0x01B8(0x11389E60)(Edit, Config, GlobalConfig, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	int32                                         LightMapCoordinateIndex;                           // 0x01C8(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseMaximumStreamingTexelRatio : 1;                // 0x01CC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, GlobalConfig, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StreamingDistanceMultiplier;                       // 0x01D0(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFoliageType_InstancedStaticMesh*       FoliageDefaultSettings;                            // 0x01D8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAssetUserData*>                 AssetUserData;                                     // 0x01E0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bUseFullPrecisionUVs;                              // 0x01F0(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SrcLightmapIndex;                                  // 0x01F4(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DstLightmapIndex;                                  // 0x01F8(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinLightmapResolution;                             // 0x01FC(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveDegenerates;                                // 0x0200(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHoudiniRuntimeSettingsRecomputeFlag          GenerateLightmapUVsFlag;                           // 0x0201(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHoudiniRuntimeSettingsRecomputeFlag          RecomputeNormalsFlag;                              // 0x0202(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHoudiniRuntimeSettingsRecomputeFlag          RecomputeTangentsFlag;                             // 0x0203(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMikkTSpace;                                    // 0x0204(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBuildAdjacencyBuffer;                             // 0x0205(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomHoudiniLocation;                         // 0x0206(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDirectoryPath                         CustomHoudiniLocation;                             // 0x0208(0x0010)(Edit, Config, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	bool                                          bHidePlacementModeHoudiniTools;                    // 0x0218(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHoudiniToolDescription>        CustomHoudiniTools;                                // 0x0220(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
	int32                                         CookingThreadStackSize;                            // 0x0230(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 HoudiniEnvironmentFiles;                           // 0x0238(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OtlSearchPath;                                     // 0x0248(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DsoSearchPath;                                     // 0x0258(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ImageDsoSearchPath;                                // 0x0268(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AudioDsoSearchPath;                                // 0x0278(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniRuntimeSettings">();
	}
	static class UHoudiniRuntimeSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniRuntimeSettings>();
	}
};
static_assert(alignof(UHoudiniRuntimeSettings) == 0x11389E60, "Wrong alignment on UHoudiniRuntimeSettings");
static_assert(sizeof(UHoudiniRuntimeSettings) == 0x11389E60, "Wrong size on UHoudiniRuntimeSettings");
static_assert(offsetof(UHoudiniRuntimeSettings, SessionType) == 0x000040, "Member 'UHoudiniRuntimeSettings::SessionType' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, ServerHost) == 0x000048, "Member 'UHoudiniRuntimeSettings::ServerHost' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, ServerPort) == 0x000058, "Member 'UHoudiniRuntimeSettings::ServerPort' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, ServerPipeName) == 0x000060, "Member 'UHoudiniRuntimeSettings::ServerPipeName' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bStartAutomaticServer) == 0x000070, "Member 'UHoudiniRuntimeSettings::bStartAutomaticServer' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, AutomaticServerTimeout) == 0x000074, "Member 'UHoudiniRuntimeSettings::AutomaticServerTimeout' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bShowMultiAssetDialog) == 0x000078, "Member 'UHoudiniRuntimeSettings::bShowMultiAssetDialog' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bEnableCooking) == 0x000079, "Member 'UHoudiniRuntimeSettings::bEnableCooking' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bUploadTransformsToHoudiniEngine) == 0x00007A, "Member 'UHoudiniRuntimeSettings::bUploadTransformsToHoudiniEngine' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bTransformChangeTriggersCooks) == 0x00007B, "Member 'UHoudiniRuntimeSettings::bTransformChangeTriggersCooks' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bDisplaySlateCookingNotifications) == 0x00007C, "Member 'UHoudiniRuntimeSettings::bDisplaySlateCookingNotifications' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bCookCurvesOnMouseRelease) == 0x00007D, "Member 'UHoudiniRuntimeSettings::bCookCurvesOnMouseRelease' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, TemporaryCookFolder) == 0x000080, "Member 'UHoudiniRuntimeSettings::TemporaryCookFolder' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bTreatRampParametersAsMultiparms) == 0x000098, "Member 'UHoudiniRuntimeSettings::bTreatRampParametersAsMultiparms' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, CollisionGroupNamePrefix) == 0x0000A0, "Member 'UHoudiniRuntimeSettings::CollisionGroupNamePrefix' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, RenderedCollisionGroupNamePrefix) == 0x0000B0, "Member 'UHoudiniRuntimeSettings::RenderedCollisionGroupNamePrefix' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, UCXCollisionGroupNamePrefix) == 0x0000C0, "Member 'UHoudiniRuntimeSettings::UCXCollisionGroupNamePrefix' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, UCXRenderedCollisionGroupNamePrefix) == 0x0000D0, "Member 'UHoudiniRuntimeSettings::UCXRenderedCollisionGroupNamePrefix' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, SimpleCollisionGroupNamePrefix) == 0x0000E0, "Member 'UHoudiniRuntimeSettings::SimpleCollisionGroupNamePrefix' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, SimpleRenderedCollisionGroupNamePrefix) == 0x0000F0, "Member 'UHoudiniRuntimeSettings::SimpleRenderedCollisionGroupNamePrefix' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeMaterial) == 0x000100, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeMaterial' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeMaterialHole) == 0x000110, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeMaterialHole' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeInstanceOverride) == 0x000120, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeInstanceOverride' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeFaceSmoothingMask) == 0x000130, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeFaceSmoothingMask' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeLightmapResolution) == 0x000140, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeLightmapResolution' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeGeneratedMeshName) == 0x000150, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeGeneratedMeshName' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeInputMeshName) == 0x000160, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeInputMeshName' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingAttributeInputSourceFile) == 0x000170, "Member 'UHoudiniRuntimeSettings::MarshallingAttributeInputSourceFile' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingSplineResolution) == 0x000180, "Member 'UHoudiniRuntimeSettings::MarshallingSplineResolution' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingLandscapesUseFullResolution) == 0x000184, "Member 'UHoudiniRuntimeSettings::MarshallingLandscapesUseFullResolution' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingLandscapesForceMinMaxValues) == 0x000185, "Member 'UHoudiniRuntimeSettings::MarshallingLandscapesForceMinMaxValues' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingLandscapesForcedMinValue) == 0x000188, "Member 'UHoudiniRuntimeSettings::MarshallingLandscapesForcedMinValue' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MarshallingLandscapesForcedMaxValue) == 0x00018C, "Member 'UHoudiniRuntimeSettings::MarshallingLandscapesForcedMaxValue' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, GeneratedGeometryScaleFactor) == 0x000190, "Member 'UHoudiniRuntimeSettings::GeneratedGeometryScaleFactor' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, TransformScaleFactor) == 0x000194, "Member 'UHoudiniRuntimeSettings::TransformScaleFactor' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, ImportAxis) == 0x000198, "Member 'UHoudiniRuntimeSettings::ImportAxis' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, PhysMaterial) == 0x0001A0, "Member 'UHoudiniRuntimeSettings::PhysMaterial' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, CollisionTraceFlag) == 0x0001A8, "Member 'UHoudiniRuntimeSettings::CollisionTraceFlag' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, LightMapResolution) == 0x0001AC, "Member 'UHoudiniRuntimeSettings::LightMapResolution' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, LpvBiasMultiplier) == 0x0001B0, "Member 'UHoudiniRuntimeSettings::LpvBiasMultiplier' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, GeneratedDistanceFieldResolutionScale) == 0x0001B4, "Member 'UHoudiniRuntimeSettings::GeneratedDistanceFieldResolutionScale' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, WalkableSlopeOverride) == 0x0001B8, "Member 'UHoudiniRuntimeSettings::WalkableSlopeOverride' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, LightMapCoordinateIndex) == 0x0001C8, "Member 'UHoudiniRuntimeSettings::LightMapCoordinateIndex' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, StreamingDistanceMultiplier) == 0x0001D0, "Member 'UHoudiniRuntimeSettings::StreamingDistanceMultiplier' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, FoliageDefaultSettings) == 0x0001D8, "Member 'UHoudiniRuntimeSettings::FoliageDefaultSettings' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, AssetUserData) == 0x0001E0, "Member 'UHoudiniRuntimeSettings::AssetUserData' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bUseFullPrecisionUVs) == 0x0001F0, "Member 'UHoudiniRuntimeSettings::bUseFullPrecisionUVs' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, SrcLightmapIndex) == 0x0001F4, "Member 'UHoudiniRuntimeSettings::SrcLightmapIndex' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, DstLightmapIndex) == 0x0001F8, "Member 'UHoudiniRuntimeSettings::DstLightmapIndex' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, MinLightmapResolution) == 0x0001FC, "Member 'UHoudiniRuntimeSettings::MinLightmapResolution' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bRemoveDegenerates) == 0x000200, "Member 'UHoudiniRuntimeSettings::bRemoveDegenerates' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, GenerateLightmapUVsFlag) == 0x000201, "Member 'UHoudiniRuntimeSettings::GenerateLightmapUVsFlag' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, RecomputeNormalsFlag) == 0x000202, "Member 'UHoudiniRuntimeSettings::RecomputeNormalsFlag' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, RecomputeTangentsFlag) == 0x000203, "Member 'UHoudiniRuntimeSettings::RecomputeTangentsFlag' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bUseMikkTSpace) == 0x000204, "Member 'UHoudiniRuntimeSettings::bUseMikkTSpace' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bBuildAdjacencyBuffer) == 0x000205, "Member 'UHoudiniRuntimeSettings::bBuildAdjacencyBuffer' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bUseCustomHoudiniLocation) == 0x000206, "Member 'UHoudiniRuntimeSettings::bUseCustomHoudiniLocation' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, CustomHoudiniLocation) == 0x000208, "Member 'UHoudiniRuntimeSettings::CustomHoudiniLocation' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, bHidePlacementModeHoudiniTools) == 0x000218, "Member 'UHoudiniRuntimeSettings::bHidePlacementModeHoudiniTools' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, CustomHoudiniTools) == 0x000220, "Member 'UHoudiniRuntimeSettings::CustomHoudiniTools' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, CookingThreadStackSize) == 0x000230, "Member 'UHoudiniRuntimeSettings::CookingThreadStackSize' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, HoudiniEnvironmentFiles) == 0x000238, "Member 'UHoudiniRuntimeSettings::HoudiniEnvironmentFiles' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, OtlSearchPath) == 0x000248, "Member 'UHoudiniRuntimeSettings::OtlSearchPath' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, DsoSearchPath) == 0x000258, "Member 'UHoudiniRuntimeSettings::DsoSearchPath' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, ImageDsoSearchPath) == 0x000268, "Member 'UHoudiniRuntimeSettings::ImageDsoSearchPath' has a wrong offset!");
static_assert(offsetof(UHoudiniRuntimeSettings, AudioDsoSearchPath) == 0x000278, "Member 'UHoudiniRuntimeSettings::AudioDsoSearchPath' has a wrong offset!");

// Class HoudiniEngineRuntime.HoudiniSplineComponent
// 0x0000 (0x112E9AF0 - 0x112E9AF0)
class UHoudiniSplineComponent final : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoudiniSplineComponent">();
	}
	static class UHoudiniSplineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniSplineComponent>();
	}
};
static_assert(alignof(UHoudiniSplineComponent) == 0x112E9AF0, "Wrong alignment on UHoudiniSplineComponent");
static_assert(sizeof(UHoudiniSplineComponent) == 0x112E9AF0, "Wrong size on UHoudiniSplineComponent");

}

