#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_TresGimmickSkeletalBase

#include "Basic.hpp"

#include "G_TresGimmickSkeletalBase_classes.hpp"
#include "G_TresGimmickSkeletalBase_parameters.hpp"


namespace SDK
{

// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.ExecuteUbergraph_g_TresGimmickSkeletalBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::ExecuteUbergraph_g_TresGimmickSkeletalBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "ExecuteUbergraph_g_TresGimmickSkeletalBase");

	Params::G_TresGimmickSkeletalBase_C_ExecuteUbergraph_g_TresGimmickSkeletalBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresDisableCollisionGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresDisableCollisionGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresDisableCollisionGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresEnableCollisionGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresEnableCollisionGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresEnableCollisionGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresDeactivateGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresDeactivateGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresDeactivateGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresActivateGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresActivateGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresActivateGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresHideGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresHideGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresHideGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresShowGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresShowGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresShowGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresDestroyGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::TresDestroyGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresDestroyGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresSetControlGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param3                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param4                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Param5                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Param6                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ControllerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::TresSetControlGimmick(class FName Name_0, const struct FVector& Param1, float Param2, int32 Param3, bool Param4, class FName Param5, class UObject* Param6, class FName ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresSetControlGimmick");

	Params::G_TresGimmickSkeletalBase_C_TresSetControlGimmick Parms{};

	Parms.Name_0 = Name_0;
	Parms.Param1 = std::move(Param1);
	Parms.Param2 = Param2;
	Parms.Param3 = Param3;
	Parms.Param4 = Param4;
	Parms.Param5 = Param5;
	Parms.Param6 = Param6;
	Parms.ControllerId = ControllerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresResetGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ControllerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::TresResetGimmick(class FName ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresResetGimmick");

	Params::G_TresGimmickSkeletalBase_C_TresResetGimmick Parms{};

	Parms.ControllerId = ControllerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresStopGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ControllerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::TresStopGimmick(bool PlayAnimation, class FName ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresStopGimmick");

	Params::G_TresGimmickSkeletalBase_C_TresStopGimmick Parms{};

	Parms.PlayAnimation = PlayAnimation;
	Parms.ControllerId = ControllerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresStartGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ActivateGimmick                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ControllerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::TresStartGimmick(bool ActivateGimmick, bool Reset, bool PlayAnimation, class FName ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresStartGimmick");

	Params::G_TresGimmickSkeletalBase_C_TresStartGimmick Parms{};

	Parms.ActivateGimmick = ActivateGimmick;
	Parms.Reset = Reset;
	Parms.PlayAnimation = PlayAnimation;
	Parms.ControllerId = ControllerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.OnTresPlanAttackNotifyEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AttackGroupName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::OnTresPlanAttackNotifyEnd(class FName AttackGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "OnTresPlanAttackNotifyEnd");

	Params::G_TresGimmickSkeletalBase_C_OnTresPlanAttackNotifyEnd Parms{};

	Parms.AttackGroupName = AttackGroupName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.OnTresPlanAttackNotifyBegin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AttackGroupName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::OnTresPlanAttackNotifyBegin(class FName AttackGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "OnTresPlanAttackNotifyBegin");

	Params::G_TresGimmickSkeletalBase_C_OnTresPlanAttackNotifyBegin Parms{};

	Parms.AttackGroupName = AttackGroupName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.OnTresPlanAnimVectorValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::OnTresPlanAnimVectorValue(class FName Name_0, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "OnTresPlanAnimVectorValue");

	Params::G_TresGimmickSkeletalBase_C_OnTresPlanAnimVectorValue Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.OnTresPlanAnimScalerValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::OnTresPlanAnimScalerValue(class FName Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "OnTresPlanAnimScalerValue");

	Params::G_TresGimmickSkeletalBase_C_OnTresPlanAnimScalerValue Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.OnTresPlanAnimNotify
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATresGimmickSkeletalBase*         OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::OnTresPlanAnimNotify(class FName NotifyName, class ATresGimmickSkeletalBase* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "OnTresPlanAnimNotify");

	Params::G_TresGimmickSkeletalBase_C_OnTresPlanAnimNotify Parms{};

	Parms.NotifyName = NotifyName;
	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AG_TresGimmickSkeletalBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C.TresGetControlGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param1_                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param2_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param3_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param4_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param5_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          Param6_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ControllerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param1                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param2                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param3                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param4                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Param5                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Param6                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AG_TresGimmickSkeletalBase_C::TresGetControlGimmick(class FName Name_0, const struct FVector& Param1_, float Param2_, int32 Param3_, class FName Param4_, bool Param5_, class UObject* Param6_, class FName ControllerId, struct FVector* Param1, float* Param2, int32* Param3, bool* Param4, class FName* Param5, class UObject** Param6)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("g_TresGimmickSkeletalBase_C", "TresGetControlGimmick");

	Params::G_TresGimmickSkeletalBase_C_TresGetControlGimmick Parms{};

	Parms.Name_0 = Name_0;
	Parms.Param1_ = std::move(Param1_);
	Parms.Param2_ = Param2_;
	Parms.Param3_ = Param3_;
	Parms.Param4_ = Param4_;
	Parms.Param5_ = Param5_;
	Parms.Param6_ = Param6_;
	Parms.ControllerId = ControllerId;

	UObject::ProcessEvent(Func, &Parms);

	if (Param1 != nullptr)
		*Param1 = std::move(Parms.Param1);

	if (Param2 != nullptr)
		*Param2 = Parms.Param2;

	if (Param3 != nullptr)
		*Param3 = Parms.Param3;

	if (Param4 != nullptr)
		*Param4 = Parms.Param4;

	if (Param5 != nullptr)
		*Param5 = Parms.Param5;

	if (Param6 != nullptr)
		*Param6 = Parms.Param6;
}

}

