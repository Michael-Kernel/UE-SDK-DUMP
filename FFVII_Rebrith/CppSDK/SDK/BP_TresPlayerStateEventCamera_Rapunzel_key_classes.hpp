#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_Rapunzel_key

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TresGame_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TresPlayerStateEventCamera_Rapunzel_key.BP_TresPlayerStateEventCamera_Rapunzel_key_C
// 0x6ED6 (0x6F26 - 0x0050)
class UBP_TresPlayerStateEventCamera_Rapunzel_key_C final : public UTresPlayerStateEvent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x6F26)(Transient, DuplicateTransient)
	class ATresCameraRotTarget*                   Camera_Rot;                                        // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraAnim*                        Canera_anim;                                       // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCharPawnBase*                      Tres_Char_Pawn_base;                               // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraRotTarget*                   Camera_Rot2;                                       // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor_0;                                           // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ATARI;                                             // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Collision;                                         // 0x008D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnim*                            Camera_Animation;                                  // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend;                                             // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresCameraAnim*                        Canera_anim_0;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TSUE_END;                                          // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TresPlayerStateEventCamera_Rapunzel_key(int32 EntryPoint);
	void ReceivePlayerEndCommandAction(ETresCommandKind CommandKind);
	void Rap_key_finish_cam();
	void Rapunzel_ShootLock_camera();
	void Rap_Finish_Normal_camera();
	void Rap_key_Tower_Finish_End();
	void ReceiveAnimNotifyEndBpEvent(class ATresCharPawnBase* SendActor, class FName AnimSeqName, ETresAnimNotifyBpEventID EventID, int32 Param);
	void ReceiveAnimNotifyStartBpEvent(class ATresCharPawnBase* SendActor, class FName AnimSeqName, ETresAnimNotifyBpEventID EventID, int32 Param);
	void ReceivePlayerSpecificAction(ETresPlayerSpecificActionID ActionID, int32 SubID);
	void Rap_Finish_cam_End();
	void ReceivePlayerDtorState(ETresStateID StateID);
	void ReceivePlayerBeginCommandAction(ETresCommandKind CommandKind);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TresPlayerStateEventCamera_Rapunzel_key_C">();
	}
	static class UBP_TresPlayerStateEventCamera_Rapunzel_key_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TresPlayerStateEventCamera_Rapunzel_key_C>();
	}
};
static_assert(alignof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C) == 0x006F26, "Wrong alignment on UBP_TresPlayerStateEventCamera_Rapunzel_key_C");
static_assert(sizeof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C) == 0x006F26, "Wrong size on UBP_TresPlayerStateEventCamera_Rapunzel_key_C");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, UberGraphFrame) == 0x000050, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Camera_Rot) == 0x000058, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Camera_Rot' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Canera_anim) == 0x000060, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Canera_anim' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Actor) == 0x000068, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Actor' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Tres_Char_Pawn_base) == 0x000070, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Tres_Char_Pawn_base' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Camera_Rot2) == 0x000078, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Camera_Rot2' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Actor_0) == 0x000080, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Actor_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Distance) == 0x000088, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Distance' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, ATARI) == 0x00008C, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::ATARI' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Collision) == 0x00008D, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Collision' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Camera_Animation) == 0x000090, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Camera_Animation' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Blend) == 0x000098, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Blend' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, Canera_anim_0) == 0x0000A0, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::Canera_anim_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Rapunzel_key_C, TSUE_END) == 0x0000A8, "Member 'UBP_TresPlayerStateEventCamera_Rapunzel_key_C::TSUE_END' has a wrong offset!");

}

