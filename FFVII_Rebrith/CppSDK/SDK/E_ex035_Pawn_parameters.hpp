#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_ex035_Pawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function e_ex035_Pawn.e_ex035_Pawn_C.ValidateStep
// 0x112F5920 (0x112F5920 - 0x0000)
struct E_ex035_Pawn_C_ValidateStep final
{
public:
	class ATresCharPawnBase*                      InOwnerPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutReason;                                         // 0x0018(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetGravityZ_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutHit; // 0x0078(0x112F5920)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<struct FVector>                        CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutPathPositions; // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutLastTraceDestination; // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_ReturnValue; // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11F[0x1];                                      // 0x011F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NavigationRaycast_HitLocation;            // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NavigationRaycast_ReturnValue;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E_ex035_Pawn_C_ValidateStep) == 0x112F5920, "Wrong alignment on E_ex035_Pawn_C_ValidateStep");
static_assert(sizeof(E_ex035_Pawn_C_ValidateStep) == 0x112F5920, "Wrong size on E_ex035_Pawn_C_ValidateStep");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, InOwnerPawn) == 0x000000, "Member 'E_ex035_Pawn_C_ValidateStep::InOwnerPawn' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, Velocity) == 0x000008, "Member 'E_ex035_Pawn_C_ValidateStep::Velocity' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, GravityScale) == 0x000014, "Member 'E_ex035_Pawn_C_ValidateStep::GravityScale' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, OutReason) == 0x000018, "Member 'E_ex035_Pawn_C_ValidateStep::OutReason' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, ReturnValue) == 0x000030, "Member 'E_ex035_Pawn_C_ValidateStep::ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, ActorsToIgnore) == 0x000038, "Member 'E_ex035_Pawn_C_ValidateStep::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, Temp_object_Variable) == 0x000048, "Member 'E_ex035_Pawn_C_ValidateStep::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_GetGravityZ_ReturnValue) == 0x000058, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_GetGravityZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutHit) == 0x000078, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutHit' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutPathPositions) == 0x000100, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutPathPositions' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutLastTraceDestination) == 0x000110, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutLastTraceDestination' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_ReturnValue) == 0x00011C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_bBlockingHit) == 0x00011D, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011E, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_Time) == 0x000120, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_FaceIndex) == 0x00017C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_BreakHitResult_TraceEnd) == 0x00018C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Dot_VectorVector_ReturnValue) == 0x000198, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00019C, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_DegAcos_ReturnValue) == 0x0001A8, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_NavigationRaycast_HitLocation) == 0x0001AC, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_NavigationRaycast_HitLocation' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_NavigationRaycast_ReturnValue) == 0x0001B8, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_NavigationRaycast_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_ex035_Pawn_C_ValidateStep, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001B9, "Member 'E_ex035_Pawn_C_ValidateStep::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

