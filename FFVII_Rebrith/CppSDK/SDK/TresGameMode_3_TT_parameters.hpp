#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TresGameMode_3_TT

#include "Basic.hpp"


namespace SDK::Params
{

// Function TresGameMode_3_TT.TresGameMode_3_TT_C.BPE_OverrideMapJumpPath
// 0x3C23D70A (0x3C23D70A - 0x0000)
struct alignas(0x3C23D70A) TresGameMode_3_TT_C_BPE_OverrideMapJumpPath final
{
public:
	class UObject*                                From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InFadeKind;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InMapName;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InPlayerStartTag;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutMapName;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutPlayerStartTag;                                 // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlag_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameFlag_ReturnValue2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FlagLabel_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FlagLabel_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlag_ReturnValue3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameFlag_ReturnValue4;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath) == 0x3C23D70A, "Wrong alignment on TresGameMode_3_TT_C_BPE_OverrideMapJumpPath");
static_assert(sizeof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath) == 0x3C23D70A, "Wrong size on TresGameMode_3_TT_C_BPE_OverrideMapJumpPath");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, From) == 0x000000, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::From' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, InFadeKind) == 0x000008, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::InFadeKind' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, InMapName) == 0x000010, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::InMapName' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, InPlayerStartTag) == 0x000018, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::InPlayerStartTag' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, OutMapName) == 0x000020, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::OutMapName' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, OutPlayerStartTag) == 0x000028, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::OutPlayerStartTag' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, Temp_int_Variable) == 0x000030, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_NotEqual_NameName_ReturnValue) == 0x000034, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_GetGameFlag_ReturnValue) == 0x000038, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_GetGameFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_GetGameFlag_ReturnValue2) == 0x00003C, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_GetGameFlag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, Temp_int_Variable2) == 0x000040, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_GreaterEqual_FlagLabel_ReturnValue) == 0x000044, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_GreaterEqual_FlagLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_Less_FlagLabel_ReturnValue) == 0x000045, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_Less_FlagLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_GetGameFlag_ReturnValue3) == 0x000048, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_GetGameFlag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TresGameMode_3_TT_C_BPE_OverrideMapJumpPath, CallFunc_GetGameFlag_ReturnValue4) == 0x00004C, "Member 'TresGameMode_3_TT_C_BPE_OverrideMapJumpPath::CallFunc_GetGameFlag_ReturnValue4' has a wrong offset!");

}

