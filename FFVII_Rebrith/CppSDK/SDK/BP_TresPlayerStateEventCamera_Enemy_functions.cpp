#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_Enemy

#include "Basic.hpp"

#include "BP_TresPlayerStateEventCamera_Enemy_classes.hpp"
#include "BP_TresPlayerStateEventCamera_Enemy_parameters.hpp"


namespace SDK
{

// Function BP_TresPlayerStateEventCamera_Enemy.BP_TresPlayerStateEventCamera_Enemy_C.ExecuteUbergraph_BP_TresPlayerStateEventCamera_Enemy
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TresPlayerStateEventCamera_Enemy_C::ExecuteUbergraph_BP_TresPlayerStateEventCamera_Enemy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TresPlayerStateEventCamera_Enemy_C", "ExecuteUbergraph_BP_TresPlayerStateEventCamera_Enemy");

	Params::BP_TresPlayerStateEventCamera_Enemy_C_ExecuteUbergraph_BP_TresPlayerStateEventCamera_Enemy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TresPlayerStateEventCamera_Enemy.BP_TresPlayerStateEventCamera_Enemy_C.ReceivePlayerCtorState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETresStateID                            StateID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TresPlayerStateEventCamera_Enemy_C::ReceivePlayerCtorState(ETresStateID StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TresPlayerStateEventCamera_Enemy_C", "ReceivePlayerCtorState");

	Params::BP_TresPlayerStateEventCamera_Enemy_C_ReceivePlayerCtorState Parms{};

	Parms.StateID = StateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TresPlayerStateEventCamera_Enemy.BP_TresPlayerStateEventCamera_Enemy_C.ReceivePlayerDtorState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETresStateID                            StateID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TresPlayerStateEventCamera_Enemy_C::ReceivePlayerDtorState(ETresStateID StateID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TresPlayerStateEventCamera_Enemy_C", "ReceivePlayerDtorState");

	Params::BP_TresPlayerStateEventCamera_Enemy_C_ReceivePlayerDtorState Parms{};

	Parms.StateID = StateID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TresPlayerStateEventCamera_Enemy.BP_TresPlayerStateEventCamera_Enemy_C.ReceiveActorSpecificAction
// (Event, Public, BlueprintEvent)
// Parameters:
// ETresActorSpecificActionID              ActionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SendActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TresPlayerStateEventCamera_Enemy_C::ReceiveActorSpecificAction(ETresActorSpecificActionID ActionID, class AActor* SendActor, int32 SubID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TresPlayerStateEventCamera_Enemy_C", "ReceiveActorSpecificAction");

	Params::BP_TresPlayerStateEventCamera_Enemy_C_ReceiveActorSpecificAction Parms{};

	Parms.ActionID = ActionID;
	Parms.SendActor = SendActor;
	Parms.SubID = SubID;

	UObject::ProcessEvent(Func, &Parms);
}

}

