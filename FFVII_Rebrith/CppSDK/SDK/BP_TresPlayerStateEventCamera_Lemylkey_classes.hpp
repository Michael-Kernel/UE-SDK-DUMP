#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_Lemylkey

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TresGame_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TresPlayerStateEventCamera_Lemylkey.BP_TresPlayerStateEventCamera_Lemylkey_C
// 0x6ED6 (0x6F26 - 0x0050)
class UBP_TresPlayerStateEventCamera_Lemylkey_C final : public UTresPlayerStateEvent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x6F26)(Transient, DuplicateTransient)
	UMulticastDelegateProperty_                   NewEventDispatcher_0;                              // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCameraAnim*                            Camera_anim;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          On;                                                // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresCameraAnim*                        Camera_anim0;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend;                                             // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void NewEventDispatcher_0__DelegateSignature();
	void ExecuteUbergraph_BP_TresPlayerStateEventCamera_Lemylkey(int32 EntryPoint);
	void ReceivePlayerDtorState(ETresStateID StateID);
	void LemyKey_Change_Cam();
	void ReceivePlayerCtorState(ETresStateID StateID);
	void LemyKey_Finish_Cam();
	void ReceiveAnimNotifyStartBpEvent(class ATresCharPawnBase* SendActor, class FName AnimSeqName, ETresAnimNotifyBpEventID EventID, int32 Param);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TresPlayerStateEventCamera_Lemylkey_C">();
	}
	static class UBP_TresPlayerStateEventCamera_Lemylkey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TresPlayerStateEventCamera_Lemylkey_C>();
	}
};
static_assert(alignof(UBP_TresPlayerStateEventCamera_Lemylkey_C) == 0x006F26, "Wrong alignment on UBP_TresPlayerStateEventCamera_Lemylkey_C");
static_assert(sizeof(UBP_TresPlayerStateEventCamera_Lemylkey_C) == 0x006F26, "Wrong size on UBP_TresPlayerStateEventCamera_Lemylkey_C");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Lemylkey_C, UberGraphFrame) == 0x000050, "Member 'UBP_TresPlayerStateEventCamera_Lemylkey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Lemylkey_C, NewEventDispatcher_0) == 0x000058, "Member 'UBP_TresPlayerStateEventCamera_Lemylkey_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Lemylkey_C, Camera_anim) == 0x000068, "Member 'UBP_TresPlayerStateEventCamera_Lemylkey_C::Camera_anim' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Lemylkey_C, On) == 0x000070, "Member 'UBP_TresPlayerStateEventCamera_Lemylkey_C::On' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Lemylkey_C, Camera_anim0) == 0x000078, "Member 'UBP_TresPlayerStateEventCamera_Lemylkey_C::Camera_anim0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_Lemylkey_C, Blend) == 0x000080, "Member 'UBP_TresPlayerStateEventCamera_Lemylkey_C::Blend' has a wrong offset!");

}

