#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FuncLibrary_NpcAI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "TresGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_FuncLibrary_NpcAI.B_FuncLibrary_NpcAI_C
// 0x0000 (0x0040 - 0x0040)
class UB_FuncLibrary_NpcAI_C final : public UBlueprintFunctionLibrary
{
public:
	static void StartLead(class FName UniqueId, ETresChrUniqueID CharacterID, class ATresNpcAILeadSplineActor* LeadSplineActor, const struct FTresNpcAILeadSubCharaSlot& SubLeadCharaSlot, class FName CancelEventName, class UObject* __WorldContext);
	static void GetNpcControllerBase(ETresChrUniqueID CharacterID, class UObject* __WorldContext, class ATresNpcControllerBase** NpcControllerBase);
	static void CancelLead(class UObject* WorldContext, ETresChrUniqueID CharacterID, class UObject* __WorldContext);
	static void StartNpcMode(class UObject* WorldContext, ETresChrUniqueID CharacterID, class FName CancelEventName, class UObject* __WorldContext);
	static void CancelNpcMode(class UObject* WorldContext, ETresChrUniqueID CharacterID, class UObject* __WorldContext);
	static void SetNpcPositionAndAI(class UObject* WorldContext, ETresChrUniqueID CharacterID, ETresFNpcAIModeLevelSetting AI, class AActor* PositionActor, class AActor* LookAtActor, class FName CancelEventName, class UObject* __WorldContext);
	static void StartNpcGimmickWaitAI(ETresChrUniqueID CharacterID, class UObject* __WorldContext);
	static void EndNpcGimmickWaitAI(ETresChrUniqueID CharacterID, class UObject* __WorldContext);
	static void ResetNpcCancelEventName(class UObject* WorldContext, ETresChrUniqueID CharacterID, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_FuncLibrary_NpcAI_C">();
	}
	static class UB_FuncLibrary_NpcAI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_FuncLibrary_NpcAI_C>();
	}
};
static_assert(alignof(UB_FuncLibrary_NpcAI_C) == 0x000008, "Wrong alignment on UB_FuncLibrary_NpcAI_C");
static_assert(sizeof(UB_FuncLibrary_NpcAI_C) == 0x000040, "Wrong size on UB_FuncLibrary_NpcAI_C");

}

