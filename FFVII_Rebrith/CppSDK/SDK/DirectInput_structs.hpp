#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DirectInput

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK
{

// Enum DirectInput.FDirectInputDeviceForceFeedbackChannel
// NumValues: 0x0009
enum class EFDirectInputDeviceForceFeedbackChannel : uint8
{
	LEFT_LARGE                               = 0,
	LEFT_SMALL                               = 1,
	LEFT_ANY                                 = 2,
	RIGHT_LARGE                              = 3,
	RIGHT_SMALL                              = 4,
	RIGHT_ANY                                = 5,
	ANY                                      = 6,
	OFF                                      = 7,
	FDirectInputDeviceForceFeedbackChannel_MAX = 8,
};

// ScriptStruct DirectInput.DirectInputDeviceButtonProperties
// 0x112F6AF0 (0x112F6AF0 - 0x0000)
struct FDirectInputDeviceButtonProperties final
{
public:
	uint8                                         bEnabled : 1;                                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x112F6AF0)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputDeviceButtonProperties) == 0x112F6AF0, "Wrong alignment on FDirectInputDeviceButtonProperties");
static_assert(sizeof(FDirectInputDeviceButtonProperties) == 0x112F6AF0, "Wrong size on FDirectInputDeviceButtonProperties");
static_assert(offsetof(FDirectInputDeviceButtonProperties, Key) == 0x000008, "Member 'FDirectInputDeviceButtonProperties::Key' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputDeviceID
// 0x1168A5B0 (0x1168A5B0 - 0x0000)
struct alignas(0x1168A5B0) FDirectInputDeviceID final
{
public:
	class FString                                 VendorID;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductID;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputDeviceID) == 0x1168A5B0, "Wrong alignment on FDirectInputDeviceID");
static_assert(sizeof(FDirectInputDeviceID) == 0x1168A5B0, "Wrong size on FDirectInputDeviceID");
static_assert(offsetof(FDirectInputDeviceID, VendorID) == 0x000000, "Member 'FDirectInputDeviceID::VendorID' has a wrong offset!");
static_assert(offsetof(FDirectInputDeviceID, ProductID) == 0x000010, "Member 'FDirectInputDeviceID::ProductID' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputCalibration
// 0x1168A5B0 (0x1168A5B0 - 0x0000)
struct FDirectInputCalibration final
{
public:
	struct FDirectInputDeviceID                   DeviceID;                                          // 0x0000(0x1168A5B0)(Edit, NativeAccessSpecifierPublic)
	int32                                         ButtonSources[0x10];                               // 0x0020(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputCalibration) == 0x1168A5B0, "Wrong alignment on FDirectInputCalibration");
static_assert(sizeof(FDirectInputCalibration) == 0x1168A5B0, "Wrong size on FDirectInputCalibration");
static_assert(offsetof(FDirectInputCalibration, DeviceID) == 0x000000, "Member 'FDirectInputCalibration::DeviceID' has a wrong offset!");
static_assert(offsetof(FDirectInputCalibration, ButtonSources) == 0x000020, "Member 'FDirectInputCalibration::ButtonSources' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputDevicePOVProperties
// 0x112F6AF0 (0x112F6AF0 - 0x0000)
struct FDirectInputDevicePOVProperties final
{
public:
	uint8                                         bEnabled : 1;                                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key[0x4];                                          // 0x0008(0x112F6AF0)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputDevicePOVProperties) == 0x112F6AF0, "Wrong alignment on FDirectInputDevicePOVProperties");
static_assert(sizeof(FDirectInputDevicePOVProperties) == 0x112F6AF0, "Wrong size on FDirectInputDevicePOVProperties");
static_assert(offsetof(FDirectInputDevicePOVProperties, Key) == 0x000008, "Member 'FDirectInputDevicePOVProperties::Key' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputDeviceAxisProperties
// 0x112F6AF0 (0x112F6AF0 - 0x0000)
struct FDirectInputDeviceAxisProperties final
{
public:
	uint8                                         bEnabled : 1;                                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x112F6AF0)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bInverted : 1;                                     // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDirectInputDeviceAxisProperties) == 0x112F6AF0, "Wrong alignment on FDirectInputDeviceAxisProperties");
static_assert(sizeof(FDirectInputDeviceAxisProperties) == 0x112F6AF0, "Wrong size on FDirectInputDeviceAxisProperties");
static_assert(offsetof(FDirectInputDeviceAxisProperties, Key) == 0x000008, "Member 'FDirectInputDeviceAxisProperties::Key' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputDeviceForceFeedbackProperties
// 0x0001 (0x0001 - 0x0000)
struct FDirectInputDeviceForceFeedbackProperties final
{
public:
	EFDirectInputDeviceForceFeedbackChannel       Channel;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputDeviceForceFeedbackProperties) == 0x000001, "Wrong alignment on FDirectInputDeviceForceFeedbackProperties");
static_assert(sizeof(FDirectInputDeviceForceFeedbackProperties) == 0x000001, "Wrong size on FDirectInputDeviceForceFeedbackProperties");
static_assert(offsetof(FDirectInputDeviceForceFeedbackProperties, Channel) == 0x000000, "Member 'FDirectInputDeviceForceFeedbackProperties::Channel' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputDeviceConfiguration
// 0x1168A5B0 (0x1168A5B0 - 0x0000)
struct FDirectInputDeviceConfiguration final
{
public:
	struct FDirectInputDeviceID                   DeviceID;                                          // 0x0000(0x1168A5B0)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FDirectInputDeviceAxisProperties> AxisProperties;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDirectInputDeviceButtonProperties> ButtonProperties;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDirectInputDevicePOVProperties> POVProperties;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDirectInputDeviceForceFeedbackProperties> ForceFeedbackProperties;                           // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputDeviceConfiguration) == 0x1168A5B0, "Wrong alignment on FDirectInputDeviceConfiguration");
static_assert(sizeof(FDirectInputDeviceConfiguration) == 0x1168A5B0, "Wrong size on FDirectInputDeviceConfiguration");
static_assert(offsetof(FDirectInputDeviceConfiguration, DeviceID) == 0x000000, "Member 'FDirectInputDeviceConfiguration::DeviceID' has a wrong offset!");
static_assert(offsetof(FDirectInputDeviceConfiguration, AxisProperties) == 0x000020, "Member 'FDirectInputDeviceConfiguration::AxisProperties' has a wrong offset!");
static_assert(offsetof(FDirectInputDeviceConfiguration, ButtonProperties) == 0x000030, "Member 'FDirectInputDeviceConfiguration::ButtonProperties' has a wrong offset!");
static_assert(offsetof(FDirectInputDeviceConfiguration, POVProperties) == 0x000040, "Member 'FDirectInputDeviceConfiguration::POVProperties' has a wrong offset!");
static_assert(offsetof(FDirectInputDeviceConfiguration, ForceFeedbackProperties) == 0x000050, "Member 'FDirectInputDeviceConfiguration::ForceFeedbackProperties' has a wrong offset!");

// ScriptStruct DirectInput.DirectInputIgnoreDeviceSettings
// 0x0018 (0x0018 - 0x0000)
struct FDirectInputIgnoreDeviceSettings final
{
public:
	bool                                          bIgnoreXInputDevice;                               // 0x0000(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreDualShock4;                                 // 0x0001(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDirectInputDeviceID>           IgnoreDevices;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectInputIgnoreDeviceSettings) == 0x000008, "Wrong alignment on FDirectInputIgnoreDeviceSettings");
static_assert(sizeof(FDirectInputIgnoreDeviceSettings) == 0x000018, "Wrong size on FDirectInputIgnoreDeviceSettings");
static_assert(offsetof(FDirectInputIgnoreDeviceSettings, bIgnoreXInputDevice) == 0x000000, "Member 'FDirectInputIgnoreDeviceSettings::bIgnoreXInputDevice' has a wrong offset!");
static_assert(offsetof(FDirectInputIgnoreDeviceSettings, bIgnoreDualShock4) == 0x000001, "Member 'FDirectInputIgnoreDeviceSettings::bIgnoreDualShock4' has a wrong offset!");
static_assert(offsetof(FDirectInputIgnoreDeviceSettings, IgnoreDevices) == 0x000008, "Member 'FDirectInputIgnoreDeviceSettings::IgnoreDevices' has a wrong offset!");

}

