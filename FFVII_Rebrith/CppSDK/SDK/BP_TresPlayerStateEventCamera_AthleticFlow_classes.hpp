#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_AthleticFlow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TresGame_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TresPlayerStateEventCamera_AthleticFlow.BP_TresPlayerStateEventCamera_AthleticFlow_C
// 0x112E9AA0 (0x112E9AF0 - 0x0050)
class UBP_TresPlayerStateEventCamera_AthleticFlow_C final : public UTresPlayerStateEvent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x6F26)(Transient, DuplicateTransient)
	float                                         FOV;                                               // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x005C(0x112E9AF0)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Offset;                                            // 0x0068(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name_0;                                            // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraRotTarget*                   Camera_Rot;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          On;                                                // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ATARI;                                             // 0x0091(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Collision;                                         // 0x0092(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TresPlayerStateEventCamera_AthleticFlow(int32 EntryPoint);
	void ReceivePlayerDtorState(ETresStateID StateID);
	void ReceivePlayerSpecificAction(ETresPlayerSpecificActionID ActionID, int32 SubID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TresPlayerStateEventCamera_AthleticFlow_C">();
	}
	static class UBP_TresPlayerStateEventCamera_AthleticFlow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TresPlayerStateEventCamera_AthleticFlow_C>();
	}
};
static_assert(alignof(UBP_TresPlayerStateEventCamera_AthleticFlow_C) == 0x112E9AF0, "Wrong alignment on UBP_TresPlayerStateEventCamera_AthleticFlow_C");
static_assert(sizeof(UBP_TresPlayerStateEventCamera_AthleticFlow_C) == 0x112E9AF0, "Wrong size on UBP_TresPlayerStateEventCamera_AthleticFlow_C");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, UberGraphFrame) == 0x000050, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, FOV) == 0x000058, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::FOV' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Rotation) == 0x00005C, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Rotation' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Offset) == 0x000068, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Offset' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Name_0) == 0x000078, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Camera_Rot) == 0x000080, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Camera_Rot' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Distance) == 0x000088, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Distance' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Time) == 0x00008C, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Time' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, On) == 0x000090, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::On' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, ATARI) == 0x000091, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::ATARI' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_AthleticFlow_C, Collision) == 0x000092, "Member 'UBP_TresPlayerStateEventCamera_AthleticFlow_C::Collision' has a wrong offset!");

}

