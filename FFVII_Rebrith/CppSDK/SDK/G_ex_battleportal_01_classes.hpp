#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_ex_battleportal_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TresGame_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass g_ex_battleportal_01.g_ex_battleportal_01_C
// 0x0000 (0x1EF72E00 - 0x1EF72E00)
class AG_ex_battleportal_01_C final : public ATresGimmick_EX_BattlePortal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x6F26)(Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Message;                                           // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_g_ex_battleportal_01(int32 EntryPoint);
	void BPEV_OnEnableCollisionGimmickForPlan();
	void BPEV_OnDisableCollisionGimmickForPlan();
	void BndEvt__MyReactor_K2Node_ComponentBoundEvent_0_TresReactorDoCommandSignature__DelegateSignature(class ATresCharPawnBase* CommandCauser, ETresCommandKind CommandID, class UTresReactorComponent* ReactorComponent);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"g_ex_battleportal_01_C">();
	}
	static class AG_ex_battleportal_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AG_ex_battleportal_01_C>();
	}
};
static_assert(alignof(AG_ex_battleportal_01_C) == 0x1EF72E00, "Wrong alignment on AG_ex_battleportal_01_C");
static_assert(sizeof(AG_ex_battleportal_01_C) == 0x1EF72E00, "Wrong size on AG_ex_battleportal_01_C");
static_assert(offsetof(AG_ex_battleportal_01_C, UberGraphFrame) == 0x000620, "Member 'AG_ex_battleportal_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AG_ex_battleportal_01_C, Sphere) == 0x000628, "Member 'AG_ex_battleportal_01_C::Sphere' has a wrong offset!");
static_assert(offsetof(AG_ex_battleportal_01_C, Message) == 0x000630, "Member 'AG_ex_battleportal_01_C::Message' has a wrong offset!");

}

