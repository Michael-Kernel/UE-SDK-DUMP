#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_shooting_ride

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TresGame_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TresPlayerStateEventCamera_shooting_ride.BP_TresPlayerStateEventCamera_shooting_ride_C
// 0x6ED6 (0x6F26 - 0x0050)
class UBP_TresPlayerStateEventCamera_shooting_ride_C final : public UTresPlayerStateEvent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x6F26)(Transient, DuplicateTransient)
	class ATresCharPawnBase*                      Tres_Char_Pawn_base;                               // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ON_teacup_finish;                                  // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnim*                            Camera_anim_;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraBase*                        Camera;                                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraAnim*                        Camera_anim;                                       // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VECTOR01;                                          // 0x0080(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VECTOR02;                                          // 0x008C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VECTOR00;                                          // 0x0098(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ON_teacup_start;                                   // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name_0;                                            // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TakeOver;                                          // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnim*                            Camera_anim_02;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraAnim*                        Camera_anim_0;                                     // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TresPlayerStateEventCamera_shooting_ride(int32 EntryPoint);
	void ReceivePlayerDtorState(ETresStateID StateID);
	void ReceiveAnimNotifyEndBpEvent(class ATresCharPawnBase* SendActor, class FName AnimSeqName, ETresAnimNotifyBpEventID EventID, int32 Param);
	void ReceiveAnimNotifyStartBpEvent(class ATresCharPawnBase* SendActor, class FName AnimSeqName, ETresAnimNotifyBpEventID EventID, int32 Param);
	void ReceivePlayerSpecificAction(ETresPlayerSpecificActionID ActionID, int32 SubID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TresPlayerStateEventCamera_shooting_ride_C">();
	}
	static class UBP_TresPlayerStateEventCamera_shooting_ride_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TresPlayerStateEventCamera_shooting_ride_C>();
	}
};
static_assert(alignof(UBP_TresPlayerStateEventCamera_shooting_ride_C) == 0x006F26, "Wrong alignment on UBP_TresPlayerStateEventCamera_shooting_ride_C");
static_assert(sizeof(UBP_TresPlayerStateEventCamera_shooting_ride_C) == 0x006F26, "Wrong size on UBP_TresPlayerStateEventCamera_shooting_ride_C");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, UberGraphFrame) == 0x000050, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Tres_Char_Pawn_base) == 0x000058, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Tres_Char_Pawn_base' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, ON_teacup_finish) == 0x000060, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::ON_teacup_finish' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Camera_anim_) == 0x000068, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Camera_anim_' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Camera) == 0x000070, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Camera' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Camera_anim) == 0x000078, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Camera_anim' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, VECTOR01) == 0x000080, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::VECTOR01' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, VECTOR02) == 0x00008C, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::VECTOR02' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, VECTOR00) == 0x000098, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::VECTOR00' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Actor) == 0x0000A8, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Actor' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, ON_teacup_start) == 0x0000B0, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::ON_teacup_start' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Name_0) == 0x0000B8, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, BlendTime) == 0x0000C0, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::BlendTime' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, TakeOver) == 0x0000C4, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::TakeOver' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Camera_anim_02) == 0x0000C8, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Camera_anim_02' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_shooting_ride_C, Camera_anim_0) == 0x0000D0, "Member 'UBP_TresPlayerStateEventCamera_shooting_ride_C::Camera_anim_0' has a wrong offset!");

}

