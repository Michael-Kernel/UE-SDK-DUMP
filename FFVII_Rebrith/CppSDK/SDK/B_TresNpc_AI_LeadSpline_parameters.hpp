#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TresNpc_AI_LeadSpline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_TresNpc_AI_LeadSpline.B_TresNpc_AI_LeadSpline_C.ExecuteUbergraph_B_TresNpc_AI_LeadSpline
// 0xC000000 (0xC000000 - 0x0000)
struct alignas(0xC000000) B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline) == 0xC000000, "Wrong alignment on B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline");
static_assert(sizeof(B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline) == 0xC000000, "Wrong size on B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline, EntryPoint) == 0x000000, "Member 'B_TresNpc_AI_LeadSpline_C_ExecuteUbergraph_B_TresNpc_AI_LeadSpline::EntryPoint' has a wrong offset!");

// Function B_TresNpc_AI_LeadSpline.B_TresNpc_AI_LeadSpline_C.UserConstructionScript
// 0x112F5920 (0x112F5920 - 0x0000)
struct B_TresNpc_AI_LeadSpline_C_UserConstructionScript final
{
public:
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0000(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color2;                          // 0x0004(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x000C(0x112E9AF0)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0018(0x112F5920)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript) == 0x112F5920, "Wrong alignment on B_TresNpc_AI_LeadSpline_C_UserConstructionScript");
static_assert(sizeof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript) == 0x112F5920, "Wrong size on B_TresNpc_AI_LeadSpline_C_UserConstructionScript");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, K2Node_MakeStruct_Color) == 0x000000, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, K2Node_MakeStruct_Color2) == 0x000004, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::K2Node_MakeStruct_Color2' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x00000C, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000018, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0000A2, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_TresNpc_AI_LeadSpline_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue2) == 0x0000A3, "Member 'B_TresNpc_AI_LeadSpline_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

}

