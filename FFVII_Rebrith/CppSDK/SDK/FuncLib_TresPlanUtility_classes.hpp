#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FuncLib_TresPlanUtility

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "TresGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FuncLib_TresPlanUtility.FuncLib_TresPlanUtility_C
// 0x0000 (0x0040 - 0x0040)
class UFuncLib_TresPlanUtility_C final : public UBlueprintFunctionLibrary
{
public:
	static class FString BuildString__Transform_(const class FString& AppendTo, const class FString& Prefix, const struct FTransform& In_LSI_Position, const class FString& Suffix, class UObject* __WorldContext);
	static class FString BuildString__String_(const class FString& AppendTo, const class FString& Prefix, const class FString& In_String, const class FString& Suffix, class UObject* __WorldContext);
	static void CalcBallisticVelocity2D(const struct FVector2D& Target, float Power, float Gravity, class UObject* __WorldContext, bool* InRange, struct FVector2D* Velocity);
	static void ReflectVector(const struct FVector& InVector, const struct FVector& ReflectionNormal, class UObject* __WorldContext, struct FVector* OutVector);
	static void Mask_Vector_(const struct FVector& Vector, bool X, bool Y, bool Z, const struct FVector& MaskedValue, class UObject* __WorldContext, struct FVector* NewVector);
	static void Mask_Rotator_(const struct FRotator& Rotator, bool X_Roll_, bool Y_Pitch_, bool Z_Yaw_, const struct FRotator& MaskedValue, class UObject* __WorldContext, struct FRotator* NewRotator);
	static void TresPlanCheckActor(class AActor* Actor, bool IsPlayer, bool IsFriend, bool IsEnemy, TArray<ETresChrUniqueID>& IsCharID, TArray<ETresEnemyUniqueID>& IsEnemyID, class UObject* __WorldContext, bool* Result);
	static void TresSetEnableBodyCollisionComponent(class UPrimitiveComponent* Target, bool Enable, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FuncLib_TresPlanUtility_C">();
	}
	static class UFuncLib_TresPlanUtility_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFuncLib_TresPlanUtility_C>();
	}
};
static_assert(alignof(UFuncLib_TresPlanUtility_C) == 0x000008, "Wrong alignment on UFuncLib_TresPlanUtility_C");
static_assert(sizeof(UFuncLib_TresPlanUtility_C) == 0x000040, "Wrong size on UFuncLib_TresPlanUtility_C");

}

